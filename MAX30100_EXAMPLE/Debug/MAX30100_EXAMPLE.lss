
MAX30100_EXAMPLE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000073f4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004073f4  004073f4  000173f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20400000  004073fc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000100  204009b8  00407db4  000209b8  2**2
                  ALLOC
  4 .stack        00002000  20400ab8  00407eb4  000209b8  2**0
                  ALLOC
  5 .heap         00000200  20402ab8  00409eb4  000209b8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  8 .debug_info   00015656  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002d13  00000000  00000000  00036095  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005793  00000000  00000000  00038da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000b58  00000000  00000000  0003e53b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000bb8  00000000  00000000  0003f093  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000205b7  00000000  00000000  0003fc4b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000b2ab  00000000  00000000  00060202  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000949fa  00000000  00000000  0006b4ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002c98  00000000  00000000  000ffea8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	b8 2a 40 20 8d 0b 40 00 8b 0b 40 00 8b 0b 40 00     .*@ ..@...@...@.
  400010:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	8b 0b 40 00 8b 0b 40 00 00 00 00 00 8b 0b 40 00     ..@...@.......@.
  40003c:	01 10 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40004c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40005c:	8b 0b 40 00 8b 0b 40 00 00 00 00 00 7d 06 40 00     ..@...@.....}.@.
  40006c:	91 06 40 00 a5 06 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40007c:	8b 0b 40 00 b9 06 40 00 cd 06 40 00 8b 0b 40 00     ..@...@...@...@.
  40008c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40009c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000ac:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000bc:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000cc:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000dc:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000ec:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  4000fc:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40010c:	8b 0b 40 00 8b 0b 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ......@...@...@.
  40012c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40013c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40014c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00 8b 0b 40 00     ..@...@...@...@.
  40015c:	8b 0b 40 00 8b 0b 40 00 8b 0b 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009b8 	.word	0x204009b8
  400184:	00000000 	.word	0x00000000
  400188:	004073fc 	.word	0x004073fc

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	004073fc 	.word	0x004073fc
  4001c8:	204009bc 	.word	0x204009bc
  4001cc:	004073fc 	.word	0x004073fc
  4001d0:	00000000 	.word	0x00000000

004001d4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4001d4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX/2);
  4001d6:	4810      	ldr	r0, [pc, #64]	; (400218 <sysclk_init+0x44>)
  4001d8:	4b10      	ldr	r3, [pc, #64]	; (40021c <sysclk_init+0x48>)
  4001da:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4001dc:	213e      	movs	r1, #62	; 0x3e
  4001de:	2000      	movs	r0, #0
  4001e0:	4b0f      	ldr	r3, [pc, #60]	; (400220 <sysclk_init+0x4c>)
  4001e2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4001e4:	4c0f      	ldr	r4, [pc, #60]	; (400224 <sysclk_init+0x50>)
  4001e6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4001e8:	2800      	cmp	r0, #0
  4001ea:	d0fc      	beq.n	4001e6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4001ec:	4b0e      	ldr	r3, [pc, #56]	; (400228 <sysclk_init+0x54>)
  4001ee:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4001f0:	4a0e      	ldr	r2, [pc, #56]	; (40022c <sysclk_init+0x58>)
  4001f2:	4b0f      	ldr	r3, [pc, #60]	; (400230 <sysclk_init+0x5c>)
  4001f4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4001f6:	4c0f      	ldr	r4, [pc, #60]	; (400234 <sysclk_init+0x60>)
  4001f8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4001fa:	2800      	cmp	r0, #0
  4001fc:	d0fc      	beq.n	4001f8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4001fe:	2002      	movs	r0, #2
  400200:	4b0d      	ldr	r3, [pc, #52]	; (400238 <sysclk_init+0x64>)
  400202:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400204:	2000      	movs	r0, #0
  400206:	4b0d      	ldr	r3, [pc, #52]	; (40023c <sysclk_init+0x68>)
  400208:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40020a:	4b0d      	ldr	r3, [pc, #52]	; (400240 <sysclk_init+0x6c>)
  40020c:	4798      	blx	r3

	/* Set a flash wait state depending on the master clock frequency */
	system_init_flash(sysclk_get_cpu_hz() / CONFIG_SYSCLK_DIV);
  40020e:	4802      	ldr	r0, [pc, #8]	; (400218 <sysclk_init+0x44>)
  400210:	4b02      	ldr	r3, [pc, #8]	; (40021c <sysclk_init+0x48>)
  400212:	4798      	blx	r3
  400214:	bd10      	pop	{r4, pc}
  400216:	bf00      	nop
  400218:	08f0d180 	.word	0x08f0d180
  40021c:	00400d61 	.word	0x00400d61
  400220:	0040077d 	.word	0x0040077d
  400224:	004007d1 	.word	0x004007d1
  400228:	004007e1 	.word	0x004007e1
  40022c:	20183f01 	.word	0x20183f01
  400230:	400e0600 	.word	0x400e0600
  400234:	004007f1 	.word	0x004007f1
  400238:	004006e1 	.word	0x004006e1
  40023c:	00400719 	.word	0x00400719
  400240:	00400c55 	.word	0x00400c55

00400244 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400248:	b980      	cbnz	r0, 40026c <_read+0x28>
  40024a:	460c      	mov	r4, r1
  40024c:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40024e:	2a00      	cmp	r2, #0
  400250:	dd0f      	ble.n	400272 <_read+0x2e>
  400252:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400254:	4e08      	ldr	r6, [pc, #32]	; (400278 <_read+0x34>)
  400256:	4d09      	ldr	r5, [pc, #36]	; (40027c <_read+0x38>)
  400258:	6830      	ldr	r0, [r6, #0]
  40025a:	4621      	mov	r1, r4
  40025c:	682b      	ldr	r3, [r5, #0]
  40025e:	4798      	blx	r3
		ptr++;
  400260:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400262:	42bc      	cmp	r4, r7
  400264:	d1f8      	bne.n	400258 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400266:	4640      	mov	r0, r8
  400268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40026c:	f04f 38ff 	mov.w	r8, #4294967295
  400270:	e7f9      	b.n	400266 <_read+0x22>
	for (; len > 0; --len) {
  400272:	4680      	mov	r8, r0
  400274:	e7f7      	b.n	400266 <_read+0x22>
  400276:	bf00      	nop
  400278:	20400a8c 	.word	0x20400a8c
  40027c:	20400a84 	.word	0x20400a84

00400280 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400280:	3801      	subs	r0, #1
  400282:	2802      	cmp	r0, #2
  400284:	d815      	bhi.n	4002b2 <_write+0x32>
{
  400286:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40028a:	460e      	mov	r6, r1
  40028c:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  40028e:	b19a      	cbz	r2, 4002b8 <_write+0x38>
  400290:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400292:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4002cc <_write+0x4c>
  400296:	4f0c      	ldr	r7, [pc, #48]	; (4002c8 <_write+0x48>)
  400298:	f8d8 0000 	ldr.w	r0, [r8]
  40029c:	f815 1b01 	ldrb.w	r1, [r5], #1
  4002a0:	683b      	ldr	r3, [r7, #0]
  4002a2:	4798      	blx	r3
  4002a4:	2800      	cmp	r0, #0
  4002a6:	db0a      	blt.n	4002be <_write+0x3e>
  4002a8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4002aa:	3c01      	subs	r4, #1
  4002ac:	d1f4      	bne.n	400298 <_write+0x18>
  4002ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4002b2:	f04f 30ff 	mov.w	r0, #4294967295
  4002b6:	4770      	bx	lr
	for (; len != 0; --len) {
  4002b8:	4610      	mov	r0, r2
  4002ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4002be:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4002c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4002c6:	bf00      	nop
  4002c8:	20400a88 	.word	0x20400a88
  4002cc:	20400a8c 	.word	0x20400a8c

004002d0 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4002d2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4002d6:	4b6c      	ldr	r3, [pc, #432]	; (400488 <board_init+0x1b8>)
  4002d8:	605a      	str	r2, [r3, #4]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4002da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002de:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  4002e2:	4b6a      	ldr	r3, [pc, #424]	; (40048c <board_init+0x1bc>)
  4002e4:	2100      	movs	r1, #0
  4002e6:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  4002ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002ee:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  4002f2:	695a      	ldr	r2, [r3, #20]
  4002f4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4002f8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  4002fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002fe:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  400302:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400306:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  40030a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40030e:	f3c7 354e 	ubfx	r5, r7, #13, #15
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400312:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  400316:	016e      	lsls	r6, r5, #5
  400318:	ea4f 7c87 	mov.w	ip, r7, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40031c:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  400320:	461c      	mov	r4, r3
  400322:	ea06 000e 	and.w	r0, r6, lr
  400326:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400328:	463b      	mov	r3, r7
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40032a:	ea40 0102 	orr.w	r1, r0, r2
  40032e:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  400332:	3b01      	subs	r3, #1
  400334:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  400338:	f1b3 3fff 	cmp.w	r3, #4294967295
  40033c:	d1f5      	bne.n	40032a <board_init+0x5a>
    } while(sets-- != 0U);
  40033e:	3d01      	subs	r5, #1
  400340:	3e20      	subs	r6, #32
  400342:	f1b5 3fff 	cmp.w	r5, #4294967295
  400346:	d1ec      	bne.n	400322 <board_init+0x52>
  400348:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  40034c:	4b4f      	ldr	r3, [pc, #316]	; (40048c <board_init+0x1bc>)
  40034e:	695a      	ldr	r2, [r3, #20]
  400350:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400354:	615a      	str	r2, [r3, #20]
  400356:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40035a:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40035e:	4a4c      	ldr	r2, [pc, #304]	; (400490 <board_init+0x1c0>)
  400360:	494c      	ldr	r1, [pc, #304]	; (400494 <board_init+0x1c4>)
  400362:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400364:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400368:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
  40036a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40036e:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400372:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400376:	f022 0201 	bic.w	r2, r2, #1
  40037a:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40037e:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400382:	f022 0201 	bic.w	r2, r2, #1
  400386:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb 0xF":::"memory");
  40038a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40038e:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400392:	200a      	movs	r0, #10
  400394:	4c40      	ldr	r4, [pc, #256]	; (400498 <board_init+0x1c8>)
  400396:	47a0      	blx	r4
  400398:	200b      	movs	r0, #11
  40039a:	47a0      	blx	r4
  40039c:	200c      	movs	r0, #12
  40039e:	47a0      	blx	r4
  4003a0:	2010      	movs	r0, #16
  4003a2:	47a0      	blx	r4
  4003a4:	2011      	movs	r0, #17
  4003a6:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4003a8:	4b3c      	ldr	r3, [pc, #240]	; (40049c <board_init+0x1cc>)
  4003aa:	f44f 7280 	mov.w	r2, #256	; 0x100
  4003ae:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003b4:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4003b6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4003ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4003be:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003c0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4003c4:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4003c6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003ca:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  4003cc:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  4003ce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  4003d2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003d4:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003d8:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4003da:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003dc:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003e0:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4003e2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4003e6:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4003ea:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4003ee:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4003f2:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4003f4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003f8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4003fa:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4003fc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400400:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400402:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400406:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400408:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40040a:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  40040e:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400410:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400412:	4923      	ldr	r1, [pc, #140]	; (4004a0 <board_init+0x1d0>)
  400414:	f8d1 2114 	ldr.w	r2, [r1, #276]	; 0x114
  400418:	f042 0210 	orr.w	r2, r2, #16
  40041c:	f8c1 2114 	str.w	r2, [r1, #276]	; 0x114
		base->PIO_PUDR = mask;
  400420:	f501 21b2 	add.w	r1, r1, #364544	; 0x59000
  400424:	2210      	movs	r2, #16
  400426:	660a      	str	r2, [r1, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400428:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
		base->PIO_MDDR = mask;
  40042c:	654a      	str	r2, [r1, #84]	; 0x54
		base->PIO_IFDR = mask;
  40042e:	624a      	str	r2, [r1, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400430:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400434:	6f08      	ldr	r0, [r1, #112]	; 0x70
  400436:	4310      	orrs	r0, r2
  400438:	6708      	str	r0, [r1, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40043a:	6f48      	ldr	r0, [r1, #116]	; 0x74
  40043c:	4310      	orrs	r0, r2
  40043e:	6748      	str	r0, [r1, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400440:	604a      	str	r2, [r1, #4]
		base->PIO_PUDR = mask;
  400442:	2108      	movs	r1, #8
  400444:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400446:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40044a:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40044c:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40044e:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400452:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400454:	f020 0008 	bic.w	r0, r0, #8
  400458:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40045a:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40045c:	f020 0008 	bic.w	r0, r0, #8
  400460:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400462:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  400464:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400466:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40046a:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40046c:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40046e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400472:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400474:	f021 0110 	bic.w	r1, r1, #16
  400478:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40047a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40047c:	f021 0110 	bic.w	r1, r1, #16
  400480:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400482:	605a      	str	r2, [r3, #4]
  400484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400486:	bf00      	nop
  400488:	400e1850 	.word	0x400e1850
  40048c:	e000ed00 	.word	0xe000ed00
  400490:	400e0c00 	.word	0x400e0c00
  400494:	5a00080c 	.word	0x5a00080c
  400498:	00400801 	.word	0x00400801
  40049c:	400e1200 	.word	0x400e1200
  4004a0:	40088000 	.word	0x40088000

004004a4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4004a4:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4004a6:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4004aa:	d03a      	beq.n	400522 <pio_set_peripheral+0x7e>
  4004ac:	d813      	bhi.n	4004d6 <pio_set_peripheral+0x32>
  4004ae:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4004b2:	d025      	beq.n	400500 <pio_set_peripheral+0x5c>
  4004b4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4004b8:	d10a      	bne.n	4004d0 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004ba:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004bc:	4313      	orrs	r3, r2
  4004be:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4004c0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4004c2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4004c4:	400b      	ands	r3, r1
  4004c6:	ea23 0302 	bic.w	r3, r3, r2
  4004ca:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4004cc:	6042      	str	r2, [r0, #4]
  4004ce:	4770      	bx	lr
	switch (ul_type) {
  4004d0:	2900      	cmp	r1, #0
  4004d2:	d1fb      	bne.n	4004cc <pio_set_peripheral+0x28>
  4004d4:	4770      	bx	lr
  4004d6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4004da:	d021      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004dc:	d809      	bhi.n	4004f2 <pio_set_peripheral+0x4e>
  4004de:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4004e2:	d1f3      	bne.n	4004cc <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004e6:	4313      	orrs	r3, r2
  4004e8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4004ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4004ec:	4313      	orrs	r3, r2
  4004ee:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4004f0:	e7ec      	b.n	4004cc <pio_set_peripheral+0x28>
	switch (ul_type) {
  4004f2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4004f6:	d013      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004f8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4004fc:	d010      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004fe:	e7e5      	b.n	4004cc <pio_set_peripheral+0x28>
{
  400500:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400502:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400504:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400506:	43d3      	mvns	r3, r2
  400508:	4021      	ands	r1, r4
  40050a:	461c      	mov	r4, r3
  40050c:	4019      	ands	r1, r3
  40050e:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400510:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400512:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400514:	400b      	ands	r3, r1
  400516:	4023      	ands	r3, r4
  400518:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40051a:	6042      	str	r2, [r0, #4]
}
  40051c:	f85d 4b04 	ldr.w	r4, [sp], #4
  400520:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400522:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400524:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400526:	400b      	ands	r3, r1
  400528:	ea23 0302 	bic.w	r3, r3, r2
  40052c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40052e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400530:	4313      	orrs	r3, r2
  400532:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400534:	e7ca      	b.n	4004cc <pio_set_peripheral+0x28>

00400536 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400536:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400538:	f012 0f01 	tst.w	r2, #1
  40053c:	d10d      	bne.n	40055a <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  40053e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400540:	f012 0f0a 	tst.w	r2, #10
  400544:	d00b      	beq.n	40055e <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400546:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400548:	f012 0f02 	tst.w	r2, #2
  40054c:	d109      	bne.n	400562 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  40054e:	f012 0f08 	tst.w	r2, #8
  400552:	d008      	beq.n	400566 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400554:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400558:	e005      	b.n	400566 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  40055a:	6641      	str	r1, [r0, #100]	; 0x64
  40055c:	e7f0      	b.n	400540 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  40055e:	6241      	str	r1, [r0, #36]	; 0x24
  400560:	e7f2      	b.n	400548 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400562:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400566:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400568:	6001      	str	r1, [r0, #0]
  40056a:	4770      	bx	lr

0040056c <pio_set_output>:
{
  40056c:	b410      	push	{r4}
  40056e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400570:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400572:	b94c      	cbnz	r4, 400588 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400574:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400576:	b14b      	cbz	r3, 40058c <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400578:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40057a:	b94a      	cbnz	r2, 400590 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  40057c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40057e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400580:	6001      	str	r1, [r0, #0]
}
  400582:	f85d 4b04 	ldr.w	r4, [sp], #4
  400586:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400588:	6641      	str	r1, [r0, #100]	; 0x64
  40058a:	e7f4      	b.n	400576 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40058c:	6541      	str	r1, [r0, #84]	; 0x54
  40058e:	e7f4      	b.n	40057a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400590:	6301      	str	r1, [r0, #48]	; 0x30
  400592:	e7f4      	b.n	40057e <pio_set_output+0x12>

00400594 <pio_configure>:
{
  400594:	b570      	push	{r4, r5, r6, lr}
  400596:	b082      	sub	sp, #8
  400598:	4605      	mov	r5, r0
  40059a:	4616      	mov	r6, r2
  40059c:	461c      	mov	r4, r3
	switch (ul_type) {
  40059e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4005a2:	d014      	beq.n	4005ce <pio_configure+0x3a>
  4005a4:	d90a      	bls.n	4005bc <pio_configure+0x28>
  4005a6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4005aa:	d024      	beq.n	4005f6 <pio_configure+0x62>
  4005ac:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4005b0:	d021      	beq.n	4005f6 <pio_configure+0x62>
  4005b2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4005b6:	d017      	beq.n	4005e8 <pio_configure+0x54>
		return 0;
  4005b8:	2000      	movs	r0, #0
  4005ba:	e01a      	b.n	4005f2 <pio_configure+0x5e>
	switch (ul_type) {
  4005bc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4005c0:	d005      	beq.n	4005ce <pio_configure+0x3a>
  4005c2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4005c6:	d002      	beq.n	4005ce <pio_configure+0x3a>
  4005c8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4005cc:	d1f4      	bne.n	4005b8 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  4005ce:	4632      	mov	r2, r6
  4005d0:	4628      	mov	r0, r5
  4005d2:	4b11      	ldr	r3, [pc, #68]	; (400618 <pio_configure+0x84>)
  4005d4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4005d6:	f014 0f01 	tst.w	r4, #1
  4005da:	d102      	bne.n	4005e2 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  4005dc:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  4005de:	2001      	movs	r0, #1
  4005e0:	e007      	b.n	4005f2 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  4005e2:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  4005e4:	2001      	movs	r0, #1
  4005e6:	e004      	b.n	4005f2 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  4005e8:	461a      	mov	r2, r3
  4005ea:	4631      	mov	r1, r6
  4005ec:	4b0b      	ldr	r3, [pc, #44]	; (40061c <pio_configure+0x88>)
  4005ee:	4798      	blx	r3
	return 1;
  4005f0:	2001      	movs	r0, #1
}
  4005f2:	b002      	add	sp, #8
  4005f4:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  4005f6:	f004 0301 	and.w	r3, r4, #1
  4005fa:	9300      	str	r3, [sp, #0]
  4005fc:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400600:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400604:	bf14      	ite	ne
  400606:	2200      	movne	r2, #0
  400608:	2201      	moveq	r2, #1
  40060a:	4631      	mov	r1, r6
  40060c:	4628      	mov	r0, r5
  40060e:	4c04      	ldr	r4, [pc, #16]	; (400620 <pio_configure+0x8c>)
  400610:	47a0      	blx	r4
	return 1;
  400612:	2001      	movs	r0, #1
		break;
  400614:	e7ed      	b.n	4005f2 <pio_configure+0x5e>
  400616:	bf00      	nop
  400618:	004004a5 	.word	0x004004a5
  40061c:	00400537 	.word	0x00400537
  400620:	0040056d 	.word	0x0040056d

00400624 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400624:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400626:	4770      	bx	lr

00400628 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400628:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40062a:	4770      	bx	lr

0040062c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40062c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400630:	4604      	mov	r4, r0
  400632:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400634:	4b0e      	ldr	r3, [pc, #56]	; (400670 <pio_handler_process+0x44>)
  400636:	4798      	blx	r3
  400638:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40063a:	4620      	mov	r0, r4
  40063c:	4b0d      	ldr	r3, [pc, #52]	; (400674 <pio_handler_process+0x48>)
  40063e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400640:	4005      	ands	r5, r0
  400642:	d013      	beq.n	40066c <pio_handler_process+0x40>
  400644:	4c0c      	ldr	r4, [pc, #48]	; (400678 <pio_handler_process+0x4c>)
  400646:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40064a:	e003      	b.n	400654 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40064c:	42b4      	cmp	r4, r6
  40064e:	d00d      	beq.n	40066c <pio_handler_process+0x40>
  400650:	3410      	adds	r4, #16
		while (status != 0) {
  400652:	b15d      	cbz	r5, 40066c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400654:	6820      	ldr	r0, [r4, #0]
  400656:	4540      	cmp	r0, r8
  400658:	d1f8      	bne.n	40064c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40065a:	6861      	ldr	r1, [r4, #4]
  40065c:	4229      	tst	r1, r5
  40065e:	d0f5      	beq.n	40064c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400660:	68e3      	ldr	r3, [r4, #12]
  400662:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400664:	6863      	ldr	r3, [r4, #4]
  400666:	ea25 0503 	bic.w	r5, r5, r3
  40066a:	e7ef      	b.n	40064c <pio_handler_process+0x20>
  40066c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400670:	00400625 	.word	0x00400625
  400674:	00400629 	.word	0x00400629
  400678:	204009d4 	.word	0x204009d4

0040067c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  40067c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  40067e:	210a      	movs	r1, #10
  400680:	4801      	ldr	r0, [pc, #4]	; (400688 <PIOA_Handler+0xc>)
  400682:	4b02      	ldr	r3, [pc, #8]	; (40068c <PIOA_Handler+0x10>)
  400684:	4798      	blx	r3
  400686:	bd08      	pop	{r3, pc}
  400688:	400e0e00 	.word	0x400e0e00
  40068c:	0040062d 	.word	0x0040062d

00400690 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400690:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400692:	210b      	movs	r1, #11
  400694:	4801      	ldr	r0, [pc, #4]	; (40069c <PIOB_Handler+0xc>)
  400696:	4b02      	ldr	r3, [pc, #8]	; (4006a0 <PIOB_Handler+0x10>)
  400698:	4798      	blx	r3
  40069a:	bd08      	pop	{r3, pc}
  40069c:	400e1000 	.word	0x400e1000
  4006a0:	0040062d 	.word	0x0040062d

004006a4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4006a4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  4006a6:	210c      	movs	r1, #12
  4006a8:	4801      	ldr	r0, [pc, #4]	; (4006b0 <PIOC_Handler+0xc>)
  4006aa:	4b02      	ldr	r3, [pc, #8]	; (4006b4 <PIOC_Handler+0x10>)
  4006ac:	4798      	blx	r3
  4006ae:	bd08      	pop	{r3, pc}
  4006b0:	400e1200 	.word	0x400e1200
  4006b4:	0040062d 	.word	0x0040062d

004006b8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  4006b8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  4006ba:	2110      	movs	r1, #16
  4006bc:	4801      	ldr	r0, [pc, #4]	; (4006c4 <PIOD_Handler+0xc>)
  4006be:	4b02      	ldr	r3, [pc, #8]	; (4006c8 <PIOD_Handler+0x10>)
  4006c0:	4798      	blx	r3
  4006c2:	bd08      	pop	{r3, pc}
  4006c4:	400e1400 	.word	0x400e1400
  4006c8:	0040062d 	.word	0x0040062d

004006cc <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  4006cc:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  4006ce:	2111      	movs	r1, #17
  4006d0:	4801      	ldr	r0, [pc, #4]	; (4006d8 <PIOE_Handler+0xc>)
  4006d2:	4b02      	ldr	r3, [pc, #8]	; (4006dc <PIOE_Handler+0x10>)
  4006d4:	4798      	blx	r3
  4006d6:	bd08      	pop	{r3, pc}
  4006d8:	400e1600 	.word	0x400e1600
  4006dc:	0040062d 	.word	0x0040062d

004006e0 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  4006e0:	2803      	cmp	r0, #3
  4006e2:	d011      	beq.n	400708 <pmc_mck_set_division+0x28>
  4006e4:	2804      	cmp	r0, #4
  4006e6:	d012      	beq.n	40070e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  4006e8:	2802      	cmp	r0, #2
  4006ea:	bf0c      	ite	eq
  4006ec:	f44f 7180 	moveq.w	r1, #256	; 0x100
  4006f0:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4006f2:	4a08      	ldr	r2, [pc, #32]	; (400714 <pmc_mck_set_division+0x34>)
  4006f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4006f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4006fa:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  4006fc:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4006fe:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400700:	f013 0f08 	tst.w	r3, #8
  400704:	d0fb      	beq.n	4006fe <pmc_mck_set_division+0x1e>
}
  400706:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400708:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  40070c:	e7f1      	b.n	4006f2 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40070e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400712:	e7ee      	b.n	4006f2 <pmc_mck_set_division+0x12>
  400714:	400e0600 	.word	0x400e0600

00400718 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400718:	4a17      	ldr	r2, [pc, #92]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  40071a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40071c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400720:	4318      	orrs	r0, r3
  400722:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400724:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400726:	f013 0f08 	tst.w	r3, #8
  40072a:	d10a      	bne.n	400742 <pmc_switch_mck_to_pllack+0x2a>
  40072c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400730:	4911      	ldr	r1, [pc, #68]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  400732:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400734:	f012 0f08 	tst.w	r2, #8
  400738:	d103      	bne.n	400742 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40073a:	3b01      	subs	r3, #1
  40073c:	d1f9      	bne.n	400732 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40073e:	2001      	movs	r0, #1
  400740:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400742:	4a0d      	ldr	r2, [pc, #52]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  400744:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400746:	f023 0303 	bic.w	r3, r3, #3
  40074a:	f043 0302 	orr.w	r3, r3, #2
  40074e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400750:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400752:	f013 0f08 	tst.w	r3, #8
  400756:	d10a      	bne.n	40076e <pmc_switch_mck_to_pllack+0x56>
  400758:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40075c:	4906      	ldr	r1, [pc, #24]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  40075e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400760:	f012 0f08 	tst.w	r2, #8
  400764:	d105      	bne.n	400772 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400766:	3b01      	subs	r3, #1
  400768:	d1f9      	bne.n	40075e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40076a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40076c:	4770      	bx	lr
	return 0;
  40076e:	2000      	movs	r0, #0
  400770:	4770      	bx	lr
  400772:	2000      	movs	r0, #0
  400774:	4770      	bx	lr
  400776:	bf00      	nop
  400778:	400e0600 	.word	0x400e0600

0040077c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40077c:	b9a0      	cbnz	r0, 4007a8 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40077e:	480e      	ldr	r0, [pc, #56]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  400780:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400782:	0209      	lsls	r1, r1, #8
  400784:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400786:	4a0d      	ldr	r2, [pc, #52]	; (4007bc <pmc_switch_mainck_to_xtal+0x40>)
  400788:	401a      	ands	r2, r3
  40078a:	4b0d      	ldr	r3, [pc, #52]	; (4007c0 <pmc_switch_mainck_to_xtal+0x44>)
  40078c:	4313      	orrs	r3, r2
  40078e:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400790:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400792:	4602      	mov	r2, r0
  400794:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400796:	f013 0f01 	tst.w	r3, #1
  40079a:	d0fb      	beq.n	400794 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40079c:	4a06      	ldr	r2, [pc, #24]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  40079e:	6a11      	ldr	r1, [r2, #32]
  4007a0:	4b08      	ldr	r3, [pc, #32]	; (4007c4 <pmc_switch_mainck_to_xtal+0x48>)
  4007a2:	430b      	orrs	r3, r1
  4007a4:	6213      	str	r3, [r2, #32]
  4007a6:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007a8:	4903      	ldr	r1, [pc, #12]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  4007aa:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4007ac:	4a06      	ldr	r2, [pc, #24]	; (4007c8 <pmc_switch_mainck_to_xtal+0x4c>)
  4007ae:	401a      	ands	r2, r3
  4007b0:	4b06      	ldr	r3, [pc, #24]	; (4007cc <pmc_switch_mainck_to_xtal+0x50>)
  4007b2:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007b4:	620b      	str	r3, [r1, #32]
  4007b6:	4770      	bx	lr
  4007b8:	400e0600 	.word	0x400e0600
  4007bc:	ffc8fffc 	.word	0xffc8fffc
  4007c0:	00370001 	.word	0x00370001
  4007c4:	01370000 	.word	0x01370000
  4007c8:	fec8fffc 	.word	0xfec8fffc
  4007cc:	01370002 	.word	0x01370002

004007d0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4007d0:	4b02      	ldr	r3, [pc, #8]	; (4007dc <pmc_osc_is_ready_mainck+0xc>)
  4007d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4007d4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4007d8:	4770      	bx	lr
  4007da:	bf00      	nop
  4007dc:	400e0600 	.word	0x400e0600

004007e0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4007e0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4007e4:	4b01      	ldr	r3, [pc, #4]	; (4007ec <pmc_disable_pllack+0xc>)
  4007e6:	629a      	str	r2, [r3, #40]	; 0x28
  4007e8:	4770      	bx	lr
  4007ea:	bf00      	nop
  4007ec:	400e0600 	.word	0x400e0600

004007f0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4007f0:	4b02      	ldr	r3, [pc, #8]	; (4007fc <pmc_is_locked_pllack+0xc>)
  4007f2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4007f4:	f000 0002 	and.w	r0, r0, #2
  4007f8:	4770      	bx	lr
  4007fa:	bf00      	nop
  4007fc:	400e0600 	.word	0x400e0600

00400800 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400800:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400804:	4b05      	ldr	r3, [pc, #20]	; (40081c <pmc_enable_periph_clk+0x1c>)
  400806:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  40080a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  40080e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  400812:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400816:	2000      	movs	r0, #0
  400818:	4770      	bx	lr
  40081a:	bf00      	nop
  40081c:	400e0600 	.word	0x400e0600

00400820 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400820:	4b28      	ldr	r3, [pc, #160]	; (4008c4 <twihs_set_speed+0xa4>)
  400822:	4299      	cmp	r1, r3
  400824:	d84b      	bhi.n	4008be <twihs_set_speed+0x9e>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400826:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  40082a:	4299      	cmp	r1, r3
  40082c:	d92d      	bls.n	40088a <twihs_set_speed+0x6a>
{
  40082e:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  400830:	4c25      	ldr	r4, [pc, #148]	; (4008c8 <twihs_set_speed+0xa8>)
  400832:	fba4 3402 	umull	r3, r4, r4, r2
  400836:	0ba4      	lsrs	r4, r4, #14
  400838:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40083a:	4b24      	ldr	r3, [pc, #144]	; (4008cc <twihs_set_speed+0xac>)
  40083c:	440b      	add	r3, r1
  40083e:	009b      	lsls	r3, r3, #2
  400840:	fbb2 f2f3 	udiv	r2, r2, r3
  400844:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400846:	2cff      	cmp	r4, #255	; 0xff
  400848:	d91d      	bls.n	400886 <twihs_set_speed+0x66>
  40084a:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  40084c:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  40084e:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400850:	2cff      	cmp	r4, #255	; 0xff
  400852:	d901      	bls.n	400858 <twihs_set_speed+0x38>
  400854:	2906      	cmp	r1, #6
  400856:	d9f9      	bls.n	40084c <twihs_set_speed+0x2c>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400858:	2aff      	cmp	r2, #255	; 0xff
  40085a:	d907      	bls.n	40086c <twihs_set_speed+0x4c>
  40085c:	2906      	cmp	r1, #6
  40085e:	d805      	bhi.n	40086c <twihs_set_speed+0x4c>
			/* Increase clock divider */
			ckdiv++;
  400860:	3101      	adds	r1, #1
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  400862:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400864:	2aff      	cmp	r2, #255	; 0xff
  400866:	d901      	bls.n	40086c <twihs_set_speed+0x4c>
  400868:	2906      	cmp	r1, #6
  40086a:	d9f9      	bls.n	400860 <twihs_set_speed+0x40>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  40086c:	0213      	lsls	r3, r2, #8
  40086e:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  400870:	0409      	lsls	r1, r1, #16
  400872:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  400876:	430b      	orrs	r3, r1
  400878:	b2e4      	uxtb	r4, r4
  40087a:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  40087c:	6103      	str	r3, [r0, #16]
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  40087e:	2000      	movs	r0, #0
}
  400880:	f85d 4b04 	ldr.w	r4, [sp], #4
  400884:	4770      	bx	lr
	uint32_t ckdiv = 0;
  400886:	2100      	movs	r1, #0
  400888:	e7e6      	b.n	400858 <twihs_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40088a:	0049      	lsls	r1, r1, #1
  40088c:	fbb2 f2f1 	udiv	r2, r2, r1
  400890:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400892:	2aff      	cmp	r2, #255	; 0xff
  400894:	d911      	bls.n	4008ba <twihs_set_speed+0x9a>
  400896:	2300      	movs	r3, #0
			ckdiv++;
  400898:	3301      	adds	r3, #1
			c_lh_div /= TWIHS_CLK_DIVIDER;
  40089a:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40089c:	2aff      	cmp	r2, #255	; 0xff
  40089e:	d901      	bls.n	4008a4 <twihs_set_speed+0x84>
  4008a0:	2b06      	cmp	r3, #6
  4008a2:	d9f9      	bls.n	400898 <twihs_set_speed+0x78>
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4008a4:	0211      	lsls	r1, r2, #8
  4008a6:	b289      	uxth	r1, r1
				TWIHS_CWGR_CKDIV(ckdiv);
  4008a8:	041b      	lsls	r3, r3, #16
  4008aa:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4008ae:	430b      	orrs	r3, r1
  4008b0:	b2d2      	uxtb	r2, r2
  4008b2:	431a      	orrs	r2, r3
		p_twihs->TWIHS_CWGR =
  4008b4:	6102      	str	r2, [r0, #16]
	return PASS;
  4008b6:	2000      	movs	r0, #0
  4008b8:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4008ba:	2300      	movs	r3, #0
  4008bc:	e7f2      	b.n	4008a4 <twihs_set_speed+0x84>
		return FAIL;
  4008be:	2001      	movs	r0, #1
  4008c0:	4770      	bx	lr
  4008c2:	bf00      	nop
  4008c4:	00061a80 	.word	0x00061a80
  4008c8:	057619f1 	.word	0x057619f1
  4008cc:	3ffd1200 	.word	0x3ffd1200

004008d0 <twihs_master_init>:
{
  4008d0:	b508      	push	{r3, lr}
	p_twihs->TWIHS_IDR = ~0UL;
  4008d2:	f04f 32ff 	mov.w	r2, #4294967295
  4008d6:	6282      	str	r2, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  4008d8:	6a02      	ldr	r2, [r0, #32]
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4008da:	2280      	movs	r2, #128	; 0x80
  4008dc:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_RHR;
  4008de:	6b02      	ldr	r2, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4008e0:	2208      	movs	r2, #8
  4008e2:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4008e4:	2220      	movs	r2, #32
  4008e6:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4008e8:	2204      	movs	r2, #4
  4008ea:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4008ec:	680a      	ldr	r2, [r1, #0]
  4008ee:	6849      	ldr	r1, [r1, #4]
  4008f0:	4b03      	ldr	r3, [pc, #12]	; (400900 <twihs_master_init+0x30>)
  4008f2:	4798      	blx	r3
}
  4008f4:	2801      	cmp	r0, #1
  4008f6:	bf14      	ite	ne
  4008f8:	2000      	movne	r0, #0
  4008fa:	2001      	moveq	r0, #1
  4008fc:	bd08      	pop	{r3, pc}
  4008fe:	bf00      	nop
  400900:	00400821 	.word	0x00400821

00400904 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  400904:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  400906:	2b00      	cmp	r3, #0
  400908:	d04b      	beq.n	4009a2 <twihs_master_read+0x9e>
{
  40090a:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  40090c:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  40090e:	2600      	movs	r6, #0
  400910:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  400912:	684a      	ldr	r2, [r1, #4]
  400914:	0212      	lsls	r2, r2, #8
  400916:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  40091a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  40091e:	7c0d      	ldrb	r5, [r1, #16]
  400920:	042d      	lsls	r5, r5, #16
  400922:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  400926:	432a      	orrs	r2, r5
  400928:	6042      	str	r2, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  40092a:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40092c:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  40092e:	b15d      	cbz	r5, 400948 <twihs_master_read+0x44>
	val = addr[0];
  400930:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  400932:	2d01      	cmp	r5, #1
  400934:	dd02      	ble.n	40093c <twihs_master_read+0x38>
		val |= addr[1];
  400936:	784e      	ldrb	r6, [r1, #1]
  400938:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  40093c:	2d02      	cmp	r5, #2
  40093e:	dd04      	ble.n	40094a <twihs_master_read+0x46>
		val |= addr[2];
  400940:	7889      	ldrb	r1, [r1, #2]
  400942:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  400946:	e000      	b.n	40094a <twihs_master_read+0x46>
		return 0;
  400948:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40094a:	60c2      	str	r2, [r0, #12]
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  40094c:	2201      	movs	r2, #1
  40094e:	6002      	str	r2, [r0, #0]
  400950:	e006      	b.n	400960 <twihs_master_read+0x5c>
		if (cnt == 1) {
  400952:	2b01      	cmp	r3, #1
  400954:	d019      	beq.n	40098a <twihs_master_read+0x86>
		*buffer++ = p_twihs->TWIHS_RHR;
  400956:	6b02      	ldr	r2, [r0, #48]	; 0x30
  400958:	f804 2b01 	strb.w	r2, [r4], #1
	while (cnt > 0) {
  40095c:	3b01      	subs	r3, #1
  40095e:	d018      	beq.n	400992 <twihs_master_read+0x8e>
		status = p_twihs->TWIHS_SR;
  400960:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400962:	f412 7f80 	tst.w	r2, #256	; 0x100
  400966:	d122      	bne.n	4009ae <twihs_master_read+0xaa>
		if (!(status & TWIHS_SR_RXRDY)) {
  400968:	f012 0f02 	tst.w	r2, #2
  40096c:	d1f1      	bne.n	400952 <twihs_master_read+0x4e>
  40096e:	f247 5230 	movw	r2, #30000	; 0x7530
		status = p_twihs->TWIHS_SR;
  400972:	6a01      	ldr	r1, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400974:	f411 7f80 	tst.w	r1, #256	; 0x100
  400978:	d115      	bne.n	4009a6 <twihs_master_read+0xa2>
		if (!timeout--) {
  40097a:	3a01      	subs	r2, #1
  40097c:	d015      	beq.n	4009aa <twihs_master_read+0xa6>
		if (!(status & TWIHS_SR_RXRDY)) {
  40097e:	f011 0f02 	tst.w	r1, #2
  400982:	d1e6      	bne.n	400952 <twihs_master_read+0x4e>
	while (cnt > 0) {
  400984:	2b00      	cmp	r3, #0
  400986:	d1f4      	bne.n	400972 <twihs_master_read+0x6e>
  400988:	e003      	b.n	400992 <twihs_master_read+0x8e>
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  40098a:	2302      	movs	r3, #2
  40098c:	6003      	str	r3, [r0, #0]
		*buffer++ = p_twihs->TWIHS_RHR;
  40098e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400990:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  400992:	6a03      	ldr	r3, [r0, #32]
  400994:	f013 0f01 	tst.w	r3, #1
  400998:	d0fb      	beq.n	400992 <twihs_master_read+0x8e>
	p_twihs->TWIHS_SR;
  40099a:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  40099c:	2000      	movs	r0, #0
}
  40099e:	bc70      	pop	{r4, r5, r6}
  4009a0:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  4009a2:	2001      	movs	r0, #1
  4009a4:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  4009a6:	2005      	movs	r0, #5
  4009a8:	e7f9      	b.n	40099e <twihs_master_read+0x9a>
			return TWIHS_ERROR_TIMEOUT;
  4009aa:	2009      	movs	r0, #9
  4009ac:	e7f7      	b.n	40099e <twihs_master_read+0x9a>
			return TWIHS_RECEIVE_NACK;
  4009ae:	2005      	movs	r0, #5
  4009b0:	e7f5      	b.n	40099e <twihs_master_read+0x9a>

004009b2 <twihs_master_write>:
	uint32_t status, cnt = p_packet->length;
  4009b2:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  4009b4:	2b00      	cmp	r3, #0
  4009b6:	d043      	beq.n	400a40 <twihs_master_write+0x8e>
{
  4009b8:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  4009ba:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  4009bc:	2600      	movs	r6, #0
  4009be:	6046      	str	r6, [r0, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4009c0:	7c0a      	ldrb	r2, [r1, #16]
  4009c2:	0412      	lsls	r2, r2, #16
  4009c4:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4009c8:	684d      	ldr	r5, [r1, #4]
  4009ca:	022d      	lsls	r5, r5, #8
  4009cc:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4009d0:	432a      	orrs	r2, r5
  4009d2:	6042      	str	r2, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  4009d4:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4009d6:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  4009d8:	b15d      	cbz	r5, 4009f2 <twihs_master_write+0x40>
	val = addr[0];
  4009da:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  4009dc:	2d01      	cmp	r5, #1
  4009de:	dd02      	ble.n	4009e6 <twihs_master_write+0x34>
		val |= addr[1];
  4009e0:	784e      	ldrb	r6, [r1, #1]
  4009e2:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  4009e6:	2d02      	cmp	r5, #2
  4009e8:	dd04      	ble.n	4009f4 <twihs_master_write+0x42>
		val |= addr[2];
  4009ea:	7889      	ldrb	r1, [r1, #2]
  4009ec:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  4009f0:	e000      	b.n	4009f4 <twihs_master_write+0x42>
		return 0;
  4009f2:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4009f4:	60c2      	str	r2, [r0, #12]
  4009f6:	e004      	b.n	400a02 <twihs_master_write+0x50>
		p_twihs->TWIHS_THR = *buffer++;
  4009f8:	f814 2b01 	ldrb.w	r2, [r4], #1
  4009fc:	6342      	str	r2, [r0, #52]	; 0x34
	while (cnt > 0) {
  4009fe:	3b01      	subs	r3, #1
  400a00:	d00f      	beq.n	400a22 <twihs_master_write+0x70>
		status = p_twihs->TWIHS_SR;
  400a02:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400a04:	f412 7f80 	tst.w	r2, #256	; 0x100
  400a08:	d11e      	bne.n	400a48 <twihs_master_write+0x96>
		if (!(status & TWIHS_SR_TXRDY)) {
  400a0a:	f012 0f04 	tst.w	r2, #4
  400a0e:	d1f3      	bne.n	4009f8 <twihs_master_write+0x46>
		status = p_twihs->TWIHS_SR;
  400a10:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400a12:	f412 7f80 	tst.w	r2, #256	; 0x100
  400a16:	d115      	bne.n	400a44 <twihs_master_write+0x92>
		if (!(status & TWIHS_SR_TXRDY)) {
  400a18:	f012 0f04 	tst.w	r2, #4
  400a1c:	d1ec      	bne.n	4009f8 <twihs_master_write+0x46>
	while (cnt > 0) {
  400a1e:	2b00      	cmp	r3, #0
  400a20:	d1f6      	bne.n	400a10 <twihs_master_write+0x5e>
		status = p_twihs->TWIHS_SR;
  400a22:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400a24:	f413 7f80 	tst.w	r3, #256	; 0x100
  400a28:	d111      	bne.n	400a4e <twihs_master_write+0x9c>
		if (status & TWIHS_SR_TXRDY) {
  400a2a:	f013 0f04 	tst.w	r3, #4
  400a2e:	d0f8      	beq.n	400a22 <twihs_master_write+0x70>
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  400a30:	2302      	movs	r3, #2
  400a32:	6003      	str	r3, [r0, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  400a34:	6a03      	ldr	r3, [r0, #32]
  400a36:	f013 0f01 	tst.w	r3, #1
  400a3a:	d0fb      	beq.n	400a34 <twihs_master_write+0x82>
	return TWIHS_SUCCESS;
  400a3c:	2000      	movs	r0, #0
  400a3e:	e004      	b.n	400a4a <twihs_master_write+0x98>
		return TWIHS_INVALID_ARGUMENT;
  400a40:	2001      	movs	r0, #1
  400a42:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  400a44:	2005      	movs	r0, #5
  400a46:	e000      	b.n	400a4a <twihs_master_write+0x98>
  400a48:	2005      	movs	r0, #5
}
  400a4a:	bc70      	pop	{r4, r5, r6}
  400a4c:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  400a4e:	2005      	movs	r0, #5
  400a50:	e7fb      	b.n	400a4a <twihs_master_write+0x98>

00400a52 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400a52:	6943      	ldr	r3, [r0, #20]
  400a54:	f013 0f02 	tst.w	r3, #2
  400a58:	d002      	beq.n	400a60 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400a5a:	61c1      	str	r1, [r0, #28]
	return 0;
  400a5c:	2000      	movs	r0, #0
  400a5e:	4770      	bx	lr
		return 1;
  400a60:	2001      	movs	r0, #1
}
  400a62:	4770      	bx	lr

00400a64 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400a64:	6943      	ldr	r3, [r0, #20]
  400a66:	f013 0f01 	tst.w	r3, #1
  400a6a:	d003      	beq.n	400a74 <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400a6c:	6983      	ldr	r3, [r0, #24]
  400a6e:	700b      	strb	r3, [r1, #0]
	return 0;
  400a70:	2000      	movs	r0, #0
  400a72:	4770      	bx	lr
		return 1;
  400a74:	2001      	movs	r0, #1
}
  400a76:	4770      	bx	lr

00400a78 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400a78:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400a7a:	010b      	lsls	r3, r1, #4
  400a7c:	4293      	cmp	r3, r2
  400a7e:	d914      	bls.n	400aaa <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a80:	00c9      	lsls	r1, r1, #3
  400a82:	084b      	lsrs	r3, r1, #1
  400a84:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400a88:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400a8c:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a8e:	1e5c      	subs	r4, r3, #1
  400a90:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a94:	428c      	cmp	r4, r1
  400a96:	d901      	bls.n	400a9c <usart_set_async_baudrate+0x24>
		return 1;
  400a98:	2001      	movs	r0, #1
  400a9a:	e017      	b.n	400acc <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400a9c:	6841      	ldr	r1, [r0, #4]
  400a9e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400aa2:	6041      	str	r1, [r0, #4]
  400aa4:	e00c      	b.n	400ac0 <usart_set_async_baudrate+0x48>
		return 1;
  400aa6:	2001      	movs	r0, #1
  400aa8:	e010      	b.n	400acc <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400aaa:	0859      	lsrs	r1, r3, #1
  400aac:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400ab0:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400ab4:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400ab6:	1e5c      	subs	r4, r3, #1
  400ab8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400abc:	428c      	cmp	r4, r1
  400abe:	d8f2      	bhi.n	400aa6 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400ac0:	0412      	lsls	r2, r2, #16
  400ac2:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400ac6:	431a      	orrs	r2, r3
  400ac8:	6202      	str	r2, [r0, #32]

	return 0;
  400aca:	2000      	movs	r0, #0
}
  400acc:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ad0:	4770      	bx	lr
	...

00400ad4 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400ad4:	4b08      	ldr	r3, [pc, #32]	; (400af8 <usart_reset+0x24>)
  400ad6:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400ada:	2300      	movs	r3, #0
  400adc:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400ade:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400ae0:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400ae2:	2388      	movs	r3, #136	; 0x88
  400ae4:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400ae6:	2324      	movs	r3, #36	; 0x24
  400ae8:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400aea:	f44f 7380 	mov.w	r3, #256	; 0x100
  400aee:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400af0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400af4:	6003      	str	r3, [r0, #0]
  400af6:	4770      	bx	lr
  400af8:	55534100 	.word	0x55534100

00400afc <usart_init_rs232>:
{
  400afc:	b570      	push	{r4, r5, r6, lr}
  400afe:	4605      	mov	r5, r0
  400b00:	460c      	mov	r4, r1
  400b02:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400b04:	4b0f      	ldr	r3, [pc, #60]	; (400b44 <usart_init_rs232+0x48>)
  400b06:	4798      	blx	r3
	ul_reg_val = 0;
  400b08:	2200      	movs	r2, #0
  400b0a:	4b0f      	ldr	r3, [pc, #60]	; (400b48 <usart_init_rs232+0x4c>)
  400b0c:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400b0e:	b1a4      	cbz	r4, 400b3a <usart_init_rs232+0x3e>
  400b10:	4632      	mov	r2, r6
  400b12:	6821      	ldr	r1, [r4, #0]
  400b14:	4628      	mov	r0, r5
  400b16:	4b0d      	ldr	r3, [pc, #52]	; (400b4c <usart_init_rs232+0x50>)
  400b18:	4798      	blx	r3
  400b1a:	4602      	mov	r2, r0
  400b1c:	b978      	cbnz	r0, 400b3e <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b1e:	6863      	ldr	r3, [r4, #4]
  400b20:	68a1      	ldr	r1, [r4, #8]
  400b22:	430b      	orrs	r3, r1
  400b24:	6921      	ldr	r1, [r4, #16]
  400b26:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400b28:	68e1      	ldr	r1, [r4, #12]
  400b2a:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b2c:	4906      	ldr	r1, [pc, #24]	; (400b48 <usart_init_rs232+0x4c>)
  400b2e:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400b30:	6869      	ldr	r1, [r5, #4]
  400b32:	430b      	orrs	r3, r1
  400b34:	606b      	str	r3, [r5, #4]
}
  400b36:	4610      	mov	r0, r2
  400b38:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400b3a:	2201      	movs	r2, #1
  400b3c:	e7fb      	b.n	400b36 <usart_init_rs232+0x3a>
  400b3e:	2201      	movs	r2, #1
  400b40:	e7f9      	b.n	400b36 <usart_init_rs232+0x3a>
  400b42:	bf00      	nop
  400b44:	00400ad5 	.word	0x00400ad5
  400b48:	20400a44 	.word	0x20400a44
  400b4c:	00400a79 	.word	0x00400a79

00400b50 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400b50:	2340      	movs	r3, #64	; 0x40
  400b52:	6003      	str	r3, [r0, #0]
  400b54:	4770      	bx	lr

00400b56 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400b56:	2310      	movs	r3, #16
  400b58:	6003      	str	r3, [r0, #0]
  400b5a:	4770      	bx	lr

00400b5c <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400b5c:	6943      	ldr	r3, [r0, #20]
  400b5e:	f013 0f02 	tst.w	r3, #2
  400b62:	d004      	beq.n	400b6e <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  400b64:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b68:	61c1      	str	r1, [r0, #28]
	return 0;
  400b6a:	2000      	movs	r0, #0
  400b6c:	4770      	bx	lr
		return 1;
  400b6e:	2001      	movs	r0, #1
}
  400b70:	4770      	bx	lr

00400b72 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400b72:	6943      	ldr	r3, [r0, #20]
  400b74:	f013 0f01 	tst.w	r3, #1
  400b78:	d005      	beq.n	400b86 <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400b7a:	6983      	ldr	r3, [r0, #24]
  400b7c:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400b80:	600b      	str	r3, [r1, #0]
	return 0;
  400b82:	2000      	movs	r0, #0
  400b84:	4770      	bx	lr
		return 1;
  400b86:	2001      	movs	r0, #1
}
  400b88:	4770      	bx	lr

00400b8a <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400b8a:	e7fe      	b.n	400b8a <Dummy_Handler>

00400b8c <Reset_Handler>:
{
  400b8c:	b500      	push	{lr}
  400b8e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  400b90:	4b25      	ldr	r3, [pc, #148]	; (400c28 <Reset_Handler+0x9c>)
  400b92:	4a26      	ldr	r2, [pc, #152]	; (400c2c <Reset_Handler+0xa0>)
  400b94:	429a      	cmp	r2, r3
  400b96:	d010      	beq.n	400bba <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  400b98:	4b25      	ldr	r3, [pc, #148]	; (400c30 <Reset_Handler+0xa4>)
  400b9a:	4a23      	ldr	r2, [pc, #140]	; (400c28 <Reset_Handler+0x9c>)
  400b9c:	429a      	cmp	r2, r3
  400b9e:	d20c      	bcs.n	400bba <Reset_Handler+0x2e>
  400ba0:	3b01      	subs	r3, #1
  400ba2:	1a9b      	subs	r3, r3, r2
  400ba4:	f023 0303 	bic.w	r3, r3, #3
  400ba8:	3304      	adds	r3, #4
  400baa:	4413      	add	r3, r2
  400bac:	491f      	ldr	r1, [pc, #124]	; (400c2c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  400bae:	f851 0b04 	ldr.w	r0, [r1], #4
  400bb2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400bb6:	429a      	cmp	r2, r3
  400bb8:	d1f9      	bne.n	400bae <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  400bba:	4b1e      	ldr	r3, [pc, #120]	; (400c34 <Reset_Handler+0xa8>)
  400bbc:	4a1e      	ldr	r2, [pc, #120]	; (400c38 <Reset_Handler+0xac>)
  400bbe:	429a      	cmp	r2, r3
  400bc0:	d20a      	bcs.n	400bd8 <Reset_Handler+0x4c>
  400bc2:	3b01      	subs	r3, #1
  400bc4:	1a9b      	subs	r3, r3, r2
  400bc6:	f023 0303 	bic.w	r3, r3, #3
  400bca:	3304      	adds	r3, #4
  400bcc:	4413      	add	r3, r2
                *pDest++ = 0;
  400bce:	2100      	movs	r1, #0
  400bd0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400bd4:	4293      	cmp	r3, r2
  400bd6:	d1fb      	bne.n	400bd0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400bd8:	4a18      	ldr	r2, [pc, #96]	; (400c3c <Reset_Handler+0xb0>)
  400bda:	4b19      	ldr	r3, [pc, #100]	; (400c40 <Reset_Handler+0xb4>)
  400bdc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400be0:	6093      	str	r3, [r2, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400be2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400be6:	fab3 f383 	clz	r3, r3
  400bea:	095b      	lsrs	r3, r3, #5
  400bec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400bee:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400bf0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400bf4:	2200      	movs	r2, #0
  400bf6:	4b13      	ldr	r3, [pc, #76]	; (400c44 <Reset_Handler+0xb8>)
  400bf8:	701a      	strb	r2, [r3, #0]
	return flags;
  400bfa:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400bfc:	4a12      	ldr	r2, [pc, #72]	; (400c48 <Reset_Handler+0xbc>)
  400bfe:	6813      	ldr	r3, [r2, #0]
  400c00:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400c04:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb 0xF":::"memory");
  400c06:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400c0a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400c0e:	b129      	cbz	r1, 400c1c <Reset_Handler+0x90>
		cpu_irq_enable();
  400c10:	2201      	movs	r2, #1
  400c12:	4b0c      	ldr	r3, [pc, #48]	; (400c44 <Reset_Handler+0xb8>)
  400c14:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400c16:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400c1a:	b662      	cpsie	i
        __libc_init_array();
  400c1c:	4b0b      	ldr	r3, [pc, #44]	; (400c4c <Reset_Handler+0xc0>)
  400c1e:	4798      	blx	r3
        main();
  400c20:	4b0b      	ldr	r3, [pc, #44]	; (400c50 <Reset_Handler+0xc4>)
  400c22:	4798      	blx	r3
  400c24:	e7fe      	b.n	400c24 <Reset_Handler+0x98>
  400c26:	bf00      	nop
  400c28:	20400000 	.word	0x20400000
  400c2c:	004073fc 	.word	0x004073fc
  400c30:	204009b8 	.word	0x204009b8
  400c34:	20400ab8 	.word	0x20400ab8
  400c38:	204009b8 	.word	0x204009b8
  400c3c:	e000ed00 	.word	0xe000ed00
  400c40:	00400000 	.word	0x00400000
  400c44:	20400000 	.word	0x20400000
  400c48:	e000ed88 	.word	0xe000ed88
  400c4c:	00401e91 	.word	0x00401e91
  400c50:	004013b9 	.word	0x004013b9

00400c54 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  400c54:	4b3b      	ldr	r3, [pc, #236]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c58:	f003 0303 	and.w	r3, r3, #3
  400c5c:	2b01      	cmp	r3, #1
  400c5e:	d01d      	beq.n	400c9c <SystemCoreClockUpdate+0x48>
  400c60:	b183      	cbz	r3, 400c84 <SystemCoreClockUpdate+0x30>
  400c62:	2b02      	cmp	r3, #2
  400c64:	d036      	beq.n	400cd4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  400c66:	4b37      	ldr	r3, [pc, #220]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c6a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400c6e:	2b70      	cmp	r3, #112	; 0x70
  400c70:	d05f      	beq.n	400d32 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400c72:	4b34      	ldr	r3, [pc, #208]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400c74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400c76:	4934      	ldr	r1, [pc, #208]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400c78:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400c7c:	680b      	ldr	r3, [r1, #0]
  400c7e:	40d3      	lsrs	r3, r2
  400c80:	600b      	str	r3, [r1, #0]
  400c82:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  400c84:	4b31      	ldr	r3, [pc, #196]	; (400d4c <SystemCoreClockUpdate+0xf8>)
  400c86:	695b      	ldr	r3, [r3, #20]
  400c88:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400c8c:	bf14      	ite	ne
  400c8e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400c92:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400c96:	4b2c      	ldr	r3, [pc, #176]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400c98:	601a      	str	r2, [r3, #0]
  400c9a:	e7e4      	b.n	400c66 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400c9c:	4b29      	ldr	r3, [pc, #164]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400c9e:	6a1b      	ldr	r3, [r3, #32]
  400ca0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400ca4:	d003      	beq.n	400cae <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400ca6:	4a2a      	ldr	r2, [pc, #168]	; (400d50 <SystemCoreClockUpdate+0xfc>)
  400ca8:	4b27      	ldr	r3, [pc, #156]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400caa:	601a      	str	r2, [r3, #0]
  400cac:	e7db      	b.n	400c66 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400cae:	4a29      	ldr	r2, [pc, #164]	; (400d54 <SystemCoreClockUpdate+0x100>)
  400cb0:	4b25      	ldr	r3, [pc, #148]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400cb2:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400cb4:	4b23      	ldr	r3, [pc, #140]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400cb6:	6a1b      	ldr	r3, [r3, #32]
  400cb8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400cbc:	2b10      	cmp	r3, #16
  400cbe:	d005      	beq.n	400ccc <SystemCoreClockUpdate+0x78>
  400cc0:	2b20      	cmp	r3, #32
  400cc2:	d1d0      	bne.n	400c66 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  400cc4:	4a22      	ldr	r2, [pc, #136]	; (400d50 <SystemCoreClockUpdate+0xfc>)
  400cc6:	4b20      	ldr	r3, [pc, #128]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400cc8:	601a      	str	r2, [r3, #0]
          break;
  400cca:	e7cc      	b.n	400c66 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  400ccc:	4a22      	ldr	r2, [pc, #136]	; (400d58 <SystemCoreClockUpdate+0x104>)
  400cce:	4b1e      	ldr	r3, [pc, #120]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400cd0:	601a      	str	r2, [r3, #0]
          break;
  400cd2:	e7c8      	b.n	400c66 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400cd4:	4b1b      	ldr	r3, [pc, #108]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400cd6:	6a1b      	ldr	r3, [r3, #32]
  400cd8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400cdc:	d016      	beq.n	400d0c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400cde:	4a1c      	ldr	r2, [pc, #112]	; (400d50 <SystemCoreClockUpdate+0xfc>)
  400ce0:	4b19      	ldr	r3, [pc, #100]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400ce2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  400ce4:	4b17      	ldr	r3, [pc, #92]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400ce6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400ce8:	f003 0303 	and.w	r3, r3, #3
  400cec:	2b02      	cmp	r3, #2
  400cee:	d1ba      	bne.n	400c66 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400cf0:	4a14      	ldr	r2, [pc, #80]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400cf2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400cf4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400cf6:	4814      	ldr	r0, [pc, #80]	; (400d48 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400cf8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400cfc:	6803      	ldr	r3, [r0, #0]
  400cfe:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400d02:	b2d2      	uxtb	r2, r2
  400d04:	fbb3 f3f2 	udiv	r3, r3, r2
  400d08:	6003      	str	r3, [r0, #0]
  400d0a:	e7ac      	b.n	400c66 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400d0c:	4a11      	ldr	r2, [pc, #68]	; (400d54 <SystemCoreClockUpdate+0x100>)
  400d0e:	4b0e      	ldr	r3, [pc, #56]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400d10:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400d12:	4b0c      	ldr	r3, [pc, #48]	; (400d44 <SystemCoreClockUpdate+0xf0>)
  400d14:	6a1b      	ldr	r3, [r3, #32]
  400d16:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400d1a:	2b10      	cmp	r3, #16
  400d1c:	d005      	beq.n	400d2a <SystemCoreClockUpdate+0xd6>
  400d1e:	2b20      	cmp	r3, #32
  400d20:	d1e0      	bne.n	400ce4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  400d22:	4a0b      	ldr	r2, [pc, #44]	; (400d50 <SystemCoreClockUpdate+0xfc>)
  400d24:	4b08      	ldr	r3, [pc, #32]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400d26:	601a      	str	r2, [r3, #0]
          break;
  400d28:	e7dc      	b.n	400ce4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  400d2a:	4a0b      	ldr	r2, [pc, #44]	; (400d58 <SystemCoreClockUpdate+0x104>)
  400d2c:	4b06      	ldr	r3, [pc, #24]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400d2e:	601a      	str	r2, [r3, #0]
          break;
  400d30:	e7d8      	b.n	400ce4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  400d32:	4a05      	ldr	r2, [pc, #20]	; (400d48 <SystemCoreClockUpdate+0xf4>)
  400d34:	6813      	ldr	r3, [r2, #0]
  400d36:	4909      	ldr	r1, [pc, #36]	; (400d5c <SystemCoreClockUpdate+0x108>)
  400d38:	fba1 1303 	umull	r1, r3, r1, r3
  400d3c:	085b      	lsrs	r3, r3, #1
  400d3e:	6013      	str	r3, [r2, #0]
  400d40:	4770      	bx	lr
  400d42:	bf00      	nop
  400d44:	400e0600 	.word	0x400e0600
  400d48:	20400004 	.word	0x20400004
  400d4c:	400e1810 	.word	0x400e1810
  400d50:	00b71b00 	.word	0x00b71b00
  400d54:	003d0900 	.word	0x003d0900
  400d58:	007a1200 	.word	0x007a1200
  400d5c:	aaaaaaab 	.word	0xaaaaaaab

00400d60 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  400d60:	4b16      	ldr	r3, [pc, #88]	; (400dbc <system_init_flash+0x5c>)
  400d62:	4298      	cmp	r0, r3
  400d64:	d913      	bls.n	400d8e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  400d66:	4b16      	ldr	r3, [pc, #88]	; (400dc0 <system_init_flash+0x60>)
  400d68:	4298      	cmp	r0, r3
  400d6a:	d915      	bls.n	400d98 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  400d6c:	4b15      	ldr	r3, [pc, #84]	; (400dc4 <system_init_flash+0x64>)
  400d6e:	4298      	cmp	r0, r3
  400d70:	d916      	bls.n	400da0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  400d72:	4b15      	ldr	r3, [pc, #84]	; (400dc8 <system_init_flash+0x68>)
  400d74:	4298      	cmp	r0, r3
  400d76:	d917      	bls.n	400da8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  400d78:	4b14      	ldr	r3, [pc, #80]	; (400dcc <system_init_flash+0x6c>)
  400d7a:	4298      	cmp	r0, r3
  400d7c:	d918      	bls.n	400db0 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  400d7e:	4b14      	ldr	r3, [pc, #80]	; (400dd0 <system_init_flash+0x70>)
  400d80:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400d82:	bf94      	ite	ls
  400d84:	4a13      	ldrls	r2, [pc, #76]	; (400dd4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  400d86:	4a14      	ldrhi	r2, [pc, #80]	; (400dd8 <system_init_flash+0x78>)
  400d88:	4b14      	ldr	r3, [pc, #80]	; (400ddc <system_init_flash+0x7c>)
  400d8a:	601a      	str	r2, [r3, #0]
  400d8c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400d8e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400d92:	4b12      	ldr	r3, [pc, #72]	; (400ddc <system_init_flash+0x7c>)
  400d94:	601a      	str	r2, [r3, #0]
  400d96:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400d98:	4a11      	ldr	r2, [pc, #68]	; (400de0 <system_init_flash+0x80>)
  400d9a:	4b10      	ldr	r3, [pc, #64]	; (400ddc <system_init_flash+0x7c>)
  400d9c:	601a      	str	r2, [r3, #0]
  400d9e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400da0:	4a10      	ldr	r2, [pc, #64]	; (400de4 <system_init_flash+0x84>)
  400da2:	4b0e      	ldr	r3, [pc, #56]	; (400ddc <system_init_flash+0x7c>)
  400da4:	601a      	str	r2, [r3, #0]
  400da6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400da8:	4a0f      	ldr	r2, [pc, #60]	; (400de8 <system_init_flash+0x88>)
  400daa:	4b0c      	ldr	r3, [pc, #48]	; (400ddc <system_init_flash+0x7c>)
  400dac:	601a      	str	r2, [r3, #0]
  400dae:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400db0:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  400db4:	4b09      	ldr	r3, [pc, #36]	; (400ddc <system_init_flash+0x7c>)
  400db6:	601a      	str	r2, [r3, #0]
  400db8:	4770      	bx	lr
  400dba:	bf00      	nop
  400dbc:	015ef3bf 	.word	0x015ef3bf
  400dc0:	02bde77f 	.word	0x02bde77f
  400dc4:	041cdb3f 	.word	0x041cdb3f
  400dc8:	057bceff 	.word	0x057bceff
  400dcc:	06dac2bf 	.word	0x06dac2bf
  400dd0:	0839b67f 	.word	0x0839b67f
  400dd4:	04000500 	.word	0x04000500
  400dd8:	04000600 	.word	0x04000600
  400ddc:	400e0c00 	.word	0x400e0c00
  400de0:	04000100 	.word	0x04000100
  400de4:	04000200 	.word	0x04000200
  400de8:	04000300 	.word	0x04000300

00400dec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400dec:	4b0a      	ldr	r3, [pc, #40]	; (400e18 <_sbrk+0x2c>)
  400dee:	681b      	ldr	r3, [r3, #0]
  400df0:	b153      	cbz	r3, 400e08 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400df2:	4b09      	ldr	r3, [pc, #36]	; (400e18 <_sbrk+0x2c>)
  400df4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400df6:	181a      	adds	r2, r3, r0
  400df8:	4908      	ldr	r1, [pc, #32]	; (400e1c <_sbrk+0x30>)
  400dfa:	4291      	cmp	r1, r2
  400dfc:	db08      	blt.n	400e10 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400dfe:	4610      	mov	r0, r2
  400e00:	4a05      	ldr	r2, [pc, #20]	; (400e18 <_sbrk+0x2c>)
  400e02:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400e04:	4618      	mov	r0, r3
  400e06:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400e08:	4a05      	ldr	r2, [pc, #20]	; (400e20 <_sbrk+0x34>)
  400e0a:	4b03      	ldr	r3, [pc, #12]	; (400e18 <_sbrk+0x2c>)
  400e0c:	601a      	str	r2, [r3, #0]
  400e0e:	e7f0      	b.n	400df2 <_sbrk+0x6>
		return (caddr_t) -1;	
  400e10:	f04f 30ff 	mov.w	r0, #4294967295
}
  400e14:	4770      	bx	lr
  400e16:	bf00      	nop
  400e18:	20400a48 	.word	0x20400a48
  400e1c:	2045fffc 	.word	0x2045fffc
  400e20:	20402cb8 	.word	0x20402cb8

00400e24 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400e24:	f04f 30ff 	mov.w	r0, #4294967295
  400e28:	4770      	bx	lr

00400e2a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400e2a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400e2e:	604b      	str	r3, [r1, #4]

	return 0;
}
  400e30:	2000      	movs	r0, #0
  400e32:	4770      	bx	lr

00400e34 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400e34:	2001      	movs	r0, #1
  400e36:	4770      	bx	lr

00400e38 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400e38:	2000      	movs	r0, #0
  400e3a:	4770      	bx	lr

00400e3c <mdelay>:
 */
static void mdelay(uint32_t ul_dly_ticks)
{
	uint32_t ul_cur_ticks;

	ul_cur_ticks = g_ul_ms_ticks;
  400e3c:	4b03      	ldr	r3, [pc, #12]	; (400e4c <mdelay+0x10>)
  400e3e:	6819      	ldr	r1, [r3, #0]
	while ((g_ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks);
  400e40:	461a      	mov	r2, r3
  400e42:	6813      	ldr	r3, [r2, #0]
  400e44:	1a5b      	subs	r3, r3, r1
  400e46:	4283      	cmp	r3, r0
  400e48:	d3fb      	bcc.n	400e42 <mdelay+0x6>
}
  400e4a:	4770      	bx	lr
  400e4c:	20400a4c 	.word	0x20400a4c

00400e50 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400e50:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e52:	b083      	sub	sp, #12
  400e54:	4605      	mov	r5, r0
  400e56:	460c      	mov	r4, r1
	uint32_t val = 0;
  400e58:	2300      	movs	r3, #0
  400e5a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400e5c:	4b2a      	ldr	r3, [pc, #168]	; (400f08 <usart_serial_getchar+0xb8>)
  400e5e:	4298      	cmp	r0, r3
  400e60:	d013      	beq.n	400e8a <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400e62:	4b2a      	ldr	r3, [pc, #168]	; (400f0c <usart_serial_getchar+0xbc>)
  400e64:	4298      	cmp	r0, r3
  400e66:	d018      	beq.n	400e9a <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400e68:	4b29      	ldr	r3, [pc, #164]	; (400f10 <usart_serial_getchar+0xc0>)
  400e6a:	4298      	cmp	r0, r3
  400e6c:	d01d      	beq.n	400eaa <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400e6e:	4b29      	ldr	r3, [pc, #164]	; (400f14 <usart_serial_getchar+0xc4>)
  400e70:	429d      	cmp	r5, r3
  400e72:	d022      	beq.n	400eba <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400e74:	4b28      	ldr	r3, [pc, #160]	; (400f18 <usart_serial_getchar+0xc8>)
  400e76:	429d      	cmp	r5, r3
  400e78:	d027      	beq.n	400eca <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400e7a:	4b28      	ldr	r3, [pc, #160]	; (400f1c <usart_serial_getchar+0xcc>)
  400e7c:	429d      	cmp	r5, r3
  400e7e:	d02e      	beq.n	400ede <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400e80:	4b27      	ldr	r3, [pc, #156]	; (400f20 <usart_serial_getchar+0xd0>)
  400e82:	429d      	cmp	r5, r3
  400e84:	d035      	beq.n	400ef2 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400e86:	b003      	add	sp, #12
  400e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400e8a:	461f      	mov	r7, r3
  400e8c:	4e25      	ldr	r6, [pc, #148]	; (400f24 <usart_serial_getchar+0xd4>)
  400e8e:	4621      	mov	r1, r4
  400e90:	4638      	mov	r0, r7
  400e92:	47b0      	blx	r6
  400e94:	2800      	cmp	r0, #0
  400e96:	d1fa      	bne.n	400e8e <usart_serial_getchar+0x3e>
  400e98:	e7e9      	b.n	400e6e <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400e9a:	461f      	mov	r7, r3
  400e9c:	4e21      	ldr	r6, [pc, #132]	; (400f24 <usart_serial_getchar+0xd4>)
  400e9e:	4621      	mov	r1, r4
  400ea0:	4638      	mov	r0, r7
  400ea2:	47b0      	blx	r6
  400ea4:	2800      	cmp	r0, #0
  400ea6:	d1fa      	bne.n	400e9e <usart_serial_getchar+0x4e>
  400ea8:	e7e4      	b.n	400e74 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  400eaa:	461f      	mov	r7, r3
  400eac:	4e1d      	ldr	r6, [pc, #116]	; (400f24 <usart_serial_getchar+0xd4>)
  400eae:	4621      	mov	r1, r4
  400eb0:	4638      	mov	r0, r7
  400eb2:	47b0      	blx	r6
  400eb4:	2800      	cmp	r0, #0
  400eb6:	d1fa      	bne.n	400eae <usart_serial_getchar+0x5e>
  400eb8:	e7df      	b.n	400e7a <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  400eba:	461f      	mov	r7, r3
  400ebc:	4e19      	ldr	r6, [pc, #100]	; (400f24 <usart_serial_getchar+0xd4>)
  400ebe:	4621      	mov	r1, r4
  400ec0:	4638      	mov	r0, r7
  400ec2:	47b0      	blx	r6
  400ec4:	2800      	cmp	r0, #0
  400ec6:	d1fa      	bne.n	400ebe <usart_serial_getchar+0x6e>
  400ec8:	e7da      	b.n	400e80 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  400eca:	461e      	mov	r6, r3
  400ecc:	4d16      	ldr	r5, [pc, #88]	; (400f28 <usart_serial_getchar+0xd8>)
  400ece:	a901      	add	r1, sp, #4
  400ed0:	4630      	mov	r0, r6
  400ed2:	47a8      	blx	r5
  400ed4:	2800      	cmp	r0, #0
  400ed6:	d1fa      	bne.n	400ece <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  400ed8:	9b01      	ldr	r3, [sp, #4]
  400eda:	7023      	strb	r3, [r4, #0]
  400edc:	e7d3      	b.n	400e86 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400ede:	461e      	mov	r6, r3
  400ee0:	4d11      	ldr	r5, [pc, #68]	; (400f28 <usart_serial_getchar+0xd8>)
  400ee2:	a901      	add	r1, sp, #4
  400ee4:	4630      	mov	r0, r6
  400ee6:	47a8      	blx	r5
  400ee8:	2800      	cmp	r0, #0
  400eea:	d1fa      	bne.n	400ee2 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  400eec:	9b01      	ldr	r3, [sp, #4]
  400eee:	7023      	strb	r3, [r4, #0]
  400ef0:	e7c9      	b.n	400e86 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400ef2:	461e      	mov	r6, r3
  400ef4:	4d0c      	ldr	r5, [pc, #48]	; (400f28 <usart_serial_getchar+0xd8>)
  400ef6:	a901      	add	r1, sp, #4
  400ef8:	4630      	mov	r0, r6
  400efa:	47a8      	blx	r5
  400efc:	2800      	cmp	r0, #0
  400efe:	d1fa      	bne.n	400ef6 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  400f00:	9b01      	ldr	r3, [sp, #4]
  400f02:	7023      	strb	r3, [r4, #0]
}
  400f04:	e7bf      	b.n	400e86 <usart_serial_getchar+0x36>
  400f06:	bf00      	nop
  400f08:	400e0800 	.word	0x400e0800
  400f0c:	400e0a00 	.word	0x400e0a00
  400f10:	400e1a00 	.word	0x400e1a00
  400f14:	400e1c00 	.word	0x400e1c00
  400f18:	40024000 	.word	0x40024000
  400f1c:	40028000 	.word	0x40028000
  400f20:	4002c000 	.word	0x4002c000
  400f24:	00400a65 	.word	0x00400a65
  400f28:	00400b73 	.word	0x00400b73

00400f2c <usart_serial_putchar>:
{
  400f2c:	b570      	push	{r4, r5, r6, lr}
  400f2e:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400f30:	4b2a      	ldr	r3, [pc, #168]	; (400fdc <usart_serial_putchar+0xb0>)
  400f32:	4298      	cmp	r0, r3
  400f34:	d013      	beq.n	400f5e <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  400f36:	4b2a      	ldr	r3, [pc, #168]	; (400fe0 <usart_serial_putchar+0xb4>)
  400f38:	4298      	cmp	r0, r3
  400f3a:	d019      	beq.n	400f70 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  400f3c:	4b29      	ldr	r3, [pc, #164]	; (400fe4 <usart_serial_putchar+0xb8>)
  400f3e:	4298      	cmp	r0, r3
  400f40:	d01f      	beq.n	400f82 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  400f42:	4b29      	ldr	r3, [pc, #164]	; (400fe8 <usart_serial_putchar+0xbc>)
  400f44:	4298      	cmp	r0, r3
  400f46:	d025      	beq.n	400f94 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  400f48:	4b28      	ldr	r3, [pc, #160]	; (400fec <usart_serial_putchar+0xc0>)
  400f4a:	4298      	cmp	r0, r3
  400f4c:	d02b      	beq.n	400fa6 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  400f4e:	4b28      	ldr	r3, [pc, #160]	; (400ff0 <usart_serial_putchar+0xc4>)
  400f50:	4298      	cmp	r0, r3
  400f52:	d031      	beq.n	400fb8 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  400f54:	4b27      	ldr	r3, [pc, #156]	; (400ff4 <usart_serial_putchar+0xc8>)
  400f56:	4298      	cmp	r0, r3
  400f58:	d037      	beq.n	400fca <usart_serial_putchar+0x9e>
	return 0;
  400f5a:	2000      	movs	r0, #0
}
  400f5c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f5e:	461e      	mov	r6, r3
  400f60:	4d25      	ldr	r5, [pc, #148]	; (400ff8 <usart_serial_putchar+0xcc>)
  400f62:	4621      	mov	r1, r4
  400f64:	4630      	mov	r0, r6
  400f66:	47a8      	blx	r5
  400f68:	2800      	cmp	r0, #0
  400f6a:	d1fa      	bne.n	400f62 <usart_serial_putchar+0x36>
		return 1;
  400f6c:	2001      	movs	r0, #1
  400f6e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f70:	461e      	mov	r6, r3
  400f72:	4d21      	ldr	r5, [pc, #132]	; (400ff8 <usart_serial_putchar+0xcc>)
  400f74:	4621      	mov	r1, r4
  400f76:	4630      	mov	r0, r6
  400f78:	47a8      	blx	r5
  400f7a:	2800      	cmp	r0, #0
  400f7c:	d1fa      	bne.n	400f74 <usart_serial_putchar+0x48>
		return 1;
  400f7e:	2001      	movs	r0, #1
  400f80:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f82:	461e      	mov	r6, r3
  400f84:	4d1c      	ldr	r5, [pc, #112]	; (400ff8 <usart_serial_putchar+0xcc>)
  400f86:	4621      	mov	r1, r4
  400f88:	4630      	mov	r0, r6
  400f8a:	47a8      	blx	r5
  400f8c:	2800      	cmp	r0, #0
  400f8e:	d1fa      	bne.n	400f86 <usart_serial_putchar+0x5a>
		return 1;
  400f90:	2001      	movs	r0, #1
  400f92:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f94:	461e      	mov	r6, r3
  400f96:	4d18      	ldr	r5, [pc, #96]	; (400ff8 <usart_serial_putchar+0xcc>)
  400f98:	4621      	mov	r1, r4
  400f9a:	4630      	mov	r0, r6
  400f9c:	47a8      	blx	r5
  400f9e:	2800      	cmp	r0, #0
  400fa0:	d1fa      	bne.n	400f98 <usart_serial_putchar+0x6c>
		return 1;
  400fa2:	2001      	movs	r0, #1
  400fa4:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400fa6:	461e      	mov	r6, r3
  400fa8:	4d14      	ldr	r5, [pc, #80]	; (400ffc <usart_serial_putchar+0xd0>)
  400faa:	4621      	mov	r1, r4
  400fac:	4630      	mov	r0, r6
  400fae:	47a8      	blx	r5
  400fb0:	2800      	cmp	r0, #0
  400fb2:	d1fa      	bne.n	400faa <usart_serial_putchar+0x7e>
		return 1;
  400fb4:	2001      	movs	r0, #1
  400fb6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400fb8:	461e      	mov	r6, r3
  400fba:	4d10      	ldr	r5, [pc, #64]	; (400ffc <usart_serial_putchar+0xd0>)
  400fbc:	4621      	mov	r1, r4
  400fbe:	4630      	mov	r0, r6
  400fc0:	47a8      	blx	r5
  400fc2:	2800      	cmp	r0, #0
  400fc4:	d1fa      	bne.n	400fbc <usart_serial_putchar+0x90>
		return 1;
  400fc6:	2001      	movs	r0, #1
  400fc8:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400fca:	461e      	mov	r6, r3
  400fcc:	4d0b      	ldr	r5, [pc, #44]	; (400ffc <usart_serial_putchar+0xd0>)
  400fce:	4621      	mov	r1, r4
  400fd0:	4630      	mov	r0, r6
  400fd2:	47a8      	blx	r5
  400fd4:	2800      	cmp	r0, #0
  400fd6:	d1fa      	bne.n	400fce <usart_serial_putchar+0xa2>
		return 1;
  400fd8:	2001      	movs	r0, #1
  400fda:	bd70      	pop	{r4, r5, r6, pc}
  400fdc:	400e0800 	.word	0x400e0800
  400fe0:	400e0a00 	.word	0x400e0a00
  400fe4:	400e1a00 	.word	0x400e1a00
  400fe8:	400e1c00 	.word	0x400e1c00
  400fec:	40024000 	.word	0x40024000
  400ff0:	40028000 	.word	0x40028000
  400ff4:	4002c000 	.word	0x4002c000
  400ff8:	00400a53 	.word	0x00400a53
  400ffc:	00400b5d 	.word	0x00400b5d

00401000 <SysTick_Handler>:
	g_ul_ms_ticks++;
  401000:	4a02      	ldr	r2, [pc, #8]	; (40100c <SysTick_Handler+0xc>)
  401002:	6813      	ldr	r3, [r2, #0]
  401004:	3301      	adds	r3, #1
  401006:	6013      	str	r3, [r2, #0]
  401008:	4770      	bx	lr
  40100a:	bf00      	nop
  40100c:	20400a4c 	.word	0x20400a4c

00401010 <max30100_read>:


void max30100_read(uint8_t *buffer, uint32_t bufferlen) {
  401010:	b500      	push	{lr}
  401012:	b087      	sub	sp, #28
	twihs_packet_t packet_rx;
	
	/* Configure the data packet to be received */
	packet_rx.chip        = MAX30100_CHIP_ID;
  401014:	2357      	movs	r3, #87	; 0x57
  401016:	f88d 3014 	strb.w	r3, [sp, #20]
	packet_rx.addr[0]     = 0;
  40101a:	2300      	movs	r3, #0
  40101c:	f88d 3004 	strb.w	r3, [sp, #4]
	packet_rx.addr_length = 0;
  401020:	9302      	str	r3, [sp, #8]
	packet_rx.buffer      = buffer;
  401022:	9003      	str	r0, [sp, #12]
	packet_rx.length      = bufferlen;
  401024:	9104      	str	r1, [sp, #16]
	
	/* Get memory from EEPROM*/
	uint32_t ret = twihs_master_read(MAX30100_I2C, &packet_rx);
  401026:	a901      	add	r1, sp, #4
  401028:	4805      	ldr	r0, [pc, #20]	; (401040 <max30100_read+0x30>)
  40102a:	4b06      	ldr	r3, [pc, #24]	; (401044 <max30100_read+0x34>)
  40102c:	4798      	blx	r3
	
	if (ret != TWIHS_SUCCESS) {
  40102e:	b910      	cbnz	r0, 401036 <max30100_read+0x26>
		puts("-E-\tTWI master read packet failed.\r");
		while (1) {
			/* Capture error */
		}
	}
}
  401030:	b007      	add	sp, #28
  401032:	f85d fb04 	ldr.w	pc, [sp], #4
		puts("-E-\tTWI master read packet failed.\r");
  401036:	4804      	ldr	r0, [pc, #16]	; (401048 <max30100_read+0x38>)
  401038:	4b04      	ldr	r3, [pc, #16]	; (40104c <max30100_read+0x3c>)
  40103a:	4798      	blx	r3
  40103c:	e7fe      	b.n	40103c <max30100_read+0x2c>
  40103e:	bf00      	nop
  401040:	40018000 	.word	0x40018000
  401044:	00400905 	.word	0x00400905
  401048:	004070e8 	.word	0x004070e8
  40104c:	00402055 	.word	0x00402055

00401050 <max30100_read_reg>:


void max30100_read_reg(uint8_t addr, uint8_t *buffer, uint32_t bufferlen) {
  401050:	b530      	push	{r4, r5, lr}
  401052:	b08d      	sub	sp, #52	; 0x34
	twihs_packet_t packet_tx, packet_rx;
	uint8_t buffer_tx[1];
	
	buffer_tx[0] = addr;
  401054:	f88d 0004 	strb.w	r0, [sp, #4]
	
	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  401058:	2457      	movs	r4, #87	; 0x57
  40105a:	f88d 402c 	strb.w	r4, [sp, #44]	; 0x2c
	packet_tx.addr[0]     = addr;
  40105e:	f88d 001c 	strb.w	r0, [sp, #28]
	packet_tx.addr_length = 1;
  401062:	2301      	movs	r3, #1
  401064:	9308      	str	r3, [sp, #32]
	packet_tx.buffer      = (uint8_t *) buffer_tx;
  401066:	ad01      	add	r5, sp, #4
  401068:	9509      	str	r5, [sp, #36]	; 0x24
	packet_tx.length      = 1;
  40106a:	930a      	str	r3, [sp, #40]	; 0x28

	/* Configure the data packet to be received */
	packet_rx.chip        = MAX30100_CHIP_ID;
  40106c:	f88d 4018 	strb.w	r4, [sp, #24]
	packet_rx.addr[0]     = addr;
  401070:	f88d 0008 	strb.w	r0, [sp, #8]
	packet_rx.addr_length = 1;
  401074:	9303      	str	r3, [sp, #12]
	packet_rx.buffer      = buffer;
  401076:	9104      	str	r1, [sp, #16]
	packet_rx.length      = bufferlen;
  401078:	9205      	str	r2, [sp, #20]
	
	/* Send test pattern to EEPROM */
	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  40107a:	a907      	add	r1, sp, #28
  40107c:	480a      	ldr	r0, [pc, #40]	; (4010a8 <max30100_read_reg+0x58>)
  40107e:	4b0b      	ldr	r3, [pc, #44]	; (4010ac <max30100_read_reg+0x5c>)
  401080:	4798      	blx	r3
  401082:	b118      	cbz	r0, 40108c <max30100_read_reg+0x3c>
		puts("-E-\tTWI master write packet failed.\r");
  401084:	480a      	ldr	r0, [pc, #40]	; (4010b0 <max30100_read_reg+0x60>)
  401086:	4b0b      	ldr	r3, [pc, #44]	; (4010b4 <max30100_read_reg+0x64>)
  401088:	4798      	blx	r3
  40108a:	e7fe      	b.n	40108a <max30100_read_reg+0x3a>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  40108c:	200a      	movs	r0, #10
  40108e:	4b0a      	ldr	r3, [pc, #40]	; (4010b8 <max30100_read_reg+0x68>)
  401090:	4798      	blx	r3
	
	
	/* Get memory from EEPROM*/
	uint32_t ret = twihs_master_read(MAX30100_I2C, &packet_rx);
  401092:	a902      	add	r1, sp, #8
  401094:	4804      	ldr	r0, [pc, #16]	; (4010a8 <max30100_read_reg+0x58>)
  401096:	4b09      	ldr	r3, [pc, #36]	; (4010bc <max30100_read_reg+0x6c>)
  401098:	4798      	blx	r3
	
	if (ret != TWIHS_SUCCESS) {
  40109a:	b908      	cbnz	r0, 4010a0 <max30100_read_reg+0x50>
		puts("-E-\tTWI master read packet failed.\r");
		while (1) {
			/* Capture error */
		}
	}
}
  40109c:	b00d      	add	sp, #52	; 0x34
  40109e:	bd30      	pop	{r4, r5, pc}
		puts("-E-\tTWI master read packet failed.\r");
  4010a0:	4807      	ldr	r0, [pc, #28]	; (4010c0 <max30100_read_reg+0x70>)
  4010a2:	4b04      	ldr	r3, [pc, #16]	; (4010b4 <max30100_read_reg+0x64>)
  4010a4:	4798      	blx	r3
  4010a6:	e7fe      	b.n	4010a6 <max30100_read_reg+0x56>
  4010a8:	40018000 	.word	0x40018000
  4010ac:	004009b3 	.word	0x004009b3
  4010b0:	0040710c 	.word	0x0040710c
  4010b4:	00402055 	.word	0x00402055
  4010b8:	00400e3d 	.word	0x00400e3d
  4010bc:	00400905 	.word	0x00400905
  4010c0:	004070e8 	.word	0x004070e8

004010c4 <max30100_write_reg>:

void max30100_write_reg(uint8_t addr, uint8_t *buffer, uint32_t bufferlen) {
  4010c4:	b500      	push	{lr}
  4010c6:	b087      	sub	sp, #28
	twihs_packet_t packet_tx;

	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  4010c8:	2357      	movs	r3, #87	; 0x57
  4010ca:	f88d 3014 	strb.w	r3, [sp, #20]
	packet_tx.addr[0]     = addr;
  4010ce:	f88d 0004 	strb.w	r0, [sp, #4]
	packet_tx.addr_length = 1;
  4010d2:	2301      	movs	r3, #1
  4010d4:	9302      	str	r3, [sp, #8]
	packet_tx.buffer      = (uint8_t *) buffer;
  4010d6:	9103      	str	r1, [sp, #12]
	packet_tx.length      = bufferlen;
  4010d8:	9204      	str	r2, [sp, #16]

	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  4010da:	a901      	add	r1, sp, #4
  4010dc:	4806      	ldr	r0, [pc, #24]	; (4010f8 <max30100_write_reg+0x34>)
  4010de:	4b07      	ldr	r3, [pc, #28]	; (4010fc <max30100_write_reg+0x38>)
  4010e0:	4798      	blx	r3
  4010e2:	b118      	cbz	r0, 4010ec <max30100_write_reg+0x28>
		puts("-E-\tTWI master write packet failed.\r");
  4010e4:	4806      	ldr	r0, [pc, #24]	; (401100 <max30100_write_reg+0x3c>)
  4010e6:	4b07      	ldr	r3, [pc, #28]	; (401104 <max30100_write_reg+0x40>)
  4010e8:	4798      	blx	r3
  4010ea:	e7fe      	b.n	4010ea <max30100_write_reg+0x26>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  4010ec:	200a      	movs	r0, #10
  4010ee:	4b06      	ldr	r3, [pc, #24]	; (401108 <max30100_write_reg+0x44>)
  4010f0:	4798      	blx	r3
}
  4010f2:	b007      	add	sp, #28
  4010f4:	f85d fb04 	ldr.w	pc, [sp], #4
  4010f8:	40018000 	.word	0x40018000
  4010fc:	004009b3 	.word	0x004009b3
  401100:	0040710c 	.word	0x0040710c
  401104:	00402055 	.word	0x00402055
  401108:	00400e3d 	.word	0x00400e3d

0040110c <max30100_write8>:


void max30100_write8(uint8_t val) {
  40110c:	b500      	push	{lr}
  40110e:	b089      	sub	sp, #36	; 0x24
  401110:	f88d 0007 	strb.w	r0, [sp, #7]
	twihs_packet_t packet_tx;

	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  401114:	2357      	movs	r3, #87	; 0x57
  401116:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_tx.addr_length = 0;
  40111a:	2300      	movs	r3, #0
  40111c:	9304      	str	r3, [sp, #16]
	packet_tx.buffer      = &val;
  40111e:	f10d 0307 	add.w	r3, sp, #7
  401122:	9305      	str	r3, [sp, #20]
	packet_tx.length      = 1;
  401124:	2301      	movs	r3, #1
  401126:	9306      	str	r3, [sp, #24]

	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  401128:	a903      	add	r1, sp, #12
  40112a:	4807      	ldr	r0, [pc, #28]	; (401148 <max30100_write8+0x3c>)
  40112c:	4b07      	ldr	r3, [pc, #28]	; (40114c <max30100_write8+0x40>)
  40112e:	4798      	blx	r3
  401130:	b118      	cbz	r0, 40113a <max30100_write8+0x2e>
		puts("-E-\tTWI master write packet failed.\r");
  401132:	4807      	ldr	r0, [pc, #28]	; (401150 <max30100_write8+0x44>)
  401134:	4b07      	ldr	r3, [pc, #28]	; (401154 <max30100_write8+0x48>)
  401136:	4798      	blx	r3
  401138:	e7fe      	b.n	401138 <max30100_write8+0x2c>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  40113a:	200a      	movs	r0, #10
  40113c:	4b06      	ldr	r3, [pc, #24]	; (401158 <max30100_write8+0x4c>)
  40113e:	4798      	blx	r3
}
  401140:	b009      	add	sp, #36	; 0x24
  401142:	f85d fb04 	ldr.w	pc, [sp], #4
  401146:	bf00      	nop
  401148:	40018000 	.word	0x40018000
  40114c:	004009b3 	.word	0x004009b3
  401150:	0040710c 	.word	0x0040710c
  401154:	00402055 	.word	0x00402055
  401158:	00400e3d 	.word	0x00400e3d

0040115c <max30100_read_reg8>:


uint8_t max30100_read_reg8(uint8_t addr) {
  40115c:	b500      	push	{lr}
  40115e:	b083      	sub	sp, #12
	uint8_t data;
	
	max30100_read_reg(addr, &data, 1);
  401160:	2201      	movs	r2, #1
  401162:	f10d 0107 	add.w	r1, sp, #7
  401166:	4b03      	ldr	r3, [pc, #12]	; (401174 <max30100_read_reg8+0x18>)
  401168:	4798      	blx	r3
	return data;
}
  40116a:	f89d 0007 	ldrb.w	r0, [sp, #7]
  40116e:	b003      	add	sp, #12
  401170:	f85d fb04 	ldr.w	pc, [sp], #4
  401174:	00401051 	.word	0x00401051

00401178 <max30100_write_reg8>:
	max30100_read_reg(addr, &data, 2);
	return data;
}


void max30100_write_reg8(uint8_t addr, uint8_t value) {
  401178:	b500      	push	{lr}
  40117a:	b083      	sub	sp, #12
  40117c:	ab02      	add	r3, sp, #8
  40117e:	f803 1d01 	strb.w	r1, [r3, #-1]!
	max30100_write_reg(addr, &value, 1);
  401182:	2201      	movs	r2, #1
  401184:	4619      	mov	r1, r3
  401186:	4b02      	ldr	r3, [pc, #8]	; (401190 <max30100_write_reg8+0x18>)
  401188:	4798      	blx	r3
}
  40118a:	b003      	add	sp, #12
  40118c:	f85d fb04 	ldr.w	pc, [sp], #4
  401190:	004010c5 	.word	0x004010c5

00401194 <max30100_init>:

void max30100_init() {
  401194:	b530      	push	{r4, r5, lr}
  401196:	b085      	sub	sp, #20
	twihs_options_t opt;
	
	/* Configure the options of TWI driver */
	opt.master_clk = sysclk_get_peripheral_hz();
  401198:	4b16      	ldr	r3, [pc, #88]	; (4011f4 <max30100_init+0x60>)
  40119a:	9301      	str	r3, [sp, #4]
	opt.speed      = TWIHS_CLK;
  40119c:	4b16      	ldr	r3, [pc, #88]	; (4011f8 <max30100_init+0x64>)
  40119e:	9302      	str	r3, [sp, #8]
	
	/* Enable the peripheral clock for TWI */
	pmc_enable_periph_clk(MAX30100_I2C_ID);
  4011a0:	2013      	movs	r0, #19
  4011a2:	4b16      	ldr	r3, [pc, #88]	; (4011fc <max30100_init+0x68>)
  4011a4:	4798      	blx	r3
	
	if (twihs_master_init(MAX30100_I2C, &opt) != TWIHS_SUCCESS) {
  4011a6:	a901      	add	r1, sp, #4
  4011a8:	4815      	ldr	r0, [pc, #84]	; (401200 <max30100_init+0x6c>)
  4011aa:	4b16      	ldr	r3, [pc, #88]	; (401204 <max30100_init+0x70>)
  4011ac:	4798      	blx	r3
  4011ae:	b118      	cbz	r0, 4011b8 <max30100_init+0x24>
		puts("-E-\tTWI master initialization failed.\r");
  4011b0:	4815      	ldr	r0, [pc, #84]	; (401208 <max30100_init+0x74>)
  4011b2:	4b16      	ldr	r3, [pc, #88]	; (40120c <max30100_init+0x78>)
  4011b4:	4798      	blx	r3
  4011b6:	e7fe      	b.n	4011b6 <max30100_init+0x22>
		while (1) {
			/* Capture error */
		}
	}		
	
	if(max30100_read_reg8(MAX30100_REG_PARTID) != MAX30100_EXPECTED_PARTID) {
  4011b8:	20ff      	movs	r0, #255	; 0xff
  4011ba:	4b15      	ldr	r3, [pc, #84]	; (401210 <max30100_init+0x7c>)
  4011bc:	4798      	blx	r3
  4011be:	2811      	cmp	r0, #17
  4011c0:	d003      	beq.n	4011ca <max30100_init+0x36>
		puts("-E-\tRead wrong part ID from MAX30100.\r");
  4011c2:	4814      	ldr	r0, [pc, #80]	; (401214 <max30100_init+0x80>)
  4011c4:	4b11      	ldr	r3, [pc, #68]	; (40120c <max30100_init+0x78>)
  4011c6:	4798      	blx	r3
  4011c8:	e7fe      	b.n	4011c8 <max30100_init+0x34>
		while(1){}
	}
	
	max30100_write_reg8(MAX30100_MODECFG_REG, MAX30100_MODECFG_RESET);
  4011ca:	2140      	movs	r1, #64	; 0x40
  4011cc:	2006      	movs	r0, #6
  4011ce:	4b12      	ldr	r3, [pc, #72]	; (401218 <max30100_init+0x84>)
  4011d0:	4798      	blx	r3
	
	while (1) {
		// wait for reset
		if(!(max30100_read_reg8(MAX30100_MODECFG_REG) & MAX30100_MODECFG_RESET)) {
  4011d2:	2506      	movs	r5, #6
  4011d4:	4c0e      	ldr	r4, [pc, #56]	; (401210 <max30100_init+0x7c>)
  4011d6:	4628      	mov	r0, r5
  4011d8:	47a0      	blx	r4
  4011da:	f010 0f40 	tst.w	r0, #64	; 0x40
  4011de:	d1fa      	bne.n	4011d6 <max30100_init+0x42>
			break;
		}
	}
	
	max30100_read_reg8(MAX30100_IRQSTAT_REG); // clear pwr ready int!
  4011e0:	2000      	movs	r0, #0
  4011e2:	4b0b      	ldr	r3, [pc, #44]	; (401210 <max30100_init+0x7c>)
  4011e4:	4798      	blx	r3
	max30100_write_reg8(MAX30100_IRQENABLE_REG, MAX30100_IRQENABLE_HRREADY | MAX30100_IRQENABLE_SPO2READY);
  4011e6:	2130      	movs	r1, #48	; 0x30
  4011e8:	2001      	movs	r0, #1
  4011ea:	4b0b      	ldr	r3, [pc, #44]	; (401218 <max30100_init+0x84>)
  4011ec:	4798      	blx	r3
	
}
  4011ee:	b005      	add	sp, #20
  4011f0:	bd30      	pop	{r4, r5, pc}
  4011f2:	bf00      	nop
  4011f4:	08f0d180 	.word	0x08f0d180
  4011f8:	000186a0 	.word	0x000186a0
  4011fc:	00400801 	.word	0x00400801
  401200:	40018000 	.word	0x40018000
  401204:	004008d1 	.word	0x004008d1
  401208:	00407098 	.word	0x00407098
  40120c:	00402055 	.word	0x00402055
  401210:	0040115d 	.word	0x0040115d
  401214:	004070c0 	.word	0x004070c0
  401218:	00401179 	.word	0x00401179

0040121c <max30100_setspo2samplerate>:
	  temp += tfrac * 0.0625;
	  return temp;
	  
}

void max30100_setspo2samplerate(max30100_spo2_samplerate_t rate) {
  40121c:	b510      	push	{r4, lr}
  40121e:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  401220:	2007      	movs	r0, #7
  401222:	4b05      	ldr	r3, [pc, #20]	; (401238 <max30100_setspo2samplerate+0x1c>)
  401224:	4798      	blx	r3

	v &= 0b11100011; // clear out old settings
  401226:	f020 011c 	bic.w	r1, r0, #28
	v |= rate << 2;
  40122a:	ea41 0184 	orr.w	r1, r1, r4, lsl #2
	max30100_write_reg8(MAX30100_SPO2CFG_REG, v);
  40122e:	b2c9      	uxtb	r1, r1
  401230:	2007      	movs	r0, #7
  401232:	4b02      	ldr	r3, [pc, #8]	; (40123c <max30100_setspo2samplerate+0x20>)
  401234:	4798      	blx	r3
  401236:	bd10      	pop	{r4, pc}
  401238:	0040115d 	.word	0x0040115d
  40123c:	00401179 	.word	0x00401179

00401240 <max30100_getspo2samplerate>:
}

max30100_spo2_samplerate_t max30100_getspo2samplerate(void) {
  401240:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  401242:	2007      	movs	r0, #7
  401244:	4b02      	ldr	r3, [pc, #8]	; (401250 <max30100_getspo2samplerate+0x10>)
  401246:	4798      	blx	r3
	v >>= 2;
	v &= 0x7; // mask off only the 3 bits

	return (max30100_spo2_samplerate_t)v;
}
  401248:	f3c0 0082 	ubfx	r0, r0, #2, #3
  40124c:	bd08      	pop	{r3, pc}
  40124e:	bf00      	nop
  401250:	0040115d 	.word	0x0040115d

00401254 <max30100_readfifo>:
	max30100_write_reg8(MAX30100_FIFO_OVERFLOW_REG, 0);
	max30100_write_reg8(MAX30100_FIFO_RDPTR_REG, 0);
}


uint8_t max30100_readfifo(uint32_t *fifoptr, uint8_t maxentries) {
  401254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401258:	b090      	sub	sp, #64	; 0x40
  40125a:	4680      	mov	r8, r0
  40125c:	460e      	mov	r6, r1
	uint32_t t;
	int8_t numsamples = 0;
	uint8_t buffer[64];
	
	do {
		int8_t wrptr = max30100_read_reg8(MAX30100_FIFO_WRPTR_REG);
  40125e:	4d1e      	ldr	r5, [pc, #120]	; (4012d8 <max30100_readfifo+0x84>)
	  
		numsamples = wrptr - rdptr;
		if (numsamples < 0) numsamples +=16;
	  
		numsamples = min(maxentries, numsamples);
		printf("%d samples avail", numsamples);
  401260:	f8df 9084 	ldr.w	r9, [pc, #132]	; 4012e8 <max30100_readfifo+0x94>
  401264:	4f1d      	ldr	r7, [pc, #116]	; (4012dc <max30100_readfifo+0x88>)
  401266:	e00a      	b.n	40127e <max30100_readfifo+0x2a>
		numsamples = min(maxentries, numsamples);
  401268:	42b3      	cmp	r3, r6
  40126a:	bfa8      	it	ge
  40126c:	4633      	movge	r3, r6
  40126e:	461c      	mov	r4, r3
		printf("%d samples avail", numsamples);
  401270:	fa4f fa83 	sxtb.w	sl, r3
  401274:	4651      	mov	r1, sl
  401276:	4648      	mov	r0, r9
  401278:	47b8      	blx	r7
	  } while (numsamples < maxentries);
  40127a:	4556      	cmp	r6, sl
  40127c:	dd0c      	ble.n	401298 <max30100_readfifo+0x44>
		int8_t wrptr = max30100_read_reg8(MAX30100_FIFO_WRPTR_REG);
  40127e:	2002      	movs	r0, #2
  401280:	47a8      	blx	r5
  401282:	4604      	mov	r4, r0
		int8_t rdptr = max30100_read_reg8(MAX30100_FIFO_RDPTR_REG);
  401284:	2004      	movs	r0, #4
  401286:	47a8      	blx	r5
		numsamples = wrptr - rdptr;
  401288:	1a20      	subs	r0, r4, r0
  40128a:	b2c0      	uxtb	r0, r0
  40128c:	b243      	sxtb	r3, r0
		if (numsamples < 0) numsamples +=16;
  40128e:	2b00      	cmp	r3, #0
  401290:	daea      	bge.n	401268 <max30100_readfifo+0x14>
  401292:	3010      	adds	r0, #16
  401294:	b243      	sxtb	r3, r0
  401296:	e7e7      	b.n	401268 <max30100_readfifo+0x14>

	max30100_write8(MAX30100_FIFO_DATA_REG);
  401298:	2005      	movs	r0, #5
  40129a:	4b11      	ldr	r3, [pc, #68]	; (4012e0 <max30100_readfifo+0x8c>)
  40129c:	4798      	blx	r3
	max30100_read(buffer, numsamples *4 );
  40129e:	ea4f 018a 	mov.w	r1, sl, lsl #2
  4012a2:	4668      	mov	r0, sp
  4012a4:	4b0f      	ldr	r3, [pc, #60]	; (4012e4 <max30100_readfifo+0x90>)
  4012a6:	4798      	blx	r3
  4012a8:	466b      	mov	r3, sp
  4012aa:	f1a8 0704 	sub.w	r7, r8, #4
  4012ae:	a808      	add	r0, sp, #32
	  for (uint8_t i=0; i<8; i++) {
		  t = buffer[i*4];
  4012b0:	781a      	ldrb	r2, [r3, #0]
		  t <<= 8;
		  t |= buffer[i*4+1];
  4012b2:	7859      	ldrb	r1, [r3, #1]
  4012b4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
		  t <<= 8;
		  t |= buffer[i*4+2];
  4012b8:	789a      	ldrb	r2, [r3, #2]
  4012ba:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
		  t <<= 8;
		  t |= buffer[i*4+3];
  4012be:	78da      	ldrb	r2, [r3, #3]
  4012c0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8

		  fifoptr[i] = t;
  4012c4:	f847 2f04 	str.w	r2, [r7, #4]!
  4012c8:	3304      	adds	r3, #4
	  for (uint8_t i=0; i<8; i++) {
  4012ca:	4283      	cmp	r3, r0
  4012cc:	d1f0      	bne.n	4012b0 <max30100_readfifo+0x5c>
	  }
	  return numsamples;
}
  4012ce:	b2e0      	uxtb	r0, r4
  4012d0:	b010      	add	sp, #64	; 0x40
  4012d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4012d6:	bf00      	nop
  4012d8:	0040115d 	.word	0x0040115d
  4012dc:	00401f7d 	.word	0x00401f7d
  4012e0:	0040110d 	.word	0x0040110d
  4012e4:	00401011 	.word	0x00401011
  4012e8:	00407134 	.word	0x00407134

004012ec <max30100_start_read>:

void max30100_start_read() {
  4012ec:	b510      	push	{r4, lr}
	max30100_write_reg8(MAX30100_MODECFG_REG, 0x0); // disable
  4012ee:	2100      	movs	r1, #0
  4012f0:	2006      	movs	r0, #6
  4012f2:	4c07      	ldr	r4, [pc, #28]	; (401310 <max30100_start_read+0x24>)
  4012f4:	47a0      	blx	r4
	mdelay(10);
  4012f6:	200a      	movs	r0, #10
  4012f8:	4b06      	ldr	r3, [pc, #24]	; (401314 <max30100_start_read+0x28>)
  4012fa:	4798      	blx	r3

	// set to spo2 + HR mode
	max30100_write_reg8(MAX30100_MODECFG_REG, MAX30100_MODECFG_HRSP02);
  4012fc:	2103      	movs	r1, #3
  4012fe:	2006      	movs	r0, #6
  401300:	47a0      	blx	r4
	max30100_write_reg8(MAX30100_FIFO_WRPTR_REG, 0);
  401302:	2100      	movs	r1, #0
  401304:	2002      	movs	r0, #2
  401306:	47a0      	blx	r4
	max30100_write_reg8(MAX30100_FIFO_RDPTR_REG, 0);
  401308:	2100      	movs	r1, #0
  40130a:	2004      	movs	r0, #4
  40130c:	47a0      	blx	r4
  40130e:	bd10      	pop	{r4, pc}
  401310:	00401179 	.word	0x00401179
  401314:	00400e3d 	.word	0x00400e3d

00401318 <max30100_set_led_pulse_width>:
}

void max30100_set_led_pulse_width(max30100_led_pulsewidth_t pw) {
  401318:	b510      	push	{r4, lr}
  40131a:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  40131c:	2007      	movs	r0, #7
  40131e:	4b04      	ldr	r3, [pc, #16]	; (401330 <max30100_set_led_pulse_width+0x18>)
  401320:	4798      	blx	r3
	v &= 0b11111100; // clear out old settings
  401322:	f000 01fc 	and.w	r1, r0, #252	; 0xfc
	v |= pw;
	max30100_write_reg8(MAX30100_SPO2CFG_REG, v);
  401326:	4321      	orrs	r1, r4
  401328:	2007      	movs	r0, #7
  40132a:	4b02      	ldr	r3, [pc, #8]	; (401334 <max30100_set_led_pulse_width+0x1c>)
  40132c:	4798      	blx	r3
  40132e:	bd10      	pop	{r4, pc}
  401330:	0040115d 	.word	0x0040115d
  401334:	00401179 	.word	0x00401179

00401338 <max30100_get_led_pulse_width>:
}

max30100_led_pulsewidth_t max30100_get_led_pulse_width(void) {
  401338:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  40133a:	2007      	movs	r0, #7
  40133c:	4b02      	ldr	r3, [pc, #8]	; (401348 <max30100_get_led_pulse_width+0x10>)
  40133e:	4798      	blx	r3
	v &= 0x03;
	return (max30100_led_pulsewidth_t)v;
}
  401340:	f000 0003 	and.w	r0, r0, #3
  401344:	bd08      	pop	{r3, pc}
  401346:	bf00      	nop
  401348:	0040115d 	.word	0x0040115d

0040134c <max30100_set_red_led_current>:

void max30100_set_red_led_current(max30100_led_current_t i) {
  40134c:	b510      	push	{r4, lr}
  40134e:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  401350:	2009      	movs	r0, #9
  401352:	4b05      	ldr	r3, [pc, #20]	; (401368 <max30100_set_red_led_current+0x1c>)
  401354:	4798      	blx	r3
	v &= 0x0F; // clear out old settings
  401356:	f000 010f 	and.w	r1, r0, #15
	v |= i << 4;
  40135a:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
	max30100_write_reg8(MAX30100_LEDCFG_REG, v);
  40135e:	b2c9      	uxtb	r1, r1
  401360:	2009      	movs	r0, #9
  401362:	4b02      	ldr	r3, [pc, #8]	; (40136c <max30100_set_red_led_current+0x20>)
  401364:	4798      	blx	r3
  401366:	bd10      	pop	{r4, pc}
  401368:	0040115d 	.word	0x0040115d
  40136c:	00401179 	.word	0x00401179

00401370 <max30100_get_red_led_current>:
}

max30100_led_current_t max30100_get_red_led_current() {
  401370:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  401372:	2009      	movs	r0, #9
  401374:	4b02      	ldr	r3, [pc, #8]	; (401380 <max30100_get_red_led_current+0x10>)
  401376:	4798      	blx	r3
	return (max30100_led_current_t)(v >> 4);
}
  401378:	f3c0 1007 	ubfx	r0, r0, #4, #8
  40137c:	bd08      	pop	{r3, pc}
  40137e:	bf00      	nop
  401380:	0040115d 	.word	0x0040115d

00401384 <max30100_set_ir_led_current>:
void max30100_set_interrupt_flag(uint8_t interrupt) {
	max30100_write_reg8(MAX30100_IRQENABLE_REG, interrupt);
}


void max30100_set_ir_led_current(max30100_led_current_t i) {
  401384:	b510      	push	{r4, lr}
  401386:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  401388:	2009      	movs	r0, #9
  40138a:	4b04      	ldr	r3, [pc, #16]	; (40139c <max30100_set_ir_led_current+0x18>)
  40138c:	4798      	blx	r3
	v &= 0xF0; // clear out old settings
  40138e:	f000 01f0 	and.w	r1, r0, #240	; 0xf0
	v |= i;
	max30100_write_reg8(MAX30100_LEDCFG_REG, v);
  401392:	4321      	orrs	r1, r4
  401394:	2009      	movs	r0, #9
  401396:	4b02      	ldr	r3, [pc, #8]	; (4013a0 <max30100_set_ir_led_current+0x1c>)
  401398:	4798      	blx	r3
  40139a:	bd10      	pop	{r4, pc}
  40139c:	0040115d 	.word	0x0040115d
  4013a0:	00401179 	.word	0x00401179

004013a4 <max30100_get_ir_led_current>:
}

max30100_led_current_t max30100_get_ir_led_current() {
  4013a4:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  4013a6:	2009      	movs	r0, #9
  4013a8:	4b02      	ldr	r3, [pc, #8]	; (4013b4 <max30100_get_ir_led_current+0x10>)
  4013aa:	4798      	blx	r3
	return (max30100_led_current_t)(v & 0xF);
}
  4013ac:	f000 000f 	and.w	r0, r0, #15
  4013b0:	bd08      	pop	{r3, pc}
  4013b2:	bf00      	nop
  4013b4:	0040115d 	.word	0x0040115d

004013b8 <main>:
 * \brief Application entry point for TWI EEPROM example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  4013b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4013bc:	b096      	sub	sp, #88	; 0x58
	uint32_t buffer[16];
	

	/* Initialize the SAM system */
	sysclk_init();
  4013be:	4b82      	ldr	r3, [pc, #520]	; (4015c8 <main+0x210>)
  4013c0:	4798      	blx	r3

	/* Initialize the board */
	board_init();
  4013c2:	4b82      	ldr	r3, [pc, #520]	; (4015cc <main+0x214>)
  4013c4:	4798      	blx	r3
  4013c6:	200e      	movs	r0, #14
  4013c8:	4e81      	ldr	r6, [pc, #516]	; (4015d0 <main+0x218>)
  4013ca:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4013cc:	4d81      	ldr	r5, [pc, #516]	; (4015d4 <main+0x21c>)
  4013ce:	4b82      	ldr	r3, [pc, #520]	; (4015d8 <main+0x220>)
  4013d0:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4013d2:	4a82      	ldr	r2, [pc, #520]	; (4015dc <main+0x224>)
  4013d4:	4b82      	ldr	r3, [pc, #520]	; (4015e0 <main+0x228>)
  4013d6:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4013d8:	4a82      	ldr	r2, [pc, #520]	; (4015e4 <main+0x22c>)
  4013da:	4b83      	ldr	r3, [pc, #524]	; (4015e8 <main+0x230>)
  4013dc:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  4013de:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4013e2:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  4013e4:	23c0      	movs	r3, #192	; 0xc0
  4013e6:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  4013e8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4013ec:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  4013ee:	2400      	movs	r4, #0
  4013f0:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4013f2:	9404      	str	r4, [sp, #16]
  4013f4:	200e      	movs	r0, #14
  4013f6:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  4013f8:	4a7c      	ldr	r2, [pc, #496]	; (4015ec <main+0x234>)
  4013fa:	4669      	mov	r1, sp
  4013fc:	4628      	mov	r0, r5
  4013fe:	4b7c      	ldr	r3, [pc, #496]	; (4015f0 <main+0x238>)
  401400:	4798      	blx	r3
		usart_enable_tx(p_usart);
  401402:	4628      	mov	r0, r5
  401404:	4b7b      	ldr	r3, [pc, #492]	; (4015f4 <main+0x23c>)
  401406:	4798      	blx	r3
		usart_enable_rx(p_usart);
  401408:	4628      	mov	r0, r5
  40140a:	4b7b      	ldr	r3, [pc, #492]	; (4015f8 <main+0x240>)
  40140c:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40140e:	4e7b      	ldr	r6, [pc, #492]	; (4015fc <main+0x244>)
  401410:	6833      	ldr	r3, [r6, #0]
  401412:	4621      	mov	r1, r4
  401414:	6898      	ldr	r0, [r3, #8]
  401416:	4d7a      	ldr	r5, [pc, #488]	; (401600 <main+0x248>)
  401418:	47a8      	blx	r5
	setbuf(stdin, NULL);
  40141a:	6833      	ldr	r3, [r6, #0]
  40141c:	4621      	mov	r1, r4
  40141e:	6858      	ldr	r0, [r3, #4]
  401420:	47a8      	blx	r5

    /* Initialize the console UART */
	configure_console();
	pio_configure(PIOB, PIO_INPUT, 1 << 1, PIO_DEFAULT);
  401422:	4623      	mov	r3, r4
  401424:	2202      	movs	r2, #2
  401426:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40142a:	4876      	ldr	r0, [pc, #472]	; (401604 <main+0x24c>)
  40142c:	4d76      	ldr	r5, [pc, #472]	; (401608 <main+0x250>)
  40142e:	47a8      	blx	r5
	
	/* Configure systick for 1 ms */
	puts("Configure system tick to get 1ms tick period.\r");
  401430:	4876      	ldr	r0, [pc, #472]	; (40160c <main+0x254>)
  401432:	4d77      	ldr	r5, [pc, #476]	; (401610 <main+0x258>)
  401434:	47a8      	blx	r5
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  401436:	4b77      	ldr	r3, [pc, #476]	; (401614 <main+0x25c>)
  401438:	4a77      	ldr	r2, [pc, #476]	; (401618 <main+0x260>)
  40143a:	605a      	str	r2, [r3, #4]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40143c:	21e0      	movs	r1, #224	; 0xe0
  40143e:	4a77      	ldr	r2, [pc, #476]	; (40161c <main+0x264>)
  401440:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
  401444:	609c      	str	r4, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  401446:	2207      	movs	r2, #7
  401448:	601a      	str	r2, [r3, #0]
		while (1) {
			/* Capture error */
		}
	}
	
	max30100_init();
  40144a:	4b75      	ldr	r3, [pc, #468]	; (401620 <main+0x268>)
  40144c:	4798      	blx	r3
	puts("MAX30100 detected!");
  40144e:	4875      	ldr	r0, [pc, #468]	; (401624 <main+0x26c>)
  401450:	47a8      	blx	r5
	puts("MAX30100 reset complete");
  401452:	4875      	ldr	r0, [pc, #468]	; (401628 <main+0x270>)
  401454:	47a8      	blx	r5
	max30100_setspo2samplerate(MAX30100_SPO2SR_50HZ);
  401456:	4620      	mov	r0, r4
  401458:	4b74      	ldr	r3, [pc, #464]	; (40162c <main+0x274>)
  40145a:	4798      	blx	r3
	max30100_spo2_samplerate_t rate = max30100_getspo2samplerate();
  40145c:	4b74      	ldr	r3, [pc, #464]	; (401630 <main+0x278>)
  40145e:	4798      	blx	r3
	uint16_t ratehz = 0;
	switch (rate) {
  401460:	2807      	cmp	r0, #7
  401462:	d826      	bhi.n	4014b2 <main+0xfa>
  401464:	e8df f000 	tbb	[pc, r0]
  401468:	17151304 	.word	0x17151304
  40146c:	221f1c19 	.word	0x221f1c19
		case MAX30100_SPO2SR_50HZ: ratehz = 50; break;
  401470:	2132      	movs	r1, #50	; 0x32
		case MAX30100_SPO2SR_400HZ: ratehz = 400; break;
		case MAX30100_SPO2SR_600HZ: ratehz = 600; break;
		case MAX30100_SPO2SR_800HZ: ratehz = 800; break;
		case MAX30100_SPO2SR_1000HZ: ratehz = 1000; break;
	}
	printf("SpO2 sample rate = %d Hz\n", ratehz); 
  401472:	4870      	ldr	r0, [pc, #448]	; (401634 <main+0x27c>)
  401474:	4b70      	ldr	r3, [pc, #448]	; (401638 <main+0x280>)
  401476:	4798      	blx	r3
	
	max30100_set_led_pulse_width(MAX30100_LEDPW_1600US);
  401478:	2003      	movs	r0, #3
  40147a:	4b70      	ldr	r3, [pc, #448]	; (40163c <main+0x284>)
  40147c:	4798      	blx	r3
	max30100_led_pulsewidth_t width = max30100_get_led_pulse_width();
  40147e:	4b70      	ldr	r3, [pc, #448]	; (401640 <main+0x288>)
  401480:	4798      	blx	r3
	uint16_t pulsewidth = 0;
	switch (width) {
  401482:	2803      	cmp	r0, #3
  401484:	d83d      	bhi.n	401502 <main+0x14a>
  401486:	e8df f000 	tbb	[pc, r0]
  40148a:	3316      	.short	0x3316
  40148c:	3936      	.short	0x3936
		case MAX30100_SPO2SR_100HZ: ratehz = 100; break;
  40148e:	2164      	movs	r1, #100	; 0x64
  401490:	e7ef      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_167HZ: ratehz = 167; break;
  401492:	21a7      	movs	r1, #167	; 0xa7
  401494:	e7ed      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_200HZ: ratehz = 200; break;
  401496:	21c8      	movs	r1, #200	; 0xc8
  401498:	e7eb      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_400HZ: ratehz = 400; break;
  40149a:	f44f 71c8 	mov.w	r1, #400	; 0x190
  40149e:	e7e8      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_600HZ: ratehz = 600; break;
  4014a0:	f44f 7116 	mov.w	r1, #600	; 0x258
  4014a4:	e7e5      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_800HZ: ratehz = 800; break;
  4014a6:	f44f 7148 	mov.w	r1, #800	; 0x320
  4014aa:	e7e2      	b.n	401472 <main+0xba>
		case MAX30100_SPO2SR_1000HZ: ratehz = 1000; break;
  4014ac:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  4014b0:	e7df      	b.n	401472 <main+0xba>
	uint16_t ratehz = 0;
  4014b2:	2100      	movs	r1, #0
  4014b4:	e7dd      	b.n	401472 <main+0xba>
		case  MAX30100_LEDPW_200US: pulsewidth = 200; break;
  4014b6:	21c8      	movs	r1, #200	; 0xc8
		case  MAX30100_LEDPW_400US: pulsewidth = 400; break;
		case  MAX30100_LEDPW_800US: pulsewidth = 800; break;
		case  MAX30100_LEDPW_1600US: pulsewidth = 1600; break;
	}
	printf("LED pulse width = %d uS\n", pulsewidth); 
  4014b8:	4862      	ldr	r0, [pc, #392]	; (401644 <main+0x28c>)
  4014ba:	4b5f      	ldr	r3, [pc, #380]	; (401638 <main+0x280>)
  4014bc:	4798      	blx	r3
	
	max30100_set_red_led_current(MAX30100_LEDCURRENT_11MA);
  4014be:	2003      	movs	r0, #3
  4014c0:	4b61      	ldr	r3, [pc, #388]	; (401648 <main+0x290>)
  4014c2:	4798      	blx	r3
	max30100_set_ir_led_current(MAX30100_LEDCURRENT_11MA);
  4014c4:	2003      	movs	r0, #3
  4014c6:	4b61      	ldr	r3, [pc, #388]	; (40164c <main+0x294>)
  4014c8:	4798      	blx	r3
	max30100_led_current_t red = max30100_get_red_led_current();
  4014ca:	4b61      	ldr	r3, [pc, #388]	; (401650 <main+0x298>)
  4014cc:	4798      	blx	r3
  4014ce:	4604      	mov	r4, r0
	max30100_led_current_t ir = max30100_get_ir_led_current();
  4014d0:	4b60      	ldr	r3, [pc, #384]	; (401654 <main+0x29c>)
  4014d2:	4798      	blx	r3
  4014d4:	4605      	mov	r5, r0

	float ledcurrent = 0;
	switch (red) {
  4014d6:	1e63      	subs	r3, r4, #1
  4014d8:	2b0e      	cmp	r3, #14
  4014da:	d845      	bhi.n	401568 <main+0x1b0>
  4014dc:	e8df f003 	tbb	[pc, r3]
  4014e0:	2c2a2813 	.word	0x2c2a2813
  4014e4:	3432302e 	.word	0x3432302e
  4014e8:	3c3a3836 	.word	0x3c3a3836
  4014ec:	403e      	.short	0x403e
  4014ee:	42          	.byte	0x42
  4014ef:	00          	.byte	0x00
		case  MAX30100_LEDPW_400US: pulsewidth = 400; break;
  4014f0:	f44f 71c8 	mov.w	r1, #400	; 0x190
  4014f4:	e7e0      	b.n	4014b8 <main+0x100>
		case  MAX30100_LEDPW_800US: pulsewidth = 800; break;
  4014f6:	f44f 7148 	mov.w	r1, #800	; 0x320
  4014fa:	e7dd      	b.n	4014b8 <main+0x100>
		case  MAX30100_LEDPW_1600US: pulsewidth = 1600; break;
  4014fc:	f44f 61c8 	mov.w	r1, #1600	; 0x640
  401500:	e7da      	b.n	4014b8 <main+0x100>
	uint16_t pulsewidth = 0;
  401502:	2100      	movs	r1, #0
  401504:	e7d8      	b.n	4014b8 <main+0x100>
		case MAX30100_LEDCURRENT_0MA:    ledcurrent = 0; break;
		case MAX30100_LEDCURRENT_4_4MA:  ledcurrent = 4.4; break;
  401506:	4c54      	ldr	r4, [pc, #336]	; (401658 <main+0x2a0>)
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
	}
    printf("Red LED current = %f mA\n", ledcurrent); 
  401508:	4620      	mov	r0, r4
  40150a:	4b54      	ldr	r3, [pc, #336]	; (40165c <main+0x2a4>)
  40150c:	4798      	blx	r3
  40150e:	4602      	mov	r2, r0
  401510:	460b      	mov	r3, r1
  401512:	4853      	ldr	r0, [pc, #332]	; (401660 <main+0x2a8>)
  401514:	4948      	ldr	r1, [pc, #288]	; (401638 <main+0x280>)
  401516:	4788      	blx	r1

	switch (ir) {
  401518:	2d0f      	cmp	r5, #15
  40151a:	d828      	bhi.n	40156e <main+0x1b6>
  40151c:	e8df f005 	tbb	[pc, r5]
  401520:	3b393726 	.word	0x3b393726
  401524:	43413f3d 	.word	0x43413f3d
  401528:	4b494745 	.word	0x4b494745
  40152c:	c6514f4d 	.word	0xc6514f4d
		case MAX30100_LEDCURRENT_7_6MA:  ledcurrent = 7.6; break;
  401530:	4c4c      	ldr	r4, [pc, #304]	; (401664 <main+0x2ac>)
  401532:	e7e9      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_11MA:   ledcurrent = 11; break;
  401534:	4c4c      	ldr	r4, [pc, #304]	; (401668 <main+0x2b0>)
  401536:	e7e7      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_14_2MA: ledcurrent = 14.2; break;
  401538:	4c4c      	ldr	r4, [pc, #304]	; (40166c <main+0x2b4>)
  40153a:	e7e5      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_17_4MA: ledcurrent = 17.4; break;
  40153c:	4c4c      	ldr	r4, [pc, #304]	; (401670 <main+0x2b8>)
  40153e:	e7e3      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_20_8MA: ledcurrent = 20.8; break;
  401540:	4c4c      	ldr	r4, [pc, #304]	; (401674 <main+0x2bc>)
  401542:	e7e1      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_24MA:   ledcurrent = 24; break;
  401544:	4c4c      	ldr	r4, [pc, #304]	; (401678 <main+0x2c0>)
  401546:	e7df      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_27_1MA: ledcurrent = 27.1; break;
  401548:	4c4c      	ldr	r4, [pc, #304]	; (40167c <main+0x2c4>)
  40154a:	e7dd      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_30_6MA: ledcurrent = 30.6; break;
  40154c:	4c4c      	ldr	r4, [pc, #304]	; (401680 <main+0x2c8>)
  40154e:	e7db      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_33_8MA: ledcurrent = 33.8; break;
  401550:	4c4c      	ldr	r4, [pc, #304]	; (401684 <main+0x2cc>)
  401552:	e7d9      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_37MA:   ledcurrent = 37; break;
  401554:	4c4c      	ldr	r4, [pc, #304]	; (401688 <main+0x2d0>)
  401556:	e7d7      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
  401558:	4c4c      	ldr	r4, [pc, #304]	; (40168c <main+0x2d4>)
  40155a:	e7d5      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
  40155c:	4c4c      	ldr	r4, [pc, #304]	; (401690 <main+0x2d8>)
  40155e:	e7d3      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
  401560:	4c4c      	ldr	r4, [pc, #304]	; (401694 <main+0x2dc>)
  401562:	e7d1      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
  401564:	4c4c      	ldr	r4, [pc, #304]	; (401698 <main+0x2e0>)
  401566:	e7cf      	b.n	401508 <main+0x150>
	float ledcurrent = 0;
  401568:	2400      	movs	r4, #0
  40156a:	e7cd      	b.n	401508 <main+0x150>
		case MAX30100_LEDCURRENT_0MA:    ledcurrent = 0; break;
  40156c:	2400      	movs	r4, #0
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
	}
	printf("IR LED current = %f mA\n", ledcurrent); 
  40156e:	4620      	mov	r0, r4
  401570:	4b3a      	ldr	r3, [pc, #232]	; (40165c <main+0x2a4>)
  401572:	4798      	blx	r3
  401574:	4602      	mov	r2, r0
  401576:	460b      	mov	r3, r1
  401578:	4848      	ldr	r0, [pc, #288]	; (40169c <main+0x2e4>)
  40157a:	492f      	ldr	r1, [pc, #188]	; (401638 <main+0x280>)
  40157c:	4788      	blx	r1

	max30100_start_read();
  40157e:	4b48      	ldr	r3, [pc, #288]	; (4016a0 <main+0x2e8>)
  401580:	4798      	blx	r3
	

	while (1) {
		uint8_t read = max30100_readfifo(buffer, 16);
  401582:	f8df a120 	ldr.w	sl, [pc, #288]	; 4016a4 <main+0x2ec>
		printf("got %d reads\n", read);
  401586:	f8df 9120 	ldr.w	r9, [pc, #288]	; 4016a8 <main+0x2f0>
  40158a:	4e2b      	ldr	r6, [pc, #172]	; (401638 <main+0x280>)
  40158c:	e097      	b.n	4016be <main+0x306>
		case MAX30100_LEDCURRENT_4_4MA:  ledcurrent = 4.4; break;
  40158e:	4c32      	ldr	r4, [pc, #200]	; (401658 <main+0x2a0>)
  401590:	e7ed      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_7_6MA:  ledcurrent = 7.6; break;
  401592:	4c34      	ldr	r4, [pc, #208]	; (401664 <main+0x2ac>)
  401594:	e7eb      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_11MA:   ledcurrent = 11; break;
  401596:	4c34      	ldr	r4, [pc, #208]	; (401668 <main+0x2b0>)
  401598:	e7e9      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_14_2MA: ledcurrent = 14.2; break;
  40159a:	4c34      	ldr	r4, [pc, #208]	; (40166c <main+0x2b4>)
  40159c:	e7e7      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_17_4MA: ledcurrent = 17.4; break;
  40159e:	4c34      	ldr	r4, [pc, #208]	; (401670 <main+0x2b8>)
  4015a0:	e7e5      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_20_8MA: ledcurrent = 20.8; break;
  4015a2:	4c34      	ldr	r4, [pc, #208]	; (401674 <main+0x2bc>)
  4015a4:	e7e3      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_24MA:   ledcurrent = 24; break;
  4015a6:	4c34      	ldr	r4, [pc, #208]	; (401678 <main+0x2c0>)
  4015a8:	e7e1      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_27_1MA: ledcurrent = 27.1; break;
  4015aa:	4c34      	ldr	r4, [pc, #208]	; (40167c <main+0x2c4>)
  4015ac:	e7df      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_30_6MA: ledcurrent = 30.6; break;
  4015ae:	4c34      	ldr	r4, [pc, #208]	; (401680 <main+0x2c8>)
  4015b0:	e7dd      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_33_8MA: ledcurrent = 33.8; break;
  4015b2:	4c34      	ldr	r4, [pc, #208]	; (401684 <main+0x2cc>)
  4015b4:	e7db      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_37MA:   ledcurrent = 37; break;
  4015b6:	4c34      	ldr	r4, [pc, #208]	; (401688 <main+0x2d0>)
  4015b8:	e7d9      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
  4015ba:	4c34      	ldr	r4, [pc, #208]	; (40168c <main+0x2d4>)
  4015bc:	e7d7      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
  4015be:	4c34      	ldr	r4, [pc, #208]	; (401690 <main+0x2d8>)
  4015c0:	e7d5      	b.n	40156e <main+0x1b6>
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
  4015c2:	4c34      	ldr	r4, [pc, #208]	; (401694 <main+0x2dc>)
  4015c4:	e7d3      	b.n	40156e <main+0x1b6>
  4015c6:	bf00      	nop
  4015c8:	004001d5 	.word	0x004001d5
  4015cc:	004002d1 	.word	0x004002d1
  4015d0:	00400801 	.word	0x00400801
  4015d4:	40028000 	.word	0x40028000
  4015d8:	20400a8c 	.word	0x20400a8c
  4015dc:	00400f2d 	.word	0x00400f2d
  4015e0:	20400a88 	.word	0x20400a88
  4015e4:	00400e51 	.word	0x00400e51
  4015e8:	20400a84 	.word	0x20400a84
  4015ec:	08f0d180 	.word	0x08f0d180
  4015f0:	00400afd 	.word	0x00400afd
  4015f4:	00400b51 	.word	0x00400b51
  4015f8:	00400b57 	.word	0x00400b57
  4015fc:	20400008 	.word	0x20400008
  401600:	00402065 	.word	0x00402065
  401604:	400e1000 	.word	0x400e1000
  401608:	00400595 	.word	0x00400595
  40160c:	00406fbc 	.word	0x00406fbc
  401610:	00402055 	.word	0x00402055
  401614:	e000e010 	.word	0xe000e010
  401618:	000493df 	.word	0x000493df
  40161c:	e000ed00 	.word	0xe000ed00
  401620:	00401195 	.word	0x00401195
  401624:	00406fec 	.word	0x00406fec
  401628:	00407000 	.word	0x00407000
  40162c:	0040121d 	.word	0x0040121d
  401630:	00401241 	.word	0x00401241
  401634:	00407018 	.word	0x00407018
  401638:	00401f7d 	.word	0x00401f7d
  40163c:	00401319 	.word	0x00401319
  401640:	00401339 	.word	0x00401339
  401644:	00407034 	.word	0x00407034
  401648:	0040134d 	.word	0x0040134d
  40164c:	00401385 	.word	0x00401385
  401650:	00401371 	.word	0x00401371
  401654:	004013a5 	.word	0x004013a5
  401658:	408ccccd 	.word	0x408ccccd
  40165c:	004019c5 	.word	0x004019c5
  401660:	00407050 	.word	0x00407050
  401664:	40f33333 	.word	0x40f33333
  401668:	41300000 	.word	0x41300000
  40166c:	41633333 	.word	0x41633333
  401670:	418b3333 	.word	0x418b3333
  401674:	41a66666 	.word	0x41a66666
  401678:	41c00000 	.word	0x41c00000
  40167c:	41d8cccd 	.word	0x41d8cccd
  401680:	41f4cccd 	.word	0x41f4cccd
  401684:	42073333 	.word	0x42073333
  401688:	42140000 	.word	0x42140000
  40168c:	4220cccd 	.word	0x4220cccd
  401690:	422e6666 	.word	0x422e6666
  401694:	423b3333 	.word	0x423b3333
  401698:	42480000 	.word	0x42480000
  40169c:	0040706c 	.word	0x0040706c
  4016a0:	004012ed 	.word	0x004012ed
  4016a4:	00401255 	.word	0x00401255
  4016a8:	00407084 	.word	0x00407084
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
  4016ac:	4c0f      	ldr	r4, [pc, #60]	; (4016ec <main+0x334>)
  4016ae:	e75e      	b.n	40156e <main+0x1b6>
		for(int i = 0; i < read; i++) {
			printf("%d ", buffer[i]);
		}
		printf("\n");
  4016b0:	200a      	movs	r0, #10
  4016b2:	4b0f      	ldr	r3, [pc, #60]	; (4016f0 <main+0x338>)
  4016b4:	4798      	blx	r3
		mdelay(2000);
  4016b6:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
  4016ba:	4b0e      	ldr	r3, [pc, #56]	; (4016f4 <main+0x33c>)
  4016bc:	4798      	blx	r3
		uint8_t read = max30100_readfifo(buffer, 16);
  4016be:	2110      	movs	r1, #16
  4016c0:	a806      	add	r0, sp, #24
  4016c2:	47d0      	blx	sl
  4016c4:	4604      	mov	r4, r0
		printf("got %d reads\n", read);
  4016c6:	4607      	mov	r7, r0
  4016c8:	4601      	mov	r1, r0
  4016ca:	4648      	mov	r0, r9
  4016cc:	47b0      	blx	r6
		for(int i = 0; i < read; i++) {
  4016ce:	2c00      	cmp	r4, #0
  4016d0:	ddee      	ble.n	4016b0 <main+0x2f8>
  4016d2:	ad05      	add	r5, sp, #20
  4016d4:	2400      	movs	r4, #0
			printf("%d ", buffer[i]);
  4016d6:	f8df 8020 	ldr.w	r8, [pc, #32]	; 4016f8 <main+0x340>
  4016da:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4016de:	4640      	mov	r0, r8
  4016e0:	47b0      	blx	r6
		for(int i = 0; i < read; i++) {
  4016e2:	3401      	adds	r4, #1
  4016e4:	42a7      	cmp	r7, r4
  4016e6:	d1f8      	bne.n	4016da <main+0x322>
  4016e8:	e7e2      	b.n	4016b0 <main+0x2f8>
  4016ea:	bf00      	nop
  4016ec:	42480000 	.word	0x42480000
  4016f0:	00401fa5 	.word	0x00401fa5
  4016f4:	00400e3d 	.word	0x00400e3d
  4016f8:	00407094 	.word	0x00407094

004016fc <__aeabi_drsub>:
  4016fc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401700:	e002      	b.n	401708 <__adddf3>
  401702:	bf00      	nop

00401704 <__aeabi_dsub>:
  401704:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401708 <__adddf3>:
  401708:	b530      	push	{r4, r5, lr}
  40170a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40170e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401712:	ea94 0f05 	teq	r4, r5
  401716:	bf08      	it	eq
  401718:	ea90 0f02 	teqeq	r0, r2
  40171c:	bf1f      	itttt	ne
  40171e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401722:	ea55 0c02 	orrsne.w	ip, r5, r2
  401726:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40172a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40172e:	f000 80e2 	beq.w	4018f6 <__adddf3+0x1ee>
  401732:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401736:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40173a:	bfb8      	it	lt
  40173c:	426d      	neglt	r5, r5
  40173e:	dd0c      	ble.n	40175a <__adddf3+0x52>
  401740:	442c      	add	r4, r5
  401742:	ea80 0202 	eor.w	r2, r0, r2
  401746:	ea81 0303 	eor.w	r3, r1, r3
  40174a:	ea82 0000 	eor.w	r0, r2, r0
  40174e:	ea83 0101 	eor.w	r1, r3, r1
  401752:	ea80 0202 	eor.w	r2, r0, r2
  401756:	ea81 0303 	eor.w	r3, r1, r3
  40175a:	2d36      	cmp	r5, #54	; 0x36
  40175c:	bf88      	it	hi
  40175e:	bd30      	pophi	{r4, r5, pc}
  401760:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401764:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401768:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40176c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401770:	d002      	beq.n	401778 <__adddf3+0x70>
  401772:	4240      	negs	r0, r0
  401774:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401778:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40177c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401780:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401784:	d002      	beq.n	40178c <__adddf3+0x84>
  401786:	4252      	negs	r2, r2
  401788:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40178c:	ea94 0f05 	teq	r4, r5
  401790:	f000 80a7 	beq.w	4018e2 <__adddf3+0x1da>
  401794:	f1a4 0401 	sub.w	r4, r4, #1
  401798:	f1d5 0e20 	rsbs	lr, r5, #32
  40179c:	db0d      	blt.n	4017ba <__adddf3+0xb2>
  40179e:	fa02 fc0e 	lsl.w	ip, r2, lr
  4017a2:	fa22 f205 	lsr.w	r2, r2, r5
  4017a6:	1880      	adds	r0, r0, r2
  4017a8:	f141 0100 	adc.w	r1, r1, #0
  4017ac:	fa03 f20e 	lsl.w	r2, r3, lr
  4017b0:	1880      	adds	r0, r0, r2
  4017b2:	fa43 f305 	asr.w	r3, r3, r5
  4017b6:	4159      	adcs	r1, r3
  4017b8:	e00e      	b.n	4017d8 <__adddf3+0xd0>
  4017ba:	f1a5 0520 	sub.w	r5, r5, #32
  4017be:	f10e 0e20 	add.w	lr, lr, #32
  4017c2:	2a01      	cmp	r2, #1
  4017c4:	fa03 fc0e 	lsl.w	ip, r3, lr
  4017c8:	bf28      	it	cs
  4017ca:	f04c 0c02 	orrcs.w	ip, ip, #2
  4017ce:	fa43 f305 	asr.w	r3, r3, r5
  4017d2:	18c0      	adds	r0, r0, r3
  4017d4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4017d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4017dc:	d507      	bpl.n	4017ee <__adddf3+0xe6>
  4017de:	f04f 0e00 	mov.w	lr, #0
  4017e2:	f1dc 0c00 	rsbs	ip, ip, #0
  4017e6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4017ea:	eb6e 0101 	sbc.w	r1, lr, r1
  4017ee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4017f2:	d31b      	bcc.n	40182c <__adddf3+0x124>
  4017f4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4017f8:	d30c      	bcc.n	401814 <__adddf3+0x10c>
  4017fa:	0849      	lsrs	r1, r1, #1
  4017fc:	ea5f 0030 	movs.w	r0, r0, rrx
  401800:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401804:	f104 0401 	add.w	r4, r4, #1
  401808:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40180c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401810:	f080 809a 	bcs.w	401948 <__adddf3+0x240>
  401814:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401818:	bf08      	it	eq
  40181a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40181e:	f150 0000 	adcs.w	r0, r0, #0
  401822:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401826:	ea41 0105 	orr.w	r1, r1, r5
  40182a:	bd30      	pop	{r4, r5, pc}
  40182c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401830:	4140      	adcs	r0, r0
  401832:	eb41 0101 	adc.w	r1, r1, r1
  401836:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40183a:	f1a4 0401 	sub.w	r4, r4, #1
  40183e:	d1e9      	bne.n	401814 <__adddf3+0x10c>
  401840:	f091 0f00 	teq	r1, #0
  401844:	bf04      	itt	eq
  401846:	4601      	moveq	r1, r0
  401848:	2000      	moveq	r0, #0
  40184a:	fab1 f381 	clz	r3, r1
  40184e:	bf08      	it	eq
  401850:	3320      	addeq	r3, #32
  401852:	f1a3 030b 	sub.w	r3, r3, #11
  401856:	f1b3 0220 	subs.w	r2, r3, #32
  40185a:	da0c      	bge.n	401876 <__adddf3+0x16e>
  40185c:	320c      	adds	r2, #12
  40185e:	dd08      	ble.n	401872 <__adddf3+0x16a>
  401860:	f102 0c14 	add.w	ip, r2, #20
  401864:	f1c2 020c 	rsb	r2, r2, #12
  401868:	fa01 f00c 	lsl.w	r0, r1, ip
  40186c:	fa21 f102 	lsr.w	r1, r1, r2
  401870:	e00c      	b.n	40188c <__adddf3+0x184>
  401872:	f102 0214 	add.w	r2, r2, #20
  401876:	bfd8      	it	le
  401878:	f1c2 0c20 	rsble	ip, r2, #32
  40187c:	fa01 f102 	lsl.w	r1, r1, r2
  401880:	fa20 fc0c 	lsr.w	ip, r0, ip
  401884:	bfdc      	itt	le
  401886:	ea41 010c 	orrle.w	r1, r1, ip
  40188a:	4090      	lslle	r0, r2
  40188c:	1ae4      	subs	r4, r4, r3
  40188e:	bfa2      	ittt	ge
  401890:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401894:	4329      	orrge	r1, r5
  401896:	bd30      	popge	{r4, r5, pc}
  401898:	ea6f 0404 	mvn.w	r4, r4
  40189c:	3c1f      	subs	r4, #31
  40189e:	da1c      	bge.n	4018da <__adddf3+0x1d2>
  4018a0:	340c      	adds	r4, #12
  4018a2:	dc0e      	bgt.n	4018c2 <__adddf3+0x1ba>
  4018a4:	f104 0414 	add.w	r4, r4, #20
  4018a8:	f1c4 0220 	rsb	r2, r4, #32
  4018ac:	fa20 f004 	lsr.w	r0, r0, r4
  4018b0:	fa01 f302 	lsl.w	r3, r1, r2
  4018b4:	ea40 0003 	orr.w	r0, r0, r3
  4018b8:	fa21 f304 	lsr.w	r3, r1, r4
  4018bc:	ea45 0103 	orr.w	r1, r5, r3
  4018c0:	bd30      	pop	{r4, r5, pc}
  4018c2:	f1c4 040c 	rsb	r4, r4, #12
  4018c6:	f1c4 0220 	rsb	r2, r4, #32
  4018ca:	fa20 f002 	lsr.w	r0, r0, r2
  4018ce:	fa01 f304 	lsl.w	r3, r1, r4
  4018d2:	ea40 0003 	orr.w	r0, r0, r3
  4018d6:	4629      	mov	r1, r5
  4018d8:	bd30      	pop	{r4, r5, pc}
  4018da:	fa21 f004 	lsr.w	r0, r1, r4
  4018de:	4629      	mov	r1, r5
  4018e0:	bd30      	pop	{r4, r5, pc}
  4018e2:	f094 0f00 	teq	r4, #0
  4018e6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4018ea:	bf06      	itte	eq
  4018ec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4018f0:	3401      	addeq	r4, #1
  4018f2:	3d01      	subne	r5, #1
  4018f4:	e74e      	b.n	401794 <__adddf3+0x8c>
  4018f6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4018fa:	bf18      	it	ne
  4018fc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401900:	d029      	beq.n	401956 <__adddf3+0x24e>
  401902:	ea94 0f05 	teq	r4, r5
  401906:	bf08      	it	eq
  401908:	ea90 0f02 	teqeq	r0, r2
  40190c:	d005      	beq.n	40191a <__adddf3+0x212>
  40190e:	ea54 0c00 	orrs.w	ip, r4, r0
  401912:	bf04      	itt	eq
  401914:	4619      	moveq	r1, r3
  401916:	4610      	moveq	r0, r2
  401918:	bd30      	pop	{r4, r5, pc}
  40191a:	ea91 0f03 	teq	r1, r3
  40191e:	bf1e      	ittt	ne
  401920:	2100      	movne	r1, #0
  401922:	2000      	movne	r0, #0
  401924:	bd30      	popne	{r4, r5, pc}
  401926:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40192a:	d105      	bne.n	401938 <__adddf3+0x230>
  40192c:	0040      	lsls	r0, r0, #1
  40192e:	4149      	adcs	r1, r1
  401930:	bf28      	it	cs
  401932:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401936:	bd30      	pop	{r4, r5, pc}
  401938:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40193c:	bf3c      	itt	cc
  40193e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401942:	bd30      	popcc	{r4, r5, pc}
  401944:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401948:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40194c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401950:	f04f 0000 	mov.w	r0, #0
  401954:	bd30      	pop	{r4, r5, pc}
  401956:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40195a:	bf1a      	itte	ne
  40195c:	4619      	movne	r1, r3
  40195e:	4610      	movne	r0, r2
  401960:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401964:	bf1c      	itt	ne
  401966:	460b      	movne	r3, r1
  401968:	4602      	movne	r2, r0
  40196a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40196e:	bf06      	itte	eq
  401970:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401974:	ea91 0f03 	teqeq	r1, r3
  401978:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40197c:	bd30      	pop	{r4, r5, pc}
  40197e:	bf00      	nop

00401980 <__aeabi_ui2d>:
  401980:	f090 0f00 	teq	r0, #0
  401984:	bf04      	itt	eq
  401986:	2100      	moveq	r1, #0
  401988:	4770      	bxeq	lr
  40198a:	b530      	push	{r4, r5, lr}
  40198c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401990:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401994:	f04f 0500 	mov.w	r5, #0
  401998:	f04f 0100 	mov.w	r1, #0
  40199c:	e750      	b.n	401840 <__adddf3+0x138>
  40199e:	bf00      	nop

004019a0 <__aeabi_i2d>:
  4019a0:	f090 0f00 	teq	r0, #0
  4019a4:	bf04      	itt	eq
  4019a6:	2100      	moveq	r1, #0
  4019a8:	4770      	bxeq	lr
  4019aa:	b530      	push	{r4, r5, lr}
  4019ac:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4019b0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4019b4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4019b8:	bf48      	it	mi
  4019ba:	4240      	negmi	r0, r0
  4019bc:	f04f 0100 	mov.w	r1, #0
  4019c0:	e73e      	b.n	401840 <__adddf3+0x138>
  4019c2:	bf00      	nop

004019c4 <__aeabi_f2d>:
  4019c4:	0042      	lsls	r2, r0, #1
  4019c6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4019ca:	ea4f 0131 	mov.w	r1, r1, rrx
  4019ce:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4019d2:	bf1f      	itttt	ne
  4019d4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4019d8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4019dc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4019e0:	4770      	bxne	lr
  4019e2:	f092 0f00 	teq	r2, #0
  4019e6:	bf14      	ite	ne
  4019e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4019ec:	4770      	bxeq	lr
  4019ee:	b530      	push	{r4, r5, lr}
  4019f0:	f44f 7460 	mov.w	r4, #896	; 0x380
  4019f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4019f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4019fc:	e720      	b.n	401840 <__adddf3+0x138>
  4019fe:	bf00      	nop

00401a00 <__aeabi_ul2d>:
  401a00:	ea50 0201 	orrs.w	r2, r0, r1
  401a04:	bf08      	it	eq
  401a06:	4770      	bxeq	lr
  401a08:	b530      	push	{r4, r5, lr}
  401a0a:	f04f 0500 	mov.w	r5, #0
  401a0e:	e00a      	b.n	401a26 <__aeabi_l2d+0x16>

00401a10 <__aeabi_l2d>:
  401a10:	ea50 0201 	orrs.w	r2, r0, r1
  401a14:	bf08      	it	eq
  401a16:	4770      	bxeq	lr
  401a18:	b530      	push	{r4, r5, lr}
  401a1a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401a1e:	d502      	bpl.n	401a26 <__aeabi_l2d+0x16>
  401a20:	4240      	negs	r0, r0
  401a22:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401a26:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a2a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a2e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401a32:	f43f aedc 	beq.w	4017ee <__adddf3+0xe6>
  401a36:	f04f 0203 	mov.w	r2, #3
  401a3a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401a3e:	bf18      	it	ne
  401a40:	3203      	addne	r2, #3
  401a42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401a46:	bf18      	it	ne
  401a48:	3203      	addne	r2, #3
  401a4a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401a4e:	f1c2 0320 	rsb	r3, r2, #32
  401a52:	fa00 fc03 	lsl.w	ip, r0, r3
  401a56:	fa20 f002 	lsr.w	r0, r0, r2
  401a5a:	fa01 fe03 	lsl.w	lr, r1, r3
  401a5e:	ea40 000e 	orr.w	r0, r0, lr
  401a62:	fa21 f102 	lsr.w	r1, r1, r2
  401a66:	4414      	add	r4, r2
  401a68:	e6c1      	b.n	4017ee <__adddf3+0xe6>
  401a6a:	bf00      	nop

00401a6c <__aeabi_dmul>:
  401a6c:	b570      	push	{r4, r5, r6, lr}
  401a6e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401a72:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401a76:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401a7a:	bf1d      	ittte	ne
  401a7c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401a80:	ea94 0f0c 	teqne	r4, ip
  401a84:	ea95 0f0c 	teqne	r5, ip
  401a88:	f000 f8de 	bleq	401c48 <__aeabi_dmul+0x1dc>
  401a8c:	442c      	add	r4, r5
  401a8e:	ea81 0603 	eor.w	r6, r1, r3
  401a92:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401a96:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401a9a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401a9e:	bf18      	it	ne
  401aa0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401aa4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401aa8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401aac:	d038      	beq.n	401b20 <__aeabi_dmul+0xb4>
  401aae:	fba0 ce02 	umull	ip, lr, r0, r2
  401ab2:	f04f 0500 	mov.w	r5, #0
  401ab6:	fbe1 e502 	umlal	lr, r5, r1, r2
  401aba:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401abe:	fbe0 e503 	umlal	lr, r5, r0, r3
  401ac2:	f04f 0600 	mov.w	r6, #0
  401ac6:	fbe1 5603 	umlal	r5, r6, r1, r3
  401aca:	f09c 0f00 	teq	ip, #0
  401ace:	bf18      	it	ne
  401ad0:	f04e 0e01 	orrne.w	lr, lr, #1
  401ad4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401ad8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401adc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401ae0:	d204      	bcs.n	401aec <__aeabi_dmul+0x80>
  401ae2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401ae6:	416d      	adcs	r5, r5
  401ae8:	eb46 0606 	adc.w	r6, r6, r6
  401aec:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401af0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401af4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401af8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401afc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401b00:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401b04:	bf88      	it	hi
  401b06:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401b0a:	d81e      	bhi.n	401b4a <__aeabi_dmul+0xde>
  401b0c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401b10:	bf08      	it	eq
  401b12:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401b16:	f150 0000 	adcs.w	r0, r0, #0
  401b1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401b1e:	bd70      	pop	{r4, r5, r6, pc}
  401b20:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401b24:	ea46 0101 	orr.w	r1, r6, r1
  401b28:	ea40 0002 	orr.w	r0, r0, r2
  401b2c:	ea81 0103 	eor.w	r1, r1, r3
  401b30:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401b34:	bfc2      	ittt	gt
  401b36:	ebd4 050c 	rsbsgt	r5, r4, ip
  401b3a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401b3e:	bd70      	popgt	{r4, r5, r6, pc}
  401b40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b44:	f04f 0e00 	mov.w	lr, #0
  401b48:	3c01      	subs	r4, #1
  401b4a:	f300 80ab 	bgt.w	401ca4 <__aeabi_dmul+0x238>
  401b4e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401b52:	bfde      	ittt	le
  401b54:	2000      	movle	r0, #0
  401b56:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401b5a:	bd70      	pople	{r4, r5, r6, pc}
  401b5c:	f1c4 0400 	rsb	r4, r4, #0
  401b60:	3c20      	subs	r4, #32
  401b62:	da35      	bge.n	401bd0 <__aeabi_dmul+0x164>
  401b64:	340c      	adds	r4, #12
  401b66:	dc1b      	bgt.n	401ba0 <__aeabi_dmul+0x134>
  401b68:	f104 0414 	add.w	r4, r4, #20
  401b6c:	f1c4 0520 	rsb	r5, r4, #32
  401b70:	fa00 f305 	lsl.w	r3, r0, r5
  401b74:	fa20 f004 	lsr.w	r0, r0, r4
  401b78:	fa01 f205 	lsl.w	r2, r1, r5
  401b7c:	ea40 0002 	orr.w	r0, r0, r2
  401b80:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401b84:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401b88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401b8c:	fa21 f604 	lsr.w	r6, r1, r4
  401b90:	eb42 0106 	adc.w	r1, r2, r6
  401b94:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401b98:	bf08      	it	eq
  401b9a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401b9e:	bd70      	pop	{r4, r5, r6, pc}
  401ba0:	f1c4 040c 	rsb	r4, r4, #12
  401ba4:	f1c4 0520 	rsb	r5, r4, #32
  401ba8:	fa00 f304 	lsl.w	r3, r0, r4
  401bac:	fa20 f005 	lsr.w	r0, r0, r5
  401bb0:	fa01 f204 	lsl.w	r2, r1, r4
  401bb4:	ea40 0002 	orr.w	r0, r0, r2
  401bb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401bbc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401bc0:	f141 0100 	adc.w	r1, r1, #0
  401bc4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401bc8:	bf08      	it	eq
  401bca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401bce:	bd70      	pop	{r4, r5, r6, pc}
  401bd0:	f1c4 0520 	rsb	r5, r4, #32
  401bd4:	fa00 f205 	lsl.w	r2, r0, r5
  401bd8:	ea4e 0e02 	orr.w	lr, lr, r2
  401bdc:	fa20 f304 	lsr.w	r3, r0, r4
  401be0:	fa01 f205 	lsl.w	r2, r1, r5
  401be4:	ea43 0302 	orr.w	r3, r3, r2
  401be8:	fa21 f004 	lsr.w	r0, r1, r4
  401bec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401bf0:	fa21 f204 	lsr.w	r2, r1, r4
  401bf4:	ea20 0002 	bic.w	r0, r0, r2
  401bf8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401bfc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c00:	bf08      	it	eq
  401c02:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c06:	bd70      	pop	{r4, r5, r6, pc}
  401c08:	f094 0f00 	teq	r4, #0
  401c0c:	d10f      	bne.n	401c2e <__aeabi_dmul+0x1c2>
  401c0e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401c12:	0040      	lsls	r0, r0, #1
  401c14:	eb41 0101 	adc.w	r1, r1, r1
  401c18:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401c1c:	bf08      	it	eq
  401c1e:	3c01      	subeq	r4, #1
  401c20:	d0f7      	beq.n	401c12 <__aeabi_dmul+0x1a6>
  401c22:	ea41 0106 	orr.w	r1, r1, r6
  401c26:	f095 0f00 	teq	r5, #0
  401c2a:	bf18      	it	ne
  401c2c:	4770      	bxne	lr
  401c2e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401c32:	0052      	lsls	r2, r2, #1
  401c34:	eb43 0303 	adc.w	r3, r3, r3
  401c38:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401c3c:	bf08      	it	eq
  401c3e:	3d01      	subeq	r5, #1
  401c40:	d0f7      	beq.n	401c32 <__aeabi_dmul+0x1c6>
  401c42:	ea43 0306 	orr.w	r3, r3, r6
  401c46:	4770      	bx	lr
  401c48:	ea94 0f0c 	teq	r4, ip
  401c4c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401c50:	bf18      	it	ne
  401c52:	ea95 0f0c 	teqne	r5, ip
  401c56:	d00c      	beq.n	401c72 <__aeabi_dmul+0x206>
  401c58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401c5c:	bf18      	it	ne
  401c5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401c62:	d1d1      	bne.n	401c08 <__aeabi_dmul+0x19c>
  401c64:	ea81 0103 	eor.w	r1, r1, r3
  401c68:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c6c:	f04f 0000 	mov.w	r0, #0
  401c70:	bd70      	pop	{r4, r5, r6, pc}
  401c72:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401c76:	bf06      	itte	eq
  401c78:	4610      	moveq	r0, r2
  401c7a:	4619      	moveq	r1, r3
  401c7c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401c80:	d019      	beq.n	401cb6 <__aeabi_dmul+0x24a>
  401c82:	ea94 0f0c 	teq	r4, ip
  401c86:	d102      	bne.n	401c8e <__aeabi_dmul+0x222>
  401c88:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401c8c:	d113      	bne.n	401cb6 <__aeabi_dmul+0x24a>
  401c8e:	ea95 0f0c 	teq	r5, ip
  401c92:	d105      	bne.n	401ca0 <__aeabi_dmul+0x234>
  401c94:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401c98:	bf1c      	itt	ne
  401c9a:	4610      	movne	r0, r2
  401c9c:	4619      	movne	r1, r3
  401c9e:	d10a      	bne.n	401cb6 <__aeabi_dmul+0x24a>
  401ca0:	ea81 0103 	eor.w	r1, r1, r3
  401ca4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401ca8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401cac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401cb0:	f04f 0000 	mov.w	r0, #0
  401cb4:	bd70      	pop	{r4, r5, r6, pc}
  401cb6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401cba:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401cbe:	bd70      	pop	{r4, r5, r6, pc}

00401cc0 <__aeabi_ddiv>:
  401cc0:	b570      	push	{r4, r5, r6, lr}
  401cc2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401cc6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401cca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401cce:	bf1d      	ittte	ne
  401cd0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401cd4:	ea94 0f0c 	teqne	r4, ip
  401cd8:	ea95 0f0c 	teqne	r5, ip
  401cdc:	f000 f8a7 	bleq	401e2e <__aeabi_ddiv+0x16e>
  401ce0:	eba4 0405 	sub.w	r4, r4, r5
  401ce4:	ea81 0e03 	eor.w	lr, r1, r3
  401ce8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401cec:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401cf0:	f000 8088 	beq.w	401e04 <__aeabi_ddiv+0x144>
  401cf4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401cf8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401cfc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401d00:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401d04:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401d08:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401d0c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401d10:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401d14:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401d18:	429d      	cmp	r5, r3
  401d1a:	bf08      	it	eq
  401d1c:	4296      	cmpeq	r6, r2
  401d1e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401d22:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401d26:	d202      	bcs.n	401d2e <__aeabi_ddiv+0x6e>
  401d28:	085b      	lsrs	r3, r3, #1
  401d2a:	ea4f 0232 	mov.w	r2, r2, rrx
  401d2e:	1ab6      	subs	r6, r6, r2
  401d30:	eb65 0503 	sbc.w	r5, r5, r3
  401d34:	085b      	lsrs	r3, r3, #1
  401d36:	ea4f 0232 	mov.w	r2, r2, rrx
  401d3a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401d3e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401d42:	ebb6 0e02 	subs.w	lr, r6, r2
  401d46:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d4a:	bf22      	ittt	cs
  401d4c:	1ab6      	subcs	r6, r6, r2
  401d4e:	4675      	movcs	r5, lr
  401d50:	ea40 000c 	orrcs.w	r0, r0, ip
  401d54:	085b      	lsrs	r3, r3, #1
  401d56:	ea4f 0232 	mov.w	r2, r2, rrx
  401d5a:	ebb6 0e02 	subs.w	lr, r6, r2
  401d5e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d62:	bf22      	ittt	cs
  401d64:	1ab6      	subcs	r6, r6, r2
  401d66:	4675      	movcs	r5, lr
  401d68:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401d6c:	085b      	lsrs	r3, r3, #1
  401d6e:	ea4f 0232 	mov.w	r2, r2, rrx
  401d72:	ebb6 0e02 	subs.w	lr, r6, r2
  401d76:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d7a:	bf22      	ittt	cs
  401d7c:	1ab6      	subcs	r6, r6, r2
  401d7e:	4675      	movcs	r5, lr
  401d80:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401d84:	085b      	lsrs	r3, r3, #1
  401d86:	ea4f 0232 	mov.w	r2, r2, rrx
  401d8a:	ebb6 0e02 	subs.w	lr, r6, r2
  401d8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d92:	bf22      	ittt	cs
  401d94:	1ab6      	subcs	r6, r6, r2
  401d96:	4675      	movcs	r5, lr
  401d98:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401d9c:	ea55 0e06 	orrs.w	lr, r5, r6
  401da0:	d018      	beq.n	401dd4 <__aeabi_ddiv+0x114>
  401da2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401da6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401daa:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401dae:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401db2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401db6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401dba:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401dbe:	d1c0      	bne.n	401d42 <__aeabi_ddiv+0x82>
  401dc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401dc4:	d10b      	bne.n	401dde <__aeabi_ddiv+0x11e>
  401dc6:	ea41 0100 	orr.w	r1, r1, r0
  401dca:	f04f 0000 	mov.w	r0, #0
  401dce:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401dd2:	e7b6      	b.n	401d42 <__aeabi_ddiv+0x82>
  401dd4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401dd8:	bf04      	itt	eq
  401dda:	4301      	orreq	r1, r0
  401ddc:	2000      	moveq	r0, #0
  401dde:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401de2:	bf88      	it	hi
  401de4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401de8:	f63f aeaf 	bhi.w	401b4a <__aeabi_dmul+0xde>
  401dec:	ebb5 0c03 	subs.w	ip, r5, r3
  401df0:	bf04      	itt	eq
  401df2:	ebb6 0c02 	subseq.w	ip, r6, r2
  401df6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401dfa:	f150 0000 	adcs.w	r0, r0, #0
  401dfe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401e02:	bd70      	pop	{r4, r5, r6, pc}
  401e04:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401e08:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401e0c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401e10:	bfc2      	ittt	gt
  401e12:	ebd4 050c 	rsbsgt	r5, r4, ip
  401e16:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401e1a:	bd70      	popgt	{r4, r5, r6, pc}
  401e1c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e20:	f04f 0e00 	mov.w	lr, #0
  401e24:	3c01      	subs	r4, #1
  401e26:	e690      	b.n	401b4a <__aeabi_dmul+0xde>
  401e28:	ea45 0e06 	orr.w	lr, r5, r6
  401e2c:	e68d      	b.n	401b4a <__aeabi_dmul+0xde>
  401e2e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401e32:	ea94 0f0c 	teq	r4, ip
  401e36:	bf08      	it	eq
  401e38:	ea95 0f0c 	teqeq	r5, ip
  401e3c:	f43f af3b 	beq.w	401cb6 <__aeabi_dmul+0x24a>
  401e40:	ea94 0f0c 	teq	r4, ip
  401e44:	d10a      	bne.n	401e5c <__aeabi_ddiv+0x19c>
  401e46:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401e4a:	f47f af34 	bne.w	401cb6 <__aeabi_dmul+0x24a>
  401e4e:	ea95 0f0c 	teq	r5, ip
  401e52:	f47f af25 	bne.w	401ca0 <__aeabi_dmul+0x234>
  401e56:	4610      	mov	r0, r2
  401e58:	4619      	mov	r1, r3
  401e5a:	e72c      	b.n	401cb6 <__aeabi_dmul+0x24a>
  401e5c:	ea95 0f0c 	teq	r5, ip
  401e60:	d106      	bne.n	401e70 <__aeabi_ddiv+0x1b0>
  401e62:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401e66:	f43f aefd 	beq.w	401c64 <__aeabi_dmul+0x1f8>
  401e6a:	4610      	mov	r0, r2
  401e6c:	4619      	mov	r1, r3
  401e6e:	e722      	b.n	401cb6 <__aeabi_dmul+0x24a>
  401e70:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401e74:	bf18      	it	ne
  401e76:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401e7a:	f47f aec5 	bne.w	401c08 <__aeabi_dmul+0x19c>
  401e7e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401e82:	f47f af0d 	bne.w	401ca0 <__aeabi_dmul+0x234>
  401e86:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401e8a:	f47f aeeb 	bne.w	401c64 <__aeabi_dmul+0x1f8>
  401e8e:	e712      	b.n	401cb6 <__aeabi_dmul+0x24a>

00401e90 <__libc_init_array>:
  401e90:	b570      	push	{r4, r5, r6, lr}
  401e92:	4e0f      	ldr	r6, [pc, #60]	; (401ed0 <__libc_init_array+0x40>)
  401e94:	4d0f      	ldr	r5, [pc, #60]	; (401ed4 <__libc_init_array+0x44>)
  401e96:	1b76      	subs	r6, r6, r5
  401e98:	10b6      	asrs	r6, r6, #2
  401e9a:	bf18      	it	ne
  401e9c:	2400      	movne	r4, #0
  401e9e:	d005      	beq.n	401eac <__libc_init_array+0x1c>
  401ea0:	3401      	adds	r4, #1
  401ea2:	f855 3b04 	ldr.w	r3, [r5], #4
  401ea6:	4798      	blx	r3
  401ea8:	42a6      	cmp	r6, r4
  401eaa:	d1f9      	bne.n	401ea0 <__libc_init_array+0x10>
  401eac:	4e0a      	ldr	r6, [pc, #40]	; (401ed8 <__libc_init_array+0x48>)
  401eae:	4d0b      	ldr	r5, [pc, #44]	; (401edc <__libc_init_array+0x4c>)
  401eb0:	1b76      	subs	r6, r6, r5
  401eb2:	f005 fa8d 	bl	4073d0 <_init>
  401eb6:	10b6      	asrs	r6, r6, #2
  401eb8:	bf18      	it	ne
  401eba:	2400      	movne	r4, #0
  401ebc:	d006      	beq.n	401ecc <__libc_init_array+0x3c>
  401ebe:	3401      	adds	r4, #1
  401ec0:	f855 3b04 	ldr.w	r3, [r5], #4
  401ec4:	4798      	blx	r3
  401ec6:	42a6      	cmp	r6, r4
  401ec8:	d1f9      	bne.n	401ebe <__libc_init_array+0x2e>
  401eca:	bd70      	pop	{r4, r5, r6, pc}
  401ecc:	bd70      	pop	{r4, r5, r6, pc}
  401ece:	bf00      	nop
  401ed0:	004073dc 	.word	0x004073dc
  401ed4:	004073dc 	.word	0x004073dc
  401ed8:	004073e4 	.word	0x004073e4
  401edc:	004073dc 	.word	0x004073dc

00401ee0 <memset>:
  401ee0:	b470      	push	{r4, r5, r6}
  401ee2:	0786      	lsls	r6, r0, #30
  401ee4:	d046      	beq.n	401f74 <memset+0x94>
  401ee6:	1e54      	subs	r4, r2, #1
  401ee8:	2a00      	cmp	r2, #0
  401eea:	d041      	beq.n	401f70 <memset+0x90>
  401eec:	b2ca      	uxtb	r2, r1
  401eee:	4603      	mov	r3, r0
  401ef0:	e002      	b.n	401ef8 <memset+0x18>
  401ef2:	f114 34ff 	adds.w	r4, r4, #4294967295
  401ef6:	d33b      	bcc.n	401f70 <memset+0x90>
  401ef8:	f803 2b01 	strb.w	r2, [r3], #1
  401efc:	079d      	lsls	r5, r3, #30
  401efe:	d1f8      	bne.n	401ef2 <memset+0x12>
  401f00:	2c03      	cmp	r4, #3
  401f02:	d92e      	bls.n	401f62 <memset+0x82>
  401f04:	b2cd      	uxtb	r5, r1
  401f06:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401f0a:	2c0f      	cmp	r4, #15
  401f0c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401f10:	d919      	bls.n	401f46 <memset+0x66>
  401f12:	f103 0210 	add.w	r2, r3, #16
  401f16:	4626      	mov	r6, r4
  401f18:	3e10      	subs	r6, #16
  401f1a:	2e0f      	cmp	r6, #15
  401f1c:	f842 5c10 	str.w	r5, [r2, #-16]
  401f20:	f842 5c0c 	str.w	r5, [r2, #-12]
  401f24:	f842 5c08 	str.w	r5, [r2, #-8]
  401f28:	f842 5c04 	str.w	r5, [r2, #-4]
  401f2c:	f102 0210 	add.w	r2, r2, #16
  401f30:	d8f2      	bhi.n	401f18 <memset+0x38>
  401f32:	f1a4 0210 	sub.w	r2, r4, #16
  401f36:	f022 020f 	bic.w	r2, r2, #15
  401f3a:	f004 040f 	and.w	r4, r4, #15
  401f3e:	3210      	adds	r2, #16
  401f40:	2c03      	cmp	r4, #3
  401f42:	4413      	add	r3, r2
  401f44:	d90d      	bls.n	401f62 <memset+0x82>
  401f46:	461e      	mov	r6, r3
  401f48:	4622      	mov	r2, r4
  401f4a:	3a04      	subs	r2, #4
  401f4c:	2a03      	cmp	r2, #3
  401f4e:	f846 5b04 	str.w	r5, [r6], #4
  401f52:	d8fa      	bhi.n	401f4a <memset+0x6a>
  401f54:	1f22      	subs	r2, r4, #4
  401f56:	f022 0203 	bic.w	r2, r2, #3
  401f5a:	3204      	adds	r2, #4
  401f5c:	4413      	add	r3, r2
  401f5e:	f004 0403 	and.w	r4, r4, #3
  401f62:	b12c      	cbz	r4, 401f70 <memset+0x90>
  401f64:	b2c9      	uxtb	r1, r1
  401f66:	441c      	add	r4, r3
  401f68:	f803 1b01 	strb.w	r1, [r3], #1
  401f6c:	429c      	cmp	r4, r3
  401f6e:	d1fb      	bne.n	401f68 <memset+0x88>
  401f70:	bc70      	pop	{r4, r5, r6}
  401f72:	4770      	bx	lr
  401f74:	4614      	mov	r4, r2
  401f76:	4603      	mov	r3, r0
  401f78:	e7c2      	b.n	401f00 <memset+0x20>
  401f7a:	bf00      	nop

00401f7c <printf>:
  401f7c:	b40f      	push	{r0, r1, r2, r3}
  401f7e:	b500      	push	{lr}
  401f80:	4907      	ldr	r1, [pc, #28]	; (401fa0 <printf+0x24>)
  401f82:	b083      	sub	sp, #12
  401f84:	ab04      	add	r3, sp, #16
  401f86:	6808      	ldr	r0, [r1, #0]
  401f88:	f853 2b04 	ldr.w	r2, [r3], #4
  401f8c:	6881      	ldr	r1, [r0, #8]
  401f8e:	9301      	str	r3, [sp, #4]
  401f90:	f000 f9c4 	bl	40231c <_vfprintf_r>
  401f94:	b003      	add	sp, #12
  401f96:	f85d eb04 	ldr.w	lr, [sp], #4
  401f9a:	b004      	add	sp, #16
  401f9c:	4770      	bx	lr
  401f9e:	bf00      	nop
  401fa0:	20400008 	.word	0x20400008

00401fa4 <putchar>:
  401fa4:	4b03      	ldr	r3, [pc, #12]	; (401fb4 <putchar+0x10>)
  401fa6:	681b      	ldr	r3, [r3, #0]
  401fa8:	4601      	mov	r1, r0
  401faa:	689a      	ldr	r2, [r3, #8]
  401fac:	4618      	mov	r0, r3
  401fae:	f004 b893 	b.w	4060d8 <_putc_r>
  401fb2:	bf00      	nop
  401fb4:	20400008 	.word	0x20400008

00401fb8 <_puts_r>:
  401fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
  401fba:	4605      	mov	r5, r0
  401fbc:	b089      	sub	sp, #36	; 0x24
  401fbe:	4608      	mov	r0, r1
  401fc0:	460c      	mov	r4, r1
  401fc2:	f000 f93d 	bl	402240 <strlen>
  401fc6:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401fc8:	4f21      	ldr	r7, [pc, #132]	; (402050 <_puts_r+0x98>)
  401fca:	9404      	str	r4, [sp, #16]
  401fcc:	2601      	movs	r6, #1
  401fce:	1c44      	adds	r4, r0, #1
  401fd0:	a904      	add	r1, sp, #16
  401fd2:	2202      	movs	r2, #2
  401fd4:	9403      	str	r4, [sp, #12]
  401fd6:	9005      	str	r0, [sp, #20]
  401fd8:	68ac      	ldr	r4, [r5, #8]
  401fda:	9706      	str	r7, [sp, #24]
  401fdc:	9607      	str	r6, [sp, #28]
  401fde:	9101      	str	r1, [sp, #4]
  401fe0:	9202      	str	r2, [sp, #8]
  401fe2:	b353      	cbz	r3, 40203a <_puts_r+0x82>
  401fe4:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401fe6:	f013 0f01 	tst.w	r3, #1
  401fea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401fee:	b29a      	uxth	r2, r3
  401ff0:	d101      	bne.n	401ff6 <_puts_r+0x3e>
  401ff2:	0590      	lsls	r0, r2, #22
  401ff4:	d525      	bpl.n	402042 <_puts_r+0x8a>
  401ff6:	0491      	lsls	r1, r2, #18
  401ff8:	d406      	bmi.n	402008 <_puts_r+0x50>
  401ffa:	6e62      	ldr	r2, [r4, #100]	; 0x64
  401ffc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402000:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  402004:	81a3      	strh	r3, [r4, #12]
  402006:	6662      	str	r2, [r4, #100]	; 0x64
  402008:	4628      	mov	r0, r5
  40200a:	aa01      	add	r2, sp, #4
  40200c:	4621      	mov	r1, r4
  40200e:	f002 ff25 	bl	404e5c <__sfvwrite_r>
  402012:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402014:	2800      	cmp	r0, #0
  402016:	bf0c      	ite	eq
  402018:	250a      	moveq	r5, #10
  40201a:	f04f 35ff 	movne.w	r5, #4294967295
  40201e:	07da      	lsls	r2, r3, #31
  402020:	d402      	bmi.n	402028 <_puts_r+0x70>
  402022:	89a3      	ldrh	r3, [r4, #12]
  402024:	059b      	lsls	r3, r3, #22
  402026:	d502      	bpl.n	40202e <_puts_r+0x76>
  402028:	4628      	mov	r0, r5
  40202a:	b009      	add	sp, #36	; 0x24
  40202c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40202e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402030:	f003 f8ca 	bl	4051c8 <__retarget_lock_release_recursive>
  402034:	4628      	mov	r0, r5
  402036:	b009      	add	sp, #36	; 0x24
  402038:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40203a:	4628      	mov	r0, r5
  40203c:	f002 fd86 	bl	404b4c <__sinit>
  402040:	e7d0      	b.n	401fe4 <_puts_r+0x2c>
  402042:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402044:	f003 f8be 	bl	4051c4 <__retarget_lock_acquire_recursive>
  402048:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40204c:	b29a      	uxth	r2, r3
  40204e:	e7d2      	b.n	401ff6 <_puts_r+0x3e>
  402050:	00407090 	.word	0x00407090

00402054 <puts>:
  402054:	4b02      	ldr	r3, [pc, #8]	; (402060 <puts+0xc>)
  402056:	4601      	mov	r1, r0
  402058:	6818      	ldr	r0, [r3, #0]
  40205a:	f7ff bfad 	b.w	401fb8 <_puts_r>
  40205e:	bf00      	nop
  402060:	20400008 	.word	0x20400008

00402064 <setbuf>:
  402064:	2900      	cmp	r1, #0
  402066:	bf0c      	ite	eq
  402068:	2202      	moveq	r2, #2
  40206a:	2200      	movne	r2, #0
  40206c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402070:	f000 b800 	b.w	402074 <setvbuf>

00402074 <setvbuf>:
  402074:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402078:	4c61      	ldr	r4, [pc, #388]	; (402200 <setvbuf+0x18c>)
  40207a:	6825      	ldr	r5, [r4, #0]
  40207c:	b083      	sub	sp, #12
  40207e:	4604      	mov	r4, r0
  402080:	460f      	mov	r7, r1
  402082:	4690      	mov	r8, r2
  402084:	461e      	mov	r6, r3
  402086:	b115      	cbz	r5, 40208e <setvbuf+0x1a>
  402088:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40208a:	2b00      	cmp	r3, #0
  40208c:	d064      	beq.n	402158 <setvbuf+0xe4>
  40208e:	f1b8 0f02 	cmp.w	r8, #2
  402092:	d006      	beq.n	4020a2 <setvbuf+0x2e>
  402094:	f1b8 0f01 	cmp.w	r8, #1
  402098:	f200 809f 	bhi.w	4021da <setvbuf+0x166>
  40209c:	2e00      	cmp	r6, #0
  40209e:	f2c0 809c 	blt.w	4021da <setvbuf+0x166>
  4020a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4020a4:	07d8      	lsls	r0, r3, #31
  4020a6:	d534      	bpl.n	402112 <setvbuf+0x9e>
  4020a8:	4621      	mov	r1, r4
  4020aa:	4628      	mov	r0, r5
  4020ac:	f002 fcf6 	bl	404a9c <_fflush_r>
  4020b0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4020b2:	b141      	cbz	r1, 4020c6 <setvbuf+0x52>
  4020b4:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4020b8:	4299      	cmp	r1, r3
  4020ba:	d002      	beq.n	4020c2 <setvbuf+0x4e>
  4020bc:	4628      	mov	r0, r5
  4020be:	f002 fde7 	bl	404c90 <_free_r>
  4020c2:	2300      	movs	r3, #0
  4020c4:	6323      	str	r3, [r4, #48]	; 0x30
  4020c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4020ca:	2200      	movs	r2, #0
  4020cc:	61a2      	str	r2, [r4, #24]
  4020ce:	6062      	str	r2, [r4, #4]
  4020d0:	061a      	lsls	r2, r3, #24
  4020d2:	d43a      	bmi.n	40214a <setvbuf+0xd6>
  4020d4:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4020d8:	f023 0303 	bic.w	r3, r3, #3
  4020dc:	f1b8 0f02 	cmp.w	r8, #2
  4020e0:	81a3      	strh	r3, [r4, #12]
  4020e2:	d01d      	beq.n	402120 <setvbuf+0xac>
  4020e4:	ab01      	add	r3, sp, #4
  4020e6:	466a      	mov	r2, sp
  4020e8:	4621      	mov	r1, r4
  4020ea:	4628      	mov	r0, r5
  4020ec:	f003 f86e 	bl	4051cc <__swhatbuf_r>
  4020f0:	89a3      	ldrh	r3, [r4, #12]
  4020f2:	4318      	orrs	r0, r3
  4020f4:	81a0      	strh	r0, [r4, #12]
  4020f6:	2e00      	cmp	r6, #0
  4020f8:	d132      	bne.n	402160 <setvbuf+0xec>
  4020fa:	9e00      	ldr	r6, [sp, #0]
  4020fc:	4630      	mov	r0, r6
  4020fe:	f003 f8dd 	bl	4052bc <malloc>
  402102:	4607      	mov	r7, r0
  402104:	2800      	cmp	r0, #0
  402106:	d06b      	beq.n	4021e0 <setvbuf+0x16c>
  402108:	89a3      	ldrh	r3, [r4, #12]
  40210a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40210e:	81a3      	strh	r3, [r4, #12]
  402110:	e028      	b.n	402164 <setvbuf+0xf0>
  402112:	89a3      	ldrh	r3, [r4, #12]
  402114:	0599      	lsls	r1, r3, #22
  402116:	d4c7      	bmi.n	4020a8 <setvbuf+0x34>
  402118:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40211a:	f003 f853 	bl	4051c4 <__retarget_lock_acquire_recursive>
  40211e:	e7c3      	b.n	4020a8 <setvbuf+0x34>
  402120:	2500      	movs	r5, #0
  402122:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402124:	2600      	movs	r6, #0
  402126:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40212a:	f043 0302 	orr.w	r3, r3, #2
  40212e:	2001      	movs	r0, #1
  402130:	60a6      	str	r6, [r4, #8]
  402132:	07ce      	lsls	r6, r1, #31
  402134:	81a3      	strh	r3, [r4, #12]
  402136:	6022      	str	r2, [r4, #0]
  402138:	6122      	str	r2, [r4, #16]
  40213a:	6160      	str	r0, [r4, #20]
  40213c:	d401      	bmi.n	402142 <setvbuf+0xce>
  40213e:	0598      	lsls	r0, r3, #22
  402140:	d53e      	bpl.n	4021c0 <setvbuf+0x14c>
  402142:	4628      	mov	r0, r5
  402144:	b003      	add	sp, #12
  402146:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40214a:	6921      	ldr	r1, [r4, #16]
  40214c:	4628      	mov	r0, r5
  40214e:	f002 fd9f 	bl	404c90 <_free_r>
  402152:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402156:	e7bd      	b.n	4020d4 <setvbuf+0x60>
  402158:	4628      	mov	r0, r5
  40215a:	f002 fcf7 	bl	404b4c <__sinit>
  40215e:	e796      	b.n	40208e <setvbuf+0x1a>
  402160:	2f00      	cmp	r7, #0
  402162:	d0cb      	beq.n	4020fc <setvbuf+0x88>
  402164:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402166:	2b00      	cmp	r3, #0
  402168:	d033      	beq.n	4021d2 <setvbuf+0x15e>
  40216a:	9b00      	ldr	r3, [sp, #0]
  40216c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402170:	6027      	str	r7, [r4, #0]
  402172:	429e      	cmp	r6, r3
  402174:	bf1c      	itt	ne
  402176:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40217a:	81a2      	strhne	r2, [r4, #12]
  40217c:	f1b8 0f01 	cmp.w	r8, #1
  402180:	bf04      	itt	eq
  402182:	f042 0201 	orreq.w	r2, r2, #1
  402186:	81a2      	strheq	r2, [r4, #12]
  402188:	b292      	uxth	r2, r2
  40218a:	f012 0308 	ands.w	r3, r2, #8
  40218e:	6127      	str	r7, [r4, #16]
  402190:	6166      	str	r6, [r4, #20]
  402192:	d00e      	beq.n	4021b2 <setvbuf+0x13e>
  402194:	07d1      	lsls	r1, r2, #31
  402196:	d51a      	bpl.n	4021ce <setvbuf+0x15a>
  402198:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40219a:	4276      	negs	r6, r6
  40219c:	2300      	movs	r3, #0
  40219e:	f015 0501 	ands.w	r5, r5, #1
  4021a2:	61a6      	str	r6, [r4, #24]
  4021a4:	60a3      	str	r3, [r4, #8]
  4021a6:	d009      	beq.n	4021bc <setvbuf+0x148>
  4021a8:	2500      	movs	r5, #0
  4021aa:	4628      	mov	r0, r5
  4021ac:	b003      	add	sp, #12
  4021ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4021b2:	60a3      	str	r3, [r4, #8]
  4021b4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4021b6:	f015 0501 	ands.w	r5, r5, #1
  4021ba:	d1f5      	bne.n	4021a8 <setvbuf+0x134>
  4021bc:	0593      	lsls	r3, r2, #22
  4021be:	d4c0      	bmi.n	402142 <setvbuf+0xce>
  4021c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4021c2:	f003 f801 	bl	4051c8 <__retarget_lock_release_recursive>
  4021c6:	4628      	mov	r0, r5
  4021c8:	b003      	add	sp, #12
  4021ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4021ce:	60a6      	str	r6, [r4, #8]
  4021d0:	e7f0      	b.n	4021b4 <setvbuf+0x140>
  4021d2:	4628      	mov	r0, r5
  4021d4:	f002 fcba 	bl	404b4c <__sinit>
  4021d8:	e7c7      	b.n	40216a <setvbuf+0xf6>
  4021da:	f04f 35ff 	mov.w	r5, #4294967295
  4021de:	e7b0      	b.n	402142 <setvbuf+0xce>
  4021e0:	f8dd 9000 	ldr.w	r9, [sp]
  4021e4:	45b1      	cmp	r9, r6
  4021e6:	d004      	beq.n	4021f2 <setvbuf+0x17e>
  4021e8:	4648      	mov	r0, r9
  4021ea:	f003 f867 	bl	4052bc <malloc>
  4021ee:	4607      	mov	r7, r0
  4021f0:	b920      	cbnz	r0, 4021fc <setvbuf+0x188>
  4021f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4021f6:	f04f 35ff 	mov.w	r5, #4294967295
  4021fa:	e792      	b.n	402122 <setvbuf+0xae>
  4021fc:	464e      	mov	r6, r9
  4021fe:	e783      	b.n	402108 <setvbuf+0x94>
  402200:	20400008 	.word	0x20400008
	...

00402240 <strlen>:
  402240:	f890 f000 	pld	[r0]
  402244:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402248:	f020 0107 	bic.w	r1, r0, #7
  40224c:	f06f 0c00 	mvn.w	ip, #0
  402250:	f010 0407 	ands.w	r4, r0, #7
  402254:	f891 f020 	pld	[r1, #32]
  402258:	f040 8049 	bne.w	4022ee <strlen+0xae>
  40225c:	f04f 0400 	mov.w	r4, #0
  402260:	f06f 0007 	mvn.w	r0, #7
  402264:	e9d1 2300 	ldrd	r2, r3, [r1]
  402268:	f891 f040 	pld	[r1, #64]	; 0x40
  40226c:	f100 0008 	add.w	r0, r0, #8
  402270:	fa82 f24c 	uadd8	r2, r2, ip
  402274:	faa4 f28c 	sel	r2, r4, ip
  402278:	fa83 f34c 	uadd8	r3, r3, ip
  40227c:	faa2 f38c 	sel	r3, r2, ip
  402280:	bb4b      	cbnz	r3, 4022d6 <strlen+0x96>
  402282:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402286:	fa82 f24c 	uadd8	r2, r2, ip
  40228a:	f100 0008 	add.w	r0, r0, #8
  40228e:	faa4 f28c 	sel	r2, r4, ip
  402292:	fa83 f34c 	uadd8	r3, r3, ip
  402296:	faa2 f38c 	sel	r3, r2, ip
  40229a:	b9e3      	cbnz	r3, 4022d6 <strlen+0x96>
  40229c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4022a0:	fa82 f24c 	uadd8	r2, r2, ip
  4022a4:	f100 0008 	add.w	r0, r0, #8
  4022a8:	faa4 f28c 	sel	r2, r4, ip
  4022ac:	fa83 f34c 	uadd8	r3, r3, ip
  4022b0:	faa2 f38c 	sel	r3, r2, ip
  4022b4:	b97b      	cbnz	r3, 4022d6 <strlen+0x96>
  4022b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4022ba:	f101 0120 	add.w	r1, r1, #32
  4022be:	fa82 f24c 	uadd8	r2, r2, ip
  4022c2:	f100 0008 	add.w	r0, r0, #8
  4022c6:	faa4 f28c 	sel	r2, r4, ip
  4022ca:	fa83 f34c 	uadd8	r3, r3, ip
  4022ce:	faa2 f38c 	sel	r3, r2, ip
  4022d2:	2b00      	cmp	r3, #0
  4022d4:	d0c6      	beq.n	402264 <strlen+0x24>
  4022d6:	2a00      	cmp	r2, #0
  4022d8:	bf04      	itt	eq
  4022da:	3004      	addeq	r0, #4
  4022dc:	461a      	moveq	r2, r3
  4022de:	ba12      	rev	r2, r2
  4022e0:	fab2 f282 	clz	r2, r2
  4022e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4022e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4022ec:	4770      	bx	lr
  4022ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4022f2:	f004 0503 	and.w	r5, r4, #3
  4022f6:	f1c4 0000 	rsb	r0, r4, #0
  4022fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4022fe:	f014 0f04 	tst.w	r4, #4
  402302:	f891 f040 	pld	[r1, #64]	; 0x40
  402306:	fa0c f505 	lsl.w	r5, ip, r5
  40230a:	ea62 0205 	orn	r2, r2, r5
  40230e:	bf1c      	itt	ne
  402310:	ea63 0305 	ornne	r3, r3, r5
  402314:	4662      	movne	r2, ip
  402316:	f04f 0400 	mov.w	r4, #0
  40231a:	e7a9      	b.n	402270 <strlen+0x30>

0040231c <_vfprintf_r>:
  40231c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402320:	b0c1      	sub	sp, #260	; 0x104
  402322:	461d      	mov	r5, r3
  402324:	468a      	mov	sl, r1
  402326:	4691      	mov	r9, r2
  402328:	4604      	mov	r4, r0
  40232a:	9008      	str	r0, [sp, #32]
  40232c:	f002 ff38 	bl	4051a0 <_localeconv_r>
  402330:	6803      	ldr	r3, [r0, #0]
  402332:	9315      	str	r3, [sp, #84]	; 0x54
  402334:	4618      	mov	r0, r3
  402336:	f7ff ff83 	bl	402240 <strlen>
  40233a:	950e      	str	r5, [sp, #56]	; 0x38
  40233c:	9014      	str	r0, [sp, #80]	; 0x50
  40233e:	b11c      	cbz	r4, 402348 <_vfprintf_r+0x2c>
  402340:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  402342:	2b00      	cmp	r3, #0
  402344:	f000 825f 	beq.w	402806 <_vfprintf_r+0x4ea>
  402348:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  40234c:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402350:	f013 0f01 	tst.w	r3, #1
  402354:	b293      	uxth	r3, r2
  402356:	d102      	bne.n	40235e <_vfprintf_r+0x42>
  402358:	0599      	lsls	r1, r3, #22
  40235a:	f140 8275 	bpl.w	402848 <_vfprintf_r+0x52c>
  40235e:	049f      	lsls	r7, r3, #18
  402360:	d40a      	bmi.n	402378 <_vfprintf_r+0x5c>
  402362:	f8da 1064 	ldr.w	r1, [sl, #100]	; 0x64
  402366:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
  40236a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40236e:	f8aa 300c 	strh.w	r3, [sl, #12]
  402372:	f8ca 1064 	str.w	r1, [sl, #100]	; 0x64
  402376:	b29b      	uxth	r3, r3
  402378:	071e      	lsls	r6, r3, #28
  40237a:	f140 8223 	bpl.w	4027c4 <_vfprintf_r+0x4a8>
  40237e:	f8da 2010 	ldr.w	r2, [sl, #16]
  402382:	2a00      	cmp	r2, #0
  402384:	f000 821e 	beq.w	4027c4 <_vfprintf_r+0x4a8>
  402388:	f003 021a 	and.w	r2, r3, #26
  40238c:	2a0a      	cmp	r2, #10
  40238e:	f000 823e 	beq.w	40280e <_vfprintf_r+0x4f2>
  402392:	2300      	movs	r3, #0
  402394:	4618      	mov	r0, r3
  402396:	9311      	str	r3, [sp, #68]	; 0x44
  402398:	9313      	str	r3, [sp, #76]	; 0x4c
  40239a:	9312      	str	r3, [sp, #72]	; 0x48
  40239c:	9325      	str	r3, [sp, #148]	; 0x94
  40239e:	9324      	str	r3, [sp, #144]	; 0x90
  4023a0:	9318      	str	r3, [sp, #96]	; 0x60
  4023a2:	9319      	str	r3, [sp, #100]	; 0x64
  4023a4:	930b      	str	r3, [sp, #44]	; 0x2c
  4023a6:	ab30      	add	r3, sp, #192	; 0xc0
  4023a8:	9323      	str	r3, [sp, #140]	; 0x8c
  4023aa:	4698      	mov	r8, r3
  4023ac:	9016      	str	r0, [sp, #88]	; 0x58
  4023ae:	9017      	str	r0, [sp, #92]	; 0x5c
  4023b0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  4023b4:	f899 3000 	ldrb.w	r3, [r9]
  4023b8:	464c      	mov	r4, r9
  4023ba:	b1eb      	cbz	r3, 4023f8 <_vfprintf_r+0xdc>
  4023bc:	2b25      	cmp	r3, #37	; 0x25
  4023be:	d102      	bne.n	4023c6 <_vfprintf_r+0xaa>
  4023c0:	e01a      	b.n	4023f8 <_vfprintf_r+0xdc>
  4023c2:	2b25      	cmp	r3, #37	; 0x25
  4023c4:	d003      	beq.n	4023ce <_vfprintf_r+0xb2>
  4023c6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4023ca:	2b00      	cmp	r3, #0
  4023cc:	d1f9      	bne.n	4023c2 <_vfprintf_r+0xa6>
  4023ce:	eba4 0509 	sub.w	r5, r4, r9
  4023d2:	b18d      	cbz	r5, 4023f8 <_vfprintf_r+0xdc>
  4023d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4023d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4023d8:	f8c8 9000 	str.w	r9, [r8]
  4023dc:	3301      	adds	r3, #1
  4023de:	442a      	add	r2, r5
  4023e0:	2b07      	cmp	r3, #7
  4023e2:	f8c8 5004 	str.w	r5, [r8, #4]
  4023e6:	9225      	str	r2, [sp, #148]	; 0x94
  4023e8:	9324      	str	r3, [sp, #144]	; 0x90
  4023ea:	f300 8201 	bgt.w	4027f0 <_vfprintf_r+0x4d4>
  4023ee:	f108 0808 	add.w	r8, r8, #8
  4023f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4023f4:	442b      	add	r3, r5
  4023f6:	930b      	str	r3, [sp, #44]	; 0x2c
  4023f8:	7823      	ldrb	r3, [r4, #0]
  4023fa:	2b00      	cmp	r3, #0
  4023fc:	f000 83f0 	beq.w	402be0 <_vfprintf_r+0x8c4>
  402400:	2300      	movs	r3, #0
  402402:	461a      	mov	r2, r3
  402404:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402408:	4619      	mov	r1, r3
  40240a:	930c      	str	r3, [sp, #48]	; 0x30
  40240c:	469b      	mov	fp, r3
  40240e:	7866      	ldrb	r6, [r4, #1]
  402410:	f04f 33ff 	mov.w	r3, #4294967295
  402414:	f104 0901 	add.w	r9, r4, #1
  402418:	9309      	str	r3, [sp, #36]	; 0x24
  40241a:	f109 0901 	add.w	r9, r9, #1
  40241e:	f1a6 0320 	sub.w	r3, r6, #32
  402422:	2b58      	cmp	r3, #88	; 0x58
  402424:	f200 83bf 	bhi.w	402ba6 <_vfprintf_r+0x88a>
  402428:	e8df f013 	tbh	[pc, r3, lsl #1]
  40242c:	03bd02e0 	.word	0x03bd02e0
  402430:	034f03bd 	.word	0x034f03bd
  402434:	03bd03bd 	.word	0x03bd03bd
  402438:	03bd03bd 	.word	0x03bd03bd
  40243c:	03bd03bd 	.word	0x03bd03bd
  402440:	03080354 	.word	0x03080354
  402444:	021a03bd 	.word	0x021a03bd
  402448:	03bd02e8 	.word	0x03bd02e8
  40244c:	033a0303 	.word	0x033a0303
  402450:	033a033a 	.word	0x033a033a
  402454:	033a033a 	.word	0x033a033a
  402458:	033a033a 	.word	0x033a033a
  40245c:	033a033a 	.word	0x033a033a
  402460:	03bd03bd 	.word	0x03bd03bd
  402464:	03bd03bd 	.word	0x03bd03bd
  402468:	03bd03bd 	.word	0x03bd03bd
  40246c:	03bd03bd 	.word	0x03bd03bd
  402470:	03bd03bd 	.word	0x03bd03bd
  402474:	03620349 	.word	0x03620349
  402478:	036203bd 	.word	0x036203bd
  40247c:	03bd03bd 	.word	0x03bd03bd
  402480:	03bd03bd 	.word	0x03bd03bd
  402484:	03bd03a2 	.word	0x03bd03a2
  402488:	006f03bd 	.word	0x006f03bd
  40248c:	03bd03bd 	.word	0x03bd03bd
  402490:	03bd03bd 	.word	0x03bd03bd
  402494:	005903bd 	.word	0x005903bd
  402498:	03bd03bd 	.word	0x03bd03bd
  40249c:	03bd031e 	.word	0x03bd031e
  4024a0:	03bd03bd 	.word	0x03bd03bd
  4024a4:	03bd03bd 	.word	0x03bd03bd
  4024a8:	03bd03bd 	.word	0x03bd03bd
  4024ac:	03bd03bd 	.word	0x03bd03bd
  4024b0:	032403bd 	.word	0x032403bd
  4024b4:	03620273 	.word	0x03620273
  4024b8:	03620362 	.word	0x03620362
  4024bc:	027302b7 	.word	0x027302b7
  4024c0:	03bd03bd 	.word	0x03bd03bd
  4024c4:	03bd02bc 	.word	0x03bd02bc
  4024c8:	007102c9 	.word	0x007102c9
  4024cc:	0247030d 	.word	0x0247030d
  4024d0:	025203bd 	.word	0x025203bd
  4024d4:	005b03bd 	.word	0x005b03bd
  4024d8:	03bd03bd 	.word	0x03bd03bd
  4024dc:	021f      	.short	0x021f
  4024de:	f04b 0b10 	orr.w	fp, fp, #16
  4024e2:	f01b 0f20 	tst.w	fp, #32
  4024e6:	f040 8353 	bne.w	402b90 <_vfprintf_r+0x874>
  4024ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4024ec:	f01b 0f10 	tst.w	fp, #16
  4024f0:	4613      	mov	r3, r2
  4024f2:	f040 85b4 	bne.w	40305e <_vfprintf_r+0xd42>
  4024f6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024fa:	f000 85b0 	beq.w	40305e <_vfprintf_r+0xd42>
  4024fe:	8814      	ldrh	r4, [r2, #0]
  402500:	3204      	adds	r2, #4
  402502:	2500      	movs	r5, #0
  402504:	2301      	movs	r3, #1
  402506:	920e      	str	r2, [sp, #56]	; 0x38
  402508:	e014      	b.n	402534 <_vfprintf_r+0x218>
  40250a:	f04b 0b10 	orr.w	fp, fp, #16
  40250e:	f01b 0320 	ands.w	r3, fp, #32
  402512:	f040 8332 	bne.w	402b7a <_vfprintf_r+0x85e>
  402516:	f01b 0210 	ands.w	r2, fp, #16
  40251a:	f040 8589 	bne.w	403030 <_vfprintf_r+0xd14>
  40251e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402522:	f000 8585 	beq.w	403030 <_vfprintf_r+0xd14>
  402526:	990e      	ldr	r1, [sp, #56]	; 0x38
  402528:	4613      	mov	r3, r2
  40252a:	460a      	mov	r2, r1
  40252c:	3204      	adds	r2, #4
  40252e:	880c      	ldrh	r4, [r1, #0]
  402530:	920e      	str	r2, [sp, #56]	; 0x38
  402532:	2500      	movs	r5, #0
  402534:	f04f 0a00 	mov.w	sl, #0
  402538:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  40253c:	9909      	ldr	r1, [sp, #36]	; 0x24
  40253e:	1c4a      	adds	r2, r1, #1
  402540:	f000 820b 	beq.w	40295a <_vfprintf_r+0x63e>
  402544:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402548:	9206      	str	r2, [sp, #24]
  40254a:	ea54 0205 	orrs.w	r2, r4, r5
  40254e:	f040 820a 	bne.w	402966 <_vfprintf_r+0x64a>
  402552:	2900      	cmp	r1, #0
  402554:	f040 846f 	bne.w	402e36 <_vfprintf_r+0xb1a>
  402558:	2b00      	cmp	r3, #0
  40255a:	f040 852d 	bne.w	402fb8 <_vfprintf_r+0xc9c>
  40255e:	f01b 0301 	ands.w	r3, fp, #1
  402562:	930d      	str	r3, [sp, #52]	; 0x34
  402564:	f000 8668 	beq.w	403238 <_vfprintf_r+0xf1c>
  402568:	af40      	add	r7, sp, #256	; 0x100
  40256a:	2330      	movs	r3, #48	; 0x30
  40256c:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402570:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402572:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402574:	4293      	cmp	r3, r2
  402576:	bfb8      	it	lt
  402578:	4613      	movlt	r3, r2
  40257a:	9307      	str	r3, [sp, #28]
  40257c:	2300      	movs	r3, #0
  40257e:	9310      	str	r3, [sp, #64]	; 0x40
  402580:	f1ba 0f00 	cmp.w	sl, #0
  402584:	d002      	beq.n	40258c <_vfprintf_r+0x270>
  402586:	9b07      	ldr	r3, [sp, #28]
  402588:	3301      	adds	r3, #1
  40258a:	9307      	str	r3, [sp, #28]
  40258c:	9b06      	ldr	r3, [sp, #24]
  40258e:	f013 0302 	ands.w	r3, r3, #2
  402592:	930f      	str	r3, [sp, #60]	; 0x3c
  402594:	d002      	beq.n	40259c <_vfprintf_r+0x280>
  402596:	9b07      	ldr	r3, [sp, #28]
  402598:	3302      	adds	r3, #2
  40259a:	9307      	str	r3, [sp, #28]
  40259c:	9b06      	ldr	r3, [sp, #24]
  40259e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4025a2:	f040 831b 	bne.w	402bdc <_vfprintf_r+0x8c0>
  4025a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4025a8:	9a07      	ldr	r2, [sp, #28]
  4025aa:	eba3 0b02 	sub.w	fp, r3, r2
  4025ae:	f1bb 0f00 	cmp.w	fp, #0
  4025b2:	f340 8313 	ble.w	402bdc <_vfprintf_r+0x8c0>
  4025b6:	f1bb 0f10 	cmp.w	fp, #16
  4025ba:	9925      	ldr	r1, [sp, #148]	; 0x94
  4025bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4025be:	dd28      	ble.n	402612 <_vfprintf_r+0x2f6>
  4025c0:	4643      	mov	r3, r8
  4025c2:	2410      	movs	r4, #16
  4025c4:	46a8      	mov	r8, r5
  4025c6:	f8dd a020 	ldr.w	sl, [sp, #32]
  4025ca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4025cc:	e006      	b.n	4025dc <_vfprintf_r+0x2c0>
  4025ce:	f1ab 0b10 	sub.w	fp, fp, #16
  4025d2:	f1bb 0f10 	cmp.w	fp, #16
  4025d6:	f103 0308 	add.w	r3, r3, #8
  4025da:	dd18      	ble.n	40260e <_vfprintf_r+0x2f2>
  4025dc:	3201      	adds	r2, #1
  4025de:	48b9      	ldr	r0, [pc, #740]	; (4028c4 <_vfprintf_r+0x5a8>)
  4025e0:	9224      	str	r2, [sp, #144]	; 0x90
  4025e2:	3110      	adds	r1, #16
  4025e4:	2a07      	cmp	r2, #7
  4025e6:	9125      	str	r1, [sp, #148]	; 0x94
  4025e8:	e883 0011 	stmia.w	r3, {r0, r4}
  4025ec:	ddef      	ble.n	4025ce <_vfprintf_r+0x2b2>
  4025ee:	aa23      	add	r2, sp, #140	; 0x8c
  4025f0:	4629      	mov	r1, r5
  4025f2:	4650      	mov	r0, sl
  4025f4:	f003 ffe4 	bl	4065c0 <__sprint_r>
  4025f8:	2800      	cmp	r0, #0
  4025fa:	f040 836a 	bne.w	402cd2 <_vfprintf_r+0x9b6>
  4025fe:	f1ab 0b10 	sub.w	fp, fp, #16
  402602:	f1bb 0f10 	cmp.w	fp, #16
  402606:	9925      	ldr	r1, [sp, #148]	; 0x94
  402608:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40260a:	ab30      	add	r3, sp, #192	; 0xc0
  40260c:	dce6      	bgt.n	4025dc <_vfprintf_r+0x2c0>
  40260e:	4645      	mov	r5, r8
  402610:	4698      	mov	r8, r3
  402612:	3201      	adds	r2, #1
  402614:	4bab      	ldr	r3, [pc, #684]	; (4028c4 <_vfprintf_r+0x5a8>)
  402616:	9224      	str	r2, [sp, #144]	; 0x90
  402618:	eb0b 0401 	add.w	r4, fp, r1
  40261c:	2a07      	cmp	r2, #7
  40261e:	9425      	str	r4, [sp, #148]	; 0x94
  402620:	e888 0808 	stmia.w	r8, {r3, fp}
  402624:	f300 84cd 	bgt.w	402fc2 <_vfprintf_r+0xca6>
  402628:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  40262c:	f108 0808 	add.w	r8, r8, #8
  402630:	f1ba 0f00 	cmp.w	sl, #0
  402634:	d00e      	beq.n	402654 <_vfprintf_r+0x338>
  402636:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402638:	3301      	adds	r3, #1
  40263a:	3401      	adds	r4, #1
  40263c:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  402640:	2201      	movs	r2, #1
  402642:	2b07      	cmp	r3, #7
  402644:	9425      	str	r4, [sp, #148]	; 0x94
  402646:	9324      	str	r3, [sp, #144]	; 0x90
  402648:	e888 0006 	stmia.w	r8, {r1, r2}
  40264c:	f300 840a 	bgt.w	402e64 <_vfprintf_r+0xb48>
  402650:	f108 0808 	add.w	r8, r8, #8
  402654:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402656:	b16b      	cbz	r3, 402674 <_vfprintf_r+0x358>
  402658:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40265a:	3301      	adds	r3, #1
  40265c:	3402      	adds	r4, #2
  40265e:	a91c      	add	r1, sp, #112	; 0x70
  402660:	2202      	movs	r2, #2
  402662:	2b07      	cmp	r3, #7
  402664:	9425      	str	r4, [sp, #148]	; 0x94
  402666:	9324      	str	r3, [sp, #144]	; 0x90
  402668:	e888 0006 	stmia.w	r8, {r1, r2}
  40266c:	f300 8406 	bgt.w	402e7c <_vfprintf_r+0xb60>
  402670:	f108 0808 	add.w	r8, r8, #8
  402674:	2d80      	cmp	r5, #128	; 0x80
  402676:	f000 832e 	beq.w	402cd6 <_vfprintf_r+0x9ba>
  40267a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40267c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40267e:	eba3 0a02 	sub.w	sl, r3, r2
  402682:	f1ba 0f00 	cmp.w	sl, #0
  402686:	dd3b      	ble.n	402700 <_vfprintf_r+0x3e4>
  402688:	f1ba 0f10 	cmp.w	sl, #16
  40268c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40268e:	4d8e      	ldr	r5, [pc, #568]	; (4028c8 <_vfprintf_r+0x5ac>)
  402690:	dd2b      	ble.n	4026ea <_vfprintf_r+0x3ce>
  402692:	4642      	mov	r2, r8
  402694:	4621      	mov	r1, r4
  402696:	46b0      	mov	r8, r6
  402698:	f04f 0b10 	mov.w	fp, #16
  40269c:	462e      	mov	r6, r5
  40269e:	9c08      	ldr	r4, [sp, #32]
  4026a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4026a2:	e006      	b.n	4026b2 <_vfprintf_r+0x396>
  4026a4:	f1aa 0a10 	sub.w	sl, sl, #16
  4026a8:	f1ba 0f10 	cmp.w	sl, #16
  4026ac:	f102 0208 	add.w	r2, r2, #8
  4026b0:	dd17      	ble.n	4026e2 <_vfprintf_r+0x3c6>
  4026b2:	3301      	adds	r3, #1
  4026b4:	3110      	adds	r1, #16
  4026b6:	2b07      	cmp	r3, #7
  4026b8:	9125      	str	r1, [sp, #148]	; 0x94
  4026ba:	9324      	str	r3, [sp, #144]	; 0x90
  4026bc:	e882 0840 	stmia.w	r2, {r6, fp}
  4026c0:	ddf0      	ble.n	4026a4 <_vfprintf_r+0x388>
  4026c2:	aa23      	add	r2, sp, #140	; 0x8c
  4026c4:	4629      	mov	r1, r5
  4026c6:	4620      	mov	r0, r4
  4026c8:	f003 ff7a 	bl	4065c0 <__sprint_r>
  4026cc:	2800      	cmp	r0, #0
  4026ce:	f040 8300 	bne.w	402cd2 <_vfprintf_r+0x9b6>
  4026d2:	f1aa 0a10 	sub.w	sl, sl, #16
  4026d6:	f1ba 0f10 	cmp.w	sl, #16
  4026da:	9925      	ldr	r1, [sp, #148]	; 0x94
  4026dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4026de:	aa30      	add	r2, sp, #192	; 0xc0
  4026e0:	dce7      	bgt.n	4026b2 <_vfprintf_r+0x396>
  4026e2:	4635      	mov	r5, r6
  4026e4:	460c      	mov	r4, r1
  4026e6:	4646      	mov	r6, r8
  4026e8:	4690      	mov	r8, r2
  4026ea:	3301      	adds	r3, #1
  4026ec:	4454      	add	r4, sl
  4026ee:	2b07      	cmp	r3, #7
  4026f0:	9425      	str	r4, [sp, #148]	; 0x94
  4026f2:	9324      	str	r3, [sp, #144]	; 0x90
  4026f4:	e888 0420 	stmia.w	r8, {r5, sl}
  4026f8:	f300 83a9 	bgt.w	402e4e <_vfprintf_r+0xb32>
  4026fc:	f108 0808 	add.w	r8, r8, #8
  402700:	9b06      	ldr	r3, [sp, #24]
  402702:	05db      	lsls	r3, r3, #23
  402704:	f100 8285 	bmi.w	402c12 <_vfprintf_r+0x8f6>
  402708:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40270a:	990d      	ldr	r1, [sp, #52]	; 0x34
  40270c:	f8c8 7000 	str.w	r7, [r8]
  402710:	3301      	adds	r3, #1
  402712:	440c      	add	r4, r1
  402714:	2b07      	cmp	r3, #7
  402716:	9425      	str	r4, [sp, #148]	; 0x94
  402718:	f8c8 1004 	str.w	r1, [r8, #4]
  40271c:	9324      	str	r3, [sp, #144]	; 0x90
  40271e:	f300 8375 	bgt.w	402e0c <_vfprintf_r+0xaf0>
  402722:	f108 0808 	add.w	r8, r8, #8
  402726:	9b06      	ldr	r3, [sp, #24]
  402728:	0759      	lsls	r1, r3, #29
  40272a:	d53b      	bpl.n	4027a4 <_vfprintf_r+0x488>
  40272c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40272e:	9a07      	ldr	r2, [sp, #28]
  402730:	1a9d      	subs	r5, r3, r2
  402732:	2d00      	cmp	r5, #0
  402734:	dd36      	ble.n	4027a4 <_vfprintf_r+0x488>
  402736:	2d10      	cmp	r5, #16
  402738:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40273a:	dd21      	ble.n	402780 <_vfprintf_r+0x464>
  40273c:	2610      	movs	r6, #16
  40273e:	9f08      	ldr	r7, [sp, #32]
  402740:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402744:	e004      	b.n	402750 <_vfprintf_r+0x434>
  402746:	3d10      	subs	r5, #16
  402748:	2d10      	cmp	r5, #16
  40274a:	f108 0808 	add.w	r8, r8, #8
  40274e:	dd17      	ble.n	402780 <_vfprintf_r+0x464>
  402750:	3301      	adds	r3, #1
  402752:	4a5c      	ldr	r2, [pc, #368]	; (4028c4 <_vfprintf_r+0x5a8>)
  402754:	9324      	str	r3, [sp, #144]	; 0x90
  402756:	3410      	adds	r4, #16
  402758:	2b07      	cmp	r3, #7
  40275a:	9425      	str	r4, [sp, #148]	; 0x94
  40275c:	e888 0044 	stmia.w	r8, {r2, r6}
  402760:	ddf1      	ble.n	402746 <_vfprintf_r+0x42a>
  402762:	aa23      	add	r2, sp, #140	; 0x8c
  402764:	4651      	mov	r1, sl
  402766:	4638      	mov	r0, r7
  402768:	f003 ff2a 	bl	4065c0 <__sprint_r>
  40276c:	2800      	cmp	r0, #0
  40276e:	f040 823f 	bne.w	402bf0 <_vfprintf_r+0x8d4>
  402772:	3d10      	subs	r5, #16
  402774:	2d10      	cmp	r5, #16
  402776:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402778:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40277a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40277e:	dce7      	bgt.n	402750 <_vfprintf_r+0x434>
  402780:	3301      	adds	r3, #1
  402782:	4a50      	ldr	r2, [pc, #320]	; (4028c4 <_vfprintf_r+0x5a8>)
  402784:	9324      	str	r3, [sp, #144]	; 0x90
  402786:	442c      	add	r4, r5
  402788:	2b07      	cmp	r3, #7
  40278a:	9425      	str	r4, [sp, #148]	; 0x94
  40278c:	e888 0024 	stmia.w	r8, {r2, r5}
  402790:	dd08      	ble.n	4027a4 <_vfprintf_r+0x488>
  402792:	aa23      	add	r2, sp, #140	; 0x8c
  402794:	990a      	ldr	r1, [sp, #40]	; 0x28
  402796:	9808      	ldr	r0, [sp, #32]
  402798:	f003 ff12 	bl	4065c0 <__sprint_r>
  40279c:	2800      	cmp	r0, #0
  40279e:	f040 8347 	bne.w	402e30 <_vfprintf_r+0xb14>
  4027a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4027a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4027a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4027a8:	9907      	ldr	r1, [sp, #28]
  4027aa:	428a      	cmp	r2, r1
  4027ac:	bfac      	ite	ge
  4027ae:	189b      	addge	r3, r3, r2
  4027b0:	185b      	addlt	r3, r3, r1
  4027b2:	930b      	str	r3, [sp, #44]	; 0x2c
  4027b4:	2c00      	cmp	r4, #0
  4027b6:	f040 8333 	bne.w	402e20 <_vfprintf_r+0xb04>
  4027ba:	2300      	movs	r3, #0
  4027bc:	9324      	str	r3, [sp, #144]	; 0x90
  4027be:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4027c2:	e5f7      	b.n	4023b4 <_vfprintf_r+0x98>
  4027c4:	4651      	mov	r1, sl
  4027c6:	9808      	ldr	r0, [sp, #32]
  4027c8:	f001 f896 	bl	4038f8 <__swsetup_r>
  4027cc:	2800      	cmp	r0, #0
  4027ce:	d038      	beq.n	402842 <_vfprintf_r+0x526>
  4027d0:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  4027d4:	07dd      	lsls	r5, r3, #31
  4027d6:	d404      	bmi.n	4027e2 <_vfprintf_r+0x4c6>
  4027d8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  4027dc:	059c      	lsls	r4, r3, #22
  4027de:	f140 85ca 	bpl.w	403376 <_vfprintf_r+0x105a>
  4027e2:	f04f 33ff 	mov.w	r3, #4294967295
  4027e6:	930b      	str	r3, [sp, #44]	; 0x2c
  4027e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4027ea:	b041      	add	sp, #260	; 0x104
  4027ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4027f0:	aa23      	add	r2, sp, #140	; 0x8c
  4027f2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4027f4:	9808      	ldr	r0, [sp, #32]
  4027f6:	f003 fee3 	bl	4065c0 <__sprint_r>
  4027fa:	2800      	cmp	r0, #0
  4027fc:	f040 8318 	bne.w	402e30 <_vfprintf_r+0xb14>
  402800:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402804:	e5f5      	b.n	4023f2 <_vfprintf_r+0xd6>
  402806:	9808      	ldr	r0, [sp, #32]
  402808:	f002 f9a0 	bl	404b4c <__sinit>
  40280c:	e59c      	b.n	402348 <_vfprintf_r+0x2c>
  40280e:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
  402812:	2a00      	cmp	r2, #0
  402814:	f6ff adbd 	blt.w	402392 <_vfprintf_r+0x76>
  402818:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
  40281c:	07d0      	lsls	r0, r2, #31
  40281e:	d405      	bmi.n	40282c <_vfprintf_r+0x510>
  402820:	0599      	lsls	r1, r3, #22
  402822:	d403      	bmi.n	40282c <_vfprintf_r+0x510>
  402824:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  402828:	f002 fcce 	bl	4051c8 <__retarget_lock_release_recursive>
  40282c:	462b      	mov	r3, r5
  40282e:	464a      	mov	r2, r9
  402830:	4651      	mov	r1, sl
  402832:	9808      	ldr	r0, [sp, #32]
  402834:	f001 f81e 	bl	403874 <__sbprintf>
  402838:	900b      	str	r0, [sp, #44]	; 0x2c
  40283a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40283c:	b041      	add	sp, #260	; 0x104
  40283e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402842:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402846:	e59f      	b.n	402388 <_vfprintf_r+0x6c>
  402848:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40284c:	f002 fcba 	bl	4051c4 <__retarget_lock_acquire_recursive>
  402850:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402854:	b293      	uxth	r3, r2
  402856:	e582      	b.n	40235e <_vfprintf_r+0x42>
  402858:	980c      	ldr	r0, [sp, #48]	; 0x30
  40285a:	930e      	str	r3, [sp, #56]	; 0x38
  40285c:	4240      	negs	r0, r0
  40285e:	900c      	str	r0, [sp, #48]	; 0x30
  402860:	f04b 0b04 	orr.w	fp, fp, #4
  402864:	f899 6000 	ldrb.w	r6, [r9]
  402868:	e5d7      	b.n	40241a <_vfprintf_r+0xfe>
  40286a:	2a00      	cmp	r2, #0
  40286c:	f040 87df 	bne.w	40382e <_vfprintf_r+0x1512>
  402870:	4b16      	ldr	r3, [pc, #88]	; (4028cc <_vfprintf_r+0x5b0>)
  402872:	9318      	str	r3, [sp, #96]	; 0x60
  402874:	f01b 0f20 	tst.w	fp, #32
  402878:	f040 84b9 	bne.w	4031ee <_vfprintf_r+0xed2>
  40287c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40287e:	f01b 0f10 	tst.w	fp, #16
  402882:	4613      	mov	r3, r2
  402884:	f040 83dc 	bne.w	403040 <_vfprintf_r+0xd24>
  402888:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40288c:	f000 83d8 	beq.w	403040 <_vfprintf_r+0xd24>
  402890:	3304      	adds	r3, #4
  402892:	8814      	ldrh	r4, [r2, #0]
  402894:	930e      	str	r3, [sp, #56]	; 0x38
  402896:	2500      	movs	r5, #0
  402898:	f01b 0f01 	tst.w	fp, #1
  40289c:	f000 8322 	beq.w	402ee4 <_vfprintf_r+0xbc8>
  4028a0:	ea54 0305 	orrs.w	r3, r4, r5
  4028a4:	f000 831e 	beq.w	402ee4 <_vfprintf_r+0xbc8>
  4028a8:	2330      	movs	r3, #48	; 0x30
  4028aa:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  4028ae:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  4028b2:	f04b 0b02 	orr.w	fp, fp, #2
  4028b6:	2302      	movs	r3, #2
  4028b8:	e63c      	b.n	402534 <_vfprintf_r+0x218>
  4028ba:	f04b 0b20 	orr.w	fp, fp, #32
  4028be:	f899 6000 	ldrb.w	r6, [r9]
  4028c2:	e5aa      	b.n	40241a <_vfprintf_r+0xfe>
  4028c4:	00407190 	.word	0x00407190
  4028c8:	004071a0 	.word	0x004071a0
  4028cc:	00407170 	.word	0x00407170
  4028d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4028d2:	6817      	ldr	r7, [r2, #0]
  4028d4:	2400      	movs	r4, #0
  4028d6:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  4028da:	1d15      	adds	r5, r2, #4
  4028dc:	2f00      	cmp	r7, #0
  4028de:	f000 864e 	beq.w	40357e <_vfprintf_r+0x1262>
  4028e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4028e4:	1c53      	adds	r3, r2, #1
  4028e6:	f000 85cc 	beq.w	403482 <_vfprintf_r+0x1166>
  4028ea:	4621      	mov	r1, r4
  4028ec:	4638      	mov	r0, r7
  4028ee:	f002 ff9f 	bl	405830 <memchr>
  4028f2:	2800      	cmp	r0, #0
  4028f4:	f000 8697 	beq.w	403626 <_vfprintf_r+0x130a>
  4028f8:	1bc3      	subs	r3, r0, r7
  4028fa:	930d      	str	r3, [sp, #52]	; 0x34
  4028fc:	9409      	str	r4, [sp, #36]	; 0x24
  4028fe:	950e      	str	r5, [sp, #56]	; 0x38
  402900:	f8cd b018 	str.w	fp, [sp, #24]
  402904:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402908:	9307      	str	r3, [sp, #28]
  40290a:	9410      	str	r4, [sp, #64]	; 0x40
  40290c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402910:	e636      	b.n	402580 <_vfprintf_r+0x264>
  402912:	2a00      	cmp	r2, #0
  402914:	f040 8796 	bne.w	403844 <_vfprintf_r+0x1528>
  402918:	f01b 0f20 	tst.w	fp, #32
  40291c:	f040 845a 	bne.w	4031d4 <_vfprintf_r+0xeb8>
  402920:	f01b 0f10 	tst.w	fp, #16
  402924:	f040 83a2 	bne.w	40306c <_vfprintf_r+0xd50>
  402928:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40292c:	f000 839e 	beq.w	40306c <_vfprintf_r+0xd50>
  402930:	990e      	ldr	r1, [sp, #56]	; 0x38
  402932:	f9b1 4000 	ldrsh.w	r4, [r1]
  402936:	3104      	adds	r1, #4
  402938:	17e5      	asrs	r5, r4, #31
  40293a:	4622      	mov	r2, r4
  40293c:	462b      	mov	r3, r5
  40293e:	910e      	str	r1, [sp, #56]	; 0x38
  402940:	2a00      	cmp	r2, #0
  402942:	f173 0300 	sbcs.w	r3, r3, #0
  402946:	f2c0 8487 	blt.w	403258 <_vfprintf_r+0xf3c>
  40294a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40294c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402950:	1c4a      	adds	r2, r1, #1
  402952:	f04f 0301 	mov.w	r3, #1
  402956:	f47f adf5 	bne.w	402544 <_vfprintf_r+0x228>
  40295a:	ea54 0205 	orrs.w	r2, r4, r5
  40295e:	f000 826c 	beq.w	402e3a <_vfprintf_r+0xb1e>
  402962:	f8cd b018 	str.w	fp, [sp, #24]
  402966:	2b01      	cmp	r3, #1
  402968:	f000 8308 	beq.w	402f7c <_vfprintf_r+0xc60>
  40296c:	2b02      	cmp	r3, #2
  40296e:	f040 8295 	bne.w	402e9c <_vfprintf_r+0xb80>
  402972:	9818      	ldr	r0, [sp, #96]	; 0x60
  402974:	af30      	add	r7, sp, #192	; 0xc0
  402976:	0923      	lsrs	r3, r4, #4
  402978:	f004 010f 	and.w	r1, r4, #15
  40297c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402980:	092a      	lsrs	r2, r5, #4
  402982:	461c      	mov	r4, r3
  402984:	4615      	mov	r5, r2
  402986:	5c43      	ldrb	r3, [r0, r1]
  402988:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40298c:	ea54 0305 	orrs.w	r3, r4, r5
  402990:	d1f1      	bne.n	402976 <_vfprintf_r+0x65a>
  402992:	ab30      	add	r3, sp, #192	; 0xc0
  402994:	1bdb      	subs	r3, r3, r7
  402996:	930d      	str	r3, [sp, #52]	; 0x34
  402998:	e5ea      	b.n	402570 <_vfprintf_r+0x254>
  40299a:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40299e:	f899 6000 	ldrb.w	r6, [r9]
  4029a2:	e53a      	b.n	40241a <_vfprintf_r+0xfe>
  4029a4:	f899 6000 	ldrb.w	r6, [r9]
  4029a8:	2e6c      	cmp	r6, #108	; 0x6c
  4029aa:	bf03      	ittte	eq
  4029ac:	f899 6001 	ldrbeq.w	r6, [r9, #1]
  4029b0:	f04b 0b20 	orreq.w	fp, fp, #32
  4029b4:	f109 0901 	addeq.w	r9, r9, #1
  4029b8:	f04b 0b10 	orrne.w	fp, fp, #16
  4029bc:	e52d      	b.n	40241a <_vfprintf_r+0xfe>
  4029be:	2a00      	cmp	r2, #0
  4029c0:	f040 874c 	bne.w	40385c <_vfprintf_r+0x1540>
  4029c4:	f01b 0f20 	tst.w	fp, #32
  4029c8:	f040 853f 	bne.w	40344a <_vfprintf_r+0x112e>
  4029cc:	f01b 0f10 	tst.w	fp, #16
  4029d0:	f040 80fc 	bne.w	402bcc <_vfprintf_r+0x8b0>
  4029d4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4029d8:	f000 80f8 	beq.w	402bcc <_vfprintf_r+0x8b0>
  4029dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4029de:	6813      	ldr	r3, [r2, #0]
  4029e0:	3204      	adds	r2, #4
  4029e2:	920e      	str	r2, [sp, #56]	; 0x38
  4029e4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  4029e8:	801a      	strh	r2, [r3, #0]
  4029ea:	e4e3      	b.n	4023b4 <_vfprintf_r+0x98>
  4029ec:	f899 6000 	ldrb.w	r6, [r9]
  4029f0:	2900      	cmp	r1, #0
  4029f2:	f47f ad12 	bne.w	40241a <_vfprintf_r+0xfe>
  4029f6:	2201      	movs	r2, #1
  4029f8:	2120      	movs	r1, #32
  4029fa:	e50e      	b.n	40241a <_vfprintf_r+0xfe>
  4029fc:	f899 6000 	ldrb.w	r6, [r9]
  402a00:	2e2a      	cmp	r6, #42	; 0x2a
  402a02:	f109 0001 	add.w	r0, r9, #1
  402a06:	f000 86f1 	beq.w	4037ec <_vfprintf_r+0x14d0>
  402a0a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402a0e:	2b09      	cmp	r3, #9
  402a10:	4681      	mov	r9, r0
  402a12:	bf98      	it	ls
  402a14:	2000      	movls	r0, #0
  402a16:	f200 863d 	bhi.w	403694 <_vfprintf_r+0x1378>
  402a1a:	f819 6b01 	ldrb.w	r6, [r9], #1
  402a1e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402a22:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402a26:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402a2a:	2b09      	cmp	r3, #9
  402a2c:	d9f5      	bls.n	402a1a <_vfprintf_r+0x6fe>
  402a2e:	9009      	str	r0, [sp, #36]	; 0x24
  402a30:	e4f5      	b.n	40241e <_vfprintf_r+0x102>
  402a32:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402a36:	f899 6000 	ldrb.w	r6, [r9]
  402a3a:	e4ee      	b.n	40241a <_vfprintf_r+0xfe>
  402a3c:	f899 6000 	ldrb.w	r6, [r9]
  402a40:	2201      	movs	r2, #1
  402a42:	212b      	movs	r1, #43	; 0x2b
  402a44:	e4e9      	b.n	40241a <_vfprintf_r+0xfe>
  402a46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402a48:	4bae      	ldr	r3, [pc, #696]	; (402d04 <_vfprintf_r+0x9e8>)
  402a4a:	6814      	ldr	r4, [r2, #0]
  402a4c:	9318      	str	r3, [sp, #96]	; 0x60
  402a4e:	2678      	movs	r6, #120	; 0x78
  402a50:	2330      	movs	r3, #48	; 0x30
  402a52:	3204      	adds	r2, #4
  402a54:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402a58:	f04b 0b02 	orr.w	fp, fp, #2
  402a5c:	920e      	str	r2, [sp, #56]	; 0x38
  402a5e:	2500      	movs	r5, #0
  402a60:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402a64:	2302      	movs	r3, #2
  402a66:	e565      	b.n	402534 <_vfprintf_r+0x218>
  402a68:	2a00      	cmp	r2, #0
  402a6a:	f040 86e4 	bne.w	403836 <_vfprintf_r+0x151a>
  402a6e:	4ba6      	ldr	r3, [pc, #664]	; (402d08 <_vfprintf_r+0x9ec>)
  402a70:	9318      	str	r3, [sp, #96]	; 0x60
  402a72:	e6ff      	b.n	402874 <_vfprintf_r+0x558>
  402a74:	990e      	ldr	r1, [sp, #56]	; 0x38
  402a76:	f8cd b018 	str.w	fp, [sp, #24]
  402a7a:	680a      	ldr	r2, [r1, #0]
  402a7c:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402a80:	2300      	movs	r3, #0
  402a82:	460a      	mov	r2, r1
  402a84:	469a      	mov	sl, r3
  402a86:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402a8a:	3204      	adds	r2, #4
  402a8c:	2301      	movs	r3, #1
  402a8e:	9307      	str	r3, [sp, #28]
  402a90:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  402a94:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  402a98:	920e      	str	r2, [sp, #56]	; 0x38
  402a9a:	930d      	str	r3, [sp, #52]	; 0x34
  402a9c:	af26      	add	r7, sp, #152	; 0x98
  402a9e:	e575      	b.n	40258c <_vfprintf_r+0x270>
  402aa0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402aa4:	2000      	movs	r0, #0
  402aa6:	f819 6b01 	ldrb.w	r6, [r9], #1
  402aaa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402aae:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402ab2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402ab6:	2b09      	cmp	r3, #9
  402ab8:	d9f5      	bls.n	402aa6 <_vfprintf_r+0x78a>
  402aba:	900c      	str	r0, [sp, #48]	; 0x30
  402abc:	e4af      	b.n	40241e <_vfprintf_r+0x102>
  402abe:	2a00      	cmp	r2, #0
  402ac0:	f040 86c8 	bne.w	403854 <_vfprintf_r+0x1538>
  402ac4:	f04b 0b10 	orr.w	fp, fp, #16
  402ac8:	e726      	b.n	402918 <_vfprintf_r+0x5fc>
  402aca:	f04b 0b01 	orr.w	fp, fp, #1
  402ace:	f899 6000 	ldrb.w	r6, [r9]
  402ad2:	e4a2      	b.n	40241a <_vfprintf_r+0xfe>
  402ad4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402ad6:	6823      	ldr	r3, [r4, #0]
  402ad8:	930c      	str	r3, [sp, #48]	; 0x30
  402ada:	4618      	mov	r0, r3
  402adc:	2800      	cmp	r0, #0
  402ade:	4623      	mov	r3, r4
  402ae0:	f103 0304 	add.w	r3, r3, #4
  402ae4:	f6ff aeb8 	blt.w	402858 <_vfprintf_r+0x53c>
  402ae8:	930e      	str	r3, [sp, #56]	; 0x38
  402aea:	f899 6000 	ldrb.w	r6, [r9]
  402aee:	e494      	b.n	40241a <_vfprintf_r+0xfe>
  402af0:	2a00      	cmp	r2, #0
  402af2:	f040 86b7 	bne.w	403864 <_vfprintf_r+0x1548>
  402af6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402af8:	3507      	adds	r5, #7
  402afa:	f025 0307 	bic.w	r3, r5, #7
  402afe:	f103 0208 	add.w	r2, r3, #8
  402b02:	920e      	str	r2, [sp, #56]	; 0x38
  402b04:	681a      	ldr	r2, [r3, #0]
  402b06:	9213      	str	r2, [sp, #76]	; 0x4c
  402b08:	685b      	ldr	r3, [r3, #4]
  402b0a:	9312      	str	r3, [sp, #72]	; 0x48
  402b0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  402b10:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402b14:	4628      	mov	r0, r5
  402b16:	4621      	mov	r1, r4
  402b18:	f04f 32ff 	mov.w	r2, #4294967295
  402b1c:	4b7b      	ldr	r3, [pc, #492]	; (402d0c <_vfprintf_r+0x9f0>)
  402b1e:	f004 f887 	bl	406c30 <__aeabi_dcmpun>
  402b22:	2800      	cmp	r0, #0
  402b24:	f040 83a2 	bne.w	40326c <_vfprintf_r+0xf50>
  402b28:	4628      	mov	r0, r5
  402b2a:	4621      	mov	r1, r4
  402b2c:	f04f 32ff 	mov.w	r2, #4294967295
  402b30:	4b76      	ldr	r3, [pc, #472]	; (402d0c <_vfprintf_r+0x9f0>)
  402b32:	f004 f85f 	bl	406bf4 <__aeabi_dcmple>
  402b36:	2800      	cmp	r0, #0
  402b38:	f040 8398 	bne.w	40326c <_vfprintf_r+0xf50>
  402b3c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402b3e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402b40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402b42:	9912      	ldr	r1, [sp, #72]	; 0x48
  402b44:	f004 f84c 	bl	406be0 <__aeabi_dcmplt>
  402b48:	2800      	cmp	r0, #0
  402b4a:	f040 8435 	bne.w	4033b8 <_vfprintf_r+0x109c>
  402b4e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402b52:	4f6f      	ldr	r7, [pc, #444]	; (402d10 <_vfprintf_r+0x9f4>)
  402b54:	4b6f      	ldr	r3, [pc, #444]	; (402d14 <_vfprintf_r+0x9f8>)
  402b56:	2203      	movs	r2, #3
  402b58:	2100      	movs	r1, #0
  402b5a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402b5e:	9207      	str	r2, [sp, #28]
  402b60:	9109      	str	r1, [sp, #36]	; 0x24
  402b62:	9006      	str	r0, [sp, #24]
  402b64:	2e47      	cmp	r6, #71	; 0x47
  402b66:	bfd8      	it	le
  402b68:	461f      	movle	r7, r3
  402b6a:	920d      	str	r2, [sp, #52]	; 0x34
  402b6c:	9110      	str	r1, [sp, #64]	; 0x40
  402b6e:	e507      	b.n	402580 <_vfprintf_r+0x264>
  402b70:	f04b 0b08 	orr.w	fp, fp, #8
  402b74:	f899 6000 	ldrb.w	r6, [r9]
  402b78:	e44f      	b.n	40241a <_vfprintf_r+0xfe>
  402b7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402b7c:	3507      	adds	r5, #7
  402b7e:	f025 0307 	bic.w	r3, r5, #7
  402b82:	f103 0208 	add.w	r2, r3, #8
  402b86:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b8a:	920e      	str	r2, [sp, #56]	; 0x38
  402b8c:	2300      	movs	r3, #0
  402b8e:	e4d1      	b.n	402534 <_vfprintf_r+0x218>
  402b90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402b92:	3507      	adds	r5, #7
  402b94:	f025 0307 	bic.w	r3, r5, #7
  402b98:	f103 0208 	add.w	r2, r3, #8
  402b9c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402ba0:	920e      	str	r2, [sp, #56]	; 0x38
  402ba2:	2301      	movs	r3, #1
  402ba4:	e4c6      	b.n	402534 <_vfprintf_r+0x218>
  402ba6:	2a00      	cmp	r2, #0
  402ba8:	f040 8650 	bne.w	40384c <_vfprintf_r+0x1530>
  402bac:	b1c6      	cbz	r6, 402be0 <_vfprintf_r+0x8c4>
  402bae:	2300      	movs	r3, #0
  402bb0:	2201      	movs	r2, #1
  402bb2:	469a      	mov	sl, r3
  402bb4:	9207      	str	r2, [sp, #28]
  402bb6:	f88d 6098 	strb.w	r6, [sp, #152]	; 0x98
  402bba:	f8cd b018 	str.w	fp, [sp, #24]
  402bbe:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402bc2:	9309      	str	r3, [sp, #36]	; 0x24
  402bc4:	9310      	str	r3, [sp, #64]	; 0x40
  402bc6:	920d      	str	r2, [sp, #52]	; 0x34
  402bc8:	af26      	add	r7, sp, #152	; 0x98
  402bca:	e4df      	b.n	40258c <_vfprintf_r+0x270>
  402bcc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402bce:	6813      	ldr	r3, [r2, #0]
  402bd0:	3204      	adds	r2, #4
  402bd2:	920e      	str	r2, [sp, #56]	; 0x38
  402bd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402bd6:	601a      	str	r2, [r3, #0]
  402bd8:	f7ff bbec 	b.w	4023b4 <_vfprintf_r+0x98>
  402bdc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402bde:	e527      	b.n	402630 <_vfprintf_r+0x314>
  402be0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  402be2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402be6:	2b00      	cmp	r3, #0
  402be8:	f040 8594 	bne.w	403714 <_vfprintf_r+0x13f8>
  402bec:	2300      	movs	r3, #0
  402bee:	9324      	str	r3, [sp, #144]	; 0x90
  402bf0:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402bf4:	f013 0f01 	tst.w	r3, #1
  402bf8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402bfc:	d102      	bne.n	402c04 <_vfprintf_r+0x8e8>
  402bfe:	059a      	lsls	r2, r3, #22
  402c00:	f140 8249 	bpl.w	403096 <_vfprintf_r+0xd7a>
  402c04:	065b      	lsls	r3, r3, #25
  402c06:	f53f adec 	bmi.w	4027e2 <_vfprintf_r+0x4c6>
  402c0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402c0c:	b041      	add	sp, #260	; 0x104
  402c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c12:	2e65      	cmp	r6, #101	; 0x65
  402c14:	f340 80b2 	ble.w	402d7c <_vfprintf_r+0xa60>
  402c18:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402c1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402c1e:	9912      	ldr	r1, [sp, #72]	; 0x48
  402c20:	f003 ffd4 	bl	406bcc <__aeabi_dcmpeq>
  402c24:	2800      	cmp	r0, #0
  402c26:	f000 8160 	beq.w	402eea <_vfprintf_r+0xbce>
  402c2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c2c:	4a3a      	ldr	r2, [pc, #232]	; (402d18 <_vfprintf_r+0x9fc>)
  402c2e:	f8c8 2000 	str.w	r2, [r8]
  402c32:	3301      	adds	r3, #1
  402c34:	3401      	adds	r4, #1
  402c36:	2201      	movs	r2, #1
  402c38:	2b07      	cmp	r3, #7
  402c3a:	9425      	str	r4, [sp, #148]	; 0x94
  402c3c:	9324      	str	r3, [sp, #144]	; 0x90
  402c3e:	f8c8 2004 	str.w	r2, [r8, #4]
  402c42:	f300 83bf 	bgt.w	4033c4 <_vfprintf_r+0x10a8>
  402c46:	f108 0808 	add.w	r8, r8, #8
  402c4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402c4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c4e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402c50:	4293      	cmp	r3, r2
  402c52:	db03      	blt.n	402c5c <_vfprintf_r+0x940>
  402c54:	9b06      	ldr	r3, [sp, #24]
  402c56:	07df      	lsls	r7, r3, #31
  402c58:	f57f ad65 	bpl.w	402726 <_vfprintf_r+0x40a>
  402c5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c5e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c60:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402c62:	f8c8 2000 	str.w	r2, [r8]
  402c66:	3301      	adds	r3, #1
  402c68:	440c      	add	r4, r1
  402c6a:	2b07      	cmp	r3, #7
  402c6c:	f8c8 1004 	str.w	r1, [r8, #4]
  402c70:	9425      	str	r4, [sp, #148]	; 0x94
  402c72:	9324      	str	r3, [sp, #144]	; 0x90
  402c74:	f300 83f8 	bgt.w	403468 <_vfprintf_r+0x114c>
  402c78:	f108 0808 	add.w	r8, r8, #8
  402c7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c7e:	1e5e      	subs	r6, r3, #1
  402c80:	2e00      	cmp	r6, #0
  402c82:	f77f ad50 	ble.w	402726 <_vfprintf_r+0x40a>
  402c86:	2e10      	cmp	r6, #16
  402c88:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c8a:	4d24      	ldr	r5, [pc, #144]	; (402d1c <_vfprintf_r+0xa00>)
  402c8c:	f340 81dd 	ble.w	40304a <_vfprintf_r+0xd2e>
  402c90:	2710      	movs	r7, #16
  402c92:	f8dd a020 	ldr.w	sl, [sp, #32]
  402c96:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402c9a:	e005      	b.n	402ca8 <_vfprintf_r+0x98c>
  402c9c:	f108 0808 	add.w	r8, r8, #8
  402ca0:	3e10      	subs	r6, #16
  402ca2:	2e10      	cmp	r6, #16
  402ca4:	f340 81d1 	ble.w	40304a <_vfprintf_r+0xd2e>
  402ca8:	3301      	adds	r3, #1
  402caa:	3410      	adds	r4, #16
  402cac:	2b07      	cmp	r3, #7
  402cae:	9425      	str	r4, [sp, #148]	; 0x94
  402cb0:	9324      	str	r3, [sp, #144]	; 0x90
  402cb2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cb6:	ddf1      	ble.n	402c9c <_vfprintf_r+0x980>
  402cb8:	aa23      	add	r2, sp, #140	; 0x8c
  402cba:	4659      	mov	r1, fp
  402cbc:	4650      	mov	r0, sl
  402cbe:	f003 fc7f 	bl	4065c0 <__sprint_r>
  402cc2:	2800      	cmp	r0, #0
  402cc4:	f040 83cd 	bne.w	403462 <_vfprintf_r+0x1146>
  402cc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402cca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402ccc:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402cd0:	e7e6      	b.n	402ca0 <_vfprintf_r+0x984>
  402cd2:	46aa      	mov	sl, r5
  402cd4:	e78c      	b.n	402bf0 <_vfprintf_r+0x8d4>
  402cd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402cd8:	9a07      	ldr	r2, [sp, #28]
  402cda:	eba3 0a02 	sub.w	sl, r3, r2
  402cde:	f1ba 0f00 	cmp.w	sl, #0
  402ce2:	f77f acca 	ble.w	40267a <_vfprintf_r+0x35e>
  402ce6:	f1ba 0f10 	cmp.w	sl, #16
  402cea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cec:	4d0b      	ldr	r5, [pc, #44]	; (402d1c <_vfprintf_r+0xa00>)
  402cee:	dd39      	ble.n	402d64 <_vfprintf_r+0xa48>
  402cf0:	4642      	mov	r2, r8
  402cf2:	4621      	mov	r1, r4
  402cf4:	46b0      	mov	r8, r6
  402cf6:	f04f 0b10 	mov.w	fp, #16
  402cfa:	462e      	mov	r6, r5
  402cfc:	9c08      	ldr	r4, [sp, #32]
  402cfe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402d00:	e015      	b.n	402d2e <_vfprintf_r+0xa12>
  402d02:	bf00      	nop
  402d04:	00407170 	.word	0x00407170
  402d08:	0040715c 	.word	0x0040715c
  402d0c:	7fefffff 	.word	0x7fefffff
  402d10:	00407150 	.word	0x00407150
  402d14:	0040714c 	.word	0x0040714c
  402d18:	0040718c 	.word	0x0040718c
  402d1c:	004071a0 	.word	0x004071a0
  402d20:	f1aa 0a10 	sub.w	sl, sl, #16
  402d24:	f1ba 0f10 	cmp.w	sl, #16
  402d28:	f102 0208 	add.w	r2, r2, #8
  402d2c:	dd16      	ble.n	402d5c <_vfprintf_r+0xa40>
  402d2e:	3301      	adds	r3, #1
  402d30:	3110      	adds	r1, #16
  402d32:	2b07      	cmp	r3, #7
  402d34:	9125      	str	r1, [sp, #148]	; 0x94
  402d36:	9324      	str	r3, [sp, #144]	; 0x90
  402d38:	e882 0840 	stmia.w	r2, {r6, fp}
  402d3c:	ddf0      	ble.n	402d20 <_vfprintf_r+0xa04>
  402d3e:	aa23      	add	r2, sp, #140	; 0x8c
  402d40:	4629      	mov	r1, r5
  402d42:	4620      	mov	r0, r4
  402d44:	f003 fc3c 	bl	4065c0 <__sprint_r>
  402d48:	2800      	cmp	r0, #0
  402d4a:	d1c2      	bne.n	402cd2 <_vfprintf_r+0x9b6>
  402d4c:	f1aa 0a10 	sub.w	sl, sl, #16
  402d50:	f1ba 0f10 	cmp.w	sl, #16
  402d54:	9925      	ldr	r1, [sp, #148]	; 0x94
  402d56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d58:	aa30      	add	r2, sp, #192	; 0xc0
  402d5a:	dce8      	bgt.n	402d2e <_vfprintf_r+0xa12>
  402d5c:	4635      	mov	r5, r6
  402d5e:	460c      	mov	r4, r1
  402d60:	4646      	mov	r6, r8
  402d62:	4690      	mov	r8, r2
  402d64:	3301      	adds	r3, #1
  402d66:	4454      	add	r4, sl
  402d68:	2b07      	cmp	r3, #7
  402d6a:	9425      	str	r4, [sp, #148]	; 0x94
  402d6c:	9324      	str	r3, [sp, #144]	; 0x90
  402d6e:	e888 0420 	stmia.w	r8, {r5, sl}
  402d72:	f300 8264 	bgt.w	40323e <_vfprintf_r+0xf22>
  402d76:	f108 0808 	add.w	r8, r8, #8
  402d7a:	e47e      	b.n	40267a <_vfprintf_r+0x35e>
  402d7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d7e:	9e24      	ldr	r6, [sp, #144]	; 0x90
  402d80:	2b01      	cmp	r3, #1
  402d82:	f340 81fd 	ble.w	403180 <_vfprintf_r+0xe64>
  402d86:	3601      	adds	r6, #1
  402d88:	3401      	adds	r4, #1
  402d8a:	2301      	movs	r3, #1
  402d8c:	2e07      	cmp	r6, #7
  402d8e:	9425      	str	r4, [sp, #148]	; 0x94
  402d90:	9624      	str	r6, [sp, #144]	; 0x90
  402d92:	f8c8 7000 	str.w	r7, [r8]
  402d96:	f8c8 3004 	str.w	r3, [r8, #4]
  402d9a:	f300 820e 	bgt.w	4031ba <_vfprintf_r+0xe9e>
  402d9e:	f108 0808 	add.w	r8, r8, #8
  402da2:	9a14      	ldr	r2, [sp, #80]	; 0x50
  402da4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402da6:	f8c8 3000 	str.w	r3, [r8]
  402daa:	3601      	adds	r6, #1
  402dac:	4414      	add	r4, r2
  402dae:	2e07      	cmp	r6, #7
  402db0:	9425      	str	r4, [sp, #148]	; 0x94
  402db2:	9624      	str	r6, [sp, #144]	; 0x90
  402db4:	f8c8 2004 	str.w	r2, [r8, #4]
  402db8:	f300 822e 	bgt.w	403218 <_vfprintf_r+0xefc>
  402dbc:	f108 0808 	add.w	r8, r8, #8
  402dc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402dc2:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402dc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402dc6:	9912      	ldr	r1, [sp, #72]	; 0x48
  402dc8:	f003 ff00 	bl	406bcc <__aeabi_dcmpeq>
  402dcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402dce:	2800      	cmp	r0, #0
  402dd0:	f040 8106 	bne.w	402fe0 <_vfprintf_r+0xcc4>
  402dd4:	3b01      	subs	r3, #1
  402dd6:	3601      	adds	r6, #1
  402dd8:	3701      	adds	r7, #1
  402dda:	441c      	add	r4, r3
  402ddc:	2e07      	cmp	r6, #7
  402dde:	9624      	str	r6, [sp, #144]	; 0x90
  402de0:	9425      	str	r4, [sp, #148]	; 0x94
  402de2:	f8c8 7000 	str.w	r7, [r8]
  402de6:	f8c8 3004 	str.w	r3, [r8, #4]
  402dea:	f300 81d9 	bgt.w	4031a0 <_vfprintf_r+0xe84>
  402dee:	f108 0808 	add.w	r8, r8, #8
  402df2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402df4:	f8c8 2004 	str.w	r2, [r8, #4]
  402df8:	3601      	adds	r6, #1
  402dfa:	4414      	add	r4, r2
  402dfc:	ab1f      	add	r3, sp, #124	; 0x7c
  402dfe:	2e07      	cmp	r6, #7
  402e00:	9425      	str	r4, [sp, #148]	; 0x94
  402e02:	9624      	str	r6, [sp, #144]	; 0x90
  402e04:	f8c8 3000 	str.w	r3, [r8]
  402e08:	f77f ac8b 	ble.w	402722 <_vfprintf_r+0x406>
  402e0c:	aa23      	add	r2, sp, #140	; 0x8c
  402e0e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e10:	9808      	ldr	r0, [sp, #32]
  402e12:	f003 fbd5 	bl	4065c0 <__sprint_r>
  402e16:	b958      	cbnz	r0, 402e30 <_vfprintf_r+0xb14>
  402e18:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e1a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e1e:	e482      	b.n	402726 <_vfprintf_r+0x40a>
  402e20:	aa23      	add	r2, sp, #140	; 0x8c
  402e22:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e24:	9808      	ldr	r0, [sp, #32]
  402e26:	f003 fbcb 	bl	4065c0 <__sprint_r>
  402e2a:	2800      	cmp	r0, #0
  402e2c:	f43f acc5 	beq.w	4027ba <_vfprintf_r+0x49e>
  402e30:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402e34:	e6dc      	b.n	402bf0 <_vfprintf_r+0x8d4>
  402e36:	f8dd b018 	ldr.w	fp, [sp, #24]
  402e3a:	2b01      	cmp	r3, #1
  402e3c:	f000 8121 	beq.w	403082 <_vfprintf_r+0xd66>
  402e40:	2b02      	cmp	r3, #2
  402e42:	d127      	bne.n	402e94 <_vfprintf_r+0xb78>
  402e44:	f8cd b018 	str.w	fp, [sp, #24]
  402e48:	2400      	movs	r4, #0
  402e4a:	2500      	movs	r5, #0
  402e4c:	e591      	b.n	402972 <_vfprintf_r+0x656>
  402e4e:	aa23      	add	r2, sp, #140	; 0x8c
  402e50:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e52:	9808      	ldr	r0, [sp, #32]
  402e54:	f003 fbb4 	bl	4065c0 <__sprint_r>
  402e58:	2800      	cmp	r0, #0
  402e5a:	d1e9      	bne.n	402e30 <_vfprintf_r+0xb14>
  402e5c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e5e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e62:	e44d      	b.n	402700 <_vfprintf_r+0x3e4>
  402e64:	aa23      	add	r2, sp, #140	; 0x8c
  402e66:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e68:	9808      	ldr	r0, [sp, #32]
  402e6a:	f003 fba9 	bl	4065c0 <__sprint_r>
  402e6e:	2800      	cmp	r0, #0
  402e70:	d1de      	bne.n	402e30 <_vfprintf_r+0xb14>
  402e72:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e74:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e78:	f7ff bbec 	b.w	402654 <_vfprintf_r+0x338>
  402e7c:	aa23      	add	r2, sp, #140	; 0x8c
  402e7e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e80:	9808      	ldr	r0, [sp, #32]
  402e82:	f003 fb9d 	bl	4065c0 <__sprint_r>
  402e86:	2800      	cmp	r0, #0
  402e88:	d1d2      	bne.n	402e30 <_vfprintf_r+0xb14>
  402e8a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e8c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e90:	f7ff bbf0 	b.w	402674 <_vfprintf_r+0x358>
  402e94:	f8cd b018 	str.w	fp, [sp, #24]
  402e98:	2400      	movs	r4, #0
  402e9a:	2500      	movs	r5, #0
  402e9c:	a930      	add	r1, sp, #192	; 0xc0
  402e9e:	e000      	b.n	402ea2 <_vfprintf_r+0xb86>
  402ea0:	4639      	mov	r1, r7
  402ea2:	08e2      	lsrs	r2, r4, #3
  402ea4:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402ea8:	08e8      	lsrs	r0, r5, #3
  402eaa:	f004 0307 	and.w	r3, r4, #7
  402eae:	4605      	mov	r5, r0
  402eb0:	4614      	mov	r4, r2
  402eb2:	3330      	adds	r3, #48	; 0x30
  402eb4:	ea54 0205 	orrs.w	r2, r4, r5
  402eb8:	f801 3c01 	strb.w	r3, [r1, #-1]
  402ebc:	f101 37ff 	add.w	r7, r1, #4294967295
  402ec0:	d1ee      	bne.n	402ea0 <_vfprintf_r+0xb84>
  402ec2:	9a06      	ldr	r2, [sp, #24]
  402ec4:	07d2      	lsls	r2, r2, #31
  402ec6:	f57f ad64 	bpl.w	402992 <_vfprintf_r+0x676>
  402eca:	2b30      	cmp	r3, #48	; 0x30
  402ecc:	f43f ad61 	beq.w	402992 <_vfprintf_r+0x676>
  402ed0:	2330      	movs	r3, #48	; 0x30
  402ed2:	3902      	subs	r1, #2
  402ed4:	f807 3c01 	strb.w	r3, [r7, #-1]
  402ed8:	ab30      	add	r3, sp, #192	; 0xc0
  402eda:	1a5b      	subs	r3, r3, r1
  402edc:	930d      	str	r3, [sp, #52]	; 0x34
  402ede:	460f      	mov	r7, r1
  402ee0:	f7ff bb46 	b.w	402570 <_vfprintf_r+0x254>
  402ee4:	2302      	movs	r3, #2
  402ee6:	f7ff bb25 	b.w	402534 <_vfprintf_r+0x218>
  402eea:	991d      	ldr	r1, [sp, #116]	; 0x74
  402eec:	2900      	cmp	r1, #0
  402eee:	f340 8274 	ble.w	4033da <_vfprintf_r+0x10be>
  402ef2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402ef4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402ef6:	4293      	cmp	r3, r2
  402ef8:	bfa8      	it	ge
  402efa:	4613      	movge	r3, r2
  402efc:	2b00      	cmp	r3, #0
  402efe:	461e      	mov	r6, r3
  402f00:	dd0d      	ble.n	402f1e <_vfprintf_r+0xc02>
  402f02:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f04:	f8c8 7000 	str.w	r7, [r8]
  402f08:	3301      	adds	r3, #1
  402f0a:	4434      	add	r4, r6
  402f0c:	2b07      	cmp	r3, #7
  402f0e:	9425      	str	r4, [sp, #148]	; 0x94
  402f10:	f8c8 6004 	str.w	r6, [r8, #4]
  402f14:	9324      	str	r3, [sp, #144]	; 0x90
  402f16:	f300 8324 	bgt.w	403562 <_vfprintf_r+0x1246>
  402f1a:	f108 0808 	add.w	r8, r8, #8
  402f1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402f20:	2e00      	cmp	r6, #0
  402f22:	bfa8      	it	ge
  402f24:	1b9b      	subge	r3, r3, r6
  402f26:	2b00      	cmp	r3, #0
  402f28:	461e      	mov	r6, r3
  402f2a:	f340 80d0 	ble.w	4030ce <_vfprintf_r+0xdb2>
  402f2e:	2e10      	cmp	r6, #16
  402f30:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f32:	4dc0      	ldr	r5, [pc, #768]	; (403234 <_vfprintf_r+0xf18>)
  402f34:	f340 80b7 	ble.w	4030a6 <_vfprintf_r+0xd8a>
  402f38:	4622      	mov	r2, r4
  402f3a:	f04f 0a10 	mov.w	sl, #16
  402f3e:	f8dd b020 	ldr.w	fp, [sp, #32]
  402f42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402f44:	e005      	b.n	402f52 <_vfprintf_r+0xc36>
  402f46:	f108 0808 	add.w	r8, r8, #8
  402f4a:	3e10      	subs	r6, #16
  402f4c:	2e10      	cmp	r6, #16
  402f4e:	f340 80a9 	ble.w	4030a4 <_vfprintf_r+0xd88>
  402f52:	3301      	adds	r3, #1
  402f54:	3210      	adds	r2, #16
  402f56:	2b07      	cmp	r3, #7
  402f58:	9225      	str	r2, [sp, #148]	; 0x94
  402f5a:	9324      	str	r3, [sp, #144]	; 0x90
  402f5c:	e888 0420 	stmia.w	r8, {r5, sl}
  402f60:	ddf1      	ble.n	402f46 <_vfprintf_r+0xc2a>
  402f62:	aa23      	add	r2, sp, #140	; 0x8c
  402f64:	4621      	mov	r1, r4
  402f66:	4658      	mov	r0, fp
  402f68:	f003 fb2a 	bl	4065c0 <__sprint_r>
  402f6c:	2800      	cmp	r0, #0
  402f6e:	f040 8324 	bne.w	4035ba <_vfprintf_r+0x129e>
  402f72:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402f74:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f76:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402f7a:	e7e6      	b.n	402f4a <_vfprintf_r+0xc2e>
  402f7c:	2d00      	cmp	r5, #0
  402f7e:	bf08      	it	eq
  402f80:	2c0a      	cmpeq	r4, #10
  402f82:	d37c      	bcc.n	40307e <_vfprintf_r+0xd62>
  402f84:	af30      	add	r7, sp, #192	; 0xc0
  402f86:	4620      	mov	r0, r4
  402f88:	4629      	mov	r1, r5
  402f8a:	220a      	movs	r2, #10
  402f8c:	2300      	movs	r3, #0
  402f8e:	f003 fe8d 	bl	406cac <__aeabi_uldivmod>
  402f92:	3230      	adds	r2, #48	; 0x30
  402f94:	f807 2d01 	strb.w	r2, [r7, #-1]!
  402f98:	4620      	mov	r0, r4
  402f9a:	4629      	mov	r1, r5
  402f9c:	2300      	movs	r3, #0
  402f9e:	220a      	movs	r2, #10
  402fa0:	f003 fe84 	bl	406cac <__aeabi_uldivmod>
  402fa4:	4604      	mov	r4, r0
  402fa6:	460d      	mov	r5, r1
  402fa8:	ea54 0305 	orrs.w	r3, r4, r5
  402fac:	d1eb      	bne.n	402f86 <_vfprintf_r+0xc6a>
  402fae:	ab30      	add	r3, sp, #192	; 0xc0
  402fb0:	1bdb      	subs	r3, r3, r7
  402fb2:	930d      	str	r3, [sp, #52]	; 0x34
  402fb4:	f7ff badc 	b.w	402570 <_vfprintf_r+0x254>
  402fb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402fba:	930d      	str	r3, [sp, #52]	; 0x34
  402fbc:	af30      	add	r7, sp, #192	; 0xc0
  402fbe:	f7ff bad7 	b.w	402570 <_vfprintf_r+0x254>
  402fc2:	aa23      	add	r2, sp, #140	; 0x8c
  402fc4:	990a      	ldr	r1, [sp, #40]	; 0x28
  402fc6:	9808      	ldr	r0, [sp, #32]
  402fc8:	f003 fafa 	bl	4065c0 <__sprint_r>
  402fcc:	2800      	cmp	r0, #0
  402fce:	f47f af2f 	bne.w	402e30 <_vfprintf_r+0xb14>
  402fd2:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402fd6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402fd8:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402fdc:	f7ff bb28 	b.w	402630 <_vfprintf_r+0x314>
  402fe0:	1e5f      	subs	r7, r3, #1
  402fe2:	2f00      	cmp	r7, #0
  402fe4:	f77f af05 	ble.w	402df2 <_vfprintf_r+0xad6>
  402fe8:	2f10      	cmp	r7, #16
  402fea:	4d92      	ldr	r5, [pc, #584]	; (403234 <_vfprintf_r+0xf18>)
  402fec:	f340 810a 	ble.w	403204 <_vfprintf_r+0xee8>
  402ff0:	f04f 0a10 	mov.w	sl, #16
  402ff4:	f8dd b020 	ldr.w	fp, [sp, #32]
  402ff8:	e005      	b.n	403006 <_vfprintf_r+0xcea>
  402ffa:	f108 0808 	add.w	r8, r8, #8
  402ffe:	3f10      	subs	r7, #16
  403000:	2f10      	cmp	r7, #16
  403002:	f340 80ff 	ble.w	403204 <_vfprintf_r+0xee8>
  403006:	3601      	adds	r6, #1
  403008:	3410      	adds	r4, #16
  40300a:	2e07      	cmp	r6, #7
  40300c:	9425      	str	r4, [sp, #148]	; 0x94
  40300e:	9624      	str	r6, [sp, #144]	; 0x90
  403010:	e888 0420 	stmia.w	r8, {r5, sl}
  403014:	ddf1      	ble.n	402ffa <_vfprintf_r+0xcde>
  403016:	aa23      	add	r2, sp, #140	; 0x8c
  403018:	990a      	ldr	r1, [sp, #40]	; 0x28
  40301a:	4658      	mov	r0, fp
  40301c:	f003 fad0 	bl	4065c0 <__sprint_r>
  403020:	2800      	cmp	r0, #0
  403022:	f47f af05 	bne.w	402e30 <_vfprintf_r+0xb14>
  403026:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403028:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40302a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40302e:	e7e6      	b.n	402ffe <_vfprintf_r+0xce2>
  403030:	990e      	ldr	r1, [sp, #56]	; 0x38
  403032:	460a      	mov	r2, r1
  403034:	3204      	adds	r2, #4
  403036:	680c      	ldr	r4, [r1, #0]
  403038:	920e      	str	r2, [sp, #56]	; 0x38
  40303a:	2500      	movs	r5, #0
  40303c:	f7ff ba7a 	b.w	402534 <_vfprintf_r+0x218>
  403040:	681c      	ldr	r4, [r3, #0]
  403042:	3304      	adds	r3, #4
  403044:	930e      	str	r3, [sp, #56]	; 0x38
  403046:	2500      	movs	r5, #0
  403048:	e426      	b.n	402898 <_vfprintf_r+0x57c>
  40304a:	3301      	adds	r3, #1
  40304c:	4434      	add	r4, r6
  40304e:	2b07      	cmp	r3, #7
  403050:	9425      	str	r4, [sp, #148]	; 0x94
  403052:	9324      	str	r3, [sp, #144]	; 0x90
  403054:	e888 0060 	stmia.w	r8, {r5, r6}
  403058:	f77f ab63 	ble.w	402722 <_vfprintf_r+0x406>
  40305c:	e6d6      	b.n	402e0c <_vfprintf_r+0xaf0>
  40305e:	3204      	adds	r2, #4
  403060:	681c      	ldr	r4, [r3, #0]
  403062:	920e      	str	r2, [sp, #56]	; 0x38
  403064:	2301      	movs	r3, #1
  403066:	2500      	movs	r5, #0
  403068:	f7ff ba64 	b.w	402534 <_vfprintf_r+0x218>
  40306c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40306e:	6814      	ldr	r4, [r2, #0]
  403070:	4613      	mov	r3, r2
  403072:	3304      	adds	r3, #4
  403074:	17e5      	asrs	r5, r4, #31
  403076:	930e      	str	r3, [sp, #56]	; 0x38
  403078:	4622      	mov	r2, r4
  40307a:	462b      	mov	r3, r5
  40307c:	e460      	b.n	402940 <_vfprintf_r+0x624>
  40307e:	f8dd b018 	ldr.w	fp, [sp, #24]
  403082:	f8cd b018 	str.w	fp, [sp, #24]
  403086:	af40      	add	r7, sp, #256	; 0x100
  403088:	3430      	adds	r4, #48	; 0x30
  40308a:	2301      	movs	r3, #1
  40308c:	f807 4d41 	strb.w	r4, [r7, #-65]!
  403090:	930d      	str	r3, [sp, #52]	; 0x34
  403092:	f7ff ba6d 	b.w	402570 <_vfprintf_r+0x254>
  403096:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40309a:	f002 f895 	bl	4051c8 <__retarget_lock_release_recursive>
  40309e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  4030a2:	e5af      	b.n	402c04 <_vfprintf_r+0x8e8>
  4030a4:	4614      	mov	r4, r2
  4030a6:	3301      	adds	r3, #1
  4030a8:	4434      	add	r4, r6
  4030aa:	2b07      	cmp	r3, #7
  4030ac:	9425      	str	r4, [sp, #148]	; 0x94
  4030ae:	9324      	str	r3, [sp, #144]	; 0x90
  4030b0:	e888 0060 	stmia.w	r8, {r5, r6}
  4030b4:	f340 816d 	ble.w	403392 <_vfprintf_r+0x1076>
  4030b8:	aa23      	add	r2, sp, #140	; 0x8c
  4030ba:	990a      	ldr	r1, [sp, #40]	; 0x28
  4030bc:	9808      	ldr	r0, [sp, #32]
  4030be:	f003 fa7f 	bl	4065c0 <__sprint_r>
  4030c2:	2800      	cmp	r0, #0
  4030c4:	f47f aeb4 	bne.w	402e30 <_vfprintf_r+0xb14>
  4030c8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4030ca:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4030ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4030d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4030d2:	4293      	cmp	r3, r2
  4030d4:	f280 8158 	bge.w	403388 <_vfprintf_r+0x106c>
  4030d8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4030da:	9814      	ldr	r0, [sp, #80]	; 0x50
  4030dc:	9915      	ldr	r1, [sp, #84]	; 0x54
  4030de:	f8c8 1000 	str.w	r1, [r8]
  4030e2:	3201      	adds	r2, #1
  4030e4:	4404      	add	r4, r0
  4030e6:	2a07      	cmp	r2, #7
  4030e8:	9425      	str	r4, [sp, #148]	; 0x94
  4030ea:	f8c8 0004 	str.w	r0, [r8, #4]
  4030ee:	9224      	str	r2, [sp, #144]	; 0x90
  4030f0:	f300 8152 	bgt.w	403398 <_vfprintf_r+0x107c>
  4030f4:	f108 0808 	add.w	r8, r8, #8
  4030f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4030fa:	9910      	ldr	r1, [sp, #64]	; 0x40
  4030fc:	1ad3      	subs	r3, r2, r3
  4030fe:	1a56      	subs	r6, r2, r1
  403100:	429e      	cmp	r6, r3
  403102:	bfa8      	it	ge
  403104:	461e      	movge	r6, r3
  403106:	2e00      	cmp	r6, #0
  403108:	dd0e      	ble.n	403128 <_vfprintf_r+0xe0c>
  40310a:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40310c:	f8c8 6004 	str.w	r6, [r8, #4]
  403110:	3201      	adds	r2, #1
  403112:	440f      	add	r7, r1
  403114:	4434      	add	r4, r6
  403116:	2a07      	cmp	r2, #7
  403118:	f8c8 7000 	str.w	r7, [r8]
  40311c:	9425      	str	r4, [sp, #148]	; 0x94
  40311e:	9224      	str	r2, [sp, #144]	; 0x90
  403120:	f300 823c 	bgt.w	40359c <_vfprintf_r+0x1280>
  403124:	f108 0808 	add.w	r8, r8, #8
  403128:	2e00      	cmp	r6, #0
  40312a:	bfac      	ite	ge
  40312c:	1b9e      	subge	r6, r3, r6
  40312e:	461e      	movlt	r6, r3
  403130:	2e00      	cmp	r6, #0
  403132:	f77f aaf8 	ble.w	402726 <_vfprintf_r+0x40a>
  403136:	2e10      	cmp	r6, #16
  403138:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40313a:	4d3e      	ldr	r5, [pc, #248]	; (403234 <_vfprintf_r+0xf18>)
  40313c:	dd85      	ble.n	40304a <_vfprintf_r+0xd2e>
  40313e:	2710      	movs	r7, #16
  403140:	f8dd a020 	ldr.w	sl, [sp, #32]
  403144:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403148:	e005      	b.n	403156 <_vfprintf_r+0xe3a>
  40314a:	f108 0808 	add.w	r8, r8, #8
  40314e:	3e10      	subs	r6, #16
  403150:	2e10      	cmp	r6, #16
  403152:	f77f af7a 	ble.w	40304a <_vfprintf_r+0xd2e>
  403156:	3301      	adds	r3, #1
  403158:	3410      	adds	r4, #16
  40315a:	2b07      	cmp	r3, #7
  40315c:	9425      	str	r4, [sp, #148]	; 0x94
  40315e:	9324      	str	r3, [sp, #144]	; 0x90
  403160:	e888 00a0 	stmia.w	r8, {r5, r7}
  403164:	ddf1      	ble.n	40314a <_vfprintf_r+0xe2e>
  403166:	aa23      	add	r2, sp, #140	; 0x8c
  403168:	4659      	mov	r1, fp
  40316a:	4650      	mov	r0, sl
  40316c:	f003 fa28 	bl	4065c0 <__sprint_r>
  403170:	2800      	cmp	r0, #0
  403172:	f040 8176 	bne.w	403462 <_vfprintf_r+0x1146>
  403176:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403178:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40317a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40317e:	e7e6      	b.n	40314e <_vfprintf_r+0xe32>
  403180:	9b06      	ldr	r3, [sp, #24]
  403182:	07d8      	lsls	r0, r3, #31
  403184:	f53f adff 	bmi.w	402d86 <_vfprintf_r+0xa6a>
  403188:	3601      	adds	r6, #1
  40318a:	3401      	adds	r4, #1
  40318c:	2301      	movs	r3, #1
  40318e:	2e07      	cmp	r6, #7
  403190:	9425      	str	r4, [sp, #148]	; 0x94
  403192:	9624      	str	r6, [sp, #144]	; 0x90
  403194:	f8c8 7000 	str.w	r7, [r8]
  403198:	f8c8 3004 	str.w	r3, [r8, #4]
  40319c:	f77f ae27 	ble.w	402dee <_vfprintf_r+0xad2>
  4031a0:	aa23      	add	r2, sp, #140	; 0x8c
  4031a2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4031a4:	9808      	ldr	r0, [sp, #32]
  4031a6:	f003 fa0b 	bl	4065c0 <__sprint_r>
  4031aa:	2800      	cmp	r0, #0
  4031ac:	f47f ae40 	bne.w	402e30 <_vfprintf_r+0xb14>
  4031b0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4031b2:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4031b4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4031b8:	e61b      	b.n	402df2 <_vfprintf_r+0xad6>
  4031ba:	aa23      	add	r2, sp, #140	; 0x8c
  4031bc:	990a      	ldr	r1, [sp, #40]	; 0x28
  4031be:	9808      	ldr	r0, [sp, #32]
  4031c0:	f003 f9fe 	bl	4065c0 <__sprint_r>
  4031c4:	2800      	cmp	r0, #0
  4031c6:	f47f ae33 	bne.w	402e30 <_vfprintf_r+0xb14>
  4031ca:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4031cc:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4031ce:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4031d2:	e5e6      	b.n	402da2 <_vfprintf_r+0xa86>
  4031d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4031d6:	3507      	adds	r5, #7
  4031d8:	f025 0507 	bic.w	r5, r5, #7
  4031dc:	e9d5 2300 	ldrd	r2, r3, [r5]
  4031e0:	f105 0108 	add.w	r1, r5, #8
  4031e4:	910e      	str	r1, [sp, #56]	; 0x38
  4031e6:	4614      	mov	r4, r2
  4031e8:	461d      	mov	r5, r3
  4031ea:	f7ff bba9 	b.w	402940 <_vfprintf_r+0x624>
  4031ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4031f0:	3507      	adds	r5, #7
  4031f2:	f025 0307 	bic.w	r3, r5, #7
  4031f6:	f103 0208 	add.w	r2, r3, #8
  4031fa:	920e      	str	r2, [sp, #56]	; 0x38
  4031fc:	e9d3 4500 	ldrd	r4, r5, [r3]
  403200:	f7ff bb4a 	b.w	402898 <_vfprintf_r+0x57c>
  403204:	3601      	adds	r6, #1
  403206:	443c      	add	r4, r7
  403208:	2e07      	cmp	r6, #7
  40320a:	9425      	str	r4, [sp, #148]	; 0x94
  40320c:	9624      	str	r6, [sp, #144]	; 0x90
  40320e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403212:	f77f adec 	ble.w	402dee <_vfprintf_r+0xad2>
  403216:	e7c3      	b.n	4031a0 <_vfprintf_r+0xe84>
  403218:	aa23      	add	r2, sp, #140	; 0x8c
  40321a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40321c:	9808      	ldr	r0, [sp, #32]
  40321e:	f003 f9cf 	bl	4065c0 <__sprint_r>
  403222:	2800      	cmp	r0, #0
  403224:	f47f ae04 	bne.w	402e30 <_vfprintf_r+0xb14>
  403228:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40322a:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40322c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403230:	e5c6      	b.n	402dc0 <_vfprintf_r+0xaa4>
  403232:	bf00      	nop
  403234:	004071a0 	.word	0x004071a0
  403238:	af30      	add	r7, sp, #192	; 0xc0
  40323a:	f7ff b999 	b.w	402570 <_vfprintf_r+0x254>
  40323e:	aa23      	add	r2, sp, #140	; 0x8c
  403240:	990a      	ldr	r1, [sp, #40]	; 0x28
  403242:	9808      	ldr	r0, [sp, #32]
  403244:	f003 f9bc 	bl	4065c0 <__sprint_r>
  403248:	2800      	cmp	r0, #0
  40324a:	f47f adf1 	bne.w	402e30 <_vfprintf_r+0xb14>
  40324e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403250:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403254:	f7ff ba11 	b.w	40267a <_vfprintf_r+0x35e>
  403258:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40325c:	4264      	negs	r4, r4
  40325e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403262:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  403266:	2301      	movs	r3, #1
  403268:	f7ff b968 	b.w	40253c <_vfprintf_r+0x220>
  40326c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  40326e:	4622      	mov	r2, r4
  403270:	4620      	mov	r0, r4
  403272:	9c12      	ldr	r4, [sp, #72]	; 0x48
  403274:	4623      	mov	r3, r4
  403276:	4621      	mov	r1, r4
  403278:	f003 fcda 	bl	406c30 <__aeabi_dcmpun>
  40327c:	2800      	cmp	r0, #0
  40327e:	f040 828c 	bne.w	40379a <_vfprintf_r+0x147e>
  403282:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403284:	3301      	adds	r3, #1
  403286:	f026 0320 	bic.w	r3, r6, #32
  40328a:	930d      	str	r3, [sp, #52]	; 0x34
  40328c:	f000 8091 	beq.w	4033b2 <_vfprintf_r+0x1096>
  403290:	2b47      	cmp	r3, #71	; 0x47
  403292:	d104      	bne.n	40329e <_vfprintf_r+0xf82>
  403294:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403296:	2b00      	cmp	r3, #0
  403298:	bf08      	it	eq
  40329a:	2301      	moveq	r3, #1
  40329c:	9309      	str	r3, [sp, #36]	; 0x24
  40329e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4032a2:	9306      	str	r3, [sp, #24]
  4032a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4032a6:	f1b3 0a00 	subs.w	sl, r3, #0
  4032aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4032ac:	9307      	str	r3, [sp, #28]
  4032ae:	bfbb      	ittet	lt
  4032b0:	4653      	movlt	r3, sl
  4032b2:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  4032b6:	2300      	movge	r3, #0
  4032b8:	232d      	movlt	r3, #45	; 0x2d
  4032ba:	2e66      	cmp	r6, #102	; 0x66
  4032bc:	930f      	str	r3, [sp, #60]	; 0x3c
  4032be:	f000 817f 	beq.w	4035c0 <_vfprintf_r+0x12a4>
  4032c2:	2e46      	cmp	r6, #70	; 0x46
  4032c4:	f000 81d4 	beq.w	403670 <_vfprintf_r+0x1354>
  4032c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4032ca:	9a07      	ldr	r2, [sp, #28]
  4032cc:	2b45      	cmp	r3, #69	; 0x45
  4032ce:	bf0c      	ite	eq
  4032d0:	9b09      	ldreq	r3, [sp, #36]	; 0x24
  4032d2:	9d09      	ldrne	r5, [sp, #36]	; 0x24
  4032d4:	a821      	add	r0, sp, #132	; 0x84
  4032d6:	a91e      	add	r1, sp, #120	; 0x78
  4032d8:	bf08      	it	eq
  4032da:	1c5d      	addeq	r5, r3, #1
  4032dc:	9004      	str	r0, [sp, #16]
  4032de:	9103      	str	r1, [sp, #12]
  4032e0:	a81d      	add	r0, sp, #116	; 0x74
  4032e2:	2102      	movs	r1, #2
  4032e4:	9002      	str	r0, [sp, #8]
  4032e6:	4653      	mov	r3, sl
  4032e8:	9501      	str	r5, [sp, #4]
  4032ea:	9100      	str	r1, [sp, #0]
  4032ec:	9808      	ldr	r0, [sp, #32]
  4032ee:	f000 fc0b 	bl	403b08 <_dtoa_r>
  4032f2:	2e67      	cmp	r6, #103	; 0x67
  4032f4:	4607      	mov	r7, r0
  4032f6:	f040 81af 	bne.w	403658 <_vfprintf_r+0x133c>
  4032fa:	f01b 0f01 	tst.w	fp, #1
  4032fe:	f000 8213 	beq.w	403728 <_vfprintf_r+0x140c>
  403302:	197c      	adds	r4, r7, r5
  403304:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403306:	9807      	ldr	r0, [sp, #28]
  403308:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40330a:	4651      	mov	r1, sl
  40330c:	f003 fc5e 	bl	406bcc <__aeabi_dcmpeq>
  403310:	2800      	cmp	r0, #0
  403312:	f040 8132 	bne.w	40357a <_vfprintf_r+0x125e>
  403316:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403318:	42a3      	cmp	r3, r4
  40331a:	d206      	bcs.n	40332a <_vfprintf_r+0x100e>
  40331c:	2130      	movs	r1, #48	; 0x30
  40331e:	1c5a      	adds	r2, r3, #1
  403320:	9221      	str	r2, [sp, #132]	; 0x84
  403322:	7019      	strb	r1, [r3, #0]
  403324:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403326:	429c      	cmp	r4, r3
  403328:	d8f9      	bhi.n	40331e <_vfprintf_r+0x1002>
  40332a:	1bdb      	subs	r3, r3, r7
  40332c:	9311      	str	r3, [sp, #68]	; 0x44
  40332e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403330:	2b47      	cmp	r3, #71	; 0x47
  403332:	f000 80b9 	beq.w	4034a8 <_vfprintf_r+0x118c>
  403336:	2e65      	cmp	r6, #101	; 0x65
  403338:	f340 8276 	ble.w	403828 <_vfprintf_r+0x150c>
  40333c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40333e:	9310      	str	r3, [sp, #64]	; 0x40
  403340:	2e66      	cmp	r6, #102	; 0x66
  403342:	f000 8162 	beq.w	40360a <_vfprintf_r+0x12ee>
  403346:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403348:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40334a:	4619      	mov	r1, r3
  40334c:	4291      	cmp	r1, r2
  40334e:	f300 814f 	bgt.w	4035f0 <_vfprintf_r+0x12d4>
  403352:	f01b 0f01 	tst.w	fp, #1
  403356:	f040 8209 	bne.w	40376c <_vfprintf_r+0x1450>
  40335a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40335e:	9307      	str	r3, [sp, #28]
  403360:	920d      	str	r2, [sp, #52]	; 0x34
  403362:	2667      	movs	r6, #103	; 0x67
  403364:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403366:	2b00      	cmp	r3, #0
  403368:	f040 8096 	bne.w	403498 <_vfprintf_r+0x117c>
  40336c:	9309      	str	r3, [sp, #36]	; 0x24
  40336e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  403372:	f7ff b905 	b.w	402580 <_vfprintf_r+0x264>
  403376:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40337a:	f001 ff25 	bl	4051c8 <__retarget_lock_release_recursive>
  40337e:	f04f 33ff 	mov.w	r3, #4294967295
  403382:	930b      	str	r3, [sp, #44]	; 0x2c
  403384:	f7ff ba30 	b.w	4027e8 <_vfprintf_r+0x4cc>
  403388:	9a06      	ldr	r2, [sp, #24]
  40338a:	07d5      	lsls	r5, r2, #31
  40338c:	f57f aeb4 	bpl.w	4030f8 <_vfprintf_r+0xddc>
  403390:	e6a2      	b.n	4030d8 <_vfprintf_r+0xdbc>
  403392:	f108 0808 	add.w	r8, r8, #8
  403396:	e69a      	b.n	4030ce <_vfprintf_r+0xdb2>
  403398:	aa23      	add	r2, sp, #140	; 0x8c
  40339a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40339c:	9808      	ldr	r0, [sp, #32]
  40339e:	f003 f90f 	bl	4065c0 <__sprint_r>
  4033a2:	2800      	cmp	r0, #0
  4033a4:	f47f ad44 	bne.w	402e30 <_vfprintf_r+0xb14>
  4033a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4033aa:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4033ac:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4033b0:	e6a2      	b.n	4030f8 <_vfprintf_r+0xddc>
  4033b2:	2306      	movs	r3, #6
  4033b4:	9309      	str	r3, [sp, #36]	; 0x24
  4033b6:	e772      	b.n	40329e <_vfprintf_r+0xf82>
  4033b8:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  4033bc:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4033c0:	f7ff bbc7 	b.w	402b52 <_vfprintf_r+0x836>
  4033c4:	aa23      	add	r2, sp, #140	; 0x8c
  4033c6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4033c8:	9808      	ldr	r0, [sp, #32]
  4033ca:	f003 f8f9 	bl	4065c0 <__sprint_r>
  4033ce:	2800      	cmp	r0, #0
  4033d0:	f47f ad2e 	bne.w	402e30 <_vfprintf_r+0xb14>
  4033d4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4033d8:	e437      	b.n	402c4a <_vfprintf_r+0x92e>
  4033da:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033dc:	4ab4      	ldr	r2, [pc, #720]	; (4036b0 <_vfprintf_r+0x1394>)
  4033de:	f8c8 2000 	str.w	r2, [r8]
  4033e2:	3301      	adds	r3, #1
  4033e4:	3401      	adds	r4, #1
  4033e6:	2201      	movs	r2, #1
  4033e8:	2b07      	cmp	r3, #7
  4033ea:	9425      	str	r4, [sp, #148]	; 0x94
  4033ec:	9324      	str	r3, [sp, #144]	; 0x90
  4033ee:	f8c8 2004 	str.w	r2, [r8, #4]
  4033f2:	f300 8124 	bgt.w	40363e <_vfprintf_r+0x1322>
  4033f6:	f108 0808 	add.w	r8, r8, #8
  4033fa:	b929      	cbnz	r1, 403408 <_vfprintf_r+0x10ec>
  4033fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033fe:	b91b      	cbnz	r3, 403408 <_vfprintf_r+0x10ec>
  403400:	9b06      	ldr	r3, [sp, #24]
  403402:	07de      	lsls	r6, r3, #31
  403404:	f57f a98f 	bpl.w	402726 <_vfprintf_r+0x40a>
  403408:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40340a:	9814      	ldr	r0, [sp, #80]	; 0x50
  40340c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40340e:	f8c8 2000 	str.w	r2, [r8]
  403412:	3301      	adds	r3, #1
  403414:	4602      	mov	r2, r0
  403416:	4422      	add	r2, r4
  403418:	2b07      	cmp	r3, #7
  40341a:	9225      	str	r2, [sp, #148]	; 0x94
  40341c:	f8c8 0004 	str.w	r0, [r8, #4]
  403420:	9324      	str	r3, [sp, #144]	; 0x90
  403422:	f300 8169 	bgt.w	4036f8 <_vfprintf_r+0x13dc>
  403426:	f108 0808 	add.w	r8, r8, #8
  40342a:	2900      	cmp	r1, #0
  40342c:	f2c0 8136 	blt.w	40369c <_vfprintf_r+0x1380>
  403430:	9911      	ldr	r1, [sp, #68]	; 0x44
  403432:	f8c8 7000 	str.w	r7, [r8]
  403436:	3301      	adds	r3, #1
  403438:	188c      	adds	r4, r1, r2
  40343a:	2b07      	cmp	r3, #7
  40343c:	9425      	str	r4, [sp, #148]	; 0x94
  40343e:	9324      	str	r3, [sp, #144]	; 0x90
  403440:	f8c8 1004 	str.w	r1, [r8, #4]
  403444:	f77f a96d 	ble.w	402722 <_vfprintf_r+0x406>
  403448:	e4e0      	b.n	402e0c <_vfprintf_r+0xaf0>
  40344a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40344c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40344e:	6813      	ldr	r3, [r2, #0]
  403450:	17cd      	asrs	r5, r1, #31
  403452:	4608      	mov	r0, r1
  403454:	3204      	adds	r2, #4
  403456:	4629      	mov	r1, r5
  403458:	920e      	str	r2, [sp, #56]	; 0x38
  40345a:	e9c3 0100 	strd	r0, r1, [r3]
  40345e:	f7fe bfa9 	b.w	4023b4 <_vfprintf_r+0x98>
  403462:	46da      	mov	sl, fp
  403464:	f7ff bbc4 	b.w	402bf0 <_vfprintf_r+0x8d4>
  403468:	aa23      	add	r2, sp, #140	; 0x8c
  40346a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40346c:	9808      	ldr	r0, [sp, #32]
  40346e:	f003 f8a7 	bl	4065c0 <__sprint_r>
  403472:	2800      	cmp	r0, #0
  403474:	f47f acdc 	bne.w	402e30 <_vfprintf_r+0xb14>
  403478:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40347a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40347e:	f7ff bbfd 	b.w	402c7c <_vfprintf_r+0x960>
  403482:	4638      	mov	r0, r7
  403484:	9409      	str	r4, [sp, #36]	; 0x24
  403486:	f7fe fedb 	bl	402240 <strlen>
  40348a:	950e      	str	r5, [sp, #56]	; 0x38
  40348c:	900d      	str	r0, [sp, #52]	; 0x34
  40348e:	f8cd b018 	str.w	fp, [sp, #24]
  403492:	4603      	mov	r3, r0
  403494:	f7ff ba36 	b.w	402904 <_vfprintf_r+0x5e8>
  403498:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40349c:	2300      	movs	r3, #0
  40349e:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4034a2:	9309      	str	r3, [sp, #36]	; 0x24
  4034a4:	f7ff b86f 	b.w	402586 <_vfprintf_r+0x26a>
  4034a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4034aa:	9310      	str	r3, [sp, #64]	; 0x40
  4034ac:	461a      	mov	r2, r3
  4034ae:	3303      	adds	r3, #3
  4034b0:	db04      	blt.n	4034bc <_vfprintf_r+0x11a0>
  4034b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4034b4:	4619      	mov	r1, r3
  4034b6:	4291      	cmp	r1, r2
  4034b8:	f6bf af45 	bge.w	403346 <_vfprintf_r+0x102a>
  4034bc:	3e02      	subs	r6, #2
  4034be:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4034c0:	f88d 607c 	strb.w	r6, [sp, #124]	; 0x7c
  4034c4:	3b01      	subs	r3, #1
  4034c6:	2b00      	cmp	r3, #0
  4034c8:	931d      	str	r3, [sp, #116]	; 0x74
  4034ca:	bfbd      	ittte	lt
  4034cc:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
  4034ce:	f1c3 0301 	rsblt	r3, r3, #1
  4034d2:	222d      	movlt	r2, #45	; 0x2d
  4034d4:	222b      	movge	r2, #43	; 0x2b
  4034d6:	2b09      	cmp	r3, #9
  4034d8:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  4034dc:	f340 813e 	ble.w	40375c <_vfprintf_r+0x1440>
  4034e0:	f10d 048b 	add.w	r4, sp, #139	; 0x8b
  4034e4:	4620      	mov	r0, r4
  4034e6:	4d73      	ldr	r5, [pc, #460]	; (4036b4 <_vfprintf_r+0x1398>)
  4034e8:	e000      	b.n	4034ec <_vfprintf_r+0x11d0>
  4034ea:	4610      	mov	r0, r2
  4034ec:	fb85 1203 	smull	r1, r2, r5, r3
  4034f0:	17d9      	asrs	r1, r3, #31
  4034f2:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4034f6:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4034fa:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4034fe:	3230      	adds	r2, #48	; 0x30
  403500:	2909      	cmp	r1, #9
  403502:	f800 2c01 	strb.w	r2, [r0, #-1]
  403506:	460b      	mov	r3, r1
  403508:	f100 32ff 	add.w	r2, r0, #4294967295
  40350c:	dced      	bgt.n	4034ea <_vfprintf_r+0x11ce>
  40350e:	3330      	adds	r3, #48	; 0x30
  403510:	3802      	subs	r0, #2
  403512:	b2d9      	uxtb	r1, r3
  403514:	4284      	cmp	r4, r0
  403516:	f802 1c01 	strb.w	r1, [r2, #-1]
  40351a:	f240 8190 	bls.w	40383e <_vfprintf_r+0x1522>
  40351e:	f10d 007e 	add.w	r0, sp, #126	; 0x7e
  403522:	4613      	mov	r3, r2
  403524:	e001      	b.n	40352a <_vfprintf_r+0x120e>
  403526:	f813 1b01 	ldrb.w	r1, [r3], #1
  40352a:	f800 1b01 	strb.w	r1, [r0], #1
  40352e:	42a3      	cmp	r3, r4
  403530:	d1f9      	bne.n	403526 <_vfprintf_r+0x120a>
  403532:	3301      	adds	r3, #1
  403534:	1a9b      	subs	r3, r3, r2
  403536:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  40353a:	4413      	add	r3, r2
  40353c:	aa1f      	add	r2, sp, #124	; 0x7c
  40353e:	1a9b      	subs	r3, r3, r2
  403540:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403542:	9319      	str	r3, [sp, #100]	; 0x64
  403544:	2a01      	cmp	r2, #1
  403546:	4413      	add	r3, r2
  403548:	930d      	str	r3, [sp, #52]	; 0x34
  40354a:	f340 8145 	ble.w	4037d8 <_vfprintf_r+0x14bc>
  40354e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403550:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403552:	4413      	add	r3, r2
  403554:	930d      	str	r3, [sp, #52]	; 0x34
  403556:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40355a:	9307      	str	r3, [sp, #28]
  40355c:	2300      	movs	r3, #0
  40355e:	9310      	str	r3, [sp, #64]	; 0x40
  403560:	e700      	b.n	403364 <_vfprintf_r+0x1048>
  403562:	aa23      	add	r2, sp, #140	; 0x8c
  403564:	990a      	ldr	r1, [sp, #40]	; 0x28
  403566:	9808      	ldr	r0, [sp, #32]
  403568:	f003 f82a 	bl	4065c0 <__sprint_r>
  40356c:	2800      	cmp	r0, #0
  40356e:	f47f ac5f 	bne.w	402e30 <_vfprintf_r+0xb14>
  403572:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403574:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403578:	e4d1      	b.n	402f1e <_vfprintf_r+0xc02>
  40357a:	4623      	mov	r3, r4
  40357c:	e6d5      	b.n	40332a <_vfprintf_r+0x100e>
  40357e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403580:	9710      	str	r7, [sp, #64]	; 0x40
  403582:	2b06      	cmp	r3, #6
  403584:	bf28      	it	cs
  403586:	2306      	movcs	r3, #6
  403588:	9709      	str	r7, [sp, #36]	; 0x24
  40358a:	46ba      	mov	sl, r7
  40358c:	9307      	str	r3, [sp, #28]
  40358e:	950e      	str	r5, [sp, #56]	; 0x38
  403590:	f8cd b018 	str.w	fp, [sp, #24]
  403594:	930d      	str	r3, [sp, #52]	; 0x34
  403596:	4f48      	ldr	r7, [pc, #288]	; (4036b8 <_vfprintf_r+0x139c>)
  403598:	f7fe bff2 	b.w	402580 <_vfprintf_r+0x264>
  40359c:	aa23      	add	r2, sp, #140	; 0x8c
  40359e:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035a0:	9808      	ldr	r0, [sp, #32]
  4035a2:	f003 f80d 	bl	4065c0 <__sprint_r>
  4035a6:	2800      	cmp	r0, #0
  4035a8:	f47f ac42 	bne.w	402e30 <_vfprintf_r+0xb14>
  4035ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4035ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4035b0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4035b2:	1ad3      	subs	r3, r2, r3
  4035b4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4035b8:	e5b6      	b.n	403128 <_vfprintf_r+0xe0c>
  4035ba:	46a2      	mov	sl, r4
  4035bc:	f7ff bb18 	b.w	402bf0 <_vfprintf_r+0x8d4>
  4035c0:	a821      	add	r0, sp, #132	; 0x84
  4035c2:	a91e      	add	r1, sp, #120	; 0x78
  4035c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4035c6:	9004      	str	r0, [sp, #16]
  4035c8:	9103      	str	r1, [sp, #12]
  4035ca:	a81d      	add	r0, sp, #116	; 0x74
  4035cc:	2103      	movs	r1, #3
  4035ce:	9002      	str	r0, [sp, #8]
  4035d0:	9a07      	ldr	r2, [sp, #28]
  4035d2:	9501      	str	r5, [sp, #4]
  4035d4:	4653      	mov	r3, sl
  4035d6:	9100      	str	r1, [sp, #0]
  4035d8:	9808      	ldr	r0, [sp, #32]
  4035da:	f000 fa95 	bl	403b08 <_dtoa_r>
  4035de:	4607      	mov	r7, r0
  4035e0:	1944      	adds	r4, r0, r5
  4035e2:	783b      	ldrb	r3, [r7, #0]
  4035e4:	2b30      	cmp	r3, #48	; 0x30
  4035e6:	f000 80ca 	beq.w	40377e <_vfprintf_r+0x1462>
  4035ea:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4035ec:	442c      	add	r4, r5
  4035ee:	e689      	b.n	403304 <_vfprintf_r+0xfe8>
  4035f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4035f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035f4:	4413      	add	r3, r2
  4035f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4035f8:	930d      	str	r3, [sp, #52]	; 0x34
  4035fa:	2a00      	cmp	r2, #0
  4035fc:	f340 80e4 	ble.w	4037c8 <_vfprintf_r+0x14ac>
  403600:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403604:	9307      	str	r3, [sp, #28]
  403606:	2667      	movs	r6, #103	; 0x67
  403608:	e6ac      	b.n	403364 <_vfprintf_r+0x1048>
  40360a:	2b00      	cmp	r3, #0
  40360c:	f340 80fb 	ble.w	403806 <_vfprintf_r+0x14ea>
  403610:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403612:	2a00      	cmp	r2, #0
  403614:	f040 80ce 	bne.w	4037b4 <_vfprintf_r+0x1498>
  403618:	f01b 0f01 	tst.w	fp, #1
  40361c:	f040 80ca 	bne.w	4037b4 <_vfprintf_r+0x1498>
  403620:	9307      	str	r3, [sp, #28]
  403622:	930d      	str	r3, [sp, #52]	; 0x34
  403624:	e69e      	b.n	403364 <_vfprintf_r+0x1048>
  403626:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403628:	9307      	str	r3, [sp, #28]
  40362a:	930d      	str	r3, [sp, #52]	; 0x34
  40362c:	9009      	str	r0, [sp, #36]	; 0x24
  40362e:	950e      	str	r5, [sp, #56]	; 0x38
  403630:	f8cd b018 	str.w	fp, [sp, #24]
  403634:	9010      	str	r0, [sp, #64]	; 0x40
  403636:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  40363a:	f7fe bfa1 	b.w	402580 <_vfprintf_r+0x264>
  40363e:	aa23      	add	r2, sp, #140	; 0x8c
  403640:	990a      	ldr	r1, [sp, #40]	; 0x28
  403642:	9808      	ldr	r0, [sp, #32]
  403644:	f002 ffbc 	bl	4065c0 <__sprint_r>
  403648:	2800      	cmp	r0, #0
  40364a:	f47f abf1 	bne.w	402e30 <_vfprintf_r+0xb14>
  40364e:	991d      	ldr	r1, [sp, #116]	; 0x74
  403650:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403652:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403656:	e6d0      	b.n	4033fa <_vfprintf_r+0x10de>
  403658:	2e47      	cmp	r6, #71	; 0x47
  40365a:	f47f ae52 	bne.w	403302 <_vfprintf_r+0xfe6>
  40365e:	f01b 0f01 	tst.w	fp, #1
  403662:	f000 80da 	beq.w	40381a <_vfprintf_r+0x14fe>
  403666:	2e46      	cmp	r6, #70	; 0x46
  403668:	eb07 0405 	add.w	r4, r7, r5
  40366c:	d0b9      	beq.n	4035e2 <_vfprintf_r+0x12c6>
  40366e:	e649      	b.n	403304 <_vfprintf_r+0xfe8>
  403670:	a821      	add	r0, sp, #132	; 0x84
  403672:	a91e      	add	r1, sp, #120	; 0x78
  403674:	9c09      	ldr	r4, [sp, #36]	; 0x24
  403676:	9004      	str	r0, [sp, #16]
  403678:	9103      	str	r1, [sp, #12]
  40367a:	a81d      	add	r0, sp, #116	; 0x74
  40367c:	2103      	movs	r1, #3
  40367e:	9002      	str	r0, [sp, #8]
  403680:	9a07      	ldr	r2, [sp, #28]
  403682:	9401      	str	r4, [sp, #4]
  403684:	4653      	mov	r3, sl
  403686:	9100      	str	r1, [sp, #0]
  403688:	9808      	ldr	r0, [sp, #32]
  40368a:	f000 fa3d 	bl	403b08 <_dtoa_r>
  40368e:	4625      	mov	r5, r4
  403690:	4607      	mov	r7, r0
  403692:	e7e8      	b.n	403666 <_vfprintf_r+0x134a>
  403694:	2300      	movs	r3, #0
  403696:	9309      	str	r3, [sp, #36]	; 0x24
  403698:	f7fe bec1 	b.w	40241e <_vfprintf_r+0x102>
  40369c:	424e      	negs	r6, r1
  40369e:	3110      	adds	r1, #16
  4036a0:	4d06      	ldr	r5, [pc, #24]	; (4036bc <_vfprintf_r+0x13a0>)
  4036a2:	da43      	bge.n	40372c <_vfprintf_r+0x1410>
  4036a4:	2410      	movs	r4, #16
  4036a6:	f8dd a020 	ldr.w	sl, [sp, #32]
  4036aa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4036ae:	e00c      	b.n	4036ca <_vfprintf_r+0x13ae>
  4036b0:	0040718c 	.word	0x0040718c
  4036b4:	66666667 	.word	0x66666667
  4036b8:	00407184 	.word	0x00407184
  4036bc:	004071a0 	.word	0x004071a0
  4036c0:	f108 0808 	add.w	r8, r8, #8
  4036c4:	3e10      	subs	r6, #16
  4036c6:	2e10      	cmp	r6, #16
  4036c8:	dd30      	ble.n	40372c <_vfprintf_r+0x1410>
  4036ca:	3301      	adds	r3, #1
  4036cc:	3210      	adds	r2, #16
  4036ce:	2b07      	cmp	r3, #7
  4036d0:	9225      	str	r2, [sp, #148]	; 0x94
  4036d2:	9324      	str	r3, [sp, #144]	; 0x90
  4036d4:	f8c8 5000 	str.w	r5, [r8]
  4036d8:	f8c8 4004 	str.w	r4, [r8, #4]
  4036dc:	ddf0      	ble.n	4036c0 <_vfprintf_r+0x13a4>
  4036de:	aa23      	add	r2, sp, #140	; 0x8c
  4036e0:	4659      	mov	r1, fp
  4036e2:	4650      	mov	r0, sl
  4036e4:	f002 ff6c 	bl	4065c0 <__sprint_r>
  4036e8:	2800      	cmp	r0, #0
  4036ea:	f47f aeba 	bne.w	403462 <_vfprintf_r+0x1146>
  4036ee:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4036f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036f2:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4036f6:	e7e5      	b.n	4036c4 <_vfprintf_r+0x13a8>
  4036f8:	aa23      	add	r2, sp, #140	; 0x8c
  4036fa:	990a      	ldr	r1, [sp, #40]	; 0x28
  4036fc:	9808      	ldr	r0, [sp, #32]
  4036fe:	f002 ff5f 	bl	4065c0 <__sprint_r>
  403702:	2800      	cmp	r0, #0
  403704:	f47f ab94 	bne.w	402e30 <_vfprintf_r+0xb14>
  403708:	991d      	ldr	r1, [sp, #116]	; 0x74
  40370a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40370c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40370e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403712:	e68a      	b.n	40342a <_vfprintf_r+0x110e>
  403714:	9808      	ldr	r0, [sp, #32]
  403716:	aa23      	add	r2, sp, #140	; 0x8c
  403718:	4651      	mov	r1, sl
  40371a:	f002 ff51 	bl	4065c0 <__sprint_r>
  40371e:	2800      	cmp	r0, #0
  403720:	f43f aa64 	beq.w	402bec <_vfprintf_r+0x8d0>
  403724:	f7ff ba64 	b.w	402bf0 <_vfprintf_r+0x8d4>
  403728:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40372a:	e5fe      	b.n	40332a <_vfprintf_r+0x100e>
  40372c:	3301      	adds	r3, #1
  40372e:	4432      	add	r2, r6
  403730:	2b07      	cmp	r3, #7
  403732:	e888 0060 	stmia.w	r8, {r5, r6}
  403736:	9225      	str	r2, [sp, #148]	; 0x94
  403738:	9324      	str	r3, [sp, #144]	; 0x90
  40373a:	f108 0808 	add.w	r8, r8, #8
  40373e:	f77f ae77 	ble.w	403430 <_vfprintf_r+0x1114>
  403742:	aa23      	add	r2, sp, #140	; 0x8c
  403744:	990a      	ldr	r1, [sp, #40]	; 0x28
  403746:	9808      	ldr	r0, [sp, #32]
  403748:	f002 ff3a 	bl	4065c0 <__sprint_r>
  40374c:	2800      	cmp	r0, #0
  40374e:	f47f ab6f 	bne.w	402e30 <_vfprintf_r+0xb14>
  403752:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403754:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403756:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40375a:	e669      	b.n	403430 <_vfprintf_r+0x1114>
  40375c:	3330      	adds	r3, #48	; 0x30
  40375e:	2230      	movs	r2, #48	; 0x30
  403760:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  403764:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  403768:	ab20      	add	r3, sp, #128	; 0x80
  40376a:	e6e7      	b.n	40353c <_vfprintf_r+0x1220>
  40376c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40376e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403770:	4413      	add	r3, r2
  403772:	930d      	str	r3, [sp, #52]	; 0x34
  403774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403778:	9307      	str	r3, [sp, #28]
  40377a:	2667      	movs	r6, #103	; 0x67
  40377c:	e5f2      	b.n	403364 <_vfprintf_r+0x1048>
  40377e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403780:	9807      	ldr	r0, [sp, #28]
  403782:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403784:	4651      	mov	r1, sl
  403786:	f003 fa21 	bl	406bcc <__aeabi_dcmpeq>
  40378a:	2800      	cmp	r0, #0
  40378c:	f47f af2d 	bne.w	4035ea <_vfprintf_r+0x12ce>
  403790:	f1c5 0501 	rsb	r5, r5, #1
  403794:	951d      	str	r5, [sp, #116]	; 0x74
  403796:	442c      	add	r4, r5
  403798:	e5b4      	b.n	403304 <_vfprintf_r+0xfe8>
  40379a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40379c:	4f33      	ldr	r7, [pc, #204]	; (40386c <_vfprintf_r+0x1550>)
  40379e:	2b00      	cmp	r3, #0
  4037a0:	bfb6      	itet	lt
  4037a2:	f04f 0a2d 	movlt.w	sl, #45	; 0x2d
  4037a6:	f89d a06f 	ldrbge.w	sl, [sp, #111]	; 0x6f
  4037aa:	f88d a06f 	strblt.w	sl, [sp, #111]	; 0x6f
  4037ae:	4b30      	ldr	r3, [pc, #192]	; (403870 <_vfprintf_r+0x1554>)
  4037b0:	f7ff b9d1 	b.w	402b56 <_vfprintf_r+0x83a>
  4037b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4037b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4037b8:	4413      	add	r3, r2
  4037ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4037bc:	441a      	add	r2, r3
  4037be:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4037c2:	920d      	str	r2, [sp, #52]	; 0x34
  4037c4:	9307      	str	r3, [sp, #28]
  4037c6:	e5cd      	b.n	403364 <_vfprintf_r+0x1048>
  4037c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4037ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4037cc:	f1c3 0301 	rsb	r3, r3, #1
  4037d0:	441a      	add	r2, r3
  4037d2:	4613      	mov	r3, r2
  4037d4:	920d      	str	r2, [sp, #52]	; 0x34
  4037d6:	e713      	b.n	403600 <_vfprintf_r+0x12e4>
  4037d8:	f01b 0301 	ands.w	r3, fp, #1
  4037dc:	9310      	str	r3, [sp, #64]	; 0x40
  4037de:	f47f aeb6 	bne.w	40354e <_vfprintf_r+0x1232>
  4037e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4037e8:	9307      	str	r3, [sp, #28]
  4037ea:	e5bb      	b.n	403364 <_vfprintf_r+0x1048>
  4037ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4037ee:	f899 6001 	ldrb.w	r6, [r9, #1]
  4037f2:	6823      	ldr	r3, [r4, #0]
  4037f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
  4037f8:	9309      	str	r3, [sp, #36]	; 0x24
  4037fa:	4623      	mov	r3, r4
  4037fc:	3304      	adds	r3, #4
  4037fe:	4681      	mov	r9, r0
  403800:	930e      	str	r3, [sp, #56]	; 0x38
  403802:	f7fe be0a 	b.w	40241a <_vfprintf_r+0xfe>
  403806:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403808:	b913      	cbnz	r3, 403810 <_vfprintf_r+0x14f4>
  40380a:	f01b 0f01 	tst.w	fp, #1
  40380e:	d002      	beq.n	403816 <_vfprintf_r+0x14fa>
  403810:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403812:	3301      	adds	r3, #1
  403814:	e7d1      	b.n	4037ba <_vfprintf_r+0x149e>
  403816:	2301      	movs	r3, #1
  403818:	e702      	b.n	403620 <_vfprintf_r+0x1304>
  40381a:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40381c:	1bdb      	subs	r3, r3, r7
  40381e:	9311      	str	r3, [sp, #68]	; 0x44
  403820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403822:	2b47      	cmp	r3, #71	; 0x47
  403824:	f43f ae40 	beq.w	4034a8 <_vfprintf_r+0x118c>
  403828:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40382a:	9310      	str	r3, [sp, #64]	; 0x40
  40382c:	e647      	b.n	4034be <_vfprintf_r+0x11a2>
  40382e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403832:	f7ff b81d 	b.w	402870 <_vfprintf_r+0x554>
  403836:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40383a:	f7ff b918 	b.w	402a6e <_vfprintf_r+0x752>
  40383e:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  403842:	e67b      	b.n	40353c <_vfprintf_r+0x1220>
  403844:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403848:	f7ff b866 	b.w	402918 <_vfprintf_r+0x5fc>
  40384c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403850:	f7ff b9ac 	b.w	402bac <_vfprintf_r+0x890>
  403854:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403858:	f7ff b934 	b.w	402ac4 <_vfprintf_r+0x7a8>
  40385c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403860:	f7ff b8b0 	b.w	4029c4 <_vfprintf_r+0x6a8>
  403864:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403868:	f7ff b945 	b.w	402af6 <_vfprintf_r+0x7da>
  40386c:	00407158 	.word	0x00407158
  403870:	00407154 	.word	0x00407154

00403874 <__sbprintf>:
  403874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403878:	460c      	mov	r4, r1
  40387a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  40387e:	8989      	ldrh	r1, [r1, #12]
  403880:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403882:	89e5      	ldrh	r5, [r4, #14]
  403884:	9619      	str	r6, [sp, #100]	; 0x64
  403886:	f021 0102 	bic.w	r1, r1, #2
  40388a:	4606      	mov	r6, r0
  40388c:	69e0      	ldr	r0, [r4, #28]
  40388e:	f8ad 100c 	strh.w	r1, [sp, #12]
  403892:	4617      	mov	r7, r2
  403894:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403898:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40389a:	f8ad 500e 	strh.w	r5, [sp, #14]
  40389e:	4698      	mov	r8, r3
  4038a0:	ad1a      	add	r5, sp, #104	; 0x68
  4038a2:	2300      	movs	r3, #0
  4038a4:	9007      	str	r0, [sp, #28]
  4038a6:	a816      	add	r0, sp, #88	; 0x58
  4038a8:	9209      	str	r2, [sp, #36]	; 0x24
  4038aa:	9306      	str	r3, [sp, #24]
  4038ac:	9500      	str	r5, [sp, #0]
  4038ae:	9504      	str	r5, [sp, #16]
  4038b0:	9102      	str	r1, [sp, #8]
  4038b2:	9105      	str	r1, [sp, #20]
  4038b4:	f001 fc82 	bl	4051bc <__retarget_lock_init_recursive>
  4038b8:	4643      	mov	r3, r8
  4038ba:	463a      	mov	r2, r7
  4038bc:	4669      	mov	r1, sp
  4038be:	4630      	mov	r0, r6
  4038c0:	f7fe fd2c 	bl	40231c <_vfprintf_r>
  4038c4:	1e05      	subs	r5, r0, #0
  4038c6:	db07      	blt.n	4038d8 <__sbprintf+0x64>
  4038c8:	4630      	mov	r0, r6
  4038ca:	4669      	mov	r1, sp
  4038cc:	f001 f8e6 	bl	404a9c <_fflush_r>
  4038d0:	2800      	cmp	r0, #0
  4038d2:	bf18      	it	ne
  4038d4:	f04f 35ff 	movne.w	r5, #4294967295
  4038d8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4038dc:	065b      	lsls	r3, r3, #25
  4038de:	d503      	bpl.n	4038e8 <__sbprintf+0x74>
  4038e0:	89a3      	ldrh	r3, [r4, #12]
  4038e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4038e6:	81a3      	strh	r3, [r4, #12]
  4038e8:	9816      	ldr	r0, [sp, #88]	; 0x58
  4038ea:	f001 fc69 	bl	4051c0 <__retarget_lock_close_recursive>
  4038ee:	4628      	mov	r0, r5
  4038f0:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4038f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004038f8 <__swsetup_r>:
  4038f8:	b538      	push	{r3, r4, r5, lr}
  4038fa:	4b30      	ldr	r3, [pc, #192]	; (4039bc <__swsetup_r+0xc4>)
  4038fc:	681b      	ldr	r3, [r3, #0]
  4038fe:	4605      	mov	r5, r0
  403900:	460c      	mov	r4, r1
  403902:	b113      	cbz	r3, 40390a <__swsetup_r+0x12>
  403904:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403906:	2a00      	cmp	r2, #0
  403908:	d038      	beq.n	40397c <__swsetup_r+0x84>
  40390a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40390e:	b293      	uxth	r3, r2
  403910:	0718      	lsls	r0, r3, #28
  403912:	d50c      	bpl.n	40392e <__swsetup_r+0x36>
  403914:	6920      	ldr	r0, [r4, #16]
  403916:	b1a8      	cbz	r0, 403944 <__swsetup_r+0x4c>
  403918:	f013 0201 	ands.w	r2, r3, #1
  40391c:	d01e      	beq.n	40395c <__swsetup_r+0x64>
  40391e:	6963      	ldr	r3, [r4, #20]
  403920:	2200      	movs	r2, #0
  403922:	425b      	negs	r3, r3
  403924:	61a3      	str	r3, [r4, #24]
  403926:	60a2      	str	r2, [r4, #8]
  403928:	b1f0      	cbz	r0, 403968 <__swsetup_r+0x70>
  40392a:	2000      	movs	r0, #0
  40392c:	bd38      	pop	{r3, r4, r5, pc}
  40392e:	06d9      	lsls	r1, r3, #27
  403930:	d53c      	bpl.n	4039ac <__swsetup_r+0xb4>
  403932:	0758      	lsls	r0, r3, #29
  403934:	d426      	bmi.n	403984 <__swsetup_r+0x8c>
  403936:	6920      	ldr	r0, [r4, #16]
  403938:	f042 0308 	orr.w	r3, r2, #8
  40393c:	81a3      	strh	r3, [r4, #12]
  40393e:	b29b      	uxth	r3, r3
  403940:	2800      	cmp	r0, #0
  403942:	d1e9      	bne.n	403918 <__swsetup_r+0x20>
  403944:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403948:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40394c:	d0e4      	beq.n	403918 <__swsetup_r+0x20>
  40394e:	4628      	mov	r0, r5
  403950:	4621      	mov	r1, r4
  403952:	f001 fc69 	bl	405228 <__smakebuf_r>
  403956:	89a3      	ldrh	r3, [r4, #12]
  403958:	6920      	ldr	r0, [r4, #16]
  40395a:	e7dd      	b.n	403918 <__swsetup_r+0x20>
  40395c:	0799      	lsls	r1, r3, #30
  40395e:	bf58      	it	pl
  403960:	6962      	ldrpl	r2, [r4, #20]
  403962:	60a2      	str	r2, [r4, #8]
  403964:	2800      	cmp	r0, #0
  403966:	d1e0      	bne.n	40392a <__swsetup_r+0x32>
  403968:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40396c:	061a      	lsls	r2, r3, #24
  40396e:	d5dd      	bpl.n	40392c <__swsetup_r+0x34>
  403970:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403974:	81a3      	strh	r3, [r4, #12]
  403976:	f04f 30ff 	mov.w	r0, #4294967295
  40397a:	bd38      	pop	{r3, r4, r5, pc}
  40397c:	4618      	mov	r0, r3
  40397e:	f001 f8e5 	bl	404b4c <__sinit>
  403982:	e7c2      	b.n	40390a <__swsetup_r+0x12>
  403984:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403986:	b151      	cbz	r1, 40399e <__swsetup_r+0xa6>
  403988:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40398c:	4299      	cmp	r1, r3
  40398e:	d004      	beq.n	40399a <__swsetup_r+0xa2>
  403990:	4628      	mov	r0, r5
  403992:	f001 f97d 	bl	404c90 <_free_r>
  403996:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40399a:	2300      	movs	r3, #0
  40399c:	6323      	str	r3, [r4, #48]	; 0x30
  40399e:	2300      	movs	r3, #0
  4039a0:	6920      	ldr	r0, [r4, #16]
  4039a2:	6063      	str	r3, [r4, #4]
  4039a4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4039a8:	6020      	str	r0, [r4, #0]
  4039aa:	e7c5      	b.n	403938 <__swsetup_r+0x40>
  4039ac:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4039b0:	2309      	movs	r3, #9
  4039b2:	602b      	str	r3, [r5, #0]
  4039b4:	f04f 30ff 	mov.w	r0, #4294967295
  4039b8:	81a2      	strh	r2, [r4, #12]
  4039ba:	bd38      	pop	{r3, r4, r5, pc}
  4039bc:	20400008 	.word	0x20400008

004039c0 <register_fini>:
  4039c0:	4b02      	ldr	r3, [pc, #8]	; (4039cc <register_fini+0xc>)
  4039c2:	b113      	cbz	r3, 4039ca <register_fini+0xa>
  4039c4:	4802      	ldr	r0, [pc, #8]	; (4039d0 <register_fini+0x10>)
  4039c6:	f000 b805 	b.w	4039d4 <atexit>
  4039ca:	4770      	bx	lr
  4039cc:	00000000 	.word	0x00000000
  4039d0:	00404bbd 	.word	0x00404bbd

004039d4 <atexit>:
  4039d4:	2300      	movs	r3, #0
  4039d6:	4601      	mov	r1, r0
  4039d8:	461a      	mov	r2, r3
  4039da:	4618      	mov	r0, r3
  4039dc:	f002 be68 	b.w	4066b0 <__register_exitproc>

004039e0 <quorem>:
  4039e0:	6902      	ldr	r2, [r0, #16]
  4039e2:	690b      	ldr	r3, [r1, #16]
  4039e4:	4293      	cmp	r3, r2
  4039e6:	f300 808d 	bgt.w	403b04 <quorem+0x124>
  4039ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4039ee:	f103 38ff 	add.w	r8, r3, #4294967295
  4039f2:	f101 0714 	add.w	r7, r1, #20
  4039f6:	f100 0b14 	add.w	fp, r0, #20
  4039fa:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4039fe:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403a02:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403a06:	b083      	sub	sp, #12
  403a08:	3201      	adds	r2, #1
  403a0a:	fbb3 f9f2 	udiv	r9, r3, r2
  403a0e:	eb0b 0304 	add.w	r3, fp, r4
  403a12:	9400      	str	r4, [sp, #0]
  403a14:	eb07 0a04 	add.w	sl, r7, r4
  403a18:	9301      	str	r3, [sp, #4]
  403a1a:	f1b9 0f00 	cmp.w	r9, #0
  403a1e:	d039      	beq.n	403a94 <quorem+0xb4>
  403a20:	2500      	movs	r5, #0
  403a22:	462e      	mov	r6, r5
  403a24:	46bc      	mov	ip, r7
  403a26:	46de      	mov	lr, fp
  403a28:	f85c 4b04 	ldr.w	r4, [ip], #4
  403a2c:	f8de 3000 	ldr.w	r3, [lr]
  403a30:	b2a2      	uxth	r2, r4
  403a32:	fb09 5502 	mla	r5, r9, r2, r5
  403a36:	0c22      	lsrs	r2, r4, #16
  403a38:	0c2c      	lsrs	r4, r5, #16
  403a3a:	fb09 4202 	mla	r2, r9, r2, r4
  403a3e:	b2ad      	uxth	r5, r5
  403a40:	1b75      	subs	r5, r6, r5
  403a42:	b296      	uxth	r6, r2
  403a44:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403a48:	fa15 f383 	uxtah	r3, r5, r3
  403a4c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403a50:	b29b      	uxth	r3, r3
  403a52:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403a56:	45e2      	cmp	sl, ip
  403a58:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403a5c:	f84e 3b04 	str.w	r3, [lr], #4
  403a60:	ea4f 4626 	mov.w	r6, r6, asr #16
  403a64:	d2e0      	bcs.n	403a28 <quorem+0x48>
  403a66:	9b00      	ldr	r3, [sp, #0]
  403a68:	f85b 3003 	ldr.w	r3, [fp, r3]
  403a6c:	b993      	cbnz	r3, 403a94 <quorem+0xb4>
  403a6e:	9c01      	ldr	r4, [sp, #4]
  403a70:	1f23      	subs	r3, r4, #4
  403a72:	459b      	cmp	fp, r3
  403a74:	d20c      	bcs.n	403a90 <quorem+0xb0>
  403a76:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403a7a:	b94b      	cbnz	r3, 403a90 <quorem+0xb0>
  403a7c:	f1a4 0308 	sub.w	r3, r4, #8
  403a80:	e002      	b.n	403a88 <quorem+0xa8>
  403a82:	681a      	ldr	r2, [r3, #0]
  403a84:	3b04      	subs	r3, #4
  403a86:	b91a      	cbnz	r2, 403a90 <quorem+0xb0>
  403a88:	459b      	cmp	fp, r3
  403a8a:	f108 38ff 	add.w	r8, r8, #4294967295
  403a8e:	d3f8      	bcc.n	403a82 <quorem+0xa2>
  403a90:	f8c0 8010 	str.w	r8, [r0, #16]
  403a94:	4604      	mov	r4, r0
  403a96:	f002 fa23 	bl	405ee0 <__mcmp>
  403a9a:	2800      	cmp	r0, #0
  403a9c:	db2e      	blt.n	403afc <quorem+0x11c>
  403a9e:	f109 0901 	add.w	r9, r9, #1
  403aa2:	465d      	mov	r5, fp
  403aa4:	2300      	movs	r3, #0
  403aa6:	f857 1b04 	ldr.w	r1, [r7], #4
  403aaa:	6828      	ldr	r0, [r5, #0]
  403aac:	b28a      	uxth	r2, r1
  403aae:	1a9a      	subs	r2, r3, r2
  403ab0:	0c0b      	lsrs	r3, r1, #16
  403ab2:	fa12 f280 	uxtah	r2, r2, r0
  403ab6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403aba:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403abe:	b292      	uxth	r2, r2
  403ac0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403ac4:	45ba      	cmp	sl, r7
  403ac6:	f845 2b04 	str.w	r2, [r5], #4
  403aca:	ea4f 4323 	mov.w	r3, r3, asr #16
  403ace:	d2ea      	bcs.n	403aa6 <quorem+0xc6>
  403ad0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403ad4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403ad8:	b982      	cbnz	r2, 403afc <quorem+0x11c>
  403ada:	1f1a      	subs	r2, r3, #4
  403adc:	4593      	cmp	fp, r2
  403ade:	d20b      	bcs.n	403af8 <quorem+0x118>
  403ae0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403ae4:	b942      	cbnz	r2, 403af8 <quorem+0x118>
  403ae6:	3b08      	subs	r3, #8
  403ae8:	e002      	b.n	403af0 <quorem+0x110>
  403aea:	681a      	ldr	r2, [r3, #0]
  403aec:	3b04      	subs	r3, #4
  403aee:	b91a      	cbnz	r2, 403af8 <quorem+0x118>
  403af0:	459b      	cmp	fp, r3
  403af2:	f108 38ff 	add.w	r8, r8, #4294967295
  403af6:	d3f8      	bcc.n	403aea <quorem+0x10a>
  403af8:	f8c4 8010 	str.w	r8, [r4, #16]
  403afc:	4648      	mov	r0, r9
  403afe:	b003      	add	sp, #12
  403b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b04:	2000      	movs	r0, #0
  403b06:	4770      	bx	lr

00403b08 <_dtoa_r>:
  403b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b0c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403b0e:	b09b      	sub	sp, #108	; 0x6c
  403b10:	4604      	mov	r4, r0
  403b12:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403b14:	4692      	mov	sl, r2
  403b16:	469b      	mov	fp, r3
  403b18:	b141      	cbz	r1, 403b2c <_dtoa_r+0x24>
  403b1a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403b1c:	604a      	str	r2, [r1, #4]
  403b1e:	2301      	movs	r3, #1
  403b20:	4093      	lsls	r3, r2
  403b22:	608b      	str	r3, [r1, #8]
  403b24:	f002 f804 	bl	405b30 <_Bfree>
  403b28:	2300      	movs	r3, #0
  403b2a:	6423      	str	r3, [r4, #64]	; 0x40
  403b2c:	f1bb 0f00 	cmp.w	fp, #0
  403b30:	465d      	mov	r5, fp
  403b32:	db35      	blt.n	403ba0 <_dtoa_r+0x98>
  403b34:	2300      	movs	r3, #0
  403b36:	6033      	str	r3, [r6, #0]
  403b38:	4b9d      	ldr	r3, [pc, #628]	; (403db0 <_dtoa_r+0x2a8>)
  403b3a:	43ab      	bics	r3, r5
  403b3c:	d015      	beq.n	403b6a <_dtoa_r+0x62>
  403b3e:	4650      	mov	r0, sl
  403b40:	4659      	mov	r1, fp
  403b42:	2200      	movs	r2, #0
  403b44:	2300      	movs	r3, #0
  403b46:	f003 f841 	bl	406bcc <__aeabi_dcmpeq>
  403b4a:	4680      	mov	r8, r0
  403b4c:	2800      	cmp	r0, #0
  403b4e:	d02d      	beq.n	403bac <_dtoa_r+0xa4>
  403b50:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403b52:	2301      	movs	r3, #1
  403b54:	6013      	str	r3, [r2, #0]
  403b56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b58:	2b00      	cmp	r3, #0
  403b5a:	f000 80bd 	beq.w	403cd8 <_dtoa_r+0x1d0>
  403b5e:	4895      	ldr	r0, [pc, #596]	; (403db4 <_dtoa_r+0x2ac>)
  403b60:	6018      	str	r0, [r3, #0]
  403b62:	3801      	subs	r0, #1
  403b64:	b01b      	add	sp, #108	; 0x6c
  403b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b6a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403b6c:	f242 730f 	movw	r3, #9999	; 0x270f
  403b70:	6013      	str	r3, [r2, #0]
  403b72:	f1ba 0f00 	cmp.w	sl, #0
  403b76:	d10d      	bne.n	403b94 <_dtoa_r+0x8c>
  403b78:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403b7c:	b955      	cbnz	r5, 403b94 <_dtoa_r+0x8c>
  403b7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b80:	488d      	ldr	r0, [pc, #564]	; (403db8 <_dtoa_r+0x2b0>)
  403b82:	2b00      	cmp	r3, #0
  403b84:	d0ee      	beq.n	403b64 <_dtoa_r+0x5c>
  403b86:	f100 0308 	add.w	r3, r0, #8
  403b8a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403b8c:	6013      	str	r3, [r2, #0]
  403b8e:	b01b      	add	sp, #108	; 0x6c
  403b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b96:	4889      	ldr	r0, [pc, #548]	; (403dbc <_dtoa_r+0x2b4>)
  403b98:	2b00      	cmp	r3, #0
  403b9a:	d0e3      	beq.n	403b64 <_dtoa_r+0x5c>
  403b9c:	1cc3      	adds	r3, r0, #3
  403b9e:	e7f4      	b.n	403b8a <_dtoa_r+0x82>
  403ba0:	2301      	movs	r3, #1
  403ba2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403ba6:	6033      	str	r3, [r6, #0]
  403ba8:	46ab      	mov	fp, r5
  403baa:	e7c5      	b.n	403b38 <_dtoa_r+0x30>
  403bac:	aa18      	add	r2, sp, #96	; 0x60
  403bae:	ab19      	add	r3, sp, #100	; 0x64
  403bb0:	9201      	str	r2, [sp, #4]
  403bb2:	9300      	str	r3, [sp, #0]
  403bb4:	4652      	mov	r2, sl
  403bb6:	465b      	mov	r3, fp
  403bb8:	4620      	mov	r0, r4
  403bba:	f002 fa31 	bl	406020 <__d2b>
  403bbe:	0d2b      	lsrs	r3, r5, #20
  403bc0:	4681      	mov	r9, r0
  403bc2:	d071      	beq.n	403ca8 <_dtoa_r+0x1a0>
  403bc4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403bc8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403bcc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403bce:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403bd2:	4650      	mov	r0, sl
  403bd4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403bd8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403bdc:	2200      	movs	r2, #0
  403bde:	4b78      	ldr	r3, [pc, #480]	; (403dc0 <_dtoa_r+0x2b8>)
  403be0:	f7fd fd90 	bl	401704 <__aeabi_dsub>
  403be4:	a36c      	add	r3, pc, #432	; (adr r3, 403d98 <_dtoa_r+0x290>)
  403be6:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bea:	f7fd ff3f 	bl	401a6c <__aeabi_dmul>
  403bee:	a36c      	add	r3, pc, #432	; (adr r3, 403da0 <_dtoa_r+0x298>)
  403bf0:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bf4:	f7fd fd88 	bl	401708 <__adddf3>
  403bf8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403bfc:	4630      	mov	r0, r6
  403bfe:	f7fd fecf 	bl	4019a0 <__aeabi_i2d>
  403c02:	a369      	add	r3, pc, #420	; (adr r3, 403da8 <_dtoa_r+0x2a0>)
  403c04:	e9d3 2300 	ldrd	r2, r3, [r3]
  403c08:	f7fd ff30 	bl	401a6c <__aeabi_dmul>
  403c0c:	4602      	mov	r2, r0
  403c0e:	460b      	mov	r3, r1
  403c10:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403c14:	f7fd fd78 	bl	401708 <__adddf3>
  403c18:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403c1c:	f003 f81e 	bl	406c5c <__aeabi_d2iz>
  403c20:	2200      	movs	r2, #0
  403c22:	9002      	str	r0, [sp, #8]
  403c24:	2300      	movs	r3, #0
  403c26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403c2a:	f002 ffd9 	bl	406be0 <__aeabi_dcmplt>
  403c2e:	2800      	cmp	r0, #0
  403c30:	f040 8173 	bne.w	403f1a <_dtoa_r+0x412>
  403c34:	9d02      	ldr	r5, [sp, #8]
  403c36:	2d16      	cmp	r5, #22
  403c38:	f200 815d 	bhi.w	403ef6 <_dtoa_r+0x3ee>
  403c3c:	4b61      	ldr	r3, [pc, #388]	; (403dc4 <_dtoa_r+0x2bc>)
  403c3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403c42:	e9d3 0100 	ldrd	r0, r1, [r3]
  403c46:	4652      	mov	r2, sl
  403c48:	465b      	mov	r3, fp
  403c4a:	f002 ffe7 	bl	406c1c <__aeabi_dcmpgt>
  403c4e:	2800      	cmp	r0, #0
  403c50:	f000 81c5 	beq.w	403fde <_dtoa_r+0x4d6>
  403c54:	1e6b      	subs	r3, r5, #1
  403c56:	9302      	str	r3, [sp, #8]
  403c58:	2300      	movs	r3, #0
  403c5a:	930e      	str	r3, [sp, #56]	; 0x38
  403c5c:	1bbf      	subs	r7, r7, r6
  403c5e:	1e7b      	subs	r3, r7, #1
  403c60:	9306      	str	r3, [sp, #24]
  403c62:	f100 8154 	bmi.w	403f0e <_dtoa_r+0x406>
  403c66:	2300      	movs	r3, #0
  403c68:	9308      	str	r3, [sp, #32]
  403c6a:	9b02      	ldr	r3, [sp, #8]
  403c6c:	2b00      	cmp	r3, #0
  403c6e:	f2c0 8145 	blt.w	403efc <_dtoa_r+0x3f4>
  403c72:	9a06      	ldr	r2, [sp, #24]
  403c74:	930d      	str	r3, [sp, #52]	; 0x34
  403c76:	4611      	mov	r1, r2
  403c78:	4419      	add	r1, r3
  403c7a:	2300      	movs	r3, #0
  403c7c:	9106      	str	r1, [sp, #24]
  403c7e:	930c      	str	r3, [sp, #48]	; 0x30
  403c80:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403c82:	2b09      	cmp	r3, #9
  403c84:	d82a      	bhi.n	403cdc <_dtoa_r+0x1d4>
  403c86:	2b05      	cmp	r3, #5
  403c88:	f340 865b 	ble.w	404942 <_dtoa_r+0xe3a>
  403c8c:	3b04      	subs	r3, #4
  403c8e:	9324      	str	r3, [sp, #144]	; 0x90
  403c90:	2500      	movs	r5, #0
  403c92:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403c94:	3b02      	subs	r3, #2
  403c96:	2b03      	cmp	r3, #3
  403c98:	f200 8642 	bhi.w	404920 <_dtoa_r+0xe18>
  403c9c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403ca0:	02c903d4 	.word	0x02c903d4
  403ca4:	046103df 	.word	0x046103df
  403ca8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403caa:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403cac:	443e      	add	r6, r7
  403cae:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403cb2:	2b20      	cmp	r3, #32
  403cb4:	f340 818e 	ble.w	403fd4 <_dtoa_r+0x4cc>
  403cb8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403cbc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403cc0:	409d      	lsls	r5, r3
  403cc2:	fa2a f000 	lsr.w	r0, sl, r0
  403cc6:	4328      	orrs	r0, r5
  403cc8:	f7fd fe5a 	bl	401980 <__aeabi_ui2d>
  403ccc:	2301      	movs	r3, #1
  403cce:	3e01      	subs	r6, #1
  403cd0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403cd4:	9314      	str	r3, [sp, #80]	; 0x50
  403cd6:	e781      	b.n	403bdc <_dtoa_r+0xd4>
  403cd8:	483b      	ldr	r0, [pc, #236]	; (403dc8 <_dtoa_r+0x2c0>)
  403cda:	e743      	b.n	403b64 <_dtoa_r+0x5c>
  403cdc:	2100      	movs	r1, #0
  403cde:	6461      	str	r1, [r4, #68]	; 0x44
  403ce0:	4620      	mov	r0, r4
  403ce2:	9125      	str	r1, [sp, #148]	; 0x94
  403ce4:	f001 fefe 	bl	405ae4 <_Balloc>
  403ce8:	f04f 33ff 	mov.w	r3, #4294967295
  403cec:	930a      	str	r3, [sp, #40]	; 0x28
  403cee:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403cf0:	930f      	str	r3, [sp, #60]	; 0x3c
  403cf2:	2301      	movs	r3, #1
  403cf4:	9004      	str	r0, [sp, #16]
  403cf6:	6420      	str	r0, [r4, #64]	; 0x40
  403cf8:	9224      	str	r2, [sp, #144]	; 0x90
  403cfa:	930b      	str	r3, [sp, #44]	; 0x2c
  403cfc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403cfe:	2b00      	cmp	r3, #0
  403d00:	f2c0 80d9 	blt.w	403eb6 <_dtoa_r+0x3ae>
  403d04:	9a02      	ldr	r2, [sp, #8]
  403d06:	2a0e      	cmp	r2, #14
  403d08:	f300 80d5 	bgt.w	403eb6 <_dtoa_r+0x3ae>
  403d0c:	4b2d      	ldr	r3, [pc, #180]	; (403dc4 <_dtoa_r+0x2bc>)
  403d0e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d12:	e9d3 2300 	ldrd	r2, r3, [r3]
  403d16:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403d1a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403d1c:	2b00      	cmp	r3, #0
  403d1e:	f2c0 83ba 	blt.w	404496 <_dtoa_r+0x98e>
  403d22:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403d26:	4650      	mov	r0, sl
  403d28:	462a      	mov	r2, r5
  403d2a:	4633      	mov	r3, r6
  403d2c:	4659      	mov	r1, fp
  403d2e:	f7fd ffc7 	bl	401cc0 <__aeabi_ddiv>
  403d32:	f002 ff93 	bl	406c5c <__aeabi_d2iz>
  403d36:	4680      	mov	r8, r0
  403d38:	f7fd fe32 	bl	4019a0 <__aeabi_i2d>
  403d3c:	462a      	mov	r2, r5
  403d3e:	4633      	mov	r3, r6
  403d40:	f7fd fe94 	bl	401a6c <__aeabi_dmul>
  403d44:	460b      	mov	r3, r1
  403d46:	4602      	mov	r2, r0
  403d48:	4659      	mov	r1, fp
  403d4a:	4650      	mov	r0, sl
  403d4c:	f7fd fcda 	bl	401704 <__aeabi_dsub>
  403d50:	9d04      	ldr	r5, [sp, #16]
  403d52:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403d56:	702b      	strb	r3, [r5, #0]
  403d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d5a:	2b01      	cmp	r3, #1
  403d5c:	4606      	mov	r6, r0
  403d5e:	460f      	mov	r7, r1
  403d60:	f105 0501 	add.w	r5, r5, #1
  403d64:	d068      	beq.n	403e38 <_dtoa_r+0x330>
  403d66:	2200      	movs	r2, #0
  403d68:	4b18      	ldr	r3, [pc, #96]	; (403dcc <_dtoa_r+0x2c4>)
  403d6a:	f7fd fe7f 	bl	401a6c <__aeabi_dmul>
  403d6e:	2200      	movs	r2, #0
  403d70:	2300      	movs	r3, #0
  403d72:	4606      	mov	r6, r0
  403d74:	460f      	mov	r7, r1
  403d76:	f002 ff29 	bl	406bcc <__aeabi_dcmpeq>
  403d7a:	2800      	cmp	r0, #0
  403d7c:	f040 8088 	bne.w	403e90 <_dtoa_r+0x388>
  403d80:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403d84:	f04f 0a00 	mov.w	sl, #0
  403d88:	f8df b040 	ldr.w	fp, [pc, #64]	; 403dcc <_dtoa_r+0x2c4>
  403d8c:	940c      	str	r4, [sp, #48]	; 0x30
  403d8e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403d92:	e028      	b.n	403de6 <_dtoa_r+0x2de>
  403d94:	f3af 8000 	nop.w
  403d98:	636f4361 	.word	0x636f4361
  403d9c:	3fd287a7 	.word	0x3fd287a7
  403da0:	8b60c8b3 	.word	0x8b60c8b3
  403da4:	3fc68a28 	.word	0x3fc68a28
  403da8:	509f79fb 	.word	0x509f79fb
  403dac:	3fd34413 	.word	0x3fd34413
  403db0:	7ff00000 	.word	0x7ff00000
  403db4:	0040718d 	.word	0x0040718d
  403db8:	004071b0 	.word	0x004071b0
  403dbc:	004071bc 	.word	0x004071bc
  403dc0:	3ff80000 	.word	0x3ff80000
  403dc4:	004071e8 	.word	0x004071e8
  403dc8:	0040718c 	.word	0x0040718c
  403dcc:	40240000 	.word	0x40240000
  403dd0:	f7fd fe4c 	bl	401a6c <__aeabi_dmul>
  403dd4:	2200      	movs	r2, #0
  403dd6:	2300      	movs	r3, #0
  403dd8:	4606      	mov	r6, r0
  403dda:	460f      	mov	r7, r1
  403ddc:	f002 fef6 	bl	406bcc <__aeabi_dcmpeq>
  403de0:	2800      	cmp	r0, #0
  403de2:	f040 83c1 	bne.w	404568 <_dtoa_r+0xa60>
  403de6:	4642      	mov	r2, r8
  403de8:	464b      	mov	r3, r9
  403dea:	4630      	mov	r0, r6
  403dec:	4639      	mov	r1, r7
  403dee:	f7fd ff67 	bl	401cc0 <__aeabi_ddiv>
  403df2:	f002 ff33 	bl	406c5c <__aeabi_d2iz>
  403df6:	4604      	mov	r4, r0
  403df8:	f7fd fdd2 	bl	4019a0 <__aeabi_i2d>
  403dfc:	4642      	mov	r2, r8
  403dfe:	464b      	mov	r3, r9
  403e00:	f7fd fe34 	bl	401a6c <__aeabi_dmul>
  403e04:	4602      	mov	r2, r0
  403e06:	460b      	mov	r3, r1
  403e08:	4630      	mov	r0, r6
  403e0a:	4639      	mov	r1, r7
  403e0c:	f7fd fc7a 	bl	401704 <__aeabi_dsub>
  403e10:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403e14:	9e04      	ldr	r6, [sp, #16]
  403e16:	f805 eb01 	strb.w	lr, [r5], #1
  403e1a:	eba5 0e06 	sub.w	lr, r5, r6
  403e1e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403e20:	45b6      	cmp	lr, r6
  403e22:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403e26:	4652      	mov	r2, sl
  403e28:	465b      	mov	r3, fp
  403e2a:	d1d1      	bne.n	403dd0 <_dtoa_r+0x2c8>
  403e2c:	46a0      	mov	r8, r4
  403e2e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403e32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403e34:	4606      	mov	r6, r0
  403e36:	460f      	mov	r7, r1
  403e38:	4632      	mov	r2, r6
  403e3a:	463b      	mov	r3, r7
  403e3c:	4630      	mov	r0, r6
  403e3e:	4639      	mov	r1, r7
  403e40:	f7fd fc62 	bl	401708 <__adddf3>
  403e44:	4606      	mov	r6, r0
  403e46:	460f      	mov	r7, r1
  403e48:	4602      	mov	r2, r0
  403e4a:	460b      	mov	r3, r1
  403e4c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403e50:	f002 fec6 	bl	406be0 <__aeabi_dcmplt>
  403e54:	b948      	cbnz	r0, 403e6a <_dtoa_r+0x362>
  403e56:	4632      	mov	r2, r6
  403e58:	463b      	mov	r3, r7
  403e5a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403e5e:	f002 feb5 	bl	406bcc <__aeabi_dcmpeq>
  403e62:	b1a8      	cbz	r0, 403e90 <_dtoa_r+0x388>
  403e64:	f018 0f01 	tst.w	r8, #1
  403e68:	d012      	beq.n	403e90 <_dtoa_r+0x388>
  403e6a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403e6e:	9a04      	ldr	r2, [sp, #16]
  403e70:	1e6b      	subs	r3, r5, #1
  403e72:	e004      	b.n	403e7e <_dtoa_r+0x376>
  403e74:	429a      	cmp	r2, r3
  403e76:	f000 8401 	beq.w	40467c <_dtoa_r+0xb74>
  403e7a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403e7e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403e82:	f103 0501 	add.w	r5, r3, #1
  403e86:	d0f5      	beq.n	403e74 <_dtoa_r+0x36c>
  403e88:	f108 0801 	add.w	r8, r8, #1
  403e8c:	f883 8000 	strb.w	r8, [r3]
  403e90:	4649      	mov	r1, r9
  403e92:	4620      	mov	r0, r4
  403e94:	f001 fe4c 	bl	405b30 <_Bfree>
  403e98:	2200      	movs	r2, #0
  403e9a:	9b02      	ldr	r3, [sp, #8]
  403e9c:	702a      	strb	r2, [r5, #0]
  403e9e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403ea0:	3301      	adds	r3, #1
  403ea2:	6013      	str	r3, [r2, #0]
  403ea4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403ea6:	2b00      	cmp	r3, #0
  403ea8:	f000 839e 	beq.w	4045e8 <_dtoa_r+0xae0>
  403eac:	9804      	ldr	r0, [sp, #16]
  403eae:	601d      	str	r5, [r3, #0]
  403eb0:	b01b      	add	sp, #108	; 0x6c
  403eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403eb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403eb8:	2a00      	cmp	r2, #0
  403eba:	d03e      	beq.n	403f3a <_dtoa_r+0x432>
  403ebc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403ebe:	2a01      	cmp	r2, #1
  403ec0:	f340 8311 	ble.w	4044e6 <_dtoa_r+0x9de>
  403ec4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ec6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ec8:	1e5f      	subs	r7, r3, #1
  403eca:	42ba      	cmp	r2, r7
  403ecc:	f2c0 838f 	blt.w	4045ee <_dtoa_r+0xae6>
  403ed0:	1bd7      	subs	r7, r2, r7
  403ed2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ed4:	2b00      	cmp	r3, #0
  403ed6:	f2c0 848b 	blt.w	4047f0 <_dtoa_r+0xce8>
  403eda:	9d08      	ldr	r5, [sp, #32]
  403edc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ede:	9a08      	ldr	r2, [sp, #32]
  403ee0:	441a      	add	r2, r3
  403ee2:	9208      	str	r2, [sp, #32]
  403ee4:	9a06      	ldr	r2, [sp, #24]
  403ee6:	2101      	movs	r1, #1
  403ee8:	441a      	add	r2, r3
  403eea:	4620      	mov	r0, r4
  403eec:	9206      	str	r2, [sp, #24]
  403eee:	f001 feb9 	bl	405c64 <__i2b>
  403ef2:	4606      	mov	r6, r0
  403ef4:	e024      	b.n	403f40 <_dtoa_r+0x438>
  403ef6:	2301      	movs	r3, #1
  403ef8:	930e      	str	r3, [sp, #56]	; 0x38
  403efa:	e6af      	b.n	403c5c <_dtoa_r+0x154>
  403efc:	9a08      	ldr	r2, [sp, #32]
  403efe:	9b02      	ldr	r3, [sp, #8]
  403f00:	1ad2      	subs	r2, r2, r3
  403f02:	425b      	negs	r3, r3
  403f04:	930c      	str	r3, [sp, #48]	; 0x30
  403f06:	2300      	movs	r3, #0
  403f08:	9208      	str	r2, [sp, #32]
  403f0a:	930d      	str	r3, [sp, #52]	; 0x34
  403f0c:	e6b8      	b.n	403c80 <_dtoa_r+0x178>
  403f0e:	f1c7 0301 	rsb	r3, r7, #1
  403f12:	9308      	str	r3, [sp, #32]
  403f14:	2300      	movs	r3, #0
  403f16:	9306      	str	r3, [sp, #24]
  403f18:	e6a7      	b.n	403c6a <_dtoa_r+0x162>
  403f1a:	9d02      	ldr	r5, [sp, #8]
  403f1c:	4628      	mov	r0, r5
  403f1e:	f7fd fd3f 	bl	4019a0 <__aeabi_i2d>
  403f22:	4602      	mov	r2, r0
  403f24:	460b      	mov	r3, r1
  403f26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403f2a:	f002 fe4f 	bl	406bcc <__aeabi_dcmpeq>
  403f2e:	2800      	cmp	r0, #0
  403f30:	f47f ae80 	bne.w	403c34 <_dtoa_r+0x12c>
  403f34:	1e6b      	subs	r3, r5, #1
  403f36:	9302      	str	r3, [sp, #8]
  403f38:	e67c      	b.n	403c34 <_dtoa_r+0x12c>
  403f3a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403f3c:	9d08      	ldr	r5, [sp, #32]
  403f3e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403f40:	2d00      	cmp	r5, #0
  403f42:	dd0c      	ble.n	403f5e <_dtoa_r+0x456>
  403f44:	9906      	ldr	r1, [sp, #24]
  403f46:	2900      	cmp	r1, #0
  403f48:	460b      	mov	r3, r1
  403f4a:	dd08      	ble.n	403f5e <_dtoa_r+0x456>
  403f4c:	42a9      	cmp	r1, r5
  403f4e:	9a08      	ldr	r2, [sp, #32]
  403f50:	bfa8      	it	ge
  403f52:	462b      	movge	r3, r5
  403f54:	1ad2      	subs	r2, r2, r3
  403f56:	1aed      	subs	r5, r5, r3
  403f58:	1acb      	subs	r3, r1, r3
  403f5a:	9208      	str	r2, [sp, #32]
  403f5c:	9306      	str	r3, [sp, #24]
  403f5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f60:	b1d3      	cbz	r3, 403f98 <_dtoa_r+0x490>
  403f62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f64:	2b00      	cmp	r3, #0
  403f66:	f000 82b7 	beq.w	4044d8 <_dtoa_r+0x9d0>
  403f6a:	2f00      	cmp	r7, #0
  403f6c:	dd10      	ble.n	403f90 <_dtoa_r+0x488>
  403f6e:	4631      	mov	r1, r6
  403f70:	463a      	mov	r2, r7
  403f72:	4620      	mov	r0, r4
  403f74:	f001 ff12 	bl	405d9c <__pow5mult>
  403f78:	464a      	mov	r2, r9
  403f7a:	4601      	mov	r1, r0
  403f7c:	4606      	mov	r6, r0
  403f7e:	4620      	mov	r0, r4
  403f80:	f001 fe7a 	bl	405c78 <__multiply>
  403f84:	4649      	mov	r1, r9
  403f86:	4680      	mov	r8, r0
  403f88:	4620      	mov	r0, r4
  403f8a:	f001 fdd1 	bl	405b30 <_Bfree>
  403f8e:	46c1      	mov	r9, r8
  403f90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f92:	1bda      	subs	r2, r3, r7
  403f94:	f040 82a1 	bne.w	4044da <_dtoa_r+0x9d2>
  403f98:	2101      	movs	r1, #1
  403f9a:	4620      	mov	r0, r4
  403f9c:	f001 fe62 	bl	405c64 <__i2b>
  403fa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403fa2:	2b00      	cmp	r3, #0
  403fa4:	4680      	mov	r8, r0
  403fa6:	dd1c      	ble.n	403fe2 <_dtoa_r+0x4da>
  403fa8:	4601      	mov	r1, r0
  403faa:	461a      	mov	r2, r3
  403fac:	4620      	mov	r0, r4
  403fae:	f001 fef5 	bl	405d9c <__pow5mult>
  403fb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fb4:	2b01      	cmp	r3, #1
  403fb6:	4680      	mov	r8, r0
  403fb8:	f340 8254 	ble.w	404464 <_dtoa_r+0x95c>
  403fbc:	2300      	movs	r3, #0
  403fbe:	930c      	str	r3, [sp, #48]	; 0x30
  403fc0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403fc4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403fc8:	6918      	ldr	r0, [r3, #16]
  403fca:	f001 fdfb 	bl	405bc4 <__hi0bits>
  403fce:	f1c0 0020 	rsb	r0, r0, #32
  403fd2:	e010      	b.n	403ff6 <_dtoa_r+0x4ee>
  403fd4:	f1c3 0520 	rsb	r5, r3, #32
  403fd8:	fa0a f005 	lsl.w	r0, sl, r5
  403fdc:	e674      	b.n	403cc8 <_dtoa_r+0x1c0>
  403fde:	900e      	str	r0, [sp, #56]	; 0x38
  403fe0:	e63c      	b.n	403c5c <_dtoa_r+0x154>
  403fe2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fe4:	2b01      	cmp	r3, #1
  403fe6:	f340 8287 	ble.w	4044f8 <_dtoa_r+0x9f0>
  403fea:	2300      	movs	r3, #0
  403fec:	930c      	str	r3, [sp, #48]	; 0x30
  403fee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ff0:	2001      	movs	r0, #1
  403ff2:	2b00      	cmp	r3, #0
  403ff4:	d1e4      	bne.n	403fc0 <_dtoa_r+0x4b8>
  403ff6:	9a06      	ldr	r2, [sp, #24]
  403ff8:	4410      	add	r0, r2
  403ffa:	f010 001f 	ands.w	r0, r0, #31
  403ffe:	f000 80a1 	beq.w	404144 <_dtoa_r+0x63c>
  404002:	f1c0 0320 	rsb	r3, r0, #32
  404006:	2b04      	cmp	r3, #4
  404008:	f340 849e 	ble.w	404948 <_dtoa_r+0xe40>
  40400c:	9b08      	ldr	r3, [sp, #32]
  40400e:	f1c0 001c 	rsb	r0, r0, #28
  404012:	4403      	add	r3, r0
  404014:	9308      	str	r3, [sp, #32]
  404016:	4613      	mov	r3, r2
  404018:	4403      	add	r3, r0
  40401a:	4405      	add	r5, r0
  40401c:	9306      	str	r3, [sp, #24]
  40401e:	9b08      	ldr	r3, [sp, #32]
  404020:	2b00      	cmp	r3, #0
  404022:	dd05      	ble.n	404030 <_dtoa_r+0x528>
  404024:	4649      	mov	r1, r9
  404026:	461a      	mov	r2, r3
  404028:	4620      	mov	r0, r4
  40402a:	f001 ff07 	bl	405e3c <__lshift>
  40402e:	4681      	mov	r9, r0
  404030:	9b06      	ldr	r3, [sp, #24]
  404032:	2b00      	cmp	r3, #0
  404034:	dd05      	ble.n	404042 <_dtoa_r+0x53a>
  404036:	4641      	mov	r1, r8
  404038:	461a      	mov	r2, r3
  40403a:	4620      	mov	r0, r4
  40403c:	f001 fefe 	bl	405e3c <__lshift>
  404040:	4680      	mov	r8, r0
  404042:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404044:	2b00      	cmp	r3, #0
  404046:	f040 8086 	bne.w	404156 <_dtoa_r+0x64e>
  40404a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40404c:	2b00      	cmp	r3, #0
  40404e:	f340 8266 	ble.w	40451e <_dtoa_r+0xa16>
  404052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404054:	2b00      	cmp	r3, #0
  404056:	f000 8098 	beq.w	40418a <_dtoa_r+0x682>
  40405a:	2d00      	cmp	r5, #0
  40405c:	dd05      	ble.n	40406a <_dtoa_r+0x562>
  40405e:	4631      	mov	r1, r6
  404060:	462a      	mov	r2, r5
  404062:	4620      	mov	r0, r4
  404064:	f001 feea 	bl	405e3c <__lshift>
  404068:	4606      	mov	r6, r0
  40406a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40406c:	2b00      	cmp	r3, #0
  40406e:	f040 8337 	bne.w	4046e0 <_dtoa_r+0xbd8>
  404072:	9606      	str	r6, [sp, #24]
  404074:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404076:	9a04      	ldr	r2, [sp, #16]
  404078:	f8dd b018 	ldr.w	fp, [sp, #24]
  40407c:	3b01      	subs	r3, #1
  40407e:	18d3      	adds	r3, r2, r3
  404080:	930b      	str	r3, [sp, #44]	; 0x2c
  404082:	f00a 0301 	and.w	r3, sl, #1
  404086:	930c      	str	r3, [sp, #48]	; 0x30
  404088:	4617      	mov	r7, r2
  40408a:	46c2      	mov	sl, r8
  40408c:	4651      	mov	r1, sl
  40408e:	4648      	mov	r0, r9
  404090:	f7ff fca6 	bl	4039e0 <quorem>
  404094:	4631      	mov	r1, r6
  404096:	4605      	mov	r5, r0
  404098:	4648      	mov	r0, r9
  40409a:	f001 ff21 	bl	405ee0 <__mcmp>
  40409e:	465a      	mov	r2, fp
  4040a0:	900a      	str	r0, [sp, #40]	; 0x28
  4040a2:	4651      	mov	r1, sl
  4040a4:	4620      	mov	r0, r4
  4040a6:	f001 ff37 	bl	405f18 <__mdiff>
  4040aa:	68c2      	ldr	r2, [r0, #12]
  4040ac:	4680      	mov	r8, r0
  4040ae:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4040b2:	2a00      	cmp	r2, #0
  4040b4:	f040 822b 	bne.w	40450e <_dtoa_r+0xa06>
  4040b8:	4601      	mov	r1, r0
  4040ba:	4648      	mov	r0, r9
  4040bc:	9308      	str	r3, [sp, #32]
  4040be:	f001 ff0f 	bl	405ee0 <__mcmp>
  4040c2:	4641      	mov	r1, r8
  4040c4:	9006      	str	r0, [sp, #24]
  4040c6:	4620      	mov	r0, r4
  4040c8:	f001 fd32 	bl	405b30 <_Bfree>
  4040cc:	9a06      	ldr	r2, [sp, #24]
  4040ce:	9b08      	ldr	r3, [sp, #32]
  4040d0:	b932      	cbnz	r2, 4040e0 <_dtoa_r+0x5d8>
  4040d2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4040d4:	b921      	cbnz	r1, 4040e0 <_dtoa_r+0x5d8>
  4040d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4040d8:	2a00      	cmp	r2, #0
  4040da:	f000 83ef 	beq.w	4048bc <_dtoa_r+0xdb4>
  4040de:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4040e0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4040e2:	2900      	cmp	r1, #0
  4040e4:	f2c0 829f 	blt.w	404626 <_dtoa_r+0xb1e>
  4040e8:	d105      	bne.n	4040f6 <_dtoa_r+0x5ee>
  4040ea:	9924      	ldr	r1, [sp, #144]	; 0x90
  4040ec:	b919      	cbnz	r1, 4040f6 <_dtoa_r+0x5ee>
  4040ee:	990c      	ldr	r1, [sp, #48]	; 0x30
  4040f0:	2900      	cmp	r1, #0
  4040f2:	f000 8298 	beq.w	404626 <_dtoa_r+0xb1e>
  4040f6:	2a00      	cmp	r2, #0
  4040f8:	f300 8306 	bgt.w	404708 <_dtoa_r+0xc00>
  4040fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4040fe:	703b      	strb	r3, [r7, #0]
  404100:	f107 0801 	add.w	r8, r7, #1
  404104:	4297      	cmp	r7, r2
  404106:	4645      	mov	r5, r8
  404108:	f000 830c 	beq.w	404724 <_dtoa_r+0xc1c>
  40410c:	4649      	mov	r1, r9
  40410e:	2300      	movs	r3, #0
  404110:	220a      	movs	r2, #10
  404112:	4620      	mov	r0, r4
  404114:	f001 fd16 	bl	405b44 <__multadd>
  404118:	455e      	cmp	r6, fp
  40411a:	4681      	mov	r9, r0
  40411c:	4631      	mov	r1, r6
  40411e:	f04f 0300 	mov.w	r3, #0
  404122:	f04f 020a 	mov.w	r2, #10
  404126:	4620      	mov	r0, r4
  404128:	f000 81eb 	beq.w	404502 <_dtoa_r+0x9fa>
  40412c:	f001 fd0a 	bl	405b44 <__multadd>
  404130:	4659      	mov	r1, fp
  404132:	4606      	mov	r6, r0
  404134:	2300      	movs	r3, #0
  404136:	220a      	movs	r2, #10
  404138:	4620      	mov	r0, r4
  40413a:	f001 fd03 	bl	405b44 <__multadd>
  40413e:	4647      	mov	r7, r8
  404140:	4683      	mov	fp, r0
  404142:	e7a3      	b.n	40408c <_dtoa_r+0x584>
  404144:	201c      	movs	r0, #28
  404146:	9b08      	ldr	r3, [sp, #32]
  404148:	4403      	add	r3, r0
  40414a:	9308      	str	r3, [sp, #32]
  40414c:	9b06      	ldr	r3, [sp, #24]
  40414e:	4403      	add	r3, r0
  404150:	4405      	add	r5, r0
  404152:	9306      	str	r3, [sp, #24]
  404154:	e763      	b.n	40401e <_dtoa_r+0x516>
  404156:	4641      	mov	r1, r8
  404158:	4648      	mov	r0, r9
  40415a:	f001 fec1 	bl	405ee0 <__mcmp>
  40415e:	2800      	cmp	r0, #0
  404160:	f6bf af73 	bge.w	40404a <_dtoa_r+0x542>
  404164:	9f02      	ldr	r7, [sp, #8]
  404166:	4649      	mov	r1, r9
  404168:	2300      	movs	r3, #0
  40416a:	220a      	movs	r2, #10
  40416c:	4620      	mov	r0, r4
  40416e:	3f01      	subs	r7, #1
  404170:	9702      	str	r7, [sp, #8]
  404172:	f001 fce7 	bl	405b44 <__multadd>
  404176:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404178:	4681      	mov	r9, r0
  40417a:	2b00      	cmp	r3, #0
  40417c:	f040 83b6 	bne.w	4048ec <_dtoa_r+0xde4>
  404180:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404182:	2b00      	cmp	r3, #0
  404184:	f340 83bf 	ble.w	404906 <_dtoa_r+0xdfe>
  404188:	930a      	str	r3, [sp, #40]	; 0x28
  40418a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40418e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404190:	465d      	mov	r5, fp
  404192:	e002      	b.n	40419a <_dtoa_r+0x692>
  404194:	f001 fcd6 	bl	405b44 <__multadd>
  404198:	4681      	mov	r9, r0
  40419a:	4641      	mov	r1, r8
  40419c:	4648      	mov	r0, r9
  40419e:	f7ff fc1f 	bl	4039e0 <quorem>
  4041a2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4041a6:	f805 ab01 	strb.w	sl, [r5], #1
  4041aa:	eba5 030b 	sub.w	r3, r5, fp
  4041ae:	42bb      	cmp	r3, r7
  4041b0:	f04f 020a 	mov.w	r2, #10
  4041b4:	f04f 0300 	mov.w	r3, #0
  4041b8:	4649      	mov	r1, r9
  4041ba:	4620      	mov	r0, r4
  4041bc:	dbea      	blt.n	404194 <_dtoa_r+0x68c>
  4041be:	9b04      	ldr	r3, [sp, #16]
  4041c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4041c2:	2a01      	cmp	r2, #1
  4041c4:	bfac      	ite	ge
  4041c6:	189b      	addge	r3, r3, r2
  4041c8:	3301      	addlt	r3, #1
  4041ca:	461d      	mov	r5, r3
  4041cc:	f04f 0b00 	mov.w	fp, #0
  4041d0:	4649      	mov	r1, r9
  4041d2:	2201      	movs	r2, #1
  4041d4:	4620      	mov	r0, r4
  4041d6:	f001 fe31 	bl	405e3c <__lshift>
  4041da:	4641      	mov	r1, r8
  4041dc:	4681      	mov	r9, r0
  4041de:	f001 fe7f 	bl	405ee0 <__mcmp>
  4041e2:	2800      	cmp	r0, #0
  4041e4:	f340 823d 	ble.w	404662 <_dtoa_r+0xb5a>
  4041e8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4041ec:	9904      	ldr	r1, [sp, #16]
  4041ee:	1e6b      	subs	r3, r5, #1
  4041f0:	e004      	b.n	4041fc <_dtoa_r+0x6f4>
  4041f2:	428b      	cmp	r3, r1
  4041f4:	f000 81ae 	beq.w	404554 <_dtoa_r+0xa4c>
  4041f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4041fc:	2a39      	cmp	r2, #57	; 0x39
  4041fe:	f103 0501 	add.w	r5, r3, #1
  404202:	d0f6      	beq.n	4041f2 <_dtoa_r+0x6ea>
  404204:	3201      	adds	r2, #1
  404206:	701a      	strb	r2, [r3, #0]
  404208:	4641      	mov	r1, r8
  40420a:	4620      	mov	r0, r4
  40420c:	f001 fc90 	bl	405b30 <_Bfree>
  404210:	2e00      	cmp	r6, #0
  404212:	f43f ae3d 	beq.w	403e90 <_dtoa_r+0x388>
  404216:	f1bb 0f00 	cmp.w	fp, #0
  40421a:	d005      	beq.n	404228 <_dtoa_r+0x720>
  40421c:	45b3      	cmp	fp, r6
  40421e:	d003      	beq.n	404228 <_dtoa_r+0x720>
  404220:	4659      	mov	r1, fp
  404222:	4620      	mov	r0, r4
  404224:	f001 fc84 	bl	405b30 <_Bfree>
  404228:	4631      	mov	r1, r6
  40422a:	4620      	mov	r0, r4
  40422c:	f001 fc80 	bl	405b30 <_Bfree>
  404230:	e62e      	b.n	403e90 <_dtoa_r+0x388>
  404232:	2300      	movs	r3, #0
  404234:	930b      	str	r3, [sp, #44]	; 0x2c
  404236:	9b02      	ldr	r3, [sp, #8]
  404238:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40423a:	4413      	add	r3, r2
  40423c:	930f      	str	r3, [sp, #60]	; 0x3c
  40423e:	3301      	adds	r3, #1
  404240:	2b01      	cmp	r3, #1
  404242:	461f      	mov	r7, r3
  404244:	461e      	mov	r6, r3
  404246:	930a      	str	r3, [sp, #40]	; 0x28
  404248:	bfb8      	it	lt
  40424a:	2701      	movlt	r7, #1
  40424c:	2100      	movs	r1, #0
  40424e:	2f17      	cmp	r7, #23
  404250:	6461      	str	r1, [r4, #68]	; 0x44
  404252:	d90a      	bls.n	40426a <_dtoa_r+0x762>
  404254:	2201      	movs	r2, #1
  404256:	2304      	movs	r3, #4
  404258:	005b      	lsls	r3, r3, #1
  40425a:	f103 0014 	add.w	r0, r3, #20
  40425e:	4287      	cmp	r7, r0
  404260:	4611      	mov	r1, r2
  404262:	f102 0201 	add.w	r2, r2, #1
  404266:	d2f7      	bcs.n	404258 <_dtoa_r+0x750>
  404268:	6461      	str	r1, [r4, #68]	; 0x44
  40426a:	4620      	mov	r0, r4
  40426c:	f001 fc3a 	bl	405ae4 <_Balloc>
  404270:	2e0e      	cmp	r6, #14
  404272:	9004      	str	r0, [sp, #16]
  404274:	6420      	str	r0, [r4, #64]	; 0x40
  404276:	f63f ad41 	bhi.w	403cfc <_dtoa_r+0x1f4>
  40427a:	2d00      	cmp	r5, #0
  40427c:	f43f ad3e 	beq.w	403cfc <_dtoa_r+0x1f4>
  404280:	9902      	ldr	r1, [sp, #8]
  404282:	2900      	cmp	r1, #0
  404284:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404288:	f340 8202 	ble.w	404690 <_dtoa_r+0xb88>
  40428c:	4bb8      	ldr	r3, [pc, #736]	; (404570 <_dtoa_r+0xa68>)
  40428e:	f001 020f 	and.w	r2, r1, #15
  404292:	110d      	asrs	r5, r1, #4
  404294:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404298:	06e9      	lsls	r1, r5, #27
  40429a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40429e:	f140 81ae 	bpl.w	4045fe <_dtoa_r+0xaf6>
  4042a2:	4bb4      	ldr	r3, [pc, #720]	; (404574 <_dtoa_r+0xa6c>)
  4042a4:	4650      	mov	r0, sl
  4042a6:	4659      	mov	r1, fp
  4042a8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4042ac:	f7fd fd08 	bl	401cc0 <__aeabi_ddiv>
  4042b0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4042b4:	f005 050f 	and.w	r5, r5, #15
  4042b8:	f04f 0a03 	mov.w	sl, #3
  4042bc:	b18d      	cbz	r5, 4042e2 <_dtoa_r+0x7da>
  4042be:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404574 <_dtoa_r+0xa6c>
  4042c2:	07ea      	lsls	r2, r5, #31
  4042c4:	d509      	bpl.n	4042da <_dtoa_r+0x7d2>
  4042c6:	4630      	mov	r0, r6
  4042c8:	4639      	mov	r1, r7
  4042ca:	e9d8 2300 	ldrd	r2, r3, [r8]
  4042ce:	f7fd fbcd 	bl	401a6c <__aeabi_dmul>
  4042d2:	f10a 0a01 	add.w	sl, sl, #1
  4042d6:	4606      	mov	r6, r0
  4042d8:	460f      	mov	r7, r1
  4042da:	106d      	asrs	r5, r5, #1
  4042dc:	f108 0808 	add.w	r8, r8, #8
  4042e0:	d1ef      	bne.n	4042c2 <_dtoa_r+0x7ba>
  4042e2:	463b      	mov	r3, r7
  4042e4:	4632      	mov	r2, r6
  4042e6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4042ea:	f7fd fce9 	bl	401cc0 <__aeabi_ddiv>
  4042ee:	4607      	mov	r7, r0
  4042f0:	4688      	mov	r8, r1
  4042f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4042f4:	b143      	cbz	r3, 404308 <_dtoa_r+0x800>
  4042f6:	2200      	movs	r2, #0
  4042f8:	4b9f      	ldr	r3, [pc, #636]	; (404578 <_dtoa_r+0xa70>)
  4042fa:	4638      	mov	r0, r7
  4042fc:	4641      	mov	r1, r8
  4042fe:	f002 fc6f 	bl	406be0 <__aeabi_dcmplt>
  404302:	2800      	cmp	r0, #0
  404304:	f040 8286 	bne.w	404814 <_dtoa_r+0xd0c>
  404308:	4650      	mov	r0, sl
  40430a:	f7fd fb49 	bl	4019a0 <__aeabi_i2d>
  40430e:	463a      	mov	r2, r7
  404310:	4643      	mov	r3, r8
  404312:	f7fd fbab 	bl	401a6c <__aeabi_dmul>
  404316:	4b99      	ldr	r3, [pc, #612]	; (40457c <_dtoa_r+0xa74>)
  404318:	2200      	movs	r2, #0
  40431a:	f7fd f9f5 	bl	401708 <__adddf3>
  40431e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404320:	4605      	mov	r5, r0
  404322:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404326:	2b00      	cmp	r3, #0
  404328:	f000 813e 	beq.w	4045a8 <_dtoa_r+0xaa0>
  40432c:	9b02      	ldr	r3, [sp, #8]
  40432e:	9315      	str	r3, [sp, #84]	; 0x54
  404330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404332:	9312      	str	r3, [sp, #72]	; 0x48
  404334:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404336:	2b00      	cmp	r3, #0
  404338:	f000 81fa 	beq.w	404730 <_dtoa_r+0xc28>
  40433c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40433e:	4b8c      	ldr	r3, [pc, #560]	; (404570 <_dtoa_r+0xa68>)
  404340:	498f      	ldr	r1, [pc, #572]	; (404580 <_dtoa_r+0xa78>)
  404342:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404346:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40434a:	2000      	movs	r0, #0
  40434c:	f7fd fcb8 	bl	401cc0 <__aeabi_ddiv>
  404350:	462a      	mov	r2, r5
  404352:	4633      	mov	r3, r6
  404354:	f7fd f9d6 	bl	401704 <__aeabi_dsub>
  404358:	4682      	mov	sl, r0
  40435a:	468b      	mov	fp, r1
  40435c:	4638      	mov	r0, r7
  40435e:	4641      	mov	r1, r8
  404360:	f002 fc7c 	bl	406c5c <__aeabi_d2iz>
  404364:	4605      	mov	r5, r0
  404366:	f7fd fb1b 	bl	4019a0 <__aeabi_i2d>
  40436a:	4602      	mov	r2, r0
  40436c:	460b      	mov	r3, r1
  40436e:	4638      	mov	r0, r7
  404370:	4641      	mov	r1, r8
  404372:	f7fd f9c7 	bl	401704 <__aeabi_dsub>
  404376:	3530      	adds	r5, #48	; 0x30
  404378:	fa5f f885 	uxtb.w	r8, r5
  40437c:	9d04      	ldr	r5, [sp, #16]
  40437e:	4606      	mov	r6, r0
  404380:	460f      	mov	r7, r1
  404382:	f885 8000 	strb.w	r8, [r5]
  404386:	4602      	mov	r2, r0
  404388:	460b      	mov	r3, r1
  40438a:	4650      	mov	r0, sl
  40438c:	4659      	mov	r1, fp
  40438e:	3501      	adds	r5, #1
  404390:	f002 fc44 	bl	406c1c <__aeabi_dcmpgt>
  404394:	2800      	cmp	r0, #0
  404396:	d154      	bne.n	404442 <_dtoa_r+0x93a>
  404398:	4632      	mov	r2, r6
  40439a:	463b      	mov	r3, r7
  40439c:	2000      	movs	r0, #0
  40439e:	4976      	ldr	r1, [pc, #472]	; (404578 <_dtoa_r+0xa70>)
  4043a0:	f7fd f9b0 	bl	401704 <__aeabi_dsub>
  4043a4:	4602      	mov	r2, r0
  4043a6:	460b      	mov	r3, r1
  4043a8:	4650      	mov	r0, sl
  4043aa:	4659      	mov	r1, fp
  4043ac:	f002 fc36 	bl	406c1c <__aeabi_dcmpgt>
  4043b0:	2800      	cmp	r0, #0
  4043b2:	f040 8270 	bne.w	404896 <_dtoa_r+0xd8e>
  4043b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4043b8:	2a01      	cmp	r2, #1
  4043ba:	f000 8111 	beq.w	4045e0 <_dtoa_r+0xad8>
  4043be:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4043c0:	9a04      	ldr	r2, [sp, #16]
  4043c2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4043c6:	4413      	add	r3, r2
  4043c8:	4699      	mov	r9, r3
  4043ca:	e00d      	b.n	4043e8 <_dtoa_r+0x8e0>
  4043cc:	2000      	movs	r0, #0
  4043ce:	496a      	ldr	r1, [pc, #424]	; (404578 <_dtoa_r+0xa70>)
  4043d0:	f7fd f998 	bl	401704 <__aeabi_dsub>
  4043d4:	4652      	mov	r2, sl
  4043d6:	465b      	mov	r3, fp
  4043d8:	f002 fc02 	bl	406be0 <__aeabi_dcmplt>
  4043dc:	2800      	cmp	r0, #0
  4043de:	f040 8258 	bne.w	404892 <_dtoa_r+0xd8a>
  4043e2:	454d      	cmp	r5, r9
  4043e4:	f000 80fa 	beq.w	4045dc <_dtoa_r+0xad4>
  4043e8:	4650      	mov	r0, sl
  4043ea:	4659      	mov	r1, fp
  4043ec:	2200      	movs	r2, #0
  4043ee:	4b65      	ldr	r3, [pc, #404]	; (404584 <_dtoa_r+0xa7c>)
  4043f0:	f7fd fb3c 	bl	401a6c <__aeabi_dmul>
  4043f4:	2200      	movs	r2, #0
  4043f6:	4b63      	ldr	r3, [pc, #396]	; (404584 <_dtoa_r+0xa7c>)
  4043f8:	4682      	mov	sl, r0
  4043fa:	468b      	mov	fp, r1
  4043fc:	4630      	mov	r0, r6
  4043fe:	4639      	mov	r1, r7
  404400:	f7fd fb34 	bl	401a6c <__aeabi_dmul>
  404404:	460f      	mov	r7, r1
  404406:	4606      	mov	r6, r0
  404408:	f002 fc28 	bl	406c5c <__aeabi_d2iz>
  40440c:	4680      	mov	r8, r0
  40440e:	f7fd fac7 	bl	4019a0 <__aeabi_i2d>
  404412:	4602      	mov	r2, r0
  404414:	460b      	mov	r3, r1
  404416:	4630      	mov	r0, r6
  404418:	4639      	mov	r1, r7
  40441a:	f7fd f973 	bl	401704 <__aeabi_dsub>
  40441e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404422:	fa5f f888 	uxtb.w	r8, r8
  404426:	4652      	mov	r2, sl
  404428:	465b      	mov	r3, fp
  40442a:	f805 8b01 	strb.w	r8, [r5], #1
  40442e:	4606      	mov	r6, r0
  404430:	460f      	mov	r7, r1
  404432:	f002 fbd5 	bl	406be0 <__aeabi_dcmplt>
  404436:	4632      	mov	r2, r6
  404438:	463b      	mov	r3, r7
  40443a:	2800      	cmp	r0, #0
  40443c:	d0c6      	beq.n	4043cc <_dtoa_r+0x8c4>
  40443e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404442:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404444:	9302      	str	r3, [sp, #8]
  404446:	e523      	b.n	403e90 <_dtoa_r+0x388>
  404448:	2300      	movs	r3, #0
  40444a:	930b      	str	r3, [sp, #44]	; 0x2c
  40444c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40444e:	2b00      	cmp	r3, #0
  404450:	f340 80dc 	ble.w	40460c <_dtoa_r+0xb04>
  404454:	461f      	mov	r7, r3
  404456:	461e      	mov	r6, r3
  404458:	930f      	str	r3, [sp, #60]	; 0x3c
  40445a:	930a      	str	r3, [sp, #40]	; 0x28
  40445c:	e6f6      	b.n	40424c <_dtoa_r+0x744>
  40445e:	2301      	movs	r3, #1
  404460:	930b      	str	r3, [sp, #44]	; 0x2c
  404462:	e7f3      	b.n	40444c <_dtoa_r+0x944>
  404464:	f1ba 0f00 	cmp.w	sl, #0
  404468:	f47f ada8 	bne.w	403fbc <_dtoa_r+0x4b4>
  40446c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404470:	2b00      	cmp	r3, #0
  404472:	f47f adba 	bne.w	403fea <_dtoa_r+0x4e2>
  404476:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40447a:	0d3f      	lsrs	r7, r7, #20
  40447c:	053f      	lsls	r7, r7, #20
  40447e:	2f00      	cmp	r7, #0
  404480:	f000 820d 	beq.w	40489e <_dtoa_r+0xd96>
  404484:	9b08      	ldr	r3, [sp, #32]
  404486:	3301      	adds	r3, #1
  404488:	9308      	str	r3, [sp, #32]
  40448a:	9b06      	ldr	r3, [sp, #24]
  40448c:	3301      	adds	r3, #1
  40448e:	9306      	str	r3, [sp, #24]
  404490:	2301      	movs	r3, #1
  404492:	930c      	str	r3, [sp, #48]	; 0x30
  404494:	e5ab      	b.n	403fee <_dtoa_r+0x4e6>
  404496:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404498:	2b00      	cmp	r3, #0
  40449a:	f73f ac42 	bgt.w	403d22 <_dtoa_r+0x21a>
  40449e:	f040 8221 	bne.w	4048e4 <_dtoa_r+0xddc>
  4044a2:	2200      	movs	r2, #0
  4044a4:	4b38      	ldr	r3, [pc, #224]	; (404588 <_dtoa_r+0xa80>)
  4044a6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4044aa:	f7fd fadf 	bl	401a6c <__aeabi_dmul>
  4044ae:	4652      	mov	r2, sl
  4044b0:	465b      	mov	r3, fp
  4044b2:	f002 fba9 	bl	406c08 <__aeabi_dcmpge>
  4044b6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4044ba:	4646      	mov	r6, r8
  4044bc:	2800      	cmp	r0, #0
  4044be:	d041      	beq.n	404544 <_dtoa_r+0xa3c>
  4044c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4044c2:	9d04      	ldr	r5, [sp, #16]
  4044c4:	43db      	mvns	r3, r3
  4044c6:	9302      	str	r3, [sp, #8]
  4044c8:	4641      	mov	r1, r8
  4044ca:	4620      	mov	r0, r4
  4044cc:	f001 fb30 	bl	405b30 <_Bfree>
  4044d0:	2e00      	cmp	r6, #0
  4044d2:	f43f acdd 	beq.w	403e90 <_dtoa_r+0x388>
  4044d6:	e6a7      	b.n	404228 <_dtoa_r+0x720>
  4044d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4044da:	4649      	mov	r1, r9
  4044dc:	4620      	mov	r0, r4
  4044de:	f001 fc5d 	bl	405d9c <__pow5mult>
  4044e2:	4681      	mov	r9, r0
  4044e4:	e558      	b.n	403f98 <_dtoa_r+0x490>
  4044e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4044e8:	2a00      	cmp	r2, #0
  4044ea:	f000 8187 	beq.w	4047fc <_dtoa_r+0xcf4>
  4044ee:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4044f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4044f4:	9d08      	ldr	r5, [sp, #32]
  4044f6:	e4f2      	b.n	403ede <_dtoa_r+0x3d6>
  4044f8:	f1ba 0f00 	cmp.w	sl, #0
  4044fc:	f47f ad75 	bne.w	403fea <_dtoa_r+0x4e2>
  404500:	e7b4      	b.n	40446c <_dtoa_r+0x964>
  404502:	f001 fb1f 	bl	405b44 <__multadd>
  404506:	4647      	mov	r7, r8
  404508:	4606      	mov	r6, r0
  40450a:	4683      	mov	fp, r0
  40450c:	e5be      	b.n	40408c <_dtoa_r+0x584>
  40450e:	4601      	mov	r1, r0
  404510:	4620      	mov	r0, r4
  404512:	9306      	str	r3, [sp, #24]
  404514:	f001 fb0c 	bl	405b30 <_Bfree>
  404518:	2201      	movs	r2, #1
  40451a:	9b06      	ldr	r3, [sp, #24]
  40451c:	e5e0      	b.n	4040e0 <_dtoa_r+0x5d8>
  40451e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404520:	2b02      	cmp	r3, #2
  404522:	f77f ad96 	ble.w	404052 <_dtoa_r+0x54a>
  404526:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404528:	2b00      	cmp	r3, #0
  40452a:	d1c9      	bne.n	4044c0 <_dtoa_r+0x9b8>
  40452c:	4641      	mov	r1, r8
  40452e:	2205      	movs	r2, #5
  404530:	4620      	mov	r0, r4
  404532:	f001 fb07 	bl	405b44 <__multadd>
  404536:	4601      	mov	r1, r0
  404538:	4680      	mov	r8, r0
  40453a:	4648      	mov	r0, r9
  40453c:	f001 fcd0 	bl	405ee0 <__mcmp>
  404540:	2800      	cmp	r0, #0
  404542:	ddbd      	ble.n	4044c0 <_dtoa_r+0x9b8>
  404544:	9a02      	ldr	r2, [sp, #8]
  404546:	9904      	ldr	r1, [sp, #16]
  404548:	2331      	movs	r3, #49	; 0x31
  40454a:	3201      	adds	r2, #1
  40454c:	9202      	str	r2, [sp, #8]
  40454e:	700b      	strb	r3, [r1, #0]
  404550:	1c4d      	adds	r5, r1, #1
  404552:	e7b9      	b.n	4044c8 <_dtoa_r+0x9c0>
  404554:	9a02      	ldr	r2, [sp, #8]
  404556:	3201      	adds	r2, #1
  404558:	9202      	str	r2, [sp, #8]
  40455a:	9a04      	ldr	r2, [sp, #16]
  40455c:	2331      	movs	r3, #49	; 0x31
  40455e:	7013      	strb	r3, [r2, #0]
  404560:	e652      	b.n	404208 <_dtoa_r+0x700>
  404562:	2301      	movs	r3, #1
  404564:	930b      	str	r3, [sp, #44]	; 0x2c
  404566:	e666      	b.n	404236 <_dtoa_r+0x72e>
  404568:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40456c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40456e:	e48f      	b.n	403e90 <_dtoa_r+0x388>
  404570:	004071e8 	.word	0x004071e8
  404574:	004071c0 	.word	0x004071c0
  404578:	3ff00000 	.word	0x3ff00000
  40457c:	401c0000 	.word	0x401c0000
  404580:	3fe00000 	.word	0x3fe00000
  404584:	40240000 	.word	0x40240000
  404588:	40140000 	.word	0x40140000
  40458c:	4650      	mov	r0, sl
  40458e:	f7fd fa07 	bl	4019a0 <__aeabi_i2d>
  404592:	463a      	mov	r2, r7
  404594:	4643      	mov	r3, r8
  404596:	f7fd fa69 	bl	401a6c <__aeabi_dmul>
  40459a:	2200      	movs	r2, #0
  40459c:	4bc1      	ldr	r3, [pc, #772]	; (4048a4 <_dtoa_r+0xd9c>)
  40459e:	f7fd f8b3 	bl	401708 <__adddf3>
  4045a2:	4605      	mov	r5, r0
  4045a4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4045a8:	4641      	mov	r1, r8
  4045aa:	2200      	movs	r2, #0
  4045ac:	4bbe      	ldr	r3, [pc, #760]	; (4048a8 <_dtoa_r+0xda0>)
  4045ae:	4638      	mov	r0, r7
  4045b0:	f7fd f8a8 	bl	401704 <__aeabi_dsub>
  4045b4:	462a      	mov	r2, r5
  4045b6:	4633      	mov	r3, r6
  4045b8:	4682      	mov	sl, r0
  4045ba:	468b      	mov	fp, r1
  4045bc:	f002 fb2e 	bl	406c1c <__aeabi_dcmpgt>
  4045c0:	4680      	mov	r8, r0
  4045c2:	2800      	cmp	r0, #0
  4045c4:	f040 8110 	bne.w	4047e8 <_dtoa_r+0xce0>
  4045c8:	462a      	mov	r2, r5
  4045ca:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4045ce:	4650      	mov	r0, sl
  4045d0:	4659      	mov	r1, fp
  4045d2:	f002 fb05 	bl	406be0 <__aeabi_dcmplt>
  4045d6:	b118      	cbz	r0, 4045e0 <_dtoa_r+0xad8>
  4045d8:	4646      	mov	r6, r8
  4045da:	e771      	b.n	4044c0 <_dtoa_r+0x9b8>
  4045dc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4045e0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4045e4:	f7ff bb8a 	b.w	403cfc <_dtoa_r+0x1f4>
  4045e8:	9804      	ldr	r0, [sp, #16]
  4045ea:	f7ff babb 	b.w	403b64 <_dtoa_r+0x5c>
  4045ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4045f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4045f2:	970c      	str	r7, [sp, #48]	; 0x30
  4045f4:	1afb      	subs	r3, r7, r3
  4045f6:	441a      	add	r2, r3
  4045f8:	920d      	str	r2, [sp, #52]	; 0x34
  4045fa:	2700      	movs	r7, #0
  4045fc:	e469      	b.n	403ed2 <_dtoa_r+0x3ca>
  4045fe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404602:	f04f 0a02 	mov.w	sl, #2
  404606:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40460a:	e657      	b.n	4042bc <_dtoa_r+0x7b4>
  40460c:	2100      	movs	r1, #0
  40460e:	2301      	movs	r3, #1
  404610:	6461      	str	r1, [r4, #68]	; 0x44
  404612:	4620      	mov	r0, r4
  404614:	9325      	str	r3, [sp, #148]	; 0x94
  404616:	f001 fa65 	bl	405ae4 <_Balloc>
  40461a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40461c:	9004      	str	r0, [sp, #16]
  40461e:	6420      	str	r0, [r4, #64]	; 0x40
  404620:	930a      	str	r3, [sp, #40]	; 0x28
  404622:	930f      	str	r3, [sp, #60]	; 0x3c
  404624:	e629      	b.n	40427a <_dtoa_r+0x772>
  404626:	2a00      	cmp	r2, #0
  404628:	46d0      	mov	r8, sl
  40462a:	f8cd b018 	str.w	fp, [sp, #24]
  40462e:	469a      	mov	sl, r3
  404630:	dd11      	ble.n	404656 <_dtoa_r+0xb4e>
  404632:	4649      	mov	r1, r9
  404634:	2201      	movs	r2, #1
  404636:	4620      	mov	r0, r4
  404638:	f001 fc00 	bl	405e3c <__lshift>
  40463c:	4641      	mov	r1, r8
  40463e:	4681      	mov	r9, r0
  404640:	f001 fc4e 	bl	405ee0 <__mcmp>
  404644:	2800      	cmp	r0, #0
  404646:	f340 8146 	ble.w	4048d6 <_dtoa_r+0xdce>
  40464a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40464e:	f000 8106 	beq.w	40485e <_dtoa_r+0xd56>
  404652:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404656:	46b3      	mov	fp, r6
  404658:	f887 a000 	strb.w	sl, [r7]
  40465c:	1c7d      	adds	r5, r7, #1
  40465e:	9e06      	ldr	r6, [sp, #24]
  404660:	e5d2      	b.n	404208 <_dtoa_r+0x700>
  404662:	d104      	bne.n	40466e <_dtoa_r+0xb66>
  404664:	f01a 0f01 	tst.w	sl, #1
  404668:	d001      	beq.n	40466e <_dtoa_r+0xb66>
  40466a:	e5bd      	b.n	4041e8 <_dtoa_r+0x6e0>
  40466c:	4615      	mov	r5, r2
  40466e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404672:	2b30      	cmp	r3, #48	; 0x30
  404674:	f105 32ff 	add.w	r2, r5, #4294967295
  404678:	d0f8      	beq.n	40466c <_dtoa_r+0xb64>
  40467a:	e5c5      	b.n	404208 <_dtoa_r+0x700>
  40467c:	9904      	ldr	r1, [sp, #16]
  40467e:	2230      	movs	r2, #48	; 0x30
  404680:	700a      	strb	r2, [r1, #0]
  404682:	9a02      	ldr	r2, [sp, #8]
  404684:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404688:	3201      	adds	r2, #1
  40468a:	9202      	str	r2, [sp, #8]
  40468c:	f7ff bbfc 	b.w	403e88 <_dtoa_r+0x380>
  404690:	f000 80bb 	beq.w	40480a <_dtoa_r+0xd02>
  404694:	9b02      	ldr	r3, [sp, #8]
  404696:	425d      	negs	r5, r3
  404698:	4b84      	ldr	r3, [pc, #528]	; (4048ac <_dtoa_r+0xda4>)
  40469a:	f005 020f 	and.w	r2, r5, #15
  40469e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4046a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4046a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4046aa:	f7fd f9df 	bl	401a6c <__aeabi_dmul>
  4046ae:	112d      	asrs	r5, r5, #4
  4046b0:	4607      	mov	r7, r0
  4046b2:	4688      	mov	r8, r1
  4046b4:	f000 812c 	beq.w	404910 <_dtoa_r+0xe08>
  4046b8:	4e7d      	ldr	r6, [pc, #500]	; (4048b0 <_dtoa_r+0xda8>)
  4046ba:	f04f 0a02 	mov.w	sl, #2
  4046be:	07eb      	lsls	r3, r5, #31
  4046c0:	d509      	bpl.n	4046d6 <_dtoa_r+0xbce>
  4046c2:	4638      	mov	r0, r7
  4046c4:	4641      	mov	r1, r8
  4046c6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4046ca:	f7fd f9cf 	bl	401a6c <__aeabi_dmul>
  4046ce:	f10a 0a01 	add.w	sl, sl, #1
  4046d2:	4607      	mov	r7, r0
  4046d4:	4688      	mov	r8, r1
  4046d6:	106d      	asrs	r5, r5, #1
  4046d8:	f106 0608 	add.w	r6, r6, #8
  4046dc:	d1ef      	bne.n	4046be <_dtoa_r+0xbb6>
  4046de:	e608      	b.n	4042f2 <_dtoa_r+0x7ea>
  4046e0:	6871      	ldr	r1, [r6, #4]
  4046e2:	4620      	mov	r0, r4
  4046e4:	f001 f9fe 	bl	405ae4 <_Balloc>
  4046e8:	6933      	ldr	r3, [r6, #16]
  4046ea:	3302      	adds	r3, #2
  4046ec:	009a      	lsls	r2, r3, #2
  4046ee:	4605      	mov	r5, r0
  4046f0:	f106 010c 	add.w	r1, r6, #12
  4046f4:	300c      	adds	r0, #12
  4046f6:	f001 f8eb 	bl	4058d0 <memcpy>
  4046fa:	4629      	mov	r1, r5
  4046fc:	2201      	movs	r2, #1
  4046fe:	4620      	mov	r0, r4
  404700:	f001 fb9c 	bl	405e3c <__lshift>
  404704:	9006      	str	r0, [sp, #24]
  404706:	e4b5      	b.n	404074 <_dtoa_r+0x56c>
  404708:	2b39      	cmp	r3, #57	; 0x39
  40470a:	f8cd b018 	str.w	fp, [sp, #24]
  40470e:	46d0      	mov	r8, sl
  404710:	f000 80a5 	beq.w	40485e <_dtoa_r+0xd56>
  404714:	f103 0a01 	add.w	sl, r3, #1
  404718:	46b3      	mov	fp, r6
  40471a:	f887 a000 	strb.w	sl, [r7]
  40471e:	1c7d      	adds	r5, r7, #1
  404720:	9e06      	ldr	r6, [sp, #24]
  404722:	e571      	b.n	404208 <_dtoa_r+0x700>
  404724:	465a      	mov	r2, fp
  404726:	46d0      	mov	r8, sl
  404728:	46b3      	mov	fp, r6
  40472a:	469a      	mov	sl, r3
  40472c:	4616      	mov	r6, r2
  40472e:	e54f      	b.n	4041d0 <_dtoa_r+0x6c8>
  404730:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404732:	495e      	ldr	r1, [pc, #376]	; (4048ac <_dtoa_r+0xda4>)
  404734:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404738:	462a      	mov	r2, r5
  40473a:	4633      	mov	r3, r6
  40473c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404740:	f7fd f994 	bl	401a6c <__aeabi_dmul>
  404744:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404748:	4638      	mov	r0, r7
  40474a:	4641      	mov	r1, r8
  40474c:	f002 fa86 	bl	406c5c <__aeabi_d2iz>
  404750:	4605      	mov	r5, r0
  404752:	f7fd f925 	bl	4019a0 <__aeabi_i2d>
  404756:	460b      	mov	r3, r1
  404758:	4602      	mov	r2, r0
  40475a:	4641      	mov	r1, r8
  40475c:	4638      	mov	r0, r7
  40475e:	f7fc ffd1 	bl	401704 <__aeabi_dsub>
  404762:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404764:	460f      	mov	r7, r1
  404766:	9904      	ldr	r1, [sp, #16]
  404768:	3530      	adds	r5, #48	; 0x30
  40476a:	2b01      	cmp	r3, #1
  40476c:	700d      	strb	r5, [r1, #0]
  40476e:	4606      	mov	r6, r0
  404770:	f101 0501 	add.w	r5, r1, #1
  404774:	d026      	beq.n	4047c4 <_dtoa_r+0xcbc>
  404776:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404778:	9a04      	ldr	r2, [sp, #16]
  40477a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4048b8 <_dtoa_r+0xdb0>
  40477e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404782:	4413      	add	r3, r2
  404784:	f04f 0a00 	mov.w	sl, #0
  404788:	4699      	mov	r9, r3
  40478a:	4652      	mov	r2, sl
  40478c:	465b      	mov	r3, fp
  40478e:	4630      	mov	r0, r6
  404790:	4639      	mov	r1, r7
  404792:	f7fd f96b 	bl	401a6c <__aeabi_dmul>
  404796:	460f      	mov	r7, r1
  404798:	4606      	mov	r6, r0
  40479a:	f002 fa5f 	bl	406c5c <__aeabi_d2iz>
  40479e:	4680      	mov	r8, r0
  4047a0:	f7fd f8fe 	bl	4019a0 <__aeabi_i2d>
  4047a4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4047a8:	4602      	mov	r2, r0
  4047aa:	460b      	mov	r3, r1
  4047ac:	4630      	mov	r0, r6
  4047ae:	4639      	mov	r1, r7
  4047b0:	f7fc ffa8 	bl	401704 <__aeabi_dsub>
  4047b4:	f805 8b01 	strb.w	r8, [r5], #1
  4047b8:	454d      	cmp	r5, r9
  4047ba:	4606      	mov	r6, r0
  4047bc:	460f      	mov	r7, r1
  4047be:	d1e4      	bne.n	40478a <_dtoa_r+0xc82>
  4047c0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4047c4:	4b3b      	ldr	r3, [pc, #236]	; (4048b4 <_dtoa_r+0xdac>)
  4047c6:	2200      	movs	r2, #0
  4047c8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4047cc:	f7fc ff9c 	bl	401708 <__adddf3>
  4047d0:	4632      	mov	r2, r6
  4047d2:	463b      	mov	r3, r7
  4047d4:	f002 fa04 	bl	406be0 <__aeabi_dcmplt>
  4047d8:	2800      	cmp	r0, #0
  4047da:	d046      	beq.n	40486a <_dtoa_r+0xd62>
  4047dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4047de:	9302      	str	r3, [sp, #8]
  4047e0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4047e4:	f7ff bb43 	b.w	403e6e <_dtoa_r+0x366>
  4047e8:	f04f 0800 	mov.w	r8, #0
  4047ec:	4646      	mov	r6, r8
  4047ee:	e6a9      	b.n	404544 <_dtoa_r+0xa3c>
  4047f0:	9b08      	ldr	r3, [sp, #32]
  4047f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4047f4:	1a9d      	subs	r5, r3, r2
  4047f6:	2300      	movs	r3, #0
  4047f8:	f7ff bb71 	b.w	403ede <_dtoa_r+0x3d6>
  4047fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4047fe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404800:	9d08      	ldr	r5, [sp, #32]
  404802:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404806:	f7ff bb6a 	b.w	403ede <_dtoa_r+0x3d6>
  40480a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40480e:	f04f 0a02 	mov.w	sl, #2
  404812:	e56e      	b.n	4042f2 <_dtoa_r+0x7ea>
  404814:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404816:	2b00      	cmp	r3, #0
  404818:	f43f aeb8 	beq.w	40458c <_dtoa_r+0xa84>
  40481c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40481e:	2b00      	cmp	r3, #0
  404820:	f77f aede 	ble.w	4045e0 <_dtoa_r+0xad8>
  404824:	2200      	movs	r2, #0
  404826:	4b24      	ldr	r3, [pc, #144]	; (4048b8 <_dtoa_r+0xdb0>)
  404828:	4638      	mov	r0, r7
  40482a:	4641      	mov	r1, r8
  40482c:	f7fd f91e 	bl	401a6c <__aeabi_dmul>
  404830:	4607      	mov	r7, r0
  404832:	4688      	mov	r8, r1
  404834:	f10a 0001 	add.w	r0, sl, #1
  404838:	f7fd f8b2 	bl	4019a0 <__aeabi_i2d>
  40483c:	463a      	mov	r2, r7
  40483e:	4643      	mov	r3, r8
  404840:	f7fd f914 	bl	401a6c <__aeabi_dmul>
  404844:	2200      	movs	r2, #0
  404846:	4b17      	ldr	r3, [pc, #92]	; (4048a4 <_dtoa_r+0xd9c>)
  404848:	f7fc ff5e 	bl	401708 <__adddf3>
  40484c:	9a02      	ldr	r2, [sp, #8]
  40484e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404850:	9312      	str	r3, [sp, #72]	; 0x48
  404852:	3a01      	subs	r2, #1
  404854:	4605      	mov	r5, r0
  404856:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40485a:	9215      	str	r2, [sp, #84]	; 0x54
  40485c:	e56a      	b.n	404334 <_dtoa_r+0x82c>
  40485e:	2239      	movs	r2, #57	; 0x39
  404860:	46b3      	mov	fp, r6
  404862:	703a      	strb	r2, [r7, #0]
  404864:	9e06      	ldr	r6, [sp, #24]
  404866:	1c7d      	adds	r5, r7, #1
  404868:	e4c0      	b.n	4041ec <_dtoa_r+0x6e4>
  40486a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40486e:	2000      	movs	r0, #0
  404870:	4910      	ldr	r1, [pc, #64]	; (4048b4 <_dtoa_r+0xdac>)
  404872:	f7fc ff47 	bl	401704 <__aeabi_dsub>
  404876:	4632      	mov	r2, r6
  404878:	463b      	mov	r3, r7
  40487a:	f002 f9cf 	bl	406c1c <__aeabi_dcmpgt>
  40487e:	b908      	cbnz	r0, 404884 <_dtoa_r+0xd7c>
  404880:	e6ae      	b.n	4045e0 <_dtoa_r+0xad8>
  404882:	4615      	mov	r5, r2
  404884:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404888:	2b30      	cmp	r3, #48	; 0x30
  40488a:	f105 32ff 	add.w	r2, r5, #4294967295
  40488e:	d0f8      	beq.n	404882 <_dtoa_r+0xd7a>
  404890:	e5d7      	b.n	404442 <_dtoa_r+0x93a>
  404892:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404896:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404898:	9302      	str	r3, [sp, #8]
  40489a:	f7ff bae8 	b.w	403e6e <_dtoa_r+0x366>
  40489e:	970c      	str	r7, [sp, #48]	; 0x30
  4048a0:	f7ff bba5 	b.w	403fee <_dtoa_r+0x4e6>
  4048a4:	401c0000 	.word	0x401c0000
  4048a8:	40140000 	.word	0x40140000
  4048ac:	004071e8 	.word	0x004071e8
  4048b0:	004071c0 	.word	0x004071c0
  4048b4:	3fe00000 	.word	0x3fe00000
  4048b8:	40240000 	.word	0x40240000
  4048bc:	2b39      	cmp	r3, #57	; 0x39
  4048be:	f8cd b018 	str.w	fp, [sp, #24]
  4048c2:	46d0      	mov	r8, sl
  4048c4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4048c8:	469a      	mov	sl, r3
  4048ca:	d0c8      	beq.n	40485e <_dtoa_r+0xd56>
  4048cc:	f1bb 0f00 	cmp.w	fp, #0
  4048d0:	f73f aebf 	bgt.w	404652 <_dtoa_r+0xb4a>
  4048d4:	e6bf      	b.n	404656 <_dtoa_r+0xb4e>
  4048d6:	f47f aebe 	bne.w	404656 <_dtoa_r+0xb4e>
  4048da:	f01a 0f01 	tst.w	sl, #1
  4048de:	f43f aeba 	beq.w	404656 <_dtoa_r+0xb4e>
  4048e2:	e6b2      	b.n	40464a <_dtoa_r+0xb42>
  4048e4:	f04f 0800 	mov.w	r8, #0
  4048e8:	4646      	mov	r6, r8
  4048ea:	e5e9      	b.n	4044c0 <_dtoa_r+0x9b8>
  4048ec:	4631      	mov	r1, r6
  4048ee:	2300      	movs	r3, #0
  4048f0:	220a      	movs	r2, #10
  4048f2:	4620      	mov	r0, r4
  4048f4:	f001 f926 	bl	405b44 <__multadd>
  4048f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4048fa:	2b00      	cmp	r3, #0
  4048fc:	4606      	mov	r6, r0
  4048fe:	dd0a      	ble.n	404916 <_dtoa_r+0xe0e>
  404900:	930a      	str	r3, [sp, #40]	; 0x28
  404902:	f7ff bbaa 	b.w	40405a <_dtoa_r+0x552>
  404906:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404908:	2b02      	cmp	r3, #2
  40490a:	dc23      	bgt.n	404954 <_dtoa_r+0xe4c>
  40490c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40490e:	e43b      	b.n	404188 <_dtoa_r+0x680>
  404910:	f04f 0a02 	mov.w	sl, #2
  404914:	e4ed      	b.n	4042f2 <_dtoa_r+0x7ea>
  404916:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404918:	2b02      	cmp	r3, #2
  40491a:	dc1b      	bgt.n	404954 <_dtoa_r+0xe4c>
  40491c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40491e:	e7ef      	b.n	404900 <_dtoa_r+0xdf8>
  404920:	2500      	movs	r5, #0
  404922:	6465      	str	r5, [r4, #68]	; 0x44
  404924:	4629      	mov	r1, r5
  404926:	4620      	mov	r0, r4
  404928:	f001 f8dc 	bl	405ae4 <_Balloc>
  40492c:	f04f 33ff 	mov.w	r3, #4294967295
  404930:	930a      	str	r3, [sp, #40]	; 0x28
  404932:	930f      	str	r3, [sp, #60]	; 0x3c
  404934:	2301      	movs	r3, #1
  404936:	9004      	str	r0, [sp, #16]
  404938:	9525      	str	r5, [sp, #148]	; 0x94
  40493a:	6420      	str	r0, [r4, #64]	; 0x40
  40493c:	930b      	str	r3, [sp, #44]	; 0x2c
  40493e:	f7ff b9dd 	b.w	403cfc <_dtoa_r+0x1f4>
  404942:	2501      	movs	r5, #1
  404944:	f7ff b9a5 	b.w	403c92 <_dtoa_r+0x18a>
  404948:	f43f ab69 	beq.w	40401e <_dtoa_r+0x516>
  40494c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404950:	f7ff bbf9 	b.w	404146 <_dtoa_r+0x63e>
  404954:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404956:	930a      	str	r3, [sp, #40]	; 0x28
  404958:	e5e5      	b.n	404526 <_dtoa_r+0xa1e>
  40495a:	bf00      	nop

0040495c <__sflush_r>:
  40495c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404960:	b29a      	uxth	r2, r3
  404962:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404966:	460d      	mov	r5, r1
  404968:	0711      	lsls	r1, r2, #28
  40496a:	4680      	mov	r8, r0
  40496c:	d43a      	bmi.n	4049e4 <__sflush_r+0x88>
  40496e:	686a      	ldr	r2, [r5, #4]
  404970:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404974:	2a00      	cmp	r2, #0
  404976:	81ab      	strh	r3, [r5, #12]
  404978:	dd6f      	ble.n	404a5a <__sflush_r+0xfe>
  40497a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40497c:	2c00      	cmp	r4, #0
  40497e:	d049      	beq.n	404a14 <__sflush_r+0xb8>
  404980:	2200      	movs	r2, #0
  404982:	b29b      	uxth	r3, r3
  404984:	f8d8 6000 	ldr.w	r6, [r8]
  404988:	f8c8 2000 	str.w	r2, [r8]
  40498c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404990:	d067      	beq.n	404a62 <__sflush_r+0x106>
  404992:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404994:	075f      	lsls	r7, r3, #29
  404996:	d505      	bpl.n	4049a4 <__sflush_r+0x48>
  404998:	6869      	ldr	r1, [r5, #4]
  40499a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40499c:	1a52      	subs	r2, r2, r1
  40499e:	b10b      	cbz	r3, 4049a4 <__sflush_r+0x48>
  4049a0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4049a2:	1ad2      	subs	r2, r2, r3
  4049a4:	2300      	movs	r3, #0
  4049a6:	69e9      	ldr	r1, [r5, #28]
  4049a8:	4640      	mov	r0, r8
  4049aa:	47a0      	blx	r4
  4049ac:	1c44      	adds	r4, r0, #1
  4049ae:	d03c      	beq.n	404a2a <__sflush_r+0xce>
  4049b0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4049b4:	692a      	ldr	r2, [r5, #16]
  4049b6:	602a      	str	r2, [r5, #0]
  4049b8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4049bc:	2200      	movs	r2, #0
  4049be:	81ab      	strh	r3, [r5, #12]
  4049c0:	04db      	lsls	r3, r3, #19
  4049c2:	606a      	str	r2, [r5, #4]
  4049c4:	d447      	bmi.n	404a56 <__sflush_r+0xfa>
  4049c6:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4049c8:	f8c8 6000 	str.w	r6, [r8]
  4049cc:	b311      	cbz	r1, 404a14 <__sflush_r+0xb8>
  4049ce:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4049d2:	4299      	cmp	r1, r3
  4049d4:	d002      	beq.n	4049dc <__sflush_r+0x80>
  4049d6:	4640      	mov	r0, r8
  4049d8:	f000 f95a 	bl	404c90 <_free_r>
  4049dc:	2000      	movs	r0, #0
  4049de:	6328      	str	r0, [r5, #48]	; 0x30
  4049e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4049e4:	692e      	ldr	r6, [r5, #16]
  4049e6:	b1ae      	cbz	r6, 404a14 <__sflush_r+0xb8>
  4049e8:	682c      	ldr	r4, [r5, #0]
  4049ea:	602e      	str	r6, [r5, #0]
  4049ec:	0791      	lsls	r1, r2, #30
  4049ee:	bf0c      	ite	eq
  4049f0:	696b      	ldreq	r3, [r5, #20]
  4049f2:	2300      	movne	r3, #0
  4049f4:	1ba4      	subs	r4, r4, r6
  4049f6:	60ab      	str	r3, [r5, #8]
  4049f8:	e00a      	b.n	404a10 <__sflush_r+0xb4>
  4049fa:	4623      	mov	r3, r4
  4049fc:	4632      	mov	r2, r6
  4049fe:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404a00:	69e9      	ldr	r1, [r5, #28]
  404a02:	4640      	mov	r0, r8
  404a04:	47b8      	blx	r7
  404a06:	2800      	cmp	r0, #0
  404a08:	eba4 0400 	sub.w	r4, r4, r0
  404a0c:	4406      	add	r6, r0
  404a0e:	dd04      	ble.n	404a1a <__sflush_r+0xbe>
  404a10:	2c00      	cmp	r4, #0
  404a12:	dcf2      	bgt.n	4049fa <__sflush_r+0x9e>
  404a14:	2000      	movs	r0, #0
  404a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a1a:	89ab      	ldrh	r3, [r5, #12]
  404a1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a20:	81ab      	strh	r3, [r5, #12]
  404a22:	f04f 30ff 	mov.w	r0, #4294967295
  404a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a2a:	f8d8 4000 	ldr.w	r4, [r8]
  404a2e:	2c1d      	cmp	r4, #29
  404a30:	d8f3      	bhi.n	404a1a <__sflush_r+0xbe>
  404a32:	4b19      	ldr	r3, [pc, #100]	; (404a98 <__sflush_r+0x13c>)
  404a34:	40e3      	lsrs	r3, r4
  404a36:	43db      	mvns	r3, r3
  404a38:	f013 0301 	ands.w	r3, r3, #1
  404a3c:	d1ed      	bne.n	404a1a <__sflush_r+0xbe>
  404a3e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404a42:	606b      	str	r3, [r5, #4]
  404a44:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404a48:	6929      	ldr	r1, [r5, #16]
  404a4a:	81ab      	strh	r3, [r5, #12]
  404a4c:	04da      	lsls	r2, r3, #19
  404a4e:	6029      	str	r1, [r5, #0]
  404a50:	d5b9      	bpl.n	4049c6 <__sflush_r+0x6a>
  404a52:	2c00      	cmp	r4, #0
  404a54:	d1b7      	bne.n	4049c6 <__sflush_r+0x6a>
  404a56:	6528      	str	r0, [r5, #80]	; 0x50
  404a58:	e7b5      	b.n	4049c6 <__sflush_r+0x6a>
  404a5a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404a5c:	2a00      	cmp	r2, #0
  404a5e:	dc8c      	bgt.n	40497a <__sflush_r+0x1e>
  404a60:	e7d8      	b.n	404a14 <__sflush_r+0xb8>
  404a62:	2301      	movs	r3, #1
  404a64:	69e9      	ldr	r1, [r5, #28]
  404a66:	4640      	mov	r0, r8
  404a68:	47a0      	blx	r4
  404a6a:	1c43      	adds	r3, r0, #1
  404a6c:	4602      	mov	r2, r0
  404a6e:	d002      	beq.n	404a76 <__sflush_r+0x11a>
  404a70:	89ab      	ldrh	r3, [r5, #12]
  404a72:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404a74:	e78e      	b.n	404994 <__sflush_r+0x38>
  404a76:	f8d8 3000 	ldr.w	r3, [r8]
  404a7a:	2b00      	cmp	r3, #0
  404a7c:	d0f8      	beq.n	404a70 <__sflush_r+0x114>
  404a7e:	2b1d      	cmp	r3, #29
  404a80:	d001      	beq.n	404a86 <__sflush_r+0x12a>
  404a82:	2b16      	cmp	r3, #22
  404a84:	d102      	bne.n	404a8c <__sflush_r+0x130>
  404a86:	f8c8 6000 	str.w	r6, [r8]
  404a8a:	e7c3      	b.n	404a14 <__sflush_r+0xb8>
  404a8c:	89ab      	ldrh	r3, [r5, #12]
  404a8e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a92:	81ab      	strh	r3, [r5, #12]
  404a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a98:	20400001 	.word	0x20400001

00404a9c <_fflush_r>:
  404a9c:	b538      	push	{r3, r4, r5, lr}
  404a9e:	460d      	mov	r5, r1
  404aa0:	4604      	mov	r4, r0
  404aa2:	b108      	cbz	r0, 404aa8 <_fflush_r+0xc>
  404aa4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404aa6:	b1bb      	cbz	r3, 404ad8 <_fflush_r+0x3c>
  404aa8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404aac:	b188      	cbz	r0, 404ad2 <_fflush_r+0x36>
  404aae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404ab0:	07db      	lsls	r3, r3, #31
  404ab2:	d401      	bmi.n	404ab8 <_fflush_r+0x1c>
  404ab4:	0581      	lsls	r1, r0, #22
  404ab6:	d517      	bpl.n	404ae8 <_fflush_r+0x4c>
  404ab8:	4620      	mov	r0, r4
  404aba:	4629      	mov	r1, r5
  404abc:	f7ff ff4e 	bl	40495c <__sflush_r>
  404ac0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404ac2:	07da      	lsls	r2, r3, #31
  404ac4:	4604      	mov	r4, r0
  404ac6:	d402      	bmi.n	404ace <_fflush_r+0x32>
  404ac8:	89ab      	ldrh	r3, [r5, #12]
  404aca:	059b      	lsls	r3, r3, #22
  404acc:	d507      	bpl.n	404ade <_fflush_r+0x42>
  404ace:	4620      	mov	r0, r4
  404ad0:	bd38      	pop	{r3, r4, r5, pc}
  404ad2:	4604      	mov	r4, r0
  404ad4:	4620      	mov	r0, r4
  404ad6:	bd38      	pop	{r3, r4, r5, pc}
  404ad8:	f000 f838 	bl	404b4c <__sinit>
  404adc:	e7e4      	b.n	404aa8 <_fflush_r+0xc>
  404ade:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404ae0:	f000 fb72 	bl	4051c8 <__retarget_lock_release_recursive>
  404ae4:	4620      	mov	r0, r4
  404ae6:	bd38      	pop	{r3, r4, r5, pc}
  404ae8:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404aea:	f000 fb6b 	bl	4051c4 <__retarget_lock_acquire_recursive>
  404aee:	e7e3      	b.n	404ab8 <_fflush_r+0x1c>

00404af0 <_cleanup_r>:
  404af0:	4901      	ldr	r1, [pc, #4]	; (404af8 <_cleanup_r+0x8>)
  404af2:	f000 bb2b 	b.w	40514c <_fwalk_reent>
  404af6:	bf00      	nop
  404af8:	004067f9 	.word	0x004067f9

00404afc <std.isra.0>:
  404afc:	b510      	push	{r4, lr}
  404afe:	2300      	movs	r3, #0
  404b00:	4604      	mov	r4, r0
  404b02:	8181      	strh	r1, [r0, #12]
  404b04:	81c2      	strh	r2, [r0, #14]
  404b06:	6003      	str	r3, [r0, #0]
  404b08:	6043      	str	r3, [r0, #4]
  404b0a:	6083      	str	r3, [r0, #8]
  404b0c:	6643      	str	r3, [r0, #100]	; 0x64
  404b0e:	6103      	str	r3, [r0, #16]
  404b10:	6143      	str	r3, [r0, #20]
  404b12:	6183      	str	r3, [r0, #24]
  404b14:	4619      	mov	r1, r3
  404b16:	2208      	movs	r2, #8
  404b18:	305c      	adds	r0, #92	; 0x5c
  404b1a:	f7fd f9e1 	bl	401ee0 <memset>
  404b1e:	4807      	ldr	r0, [pc, #28]	; (404b3c <std.isra.0+0x40>)
  404b20:	4907      	ldr	r1, [pc, #28]	; (404b40 <std.isra.0+0x44>)
  404b22:	4a08      	ldr	r2, [pc, #32]	; (404b44 <std.isra.0+0x48>)
  404b24:	4b08      	ldr	r3, [pc, #32]	; (404b48 <std.isra.0+0x4c>)
  404b26:	6220      	str	r0, [r4, #32]
  404b28:	61e4      	str	r4, [r4, #28]
  404b2a:	6261      	str	r1, [r4, #36]	; 0x24
  404b2c:	62a2      	str	r2, [r4, #40]	; 0x28
  404b2e:	62e3      	str	r3, [r4, #44]	; 0x2c
  404b30:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404b34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404b38:	f000 bb40 	b.w	4051bc <__retarget_lock_init_recursive>
  404b3c:	004064b9 	.word	0x004064b9
  404b40:	004064dd 	.word	0x004064dd
  404b44:	00406519 	.word	0x00406519
  404b48:	00406539 	.word	0x00406539

00404b4c <__sinit>:
  404b4c:	b510      	push	{r4, lr}
  404b4e:	4604      	mov	r4, r0
  404b50:	4812      	ldr	r0, [pc, #72]	; (404b9c <__sinit+0x50>)
  404b52:	f000 fb37 	bl	4051c4 <__retarget_lock_acquire_recursive>
  404b56:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404b58:	b9d2      	cbnz	r2, 404b90 <__sinit+0x44>
  404b5a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404b5e:	4810      	ldr	r0, [pc, #64]	; (404ba0 <__sinit+0x54>)
  404b60:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404b64:	2103      	movs	r1, #3
  404b66:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404b6a:	63e0      	str	r0, [r4, #60]	; 0x3c
  404b6c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404b70:	6860      	ldr	r0, [r4, #4]
  404b72:	2104      	movs	r1, #4
  404b74:	f7ff ffc2 	bl	404afc <std.isra.0>
  404b78:	2201      	movs	r2, #1
  404b7a:	2109      	movs	r1, #9
  404b7c:	68a0      	ldr	r0, [r4, #8]
  404b7e:	f7ff ffbd 	bl	404afc <std.isra.0>
  404b82:	2202      	movs	r2, #2
  404b84:	2112      	movs	r1, #18
  404b86:	68e0      	ldr	r0, [r4, #12]
  404b88:	f7ff ffb8 	bl	404afc <std.isra.0>
  404b8c:	2301      	movs	r3, #1
  404b8e:	63a3      	str	r3, [r4, #56]	; 0x38
  404b90:	4802      	ldr	r0, [pc, #8]	; (404b9c <__sinit+0x50>)
  404b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404b96:	f000 bb17 	b.w	4051c8 <__retarget_lock_release_recursive>
  404b9a:	bf00      	nop
  404b9c:	20400a9c 	.word	0x20400a9c
  404ba0:	00404af1 	.word	0x00404af1

00404ba4 <__sfp_lock_acquire>:
  404ba4:	4801      	ldr	r0, [pc, #4]	; (404bac <__sfp_lock_acquire+0x8>)
  404ba6:	f000 bb0d 	b.w	4051c4 <__retarget_lock_acquire_recursive>
  404baa:	bf00      	nop
  404bac:	20400ab0 	.word	0x20400ab0

00404bb0 <__sfp_lock_release>:
  404bb0:	4801      	ldr	r0, [pc, #4]	; (404bb8 <__sfp_lock_release+0x8>)
  404bb2:	f000 bb09 	b.w	4051c8 <__retarget_lock_release_recursive>
  404bb6:	bf00      	nop
  404bb8:	20400ab0 	.word	0x20400ab0

00404bbc <__libc_fini_array>:
  404bbc:	b538      	push	{r3, r4, r5, lr}
  404bbe:	4c0a      	ldr	r4, [pc, #40]	; (404be8 <__libc_fini_array+0x2c>)
  404bc0:	4d0a      	ldr	r5, [pc, #40]	; (404bec <__libc_fini_array+0x30>)
  404bc2:	1b64      	subs	r4, r4, r5
  404bc4:	10a4      	asrs	r4, r4, #2
  404bc6:	d00a      	beq.n	404bde <__libc_fini_array+0x22>
  404bc8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404bcc:	3b01      	subs	r3, #1
  404bce:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404bd2:	3c01      	subs	r4, #1
  404bd4:	f855 3904 	ldr.w	r3, [r5], #-4
  404bd8:	4798      	blx	r3
  404bda:	2c00      	cmp	r4, #0
  404bdc:	d1f9      	bne.n	404bd2 <__libc_fini_array+0x16>
  404bde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404be2:	f002 bbff 	b.w	4073e4 <_fini>
  404be6:	bf00      	nop
  404be8:	004073f4 	.word	0x004073f4
  404bec:	004073f0 	.word	0x004073f0

00404bf0 <_malloc_trim_r>:
  404bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404bf2:	4f24      	ldr	r7, [pc, #144]	; (404c84 <_malloc_trim_r+0x94>)
  404bf4:	460c      	mov	r4, r1
  404bf6:	4606      	mov	r6, r0
  404bf8:	f000 ff68 	bl	405acc <__malloc_lock>
  404bfc:	68bb      	ldr	r3, [r7, #8]
  404bfe:	685d      	ldr	r5, [r3, #4]
  404c00:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404c04:	310f      	adds	r1, #15
  404c06:	f025 0503 	bic.w	r5, r5, #3
  404c0a:	4429      	add	r1, r5
  404c0c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404c10:	f021 010f 	bic.w	r1, r1, #15
  404c14:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404c18:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404c1c:	db07      	blt.n	404c2e <_malloc_trim_r+0x3e>
  404c1e:	2100      	movs	r1, #0
  404c20:	4630      	mov	r0, r6
  404c22:	f001 fc37 	bl	406494 <_sbrk_r>
  404c26:	68bb      	ldr	r3, [r7, #8]
  404c28:	442b      	add	r3, r5
  404c2a:	4298      	cmp	r0, r3
  404c2c:	d004      	beq.n	404c38 <_malloc_trim_r+0x48>
  404c2e:	4630      	mov	r0, r6
  404c30:	f000 ff52 	bl	405ad8 <__malloc_unlock>
  404c34:	2000      	movs	r0, #0
  404c36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404c38:	4261      	negs	r1, r4
  404c3a:	4630      	mov	r0, r6
  404c3c:	f001 fc2a 	bl	406494 <_sbrk_r>
  404c40:	3001      	adds	r0, #1
  404c42:	d00d      	beq.n	404c60 <_malloc_trim_r+0x70>
  404c44:	4b10      	ldr	r3, [pc, #64]	; (404c88 <_malloc_trim_r+0x98>)
  404c46:	68ba      	ldr	r2, [r7, #8]
  404c48:	6819      	ldr	r1, [r3, #0]
  404c4a:	1b2d      	subs	r5, r5, r4
  404c4c:	f045 0501 	orr.w	r5, r5, #1
  404c50:	4630      	mov	r0, r6
  404c52:	1b09      	subs	r1, r1, r4
  404c54:	6055      	str	r5, [r2, #4]
  404c56:	6019      	str	r1, [r3, #0]
  404c58:	f000 ff3e 	bl	405ad8 <__malloc_unlock>
  404c5c:	2001      	movs	r0, #1
  404c5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404c60:	2100      	movs	r1, #0
  404c62:	4630      	mov	r0, r6
  404c64:	f001 fc16 	bl	406494 <_sbrk_r>
  404c68:	68ba      	ldr	r2, [r7, #8]
  404c6a:	1a83      	subs	r3, r0, r2
  404c6c:	2b0f      	cmp	r3, #15
  404c6e:	ddde      	ble.n	404c2e <_malloc_trim_r+0x3e>
  404c70:	4c06      	ldr	r4, [pc, #24]	; (404c8c <_malloc_trim_r+0x9c>)
  404c72:	4905      	ldr	r1, [pc, #20]	; (404c88 <_malloc_trim_r+0x98>)
  404c74:	6824      	ldr	r4, [r4, #0]
  404c76:	f043 0301 	orr.w	r3, r3, #1
  404c7a:	1b00      	subs	r0, r0, r4
  404c7c:	6053      	str	r3, [r2, #4]
  404c7e:	6008      	str	r0, [r1, #0]
  404c80:	e7d5      	b.n	404c2e <_malloc_trim_r+0x3e>
  404c82:	bf00      	nop
  404c84:	2040043c 	.word	0x2040043c
  404c88:	20400a50 	.word	0x20400a50
  404c8c:	20400844 	.word	0x20400844

00404c90 <_free_r>:
  404c90:	2900      	cmp	r1, #0
  404c92:	d044      	beq.n	404d1e <_free_r+0x8e>
  404c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c98:	460d      	mov	r5, r1
  404c9a:	4680      	mov	r8, r0
  404c9c:	f000 ff16 	bl	405acc <__malloc_lock>
  404ca0:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404ca4:	4969      	ldr	r1, [pc, #420]	; (404e4c <_free_r+0x1bc>)
  404ca6:	f027 0301 	bic.w	r3, r7, #1
  404caa:	f1a5 0408 	sub.w	r4, r5, #8
  404cae:	18e2      	adds	r2, r4, r3
  404cb0:	688e      	ldr	r6, [r1, #8]
  404cb2:	6850      	ldr	r0, [r2, #4]
  404cb4:	42b2      	cmp	r2, r6
  404cb6:	f020 0003 	bic.w	r0, r0, #3
  404cba:	d05e      	beq.n	404d7a <_free_r+0xea>
  404cbc:	07fe      	lsls	r6, r7, #31
  404cbe:	6050      	str	r0, [r2, #4]
  404cc0:	d40b      	bmi.n	404cda <_free_r+0x4a>
  404cc2:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404cc6:	1be4      	subs	r4, r4, r7
  404cc8:	f101 0e08 	add.w	lr, r1, #8
  404ccc:	68a5      	ldr	r5, [r4, #8]
  404cce:	4575      	cmp	r5, lr
  404cd0:	443b      	add	r3, r7
  404cd2:	d06d      	beq.n	404db0 <_free_r+0x120>
  404cd4:	68e7      	ldr	r7, [r4, #12]
  404cd6:	60ef      	str	r7, [r5, #12]
  404cd8:	60bd      	str	r5, [r7, #8]
  404cda:	1815      	adds	r5, r2, r0
  404cdc:	686d      	ldr	r5, [r5, #4]
  404cde:	07ed      	lsls	r5, r5, #31
  404ce0:	d53e      	bpl.n	404d60 <_free_r+0xd0>
  404ce2:	f043 0201 	orr.w	r2, r3, #1
  404ce6:	6062      	str	r2, [r4, #4]
  404ce8:	50e3      	str	r3, [r4, r3]
  404cea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404cee:	d217      	bcs.n	404d20 <_free_r+0x90>
  404cf0:	08db      	lsrs	r3, r3, #3
  404cf2:	1c58      	adds	r0, r3, #1
  404cf4:	109a      	asrs	r2, r3, #2
  404cf6:	684d      	ldr	r5, [r1, #4]
  404cf8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404cfc:	60a7      	str	r7, [r4, #8]
  404cfe:	2301      	movs	r3, #1
  404d00:	4093      	lsls	r3, r2
  404d02:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404d06:	432b      	orrs	r3, r5
  404d08:	3a08      	subs	r2, #8
  404d0a:	60e2      	str	r2, [r4, #12]
  404d0c:	604b      	str	r3, [r1, #4]
  404d0e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404d12:	60fc      	str	r4, [r7, #12]
  404d14:	4640      	mov	r0, r8
  404d16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404d1a:	f000 bedd 	b.w	405ad8 <__malloc_unlock>
  404d1e:	4770      	bx	lr
  404d20:	0a5a      	lsrs	r2, r3, #9
  404d22:	2a04      	cmp	r2, #4
  404d24:	d852      	bhi.n	404dcc <_free_r+0x13c>
  404d26:	099a      	lsrs	r2, r3, #6
  404d28:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404d2c:	00ff      	lsls	r7, r7, #3
  404d2e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404d32:	19c8      	adds	r0, r1, r7
  404d34:	59ca      	ldr	r2, [r1, r7]
  404d36:	3808      	subs	r0, #8
  404d38:	4290      	cmp	r0, r2
  404d3a:	d04f      	beq.n	404ddc <_free_r+0x14c>
  404d3c:	6851      	ldr	r1, [r2, #4]
  404d3e:	f021 0103 	bic.w	r1, r1, #3
  404d42:	428b      	cmp	r3, r1
  404d44:	d232      	bcs.n	404dac <_free_r+0x11c>
  404d46:	6892      	ldr	r2, [r2, #8]
  404d48:	4290      	cmp	r0, r2
  404d4a:	d1f7      	bne.n	404d3c <_free_r+0xac>
  404d4c:	68c3      	ldr	r3, [r0, #12]
  404d4e:	60a0      	str	r0, [r4, #8]
  404d50:	60e3      	str	r3, [r4, #12]
  404d52:	609c      	str	r4, [r3, #8]
  404d54:	60c4      	str	r4, [r0, #12]
  404d56:	4640      	mov	r0, r8
  404d58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404d5c:	f000 bebc 	b.w	405ad8 <__malloc_unlock>
  404d60:	6895      	ldr	r5, [r2, #8]
  404d62:	4f3b      	ldr	r7, [pc, #236]	; (404e50 <_free_r+0x1c0>)
  404d64:	42bd      	cmp	r5, r7
  404d66:	4403      	add	r3, r0
  404d68:	d040      	beq.n	404dec <_free_r+0x15c>
  404d6a:	68d0      	ldr	r0, [r2, #12]
  404d6c:	60e8      	str	r0, [r5, #12]
  404d6e:	f043 0201 	orr.w	r2, r3, #1
  404d72:	6085      	str	r5, [r0, #8]
  404d74:	6062      	str	r2, [r4, #4]
  404d76:	50e3      	str	r3, [r4, r3]
  404d78:	e7b7      	b.n	404cea <_free_r+0x5a>
  404d7a:	07ff      	lsls	r7, r7, #31
  404d7c:	4403      	add	r3, r0
  404d7e:	d407      	bmi.n	404d90 <_free_r+0x100>
  404d80:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404d84:	1aa4      	subs	r4, r4, r2
  404d86:	4413      	add	r3, r2
  404d88:	68a0      	ldr	r0, [r4, #8]
  404d8a:	68e2      	ldr	r2, [r4, #12]
  404d8c:	60c2      	str	r2, [r0, #12]
  404d8e:	6090      	str	r0, [r2, #8]
  404d90:	4a30      	ldr	r2, [pc, #192]	; (404e54 <_free_r+0x1c4>)
  404d92:	6812      	ldr	r2, [r2, #0]
  404d94:	f043 0001 	orr.w	r0, r3, #1
  404d98:	4293      	cmp	r3, r2
  404d9a:	6060      	str	r0, [r4, #4]
  404d9c:	608c      	str	r4, [r1, #8]
  404d9e:	d3b9      	bcc.n	404d14 <_free_r+0x84>
  404da0:	4b2d      	ldr	r3, [pc, #180]	; (404e58 <_free_r+0x1c8>)
  404da2:	4640      	mov	r0, r8
  404da4:	6819      	ldr	r1, [r3, #0]
  404da6:	f7ff ff23 	bl	404bf0 <_malloc_trim_r>
  404daa:	e7b3      	b.n	404d14 <_free_r+0x84>
  404dac:	4610      	mov	r0, r2
  404dae:	e7cd      	b.n	404d4c <_free_r+0xbc>
  404db0:	1811      	adds	r1, r2, r0
  404db2:	6849      	ldr	r1, [r1, #4]
  404db4:	07c9      	lsls	r1, r1, #31
  404db6:	d444      	bmi.n	404e42 <_free_r+0x1b2>
  404db8:	6891      	ldr	r1, [r2, #8]
  404dba:	68d2      	ldr	r2, [r2, #12]
  404dbc:	60ca      	str	r2, [r1, #12]
  404dbe:	4403      	add	r3, r0
  404dc0:	f043 0001 	orr.w	r0, r3, #1
  404dc4:	6091      	str	r1, [r2, #8]
  404dc6:	6060      	str	r0, [r4, #4]
  404dc8:	50e3      	str	r3, [r4, r3]
  404dca:	e7a3      	b.n	404d14 <_free_r+0x84>
  404dcc:	2a14      	cmp	r2, #20
  404dce:	d816      	bhi.n	404dfe <_free_r+0x16e>
  404dd0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404dd4:	00ff      	lsls	r7, r7, #3
  404dd6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404dda:	e7aa      	b.n	404d32 <_free_r+0xa2>
  404ddc:	10aa      	asrs	r2, r5, #2
  404dde:	2301      	movs	r3, #1
  404de0:	684d      	ldr	r5, [r1, #4]
  404de2:	4093      	lsls	r3, r2
  404de4:	432b      	orrs	r3, r5
  404de6:	604b      	str	r3, [r1, #4]
  404de8:	4603      	mov	r3, r0
  404dea:	e7b0      	b.n	404d4e <_free_r+0xbe>
  404dec:	f043 0201 	orr.w	r2, r3, #1
  404df0:	614c      	str	r4, [r1, #20]
  404df2:	610c      	str	r4, [r1, #16]
  404df4:	60e5      	str	r5, [r4, #12]
  404df6:	60a5      	str	r5, [r4, #8]
  404df8:	6062      	str	r2, [r4, #4]
  404dfa:	50e3      	str	r3, [r4, r3]
  404dfc:	e78a      	b.n	404d14 <_free_r+0x84>
  404dfe:	2a54      	cmp	r2, #84	; 0x54
  404e00:	d806      	bhi.n	404e10 <_free_r+0x180>
  404e02:	0b1a      	lsrs	r2, r3, #12
  404e04:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404e08:	00ff      	lsls	r7, r7, #3
  404e0a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404e0e:	e790      	b.n	404d32 <_free_r+0xa2>
  404e10:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404e14:	d806      	bhi.n	404e24 <_free_r+0x194>
  404e16:	0bda      	lsrs	r2, r3, #15
  404e18:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404e1c:	00ff      	lsls	r7, r7, #3
  404e1e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  404e22:	e786      	b.n	404d32 <_free_r+0xa2>
  404e24:	f240 5054 	movw	r0, #1364	; 0x554
  404e28:	4282      	cmp	r2, r0
  404e2a:	d806      	bhi.n	404e3a <_free_r+0x1aa>
  404e2c:	0c9a      	lsrs	r2, r3, #18
  404e2e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  404e32:	00ff      	lsls	r7, r7, #3
  404e34:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404e38:	e77b      	b.n	404d32 <_free_r+0xa2>
  404e3a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404e3e:	257e      	movs	r5, #126	; 0x7e
  404e40:	e777      	b.n	404d32 <_free_r+0xa2>
  404e42:	f043 0101 	orr.w	r1, r3, #1
  404e46:	6061      	str	r1, [r4, #4]
  404e48:	6013      	str	r3, [r2, #0]
  404e4a:	e763      	b.n	404d14 <_free_r+0x84>
  404e4c:	2040043c 	.word	0x2040043c
  404e50:	20400444 	.word	0x20400444
  404e54:	20400848 	.word	0x20400848
  404e58:	20400a80 	.word	0x20400a80

00404e5c <__sfvwrite_r>:
  404e5c:	6893      	ldr	r3, [r2, #8]
  404e5e:	2b00      	cmp	r3, #0
  404e60:	d073      	beq.n	404f4a <__sfvwrite_r+0xee>
  404e62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e66:	898b      	ldrh	r3, [r1, #12]
  404e68:	b083      	sub	sp, #12
  404e6a:	460c      	mov	r4, r1
  404e6c:	0719      	lsls	r1, r3, #28
  404e6e:	9000      	str	r0, [sp, #0]
  404e70:	4616      	mov	r6, r2
  404e72:	d526      	bpl.n	404ec2 <__sfvwrite_r+0x66>
  404e74:	6922      	ldr	r2, [r4, #16]
  404e76:	b322      	cbz	r2, 404ec2 <__sfvwrite_r+0x66>
  404e78:	f013 0002 	ands.w	r0, r3, #2
  404e7c:	6835      	ldr	r5, [r6, #0]
  404e7e:	d02c      	beq.n	404eda <__sfvwrite_r+0x7e>
  404e80:	f04f 0900 	mov.w	r9, #0
  404e84:	4fb0      	ldr	r7, [pc, #704]	; (405148 <__sfvwrite_r+0x2ec>)
  404e86:	46c8      	mov	r8, r9
  404e88:	46b2      	mov	sl, r6
  404e8a:	45b8      	cmp	r8, r7
  404e8c:	4643      	mov	r3, r8
  404e8e:	464a      	mov	r2, r9
  404e90:	bf28      	it	cs
  404e92:	463b      	movcs	r3, r7
  404e94:	9800      	ldr	r0, [sp, #0]
  404e96:	f1b8 0f00 	cmp.w	r8, #0
  404e9a:	d050      	beq.n	404f3e <__sfvwrite_r+0xe2>
  404e9c:	69e1      	ldr	r1, [r4, #28]
  404e9e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404ea0:	47b0      	blx	r6
  404ea2:	2800      	cmp	r0, #0
  404ea4:	dd58      	ble.n	404f58 <__sfvwrite_r+0xfc>
  404ea6:	f8da 3008 	ldr.w	r3, [sl, #8]
  404eaa:	1a1b      	subs	r3, r3, r0
  404eac:	4481      	add	r9, r0
  404eae:	eba8 0800 	sub.w	r8, r8, r0
  404eb2:	f8ca 3008 	str.w	r3, [sl, #8]
  404eb6:	2b00      	cmp	r3, #0
  404eb8:	d1e7      	bne.n	404e8a <__sfvwrite_r+0x2e>
  404eba:	2000      	movs	r0, #0
  404ebc:	b003      	add	sp, #12
  404ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ec2:	4621      	mov	r1, r4
  404ec4:	9800      	ldr	r0, [sp, #0]
  404ec6:	f7fe fd17 	bl	4038f8 <__swsetup_r>
  404eca:	2800      	cmp	r0, #0
  404ecc:	f040 8133 	bne.w	405136 <__sfvwrite_r+0x2da>
  404ed0:	89a3      	ldrh	r3, [r4, #12]
  404ed2:	6835      	ldr	r5, [r6, #0]
  404ed4:	f013 0002 	ands.w	r0, r3, #2
  404ed8:	d1d2      	bne.n	404e80 <__sfvwrite_r+0x24>
  404eda:	f013 0901 	ands.w	r9, r3, #1
  404ede:	d145      	bne.n	404f6c <__sfvwrite_r+0x110>
  404ee0:	464f      	mov	r7, r9
  404ee2:	9601      	str	r6, [sp, #4]
  404ee4:	b337      	cbz	r7, 404f34 <__sfvwrite_r+0xd8>
  404ee6:	059a      	lsls	r2, r3, #22
  404ee8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  404eec:	f140 8083 	bpl.w	404ff6 <__sfvwrite_r+0x19a>
  404ef0:	4547      	cmp	r7, r8
  404ef2:	46c3      	mov	fp, r8
  404ef4:	f0c0 80ab 	bcc.w	40504e <__sfvwrite_r+0x1f2>
  404ef8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404efc:	f040 80ac 	bne.w	405058 <__sfvwrite_r+0x1fc>
  404f00:	6820      	ldr	r0, [r4, #0]
  404f02:	46ba      	mov	sl, r7
  404f04:	465a      	mov	r2, fp
  404f06:	4649      	mov	r1, r9
  404f08:	f000 fd7c 	bl	405a04 <memmove>
  404f0c:	68a2      	ldr	r2, [r4, #8]
  404f0e:	6823      	ldr	r3, [r4, #0]
  404f10:	eba2 0208 	sub.w	r2, r2, r8
  404f14:	445b      	add	r3, fp
  404f16:	60a2      	str	r2, [r4, #8]
  404f18:	6023      	str	r3, [r4, #0]
  404f1a:	9a01      	ldr	r2, [sp, #4]
  404f1c:	6893      	ldr	r3, [r2, #8]
  404f1e:	eba3 030a 	sub.w	r3, r3, sl
  404f22:	44d1      	add	r9, sl
  404f24:	eba7 070a 	sub.w	r7, r7, sl
  404f28:	6093      	str	r3, [r2, #8]
  404f2a:	2b00      	cmp	r3, #0
  404f2c:	d0c5      	beq.n	404eba <__sfvwrite_r+0x5e>
  404f2e:	89a3      	ldrh	r3, [r4, #12]
  404f30:	2f00      	cmp	r7, #0
  404f32:	d1d8      	bne.n	404ee6 <__sfvwrite_r+0x8a>
  404f34:	f8d5 9000 	ldr.w	r9, [r5]
  404f38:	686f      	ldr	r7, [r5, #4]
  404f3a:	3508      	adds	r5, #8
  404f3c:	e7d2      	b.n	404ee4 <__sfvwrite_r+0x88>
  404f3e:	f8d5 9000 	ldr.w	r9, [r5]
  404f42:	f8d5 8004 	ldr.w	r8, [r5, #4]
  404f46:	3508      	adds	r5, #8
  404f48:	e79f      	b.n	404e8a <__sfvwrite_r+0x2e>
  404f4a:	2000      	movs	r0, #0
  404f4c:	4770      	bx	lr
  404f4e:	4621      	mov	r1, r4
  404f50:	9800      	ldr	r0, [sp, #0]
  404f52:	f7ff fda3 	bl	404a9c <_fflush_r>
  404f56:	b370      	cbz	r0, 404fb6 <__sfvwrite_r+0x15a>
  404f58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404f5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f60:	f04f 30ff 	mov.w	r0, #4294967295
  404f64:	81a3      	strh	r3, [r4, #12]
  404f66:	b003      	add	sp, #12
  404f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f6c:	4681      	mov	r9, r0
  404f6e:	4633      	mov	r3, r6
  404f70:	464e      	mov	r6, r9
  404f72:	46a8      	mov	r8, r5
  404f74:	469a      	mov	sl, r3
  404f76:	464d      	mov	r5, r9
  404f78:	b34e      	cbz	r6, 404fce <__sfvwrite_r+0x172>
  404f7a:	b380      	cbz	r0, 404fde <__sfvwrite_r+0x182>
  404f7c:	6820      	ldr	r0, [r4, #0]
  404f7e:	6923      	ldr	r3, [r4, #16]
  404f80:	6962      	ldr	r2, [r4, #20]
  404f82:	45b1      	cmp	r9, r6
  404f84:	46cb      	mov	fp, r9
  404f86:	bf28      	it	cs
  404f88:	46b3      	movcs	fp, r6
  404f8a:	4298      	cmp	r0, r3
  404f8c:	465f      	mov	r7, fp
  404f8e:	d904      	bls.n	404f9a <__sfvwrite_r+0x13e>
  404f90:	68a3      	ldr	r3, [r4, #8]
  404f92:	4413      	add	r3, r2
  404f94:	459b      	cmp	fp, r3
  404f96:	f300 80a6 	bgt.w	4050e6 <__sfvwrite_r+0x28a>
  404f9a:	4593      	cmp	fp, r2
  404f9c:	db4b      	blt.n	405036 <__sfvwrite_r+0x1da>
  404f9e:	4613      	mov	r3, r2
  404fa0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  404fa2:	69e1      	ldr	r1, [r4, #28]
  404fa4:	9800      	ldr	r0, [sp, #0]
  404fa6:	462a      	mov	r2, r5
  404fa8:	47b8      	blx	r7
  404faa:	1e07      	subs	r7, r0, #0
  404fac:	ddd4      	ble.n	404f58 <__sfvwrite_r+0xfc>
  404fae:	ebb9 0907 	subs.w	r9, r9, r7
  404fb2:	d0cc      	beq.n	404f4e <__sfvwrite_r+0xf2>
  404fb4:	2001      	movs	r0, #1
  404fb6:	f8da 3008 	ldr.w	r3, [sl, #8]
  404fba:	1bdb      	subs	r3, r3, r7
  404fbc:	443d      	add	r5, r7
  404fbe:	1bf6      	subs	r6, r6, r7
  404fc0:	f8ca 3008 	str.w	r3, [sl, #8]
  404fc4:	2b00      	cmp	r3, #0
  404fc6:	f43f af78 	beq.w	404eba <__sfvwrite_r+0x5e>
  404fca:	2e00      	cmp	r6, #0
  404fcc:	d1d5      	bne.n	404f7a <__sfvwrite_r+0x11e>
  404fce:	f108 0308 	add.w	r3, r8, #8
  404fd2:	e913 0060 	ldmdb	r3, {r5, r6}
  404fd6:	4698      	mov	r8, r3
  404fd8:	3308      	adds	r3, #8
  404fda:	2e00      	cmp	r6, #0
  404fdc:	d0f9      	beq.n	404fd2 <__sfvwrite_r+0x176>
  404fde:	4632      	mov	r2, r6
  404fe0:	210a      	movs	r1, #10
  404fe2:	4628      	mov	r0, r5
  404fe4:	f000 fc24 	bl	405830 <memchr>
  404fe8:	2800      	cmp	r0, #0
  404fea:	f000 80a1 	beq.w	405130 <__sfvwrite_r+0x2d4>
  404fee:	3001      	adds	r0, #1
  404ff0:	eba0 0905 	sub.w	r9, r0, r5
  404ff4:	e7c2      	b.n	404f7c <__sfvwrite_r+0x120>
  404ff6:	6820      	ldr	r0, [r4, #0]
  404ff8:	6923      	ldr	r3, [r4, #16]
  404ffa:	4298      	cmp	r0, r3
  404ffc:	d802      	bhi.n	405004 <__sfvwrite_r+0x1a8>
  404ffe:	6963      	ldr	r3, [r4, #20]
  405000:	429f      	cmp	r7, r3
  405002:	d25d      	bcs.n	4050c0 <__sfvwrite_r+0x264>
  405004:	45b8      	cmp	r8, r7
  405006:	bf28      	it	cs
  405008:	46b8      	movcs	r8, r7
  40500a:	4642      	mov	r2, r8
  40500c:	4649      	mov	r1, r9
  40500e:	f000 fcf9 	bl	405a04 <memmove>
  405012:	68a3      	ldr	r3, [r4, #8]
  405014:	6822      	ldr	r2, [r4, #0]
  405016:	eba3 0308 	sub.w	r3, r3, r8
  40501a:	4442      	add	r2, r8
  40501c:	60a3      	str	r3, [r4, #8]
  40501e:	6022      	str	r2, [r4, #0]
  405020:	b10b      	cbz	r3, 405026 <__sfvwrite_r+0x1ca>
  405022:	46c2      	mov	sl, r8
  405024:	e779      	b.n	404f1a <__sfvwrite_r+0xbe>
  405026:	4621      	mov	r1, r4
  405028:	9800      	ldr	r0, [sp, #0]
  40502a:	f7ff fd37 	bl	404a9c <_fflush_r>
  40502e:	2800      	cmp	r0, #0
  405030:	d192      	bne.n	404f58 <__sfvwrite_r+0xfc>
  405032:	46c2      	mov	sl, r8
  405034:	e771      	b.n	404f1a <__sfvwrite_r+0xbe>
  405036:	465a      	mov	r2, fp
  405038:	4629      	mov	r1, r5
  40503a:	f000 fce3 	bl	405a04 <memmove>
  40503e:	68a2      	ldr	r2, [r4, #8]
  405040:	6823      	ldr	r3, [r4, #0]
  405042:	eba2 020b 	sub.w	r2, r2, fp
  405046:	445b      	add	r3, fp
  405048:	60a2      	str	r2, [r4, #8]
  40504a:	6023      	str	r3, [r4, #0]
  40504c:	e7af      	b.n	404fae <__sfvwrite_r+0x152>
  40504e:	6820      	ldr	r0, [r4, #0]
  405050:	46b8      	mov	r8, r7
  405052:	46ba      	mov	sl, r7
  405054:	46bb      	mov	fp, r7
  405056:	e755      	b.n	404f04 <__sfvwrite_r+0xa8>
  405058:	6962      	ldr	r2, [r4, #20]
  40505a:	6820      	ldr	r0, [r4, #0]
  40505c:	6921      	ldr	r1, [r4, #16]
  40505e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  405062:	eba0 0a01 	sub.w	sl, r0, r1
  405066:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40506a:	f10a 0001 	add.w	r0, sl, #1
  40506e:	ea4f 0868 	mov.w	r8, r8, asr #1
  405072:	4438      	add	r0, r7
  405074:	4540      	cmp	r0, r8
  405076:	4642      	mov	r2, r8
  405078:	bf84      	itt	hi
  40507a:	4680      	movhi	r8, r0
  40507c:	4642      	movhi	r2, r8
  40507e:	055b      	lsls	r3, r3, #21
  405080:	d544      	bpl.n	40510c <__sfvwrite_r+0x2b0>
  405082:	4611      	mov	r1, r2
  405084:	9800      	ldr	r0, [sp, #0]
  405086:	f000 f921 	bl	4052cc <_malloc_r>
  40508a:	4683      	mov	fp, r0
  40508c:	2800      	cmp	r0, #0
  40508e:	d055      	beq.n	40513c <__sfvwrite_r+0x2e0>
  405090:	4652      	mov	r2, sl
  405092:	6921      	ldr	r1, [r4, #16]
  405094:	f000 fc1c 	bl	4058d0 <memcpy>
  405098:	89a3      	ldrh	r3, [r4, #12]
  40509a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40509e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4050a2:	81a3      	strh	r3, [r4, #12]
  4050a4:	eb0b 000a 	add.w	r0, fp, sl
  4050a8:	eba8 030a 	sub.w	r3, r8, sl
  4050ac:	f8c4 b010 	str.w	fp, [r4, #16]
  4050b0:	f8c4 8014 	str.w	r8, [r4, #20]
  4050b4:	6020      	str	r0, [r4, #0]
  4050b6:	60a3      	str	r3, [r4, #8]
  4050b8:	46b8      	mov	r8, r7
  4050ba:	46ba      	mov	sl, r7
  4050bc:	46bb      	mov	fp, r7
  4050be:	e721      	b.n	404f04 <__sfvwrite_r+0xa8>
  4050c0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4050c4:	42b9      	cmp	r1, r7
  4050c6:	bf28      	it	cs
  4050c8:	4639      	movcs	r1, r7
  4050ca:	464a      	mov	r2, r9
  4050cc:	fb91 f1f3 	sdiv	r1, r1, r3
  4050d0:	9800      	ldr	r0, [sp, #0]
  4050d2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4050d4:	fb03 f301 	mul.w	r3, r3, r1
  4050d8:	69e1      	ldr	r1, [r4, #28]
  4050da:	47b0      	blx	r6
  4050dc:	f1b0 0a00 	subs.w	sl, r0, #0
  4050e0:	f73f af1b 	bgt.w	404f1a <__sfvwrite_r+0xbe>
  4050e4:	e738      	b.n	404f58 <__sfvwrite_r+0xfc>
  4050e6:	461a      	mov	r2, r3
  4050e8:	4629      	mov	r1, r5
  4050ea:	9301      	str	r3, [sp, #4]
  4050ec:	f000 fc8a 	bl	405a04 <memmove>
  4050f0:	6822      	ldr	r2, [r4, #0]
  4050f2:	9b01      	ldr	r3, [sp, #4]
  4050f4:	9800      	ldr	r0, [sp, #0]
  4050f6:	441a      	add	r2, r3
  4050f8:	6022      	str	r2, [r4, #0]
  4050fa:	4621      	mov	r1, r4
  4050fc:	f7ff fcce 	bl	404a9c <_fflush_r>
  405100:	9b01      	ldr	r3, [sp, #4]
  405102:	2800      	cmp	r0, #0
  405104:	f47f af28 	bne.w	404f58 <__sfvwrite_r+0xfc>
  405108:	461f      	mov	r7, r3
  40510a:	e750      	b.n	404fae <__sfvwrite_r+0x152>
  40510c:	9800      	ldr	r0, [sp, #0]
  40510e:	f001 f81b 	bl	406148 <_realloc_r>
  405112:	4683      	mov	fp, r0
  405114:	2800      	cmp	r0, #0
  405116:	d1c5      	bne.n	4050a4 <__sfvwrite_r+0x248>
  405118:	9d00      	ldr	r5, [sp, #0]
  40511a:	6921      	ldr	r1, [r4, #16]
  40511c:	4628      	mov	r0, r5
  40511e:	f7ff fdb7 	bl	404c90 <_free_r>
  405122:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405126:	220c      	movs	r2, #12
  405128:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40512c:	602a      	str	r2, [r5, #0]
  40512e:	e715      	b.n	404f5c <__sfvwrite_r+0x100>
  405130:	f106 0901 	add.w	r9, r6, #1
  405134:	e722      	b.n	404f7c <__sfvwrite_r+0x120>
  405136:	f04f 30ff 	mov.w	r0, #4294967295
  40513a:	e6bf      	b.n	404ebc <__sfvwrite_r+0x60>
  40513c:	9a00      	ldr	r2, [sp, #0]
  40513e:	230c      	movs	r3, #12
  405140:	6013      	str	r3, [r2, #0]
  405142:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405146:	e709      	b.n	404f5c <__sfvwrite_r+0x100>
  405148:	7ffffc00 	.word	0x7ffffc00

0040514c <_fwalk_reent>:
  40514c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405150:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405154:	d01f      	beq.n	405196 <_fwalk_reent+0x4a>
  405156:	4688      	mov	r8, r1
  405158:	4606      	mov	r6, r0
  40515a:	f04f 0900 	mov.w	r9, #0
  40515e:	687d      	ldr	r5, [r7, #4]
  405160:	68bc      	ldr	r4, [r7, #8]
  405162:	3d01      	subs	r5, #1
  405164:	d411      	bmi.n	40518a <_fwalk_reent+0x3e>
  405166:	89a3      	ldrh	r3, [r4, #12]
  405168:	2b01      	cmp	r3, #1
  40516a:	f105 35ff 	add.w	r5, r5, #4294967295
  40516e:	d908      	bls.n	405182 <_fwalk_reent+0x36>
  405170:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  405174:	3301      	adds	r3, #1
  405176:	4621      	mov	r1, r4
  405178:	4630      	mov	r0, r6
  40517a:	d002      	beq.n	405182 <_fwalk_reent+0x36>
  40517c:	47c0      	blx	r8
  40517e:	ea49 0900 	orr.w	r9, r9, r0
  405182:	1c6b      	adds	r3, r5, #1
  405184:	f104 0468 	add.w	r4, r4, #104	; 0x68
  405188:	d1ed      	bne.n	405166 <_fwalk_reent+0x1a>
  40518a:	683f      	ldr	r7, [r7, #0]
  40518c:	2f00      	cmp	r7, #0
  40518e:	d1e6      	bne.n	40515e <_fwalk_reent+0x12>
  405190:	4648      	mov	r0, r9
  405192:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405196:	46b9      	mov	r9, r7
  405198:	4648      	mov	r0, r9
  40519a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40519e:	bf00      	nop

004051a0 <_localeconv_r>:
  4051a0:	4a04      	ldr	r2, [pc, #16]	; (4051b4 <_localeconv_r+0x14>)
  4051a2:	4b05      	ldr	r3, [pc, #20]	; (4051b8 <_localeconv_r+0x18>)
  4051a4:	6812      	ldr	r2, [r2, #0]
  4051a6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4051a8:	2800      	cmp	r0, #0
  4051aa:	bf08      	it	eq
  4051ac:	4618      	moveq	r0, r3
  4051ae:	30f0      	adds	r0, #240	; 0xf0
  4051b0:	4770      	bx	lr
  4051b2:	bf00      	nop
  4051b4:	20400008 	.word	0x20400008
  4051b8:	2040084c 	.word	0x2040084c

004051bc <__retarget_lock_init_recursive>:
  4051bc:	4770      	bx	lr
  4051be:	bf00      	nop

004051c0 <__retarget_lock_close_recursive>:
  4051c0:	4770      	bx	lr
  4051c2:	bf00      	nop

004051c4 <__retarget_lock_acquire_recursive>:
  4051c4:	4770      	bx	lr
  4051c6:	bf00      	nop

004051c8 <__retarget_lock_release_recursive>:
  4051c8:	4770      	bx	lr
  4051ca:	bf00      	nop

004051cc <__swhatbuf_r>:
  4051cc:	b570      	push	{r4, r5, r6, lr}
  4051ce:	460c      	mov	r4, r1
  4051d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4051d4:	2900      	cmp	r1, #0
  4051d6:	b090      	sub	sp, #64	; 0x40
  4051d8:	4615      	mov	r5, r2
  4051da:	461e      	mov	r6, r3
  4051dc:	db14      	blt.n	405208 <__swhatbuf_r+0x3c>
  4051de:	aa01      	add	r2, sp, #4
  4051e0:	f001 fbf0 	bl	4069c4 <_fstat_r>
  4051e4:	2800      	cmp	r0, #0
  4051e6:	db0f      	blt.n	405208 <__swhatbuf_r+0x3c>
  4051e8:	9a02      	ldr	r2, [sp, #8]
  4051ea:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4051ee:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4051f2:	fab2 f282 	clz	r2, r2
  4051f6:	0952      	lsrs	r2, r2, #5
  4051f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4051fc:	f44f 6000 	mov.w	r0, #2048	; 0x800
  405200:	6032      	str	r2, [r6, #0]
  405202:	602b      	str	r3, [r5, #0]
  405204:	b010      	add	sp, #64	; 0x40
  405206:	bd70      	pop	{r4, r5, r6, pc}
  405208:	89a2      	ldrh	r2, [r4, #12]
  40520a:	2300      	movs	r3, #0
  40520c:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  405210:	6033      	str	r3, [r6, #0]
  405212:	d004      	beq.n	40521e <__swhatbuf_r+0x52>
  405214:	2240      	movs	r2, #64	; 0x40
  405216:	4618      	mov	r0, r3
  405218:	602a      	str	r2, [r5, #0]
  40521a:	b010      	add	sp, #64	; 0x40
  40521c:	bd70      	pop	{r4, r5, r6, pc}
  40521e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405222:	602b      	str	r3, [r5, #0]
  405224:	b010      	add	sp, #64	; 0x40
  405226:	bd70      	pop	{r4, r5, r6, pc}

00405228 <__smakebuf_r>:
  405228:	898a      	ldrh	r2, [r1, #12]
  40522a:	0792      	lsls	r2, r2, #30
  40522c:	460b      	mov	r3, r1
  40522e:	d506      	bpl.n	40523e <__smakebuf_r+0x16>
  405230:	f101 0243 	add.w	r2, r1, #67	; 0x43
  405234:	2101      	movs	r1, #1
  405236:	601a      	str	r2, [r3, #0]
  405238:	611a      	str	r2, [r3, #16]
  40523a:	6159      	str	r1, [r3, #20]
  40523c:	4770      	bx	lr
  40523e:	b5f0      	push	{r4, r5, r6, r7, lr}
  405240:	b083      	sub	sp, #12
  405242:	ab01      	add	r3, sp, #4
  405244:	466a      	mov	r2, sp
  405246:	460c      	mov	r4, r1
  405248:	4606      	mov	r6, r0
  40524a:	f7ff ffbf 	bl	4051cc <__swhatbuf_r>
  40524e:	9900      	ldr	r1, [sp, #0]
  405250:	4605      	mov	r5, r0
  405252:	4630      	mov	r0, r6
  405254:	f000 f83a 	bl	4052cc <_malloc_r>
  405258:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40525c:	b1d8      	cbz	r0, 405296 <__smakebuf_r+0x6e>
  40525e:	9a01      	ldr	r2, [sp, #4]
  405260:	4f15      	ldr	r7, [pc, #84]	; (4052b8 <__smakebuf_r+0x90>)
  405262:	9900      	ldr	r1, [sp, #0]
  405264:	63f7      	str	r7, [r6, #60]	; 0x3c
  405266:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40526a:	81a3      	strh	r3, [r4, #12]
  40526c:	6020      	str	r0, [r4, #0]
  40526e:	6120      	str	r0, [r4, #16]
  405270:	6161      	str	r1, [r4, #20]
  405272:	b91a      	cbnz	r2, 40527c <__smakebuf_r+0x54>
  405274:	432b      	orrs	r3, r5
  405276:	81a3      	strh	r3, [r4, #12]
  405278:	b003      	add	sp, #12
  40527a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40527c:	4630      	mov	r0, r6
  40527e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405282:	f001 fbb3 	bl	4069ec <_isatty_r>
  405286:	b1a0      	cbz	r0, 4052b2 <__smakebuf_r+0x8a>
  405288:	89a3      	ldrh	r3, [r4, #12]
  40528a:	f023 0303 	bic.w	r3, r3, #3
  40528e:	f043 0301 	orr.w	r3, r3, #1
  405292:	b21b      	sxth	r3, r3
  405294:	e7ee      	b.n	405274 <__smakebuf_r+0x4c>
  405296:	059a      	lsls	r2, r3, #22
  405298:	d4ee      	bmi.n	405278 <__smakebuf_r+0x50>
  40529a:	f023 0303 	bic.w	r3, r3, #3
  40529e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4052a2:	f043 0302 	orr.w	r3, r3, #2
  4052a6:	2101      	movs	r1, #1
  4052a8:	81a3      	strh	r3, [r4, #12]
  4052aa:	6022      	str	r2, [r4, #0]
  4052ac:	6122      	str	r2, [r4, #16]
  4052ae:	6161      	str	r1, [r4, #20]
  4052b0:	e7e2      	b.n	405278 <__smakebuf_r+0x50>
  4052b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4052b6:	e7dd      	b.n	405274 <__smakebuf_r+0x4c>
  4052b8:	00404af1 	.word	0x00404af1

004052bc <malloc>:
  4052bc:	4b02      	ldr	r3, [pc, #8]	; (4052c8 <malloc+0xc>)
  4052be:	4601      	mov	r1, r0
  4052c0:	6818      	ldr	r0, [r3, #0]
  4052c2:	f000 b803 	b.w	4052cc <_malloc_r>
  4052c6:	bf00      	nop
  4052c8:	20400008 	.word	0x20400008

004052cc <_malloc_r>:
  4052cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4052d0:	f101 060b 	add.w	r6, r1, #11
  4052d4:	2e16      	cmp	r6, #22
  4052d6:	b083      	sub	sp, #12
  4052d8:	4605      	mov	r5, r0
  4052da:	f240 809e 	bls.w	40541a <_malloc_r+0x14e>
  4052de:	f036 0607 	bics.w	r6, r6, #7
  4052e2:	f100 80bd 	bmi.w	405460 <_malloc_r+0x194>
  4052e6:	42b1      	cmp	r1, r6
  4052e8:	f200 80ba 	bhi.w	405460 <_malloc_r+0x194>
  4052ec:	f000 fbee 	bl	405acc <__malloc_lock>
  4052f0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4052f4:	f0c0 8293 	bcc.w	40581e <_malloc_r+0x552>
  4052f8:	0a73      	lsrs	r3, r6, #9
  4052fa:	f000 80b8 	beq.w	40546e <_malloc_r+0x1a2>
  4052fe:	2b04      	cmp	r3, #4
  405300:	f200 8179 	bhi.w	4055f6 <_malloc_r+0x32a>
  405304:	09b3      	lsrs	r3, r6, #6
  405306:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40530a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40530e:	00c3      	lsls	r3, r0, #3
  405310:	4fbf      	ldr	r7, [pc, #764]	; (405610 <_malloc_r+0x344>)
  405312:	443b      	add	r3, r7
  405314:	f1a3 0108 	sub.w	r1, r3, #8
  405318:	685c      	ldr	r4, [r3, #4]
  40531a:	42a1      	cmp	r1, r4
  40531c:	d106      	bne.n	40532c <_malloc_r+0x60>
  40531e:	e00c      	b.n	40533a <_malloc_r+0x6e>
  405320:	2a00      	cmp	r2, #0
  405322:	f280 80aa 	bge.w	40547a <_malloc_r+0x1ae>
  405326:	68e4      	ldr	r4, [r4, #12]
  405328:	42a1      	cmp	r1, r4
  40532a:	d006      	beq.n	40533a <_malloc_r+0x6e>
  40532c:	6863      	ldr	r3, [r4, #4]
  40532e:	f023 0303 	bic.w	r3, r3, #3
  405332:	1b9a      	subs	r2, r3, r6
  405334:	2a0f      	cmp	r2, #15
  405336:	ddf3      	ble.n	405320 <_malloc_r+0x54>
  405338:	4670      	mov	r0, lr
  40533a:	693c      	ldr	r4, [r7, #16]
  40533c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 405624 <_malloc_r+0x358>
  405340:	4574      	cmp	r4, lr
  405342:	f000 81ab 	beq.w	40569c <_malloc_r+0x3d0>
  405346:	6863      	ldr	r3, [r4, #4]
  405348:	f023 0303 	bic.w	r3, r3, #3
  40534c:	1b9a      	subs	r2, r3, r6
  40534e:	2a0f      	cmp	r2, #15
  405350:	f300 8190 	bgt.w	405674 <_malloc_r+0x3a8>
  405354:	2a00      	cmp	r2, #0
  405356:	f8c7 e014 	str.w	lr, [r7, #20]
  40535a:	f8c7 e010 	str.w	lr, [r7, #16]
  40535e:	f280 809d 	bge.w	40549c <_malloc_r+0x1d0>
  405362:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405366:	f080 8161 	bcs.w	40562c <_malloc_r+0x360>
  40536a:	08db      	lsrs	r3, r3, #3
  40536c:	f103 0c01 	add.w	ip, r3, #1
  405370:	1099      	asrs	r1, r3, #2
  405372:	687a      	ldr	r2, [r7, #4]
  405374:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405378:	f8c4 8008 	str.w	r8, [r4, #8]
  40537c:	2301      	movs	r3, #1
  40537e:	408b      	lsls	r3, r1
  405380:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  405384:	4313      	orrs	r3, r2
  405386:	3908      	subs	r1, #8
  405388:	60e1      	str	r1, [r4, #12]
  40538a:	607b      	str	r3, [r7, #4]
  40538c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  405390:	f8c8 400c 	str.w	r4, [r8, #12]
  405394:	1082      	asrs	r2, r0, #2
  405396:	2401      	movs	r4, #1
  405398:	4094      	lsls	r4, r2
  40539a:	429c      	cmp	r4, r3
  40539c:	f200 808b 	bhi.w	4054b6 <_malloc_r+0x1ea>
  4053a0:	421c      	tst	r4, r3
  4053a2:	d106      	bne.n	4053b2 <_malloc_r+0xe6>
  4053a4:	f020 0003 	bic.w	r0, r0, #3
  4053a8:	0064      	lsls	r4, r4, #1
  4053aa:	421c      	tst	r4, r3
  4053ac:	f100 0004 	add.w	r0, r0, #4
  4053b0:	d0fa      	beq.n	4053a8 <_malloc_r+0xdc>
  4053b2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4053b6:	46cc      	mov	ip, r9
  4053b8:	4680      	mov	r8, r0
  4053ba:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4053be:	459c      	cmp	ip, r3
  4053c0:	d107      	bne.n	4053d2 <_malloc_r+0x106>
  4053c2:	e16d      	b.n	4056a0 <_malloc_r+0x3d4>
  4053c4:	2a00      	cmp	r2, #0
  4053c6:	f280 817b 	bge.w	4056c0 <_malloc_r+0x3f4>
  4053ca:	68db      	ldr	r3, [r3, #12]
  4053cc:	459c      	cmp	ip, r3
  4053ce:	f000 8167 	beq.w	4056a0 <_malloc_r+0x3d4>
  4053d2:	6859      	ldr	r1, [r3, #4]
  4053d4:	f021 0103 	bic.w	r1, r1, #3
  4053d8:	1b8a      	subs	r2, r1, r6
  4053da:	2a0f      	cmp	r2, #15
  4053dc:	ddf2      	ble.n	4053c4 <_malloc_r+0xf8>
  4053de:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4053e2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4053e6:	9300      	str	r3, [sp, #0]
  4053e8:	199c      	adds	r4, r3, r6
  4053ea:	4628      	mov	r0, r5
  4053ec:	f046 0601 	orr.w	r6, r6, #1
  4053f0:	f042 0501 	orr.w	r5, r2, #1
  4053f4:	605e      	str	r6, [r3, #4]
  4053f6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4053fa:	f8cc 8008 	str.w	r8, [ip, #8]
  4053fe:	617c      	str	r4, [r7, #20]
  405400:	613c      	str	r4, [r7, #16]
  405402:	f8c4 e00c 	str.w	lr, [r4, #12]
  405406:	f8c4 e008 	str.w	lr, [r4, #8]
  40540a:	6065      	str	r5, [r4, #4]
  40540c:	505a      	str	r2, [r3, r1]
  40540e:	f000 fb63 	bl	405ad8 <__malloc_unlock>
  405412:	9b00      	ldr	r3, [sp, #0]
  405414:	f103 0408 	add.w	r4, r3, #8
  405418:	e01e      	b.n	405458 <_malloc_r+0x18c>
  40541a:	2910      	cmp	r1, #16
  40541c:	d820      	bhi.n	405460 <_malloc_r+0x194>
  40541e:	f000 fb55 	bl	405acc <__malloc_lock>
  405422:	2610      	movs	r6, #16
  405424:	2318      	movs	r3, #24
  405426:	2002      	movs	r0, #2
  405428:	4f79      	ldr	r7, [pc, #484]	; (405610 <_malloc_r+0x344>)
  40542a:	443b      	add	r3, r7
  40542c:	f1a3 0208 	sub.w	r2, r3, #8
  405430:	685c      	ldr	r4, [r3, #4]
  405432:	4294      	cmp	r4, r2
  405434:	f000 813d 	beq.w	4056b2 <_malloc_r+0x3e6>
  405438:	6863      	ldr	r3, [r4, #4]
  40543a:	68e1      	ldr	r1, [r4, #12]
  40543c:	68a6      	ldr	r6, [r4, #8]
  40543e:	f023 0303 	bic.w	r3, r3, #3
  405442:	4423      	add	r3, r4
  405444:	4628      	mov	r0, r5
  405446:	685a      	ldr	r2, [r3, #4]
  405448:	60f1      	str	r1, [r6, #12]
  40544a:	f042 0201 	orr.w	r2, r2, #1
  40544e:	608e      	str	r6, [r1, #8]
  405450:	605a      	str	r2, [r3, #4]
  405452:	f000 fb41 	bl	405ad8 <__malloc_unlock>
  405456:	3408      	adds	r4, #8
  405458:	4620      	mov	r0, r4
  40545a:	b003      	add	sp, #12
  40545c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405460:	2400      	movs	r4, #0
  405462:	230c      	movs	r3, #12
  405464:	4620      	mov	r0, r4
  405466:	602b      	str	r3, [r5, #0]
  405468:	b003      	add	sp, #12
  40546a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40546e:	2040      	movs	r0, #64	; 0x40
  405470:	f44f 7300 	mov.w	r3, #512	; 0x200
  405474:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405478:	e74a      	b.n	405310 <_malloc_r+0x44>
  40547a:	4423      	add	r3, r4
  40547c:	68e1      	ldr	r1, [r4, #12]
  40547e:	685a      	ldr	r2, [r3, #4]
  405480:	68a6      	ldr	r6, [r4, #8]
  405482:	f042 0201 	orr.w	r2, r2, #1
  405486:	60f1      	str	r1, [r6, #12]
  405488:	4628      	mov	r0, r5
  40548a:	608e      	str	r6, [r1, #8]
  40548c:	605a      	str	r2, [r3, #4]
  40548e:	f000 fb23 	bl	405ad8 <__malloc_unlock>
  405492:	3408      	adds	r4, #8
  405494:	4620      	mov	r0, r4
  405496:	b003      	add	sp, #12
  405498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40549c:	4423      	add	r3, r4
  40549e:	4628      	mov	r0, r5
  4054a0:	685a      	ldr	r2, [r3, #4]
  4054a2:	f042 0201 	orr.w	r2, r2, #1
  4054a6:	605a      	str	r2, [r3, #4]
  4054a8:	f000 fb16 	bl	405ad8 <__malloc_unlock>
  4054ac:	3408      	adds	r4, #8
  4054ae:	4620      	mov	r0, r4
  4054b0:	b003      	add	sp, #12
  4054b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054b6:	68bc      	ldr	r4, [r7, #8]
  4054b8:	6863      	ldr	r3, [r4, #4]
  4054ba:	f023 0803 	bic.w	r8, r3, #3
  4054be:	45b0      	cmp	r8, r6
  4054c0:	d304      	bcc.n	4054cc <_malloc_r+0x200>
  4054c2:	eba8 0306 	sub.w	r3, r8, r6
  4054c6:	2b0f      	cmp	r3, #15
  4054c8:	f300 8085 	bgt.w	4055d6 <_malloc_r+0x30a>
  4054cc:	f8df 9158 	ldr.w	r9, [pc, #344]	; 405628 <_malloc_r+0x35c>
  4054d0:	4b50      	ldr	r3, [pc, #320]	; (405614 <_malloc_r+0x348>)
  4054d2:	f8d9 2000 	ldr.w	r2, [r9]
  4054d6:	681b      	ldr	r3, [r3, #0]
  4054d8:	3201      	adds	r2, #1
  4054da:	4433      	add	r3, r6
  4054dc:	eb04 0a08 	add.w	sl, r4, r8
  4054e0:	f000 8155 	beq.w	40578e <_malloc_r+0x4c2>
  4054e4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4054e8:	330f      	adds	r3, #15
  4054ea:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4054ee:	f02b 0b0f 	bic.w	fp, fp, #15
  4054f2:	4659      	mov	r1, fp
  4054f4:	4628      	mov	r0, r5
  4054f6:	f000 ffcd 	bl	406494 <_sbrk_r>
  4054fa:	1c41      	adds	r1, r0, #1
  4054fc:	4602      	mov	r2, r0
  4054fe:	f000 80fc 	beq.w	4056fa <_malloc_r+0x42e>
  405502:	4582      	cmp	sl, r0
  405504:	f200 80f7 	bhi.w	4056f6 <_malloc_r+0x42a>
  405508:	4b43      	ldr	r3, [pc, #268]	; (405618 <_malloc_r+0x34c>)
  40550a:	6819      	ldr	r1, [r3, #0]
  40550c:	4459      	add	r1, fp
  40550e:	6019      	str	r1, [r3, #0]
  405510:	f000 814d 	beq.w	4057ae <_malloc_r+0x4e2>
  405514:	f8d9 0000 	ldr.w	r0, [r9]
  405518:	3001      	adds	r0, #1
  40551a:	bf1b      	ittet	ne
  40551c:	eba2 0a0a 	subne.w	sl, r2, sl
  405520:	4451      	addne	r1, sl
  405522:	f8c9 2000 	streq.w	r2, [r9]
  405526:	6019      	strne	r1, [r3, #0]
  405528:	f012 0107 	ands.w	r1, r2, #7
  40552c:	f000 8115 	beq.w	40575a <_malloc_r+0x48e>
  405530:	f1c1 0008 	rsb	r0, r1, #8
  405534:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  405538:	4402      	add	r2, r0
  40553a:	3108      	adds	r1, #8
  40553c:	eb02 090b 	add.w	r9, r2, fp
  405540:	f3c9 090b 	ubfx	r9, r9, #0, #12
  405544:	eba1 0909 	sub.w	r9, r1, r9
  405548:	4649      	mov	r1, r9
  40554a:	4628      	mov	r0, r5
  40554c:	9301      	str	r3, [sp, #4]
  40554e:	9200      	str	r2, [sp, #0]
  405550:	f000 ffa0 	bl	406494 <_sbrk_r>
  405554:	1c43      	adds	r3, r0, #1
  405556:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40555a:	f000 8143 	beq.w	4057e4 <_malloc_r+0x518>
  40555e:	1a80      	subs	r0, r0, r2
  405560:	4448      	add	r0, r9
  405562:	f040 0001 	orr.w	r0, r0, #1
  405566:	6819      	ldr	r1, [r3, #0]
  405568:	60ba      	str	r2, [r7, #8]
  40556a:	4449      	add	r1, r9
  40556c:	42bc      	cmp	r4, r7
  40556e:	6050      	str	r0, [r2, #4]
  405570:	6019      	str	r1, [r3, #0]
  405572:	d017      	beq.n	4055a4 <_malloc_r+0x2d8>
  405574:	f1b8 0f0f 	cmp.w	r8, #15
  405578:	f240 80fb 	bls.w	405772 <_malloc_r+0x4a6>
  40557c:	6860      	ldr	r0, [r4, #4]
  40557e:	f1a8 020c 	sub.w	r2, r8, #12
  405582:	f022 0207 	bic.w	r2, r2, #7
  405586:	eb04 0e02 	add.w	lr, r4, r2
  40558a:	f000 0001 	and.w	r0, r0, #1
  40558e:	f04f 0c05 	mov.w	ip, #5
  405592:	4310      	orrs	r0, r2
  405594:	2a0f      	cmp	r2, #15
  405596:	6060      	str	r0, [r4, #4]
  405598:	f8ce c004 	str.w	ip, [lr, #4]
  40559c:	f8ce c008 	str.w	ip, [lr, #8]
  4055a0:	f200 8117 	bhi.w	4057d2 <_malloc_r+0x506>
  4055a4:	4b1d      	ldr	r3, [pc, #116]	; (40561c <_malloc_r+0x350>)
  4055a6:	68bc      	ldr	r4, [r7, #8]
  4055a8:	681a      	ldr	r2, [r3, #0]
  4055aa:	4291      	cmp	r1, r2
  4055ac:	bf88      	it	hi
  4055ae:	6019      	strhi	r1, [r3, #0]
  4055b0:	4b1b      	ldr	r3, [pc, #108]	; (405620 <_malloc_r+0x354>)
  4055b2:	681a      	ldr	r2, [r3, #0]
  4055b4:	4291      	cmp	r1, r2
  4055b6:	6862      	ldr	r2, [r4, #4]
  4055b8:	bf88      	it	hi
  4055ba:	6019      	strhi	r1, [r3, #0]
  4055bc:	f022 0203 	bic.w	r2, r2, #3
  4055c0:	4296      	cmp	r6, r2
  4055c2:	eba2 0306 	sub.w	r3, r2, r6
  4055c6:	d801      	bhi.n	4055cc <_malloc_r+0x300>
  4055c8:	2b0f      	cmp	r3, #15
  4055ca:	dc04      	bgt.n	4055d6 <_malloc_r+0x30a>
  4055cc:	4628      	mov	r0, r5
  4055ce:	f000 fa83 	bl	405ad8 <__malloc_unlock>
  4055d2:	2400      	movs	r4, #0
  4055d4:	e740      	b.n	405458 <_malloc_r+0x18c>
  4055d6:	19a2      	adds	r2, r4, r6
  4055d8:	f043 0301 	orr.w	r3, r3, #1
  4055dc:	f046 0601 	orr.w	r6, r6, #1
  4055e0:	6066      	str	r6, [r4, #4]
  4055e2:	4628      	mov	r0, r5
  4055e4:	60ba      	str	r2, [r7, #8]
  4055e6:	6053      	str	r3, [r2, #4]
  4055e8:	f000 fa76 	bl	405ad8 <__malloc_unlock>
  4055ec:	3408      	adds	r4, #8
  4055ee:	4620      	mov	r0, r4
  4055f0:	b003      	add	sp, #12
  4055f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4055f6:	2b14      	cmp	r3, #20
  4055f8:	d971      	bls.n	4056de <_malloc_r+0x412>
  4055fa:	2b54      	cmp	r3, #84	; 0x54
  4055fc:	f200 80a3 	bhi.w	405746 <_malloc_r+0x47a>
  405600:	0b33      	lsrs	r3, r6, #12
  405602:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  405606:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40560a:	00c3      	lsls	r3, r0, #3
  40560c:	e680      	b.n	405310 <_malloc_r+0x44>
  40560e:	bf00      	nop
  405610:	2040043c 	.word	0x2040043c
  405614:	20400a80 	.word	0x20400a80
  405618:	20400a50 	.word	0x20400a50
  40561c:	20400a78 	.word	0x20400a78
  405620:	20400a7c 	.word	0x20400a7c
  405624:	20400444 	.word	0x20400444
  405628:	20400844 	.word	0x20400844
  40562c:	0a5a      	lsrs	r2, r3, #9
  40562e:	2a04      	cmp	r2, #4
  405630:	d95b      	bls.n	4056ea <_malloc_r+0x41e>
  405632:	2a14      	cmp	r2, #20
  405634:	f200 80ae 	bhi.w	405794 <_malloc_r+0x4c8>
  405638:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40563c:	00c9      	lsls	r1, r1, #3
  40563e:	325b      	adds	r2, #91	; 0x5b
  405640:	eb07 0c01 	add.w	ip, r7, r1
  405644:	5879      	ldr	r1, [r7, r1]
  405646:	f1ac 0c08 	sub.w	ip, ip, #8
  40564a:	458c      	cmp	ip, r1
  40564c:	f000 8088 	beq.w	405760 <_malloc_r+0x494>
  405650:	684a      	ldr	r2, [r1, #4]
  405652:	f022 0203 	bic.w	r2, r2, #3
  405656:	4293      	cmp	r3, r2
  405658:	d273      	bcs.n	405742 <_malloc_r+0x476>
  40565a:	6889      	ldr	r1, [r1, #8]
  40565c:	458c      	cmp	ip, r1
  40565e:	d1f7      	bne.n	405650 <_malloc_r+0x384>
  405660:	f8dc 200c 	ldr.w	r2, [ip, #12]
  405664:	687b      	ldr	r3, [r7, #4]
  405666:	60e2      	str	r2, [r4, #12]
  405668:	f8c4 c008 	str.w	ip, [r4, #8]
  40566c:	6094      	str	r4, [r2, #8]
  40566e:	f8cc 400c 	str.w	r4, [ip, #12]
  405672:	e68f      	b.n	405394 <_malloc_r+0xc8>
  405674:	19a1      	adds	r1, r4, r6
  405676:	f046 0c01 	orr.w	ip, r6, #1
  40567a:	f042 0601 	orr.w	r6, r2, #1
  40567e:	f8c4 c004 	str.w	ip, [r4, #4]
  405682:	4628      	mov	r0, r5
  405684:	6179      	str	r1, [r7, #20]
  405686:	6139      	str	r1, [r7, #16]
  405688:	f8c1 e00c 	str.w	lr, [r1, #12]
  40568c:	f8c1 e008 	str.w	lr, [r1, #8]
  405690:	604e      	str	r6, [r1, #4]
  405692:	50e2      	str	r2, [r4, r3]
  405694:	f000 fa20 	bl	405ad8 <__malloc_unlock>
  405698:	3408      	adds	r4, #8
  40569a:	e6dd      	b.n	405458 <_malloc_r+0x18c>
  40569c:	687b      	ldr	r3, [r7, #4]
  40569e:	e679      	b.n	405394 <_malloc_r+0xc8>
  4056a0:	f108 0801 	add.w	r8, r8, #1
  4056a4:	f018 0f03 	tst.w	r8, #3
  4056a8:	f10c 0c08 	add.w	ip, ip, #8
  4056ac:	f47f ae85 	bne.w	4053ba <_malloc_r+0xee>
  4056b0:	e02d      	b.n	40570e <_malloc_r+0x442>
  4056b2:	68dc      	ldr	r4, [r3, #12]
  4056b4:	42a3      	cmp	r3, r4
  4056b6:	bf08      	it	eq
  4056b8:	3002      	addeq	r0, #2
  4056ba:	f43f ae3e 	beq.w	40533a <_malloc_r+0x6e>
  4056be:	e6bb      	b.n	405438 <_malloc_r+0x16c>
  4056c0:	4419      	add	r1, r3
  4056c2:	461c      	mov	r4, r3
  4056c4:	684a      	ldr	r2, [r1, #4]
  4056c6:	68db      	ldr	r3, [r3, #12]
  4056c8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4056cc:	f042 0201 	orr.w	r2, r2, #1
  4056d0:	604a      	str	r2, [r1, #4]
  4056d2:	4628      	mov	r0, r5
  4056d4:	60f3      	str	r3, [r6, #12]
  4056d6:	609e      	str	r6, [r3, #8]
  4056d8:	f000 f9fe 	bl	405ad8 <__malloc_unlock>
  4056dc:	e6bc      	b.n	405458 <_malloc_r+0x18c>
  4056de:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4056e2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4056e6:	00c3      	lsls	r3, r0, #3
  4056e8:	e612      	b.n	405310 <_malloc_r+0x44>
  4056ea:	099a      	lsrs	r2, r3, #6
  4056ec:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4056f0:	00c9      	lsls	r1, r1, #3
  4056f2:	3238      	adds	r2, #56	; 0x38
  4056f4:	e7a4      	b.n	405640 <_malloc_r+0x374>
  4056f6:	42bc      	cmp	r4, r7
  4056f8:	d054      	beq.n	4057a4 <_malloc_r+0x4d8>
  4056fa:	68bc      	ldr	r4, [r7, #8]
  4056fc:	6862      	ldr	r2, [r4, #4]
  4056fe:	f022 0203 	bic.w	r2, r2, #3
  405702:	e75d      	b.n	4055c0 <_malloc_r+0x2f4>
  405704:	f859 3908 	ldr.w	r3, [r9], #-8
  405708:	4599      	cmp	r9, r3
  40570a:	f040 8086 	bne.w	40581a <_malloc_r+0x54e>
  40570e:	f010 0f03 	tst.w	r0, #3
  405712:	f100 30ff 	add.w	r0, r0, #4294967295
  405716:	d1f5      	bne.n	405704 <_malloc_r+0x438>
  405718:	687b      	ldr	r3, [r7, #4]
  40571a:	ea23 0304 	bic.w	r3, r3, r4
  40571e:	607b      	str	r3, [r7, #4]
  405720:	0064      	lsls	r4, r4, #1
  405722:	429c      	cmp	r4, r3
  405724:	f63f aec7 	bhi.w	4054b6 <_malloc_r+0x1ea>
  405728:	2c00      	cmp	r4, #0
  40572a:	f43f aec4 	beq.w	4054b6 <_malloc_r+0x1ea>
  40572e:	421c      	tst	r4, r3
  405730:	4640      	mov	r0, r8
  405732:	f47f ae3e 	bne.w	4053b2 <_malloc_r+0xe6>
  405736:	0064      	lsls	r4, r4, #1
  405738:	421c      	tst	r4, r3
  40573a:	f100 0004 	add.w	r0, r0, #4
  40573e:	d0fa      	beq.n	405736 <_malloc_r+0x46a>
  405740:	e637      	b.n	4053b2 <_malloc_r+0xe6>
  405742:	468c      	mov	ip, r1
  405744:	e78c      	b.n	405660 <_malloc_r+0x394>
  405746:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40574a:	d815      	bhi.n	405778 <_malloc_r+0x4ac>
  40574c:	0bf3      	lsrs	r3, r6, #15
  40574e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  405752:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405756:	00c3      	lsls	r3, r0, #3
  405758:	e5da      	b.n	405310 <_malloc_r+0x44>
  40575a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40575e:	e6ed      	b.n	40553c <_malloc_r+0x270>
  405760:	687b      	ldr	r3, [r7, #4]
  405762:	1092      	asrs	r2, r2, #2
  405764:	2101      	movs	r1, #1
  405766:	fa01 f202 	lsl.w	r2, r1, r2
  40576a:	4313      	orrs	r3, r2
  40576c:	607b      	str	r3, [r7, #4]
  40576e:	4662      	mov	r2, ip
  405770:	e779      	b.n	405666 <_malloc_r+0x39a>
  405772:	2301      	movs	r3, #1
  405774:	6053      	str	r3, [r2, #4]
  405776:	e729      	b.n	4055cc <_malloc_r+0x300>
  405778:	f240 5254 	movw	r2, #1364	; 0x554
  40577c:	4293      	cmp	r3, r2
  40577e:	d822      	bhi.n	4057c6 <_malloc_r+0x4fa>
  405780:	0cb3      	lsrs	r3, r6, #18
  405782:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405786:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40578a:	00c3      	lsls	r3, r0, #3
  40578c:	e5c0      	b.n	405310 <_malloc_r+0x44>
  40578e:	f103 0b10 	add.w	fp, r3, #16
  405792:	e6ae      	b.n	4054f2 <_malloc_r+0x226>
  405794:	2a54      	cmp	r2, #84	; 0x54
  405796:	d829      	bhi.n	4057ec <_malloc_r+0x520>
  405798:	0b1a      	lsrs	r2, r3, #12
  40579a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40579e:	00c9      	lsls	r1, r1, #3
  4057a0:	326e      	adds	r2, #110	; 0x6e
  4057a2:	e74d      	b.n	405640 <_malloc_r+0x374>
  4057a4:	4b20      	ldr	r3, [pc, #128]	; (405828 <_malloc_r+0x55c>)
  4057a6:	6819      	ldr	r1, [r3, #0]
  4057a8:	4459      	add	r1, fp
  4057aa:	6019      	str	r1, [r3, #0]
  4057ac:	e6b2      	b.n	405514 <_malloc_r+0x248>
  4057ae:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4057b2:	2800      	cmp	r0, #0
  4057b4:	f47f aeae 	bne.w	405514 <_malloc_r+0x248>
  4057b8:	eb08 030b 	add.w	r3, r8, fp
  4057bc:	68ba      	ldr	r2, [r7, #8]
  4057be:	f043 0301 	orr.w	r3, r3, #1
  4057c2:	6053      	str	r3, [r2, #4]
  4057c4:	e6ee      	b.n	4055a4 <_malloc_r+0x2d8>
  4057c6:	207f      	movs	r0, #127	; 0x7f
  4057c8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4057cc:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4057d0:	e59e      	b.n	405310 <_malloc_r+0x44>
  4057d2:	f104 0108 	add.w	r1, r4, #8
  4057d6:	4628      	mov	r0, r5
  4057d8:	9300      	str	r3, [sp, #0]
  4057da:	f7ff fa59 	bl	404c90 <_free_r>
  4057de:	9b00      	ldr	r3, [sp, #0]
  4057e0:	6819      	ldr	r1, [r3, #0]
  4057e2:	e6df      	b.n	4055a4 <_malloc_r+0x2d8>
  4057e4:	2001      	movs	r0, #1
  4057e6:	f04f 0900 	mov.w	r9, #0
  4057ea:	e6bc      	b.n	405566 <_malloc_r+0x29a>
  4057ec:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4057f0:	d805      	bhi.n	4057fe <_malloc_r+0x532>
  4057f2:	0bda      	lsrs	r2, r3, #15
  4057f4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4057f8:	00c9      	lsls	r1, r1, #3
  4057fa:	3277      	adds	r2, #119	; 0x77
  4057fc:	e720      	b.n	405640 <_malloc_r+0x374>
  4057fe:	f240 5154 	movw	r1, #1364	; 0x554
  405802:	428a      	cmp	r2, r1
  405804:	d805      	bhi.n	405812 <_malloc_r+0x546>
  405806:	0c9a      	lsrs	r2, r3, #18
  405808:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40580c:	00c9      	lsls	r1, r1, #3
  40580e:	327c      	adds	r2, #124	; 0x7c
  405810:	e716      	b.n	405640 <_malloc_r+0x374>
  405812:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  405816:	227e      	movs	r2, #126	; 0x7e
  405818:	e712      	b.n	405640 <_malloc_r+0x374>
  40581a:	687b      	ldr	r3, [r7, #4]
  40581c:	e780      	b.n	405720 <_malloc_r+0x454>
  40581e:	08f0      	lsrs	r0, r6, #3
  405820:	f106 0308 	add.w	r3, r6, #8
  405824:	e600      	b.n	405428 <_malloc_r+0x15c>
  405826:	bf00      	nop
  405828:	20400a50 	.word	0x20400a50
  40582c:	00000000 	.word	0x00000000

00405830 <memchr>:
  405830:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405834:	2a10      	cmp	r2, #16
  405836:	db2b      	blt.n	405890 <memchr+0x60>
  405838:	f010 0f07 	tst.w	r0, #7
  40583c:	d008      	beq.n	405850 <memchr+0x20>
  40583e:	f810 3b01 	ldrb.w	r3, [r0], #1
  405842:	3a01      	subs	r2, #1
  405844:	428b      	cmp	r3, r1
  405846:	d02d      	beq.n	4058a4 <memchr+0x74>
  405848:	f010 0f07 	tst.w	r0, #7
  40584c:	b342      	cbz	r2, 4058a0 <memchr+0x70>
  40584e:	d1f6      	bne.n	40583e <memchr+0xe>
  405850:	b4f0      	push	{r4, r5, r6, r7}
  405852:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405856:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40585a:	f022 0407 	bic.w	r4, r2, #7
  40585e:	f07f 0700 	mvns.w	r7, #0
  405862:	2300      	movs	r3, #0
  405864:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405868:	3c08      	subs	r4, #8
  40586a:	ea85 0501 	eor.w	r5, r5, r1
  40586e:	ea86 0601 	eor.w	r6, r6, r1
  405872:	fa85 f547 	uadd8	r5, r5, r7
  405876:	faa3 f587 	sel	r5, r3, r7
  40587a:	fa86 f647 	uadd8	r6, r6, r7
  40587e:	faa5 f687 	sel	r6, r5, r7
  405882:	b98e      	cbnz	r6, 4058a8 <memchr+0x78>
  405884:	d1ee      	bne.n	405864 <memchr+0x34>
  405886:	bcf0      	pop	{r4, r5, r6, r7}
  405888:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40588c:	f002 0207 	and.w	r2, r2, #7
  405890:	b132      	cbz	r2, 4058a0 <memchr+0x70>
  405892:	f810 3b01 	ldrb.w	r3, [r0], #1
  405896:	3a01      	subs	r2, #1
  405898:	ea83 0301 	eor.w	r3, r3, r1
  40589c:	b113      	cbz	r3, 4058a4 <memchr+0x74>
  40589e:	d1f8      	bne.n	405892 <memchr+0x62>
  4058a0:	2000      	movs	r0, #0
  4058a2:	4770      	bx	lr
  4058a4:	3801      	subs	r0, #1
  4058a6:	4770      	bx	lr
  4058a8:	2d00      	cmp	r5, #0
  4058aa:	bf06      	itte	eq
  4058ac:	4635      	moveq	r5, r6
  4058ae:	3803      	subeq	r0, #3
  4058b0:	3807      	subne	r0, #7
  4058b2:	f015 0f01 	tst.w	r5, #1
  4058b6:	d107      	bne.n	4058c8 <memchr+0x98>
  4058b8:	3001      	adds	r0, #1
  4058ba:	f415 7f80 	tst.w	r5, #256	; 0x100
  4058be:	bf02      	ittt	eq
  4058c0:	3001      	addeq	r0, #1
  4058c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4058c6:	3001      	addeq	r0, #1
  4058c8:	bcf0      	pop	{r4, r5, r6, r7}
  4058ca:	3801      	subs	r0, #1
  4058cc:	4770      	bx	lr
  4058ce:	bf00      	nop

004058d0 <memcpy>:
  4058d0:	4684      	mov	ip, r0
  4058d2:	ea41 0300 	orr.w	r3, r1, r0
  4058d6:	f013 0303 	ands.w	r3, r3, #3
  4058da:	d16d      	bne.n	4059b8 <memcpy+0xe8>
  4058dc:	3a40      	subs	r2, #64	; 0x40
  4058de:	d341      	bcc.n	405964 <memcpy+0x94>
  4058e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058e4:	f840 3b04 	str.w	r3, [r0], #4
  4058e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058ec:	f840 3b04 	str.w	r3, [r0], #4
  4058f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058f4:	f840 3b04 	str.w	r3, [r0], #4
  4058f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058fc:	f840 3b04 	str.w	r3, [r0], #4
  405900:	f851 3b04 	ldr.w	r3, [r1], #4
  405904:	f840 3b04 	str.w	r3, [r0], #4
  405908:	f851 3b04 	ldr.w	r3, [r1], #4
  40590c:	f840 3b04 	str.w	r3, [r0], #4
  405910:	f851 3b04 	ldr.w	r3, [r1], #4
  405914:	f840 3b04 	str.w	r3, [r0], #4
  405918:	f851 3b04 	ldr.w	r3, [r1], #4
  40591c:	f840 3b04 	str.w	r3, [r0], #4
  405920:	f851 3b04 	ldr.w	r3, [r1], #4
  405924:	f840 3b04 	str.w	r3, [r0], #4
  405928:	f851 3b04 	ldr.w	r3, [r1], #4
  40592c:	f840 3b04 	str.w	r3, [r0], #4
  405930:	f851 3b04 	ldr.w	r3, [r1], #4
  405934:	f840 3b04 	str.w	r3, [r0], #4
  405938:	f851 3b04 	ldr.w	r3, [r1], #4
  40593c:	f840 3b04 	str.w	r3, [r0], #4
  405940:	f851 3b04 	ldr.w	r3, [r1], #4
  405944:	f840 3b04 	str.w	r3, [r0], #4
  405948:	f851 3b04 	ldr.w	r3, [r1], #4
  40594c:	f840 3b04 	str.w	r3, [r0], #4
  405950:	f851 3b04 	ldr.w	r3, [r1], #4
  405954:	f840 3b04 	str.w	r3, [r0], #4
  405958:	f851 3b04 	ldr.w	r3, [r1], #4
  40595c:	f840 3b04 	str.w	r3, [r0], #4
  405960:	3a40      	subs	r2, #64	; 0x40
  405962:	d2bd      	bcs.n	4058e0 <memcpy+0x10>
  405964:	3230      	adds	r2, #48	; 0x30
  405966:	d311      	bcc.n	40598c <memcpy+0xbc>
  405968:	f851 3b04 	ldr.w	r3, [r1], #4
  40596c:	f840 3b04 	str.w	r3, [r0], #4
  405970:	f851 3b04 	ldr.w	r3, [r1], #4
  405974:	f840 3b04 	str.w	r3, [r0], #4
  405978:	f851 3b04 	ldr.w	r3, [r1], #4
  40597c:	f840 3b04 	str.w	r3, [r0], #4
  405980:	f851 3b04 	ldr.w	r3, [r1], #4
  405984:	f840 3b04 	str.w	r3, [r0], #4
  405988:	3a10      	subs	r2, #16
  40598a:	d2ed      	bcs.n	405968 <memcpy+0x98>
  40598c:	320c      	adds	r2, #12
  40598e:	d305      	bcc.n	40599c <memcpy+0xcc>
  405990:	f851 3b04 	ldr.w	r3, [r1], #4
  405994:	f840 3b04 	str.w	r3, [r0], #4
  405998:	3a04      	subs	r2, #4
  40599a:	d2f9      	bcs.n	405990 <memcpy+0xc0>
  40599c:	3204      	adds	r2, #4
  40599e:	d008      	beq.n	4059b2 <memcpy+0xe2>
  4059a0:	07d2      	lsls	r2, r2, #31
  4059a2:	bf1c      	itt	ne
  4059a4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4059a8:	f800 3b01 	strbne.w	r3, [r0], #1
  4059ac:	d301      	bcc.n	4059b2 <memcpy+0xe2>
  4059ae:	880b      	ldrh	r3, [r1, #0]
  4059b0:	8003      	strh	r3, [r0, #0]
  4059b2:	4660      	mov	r0, ip
  4059b4:	4770      	bx	lr
  4059b6:	bf00      	nop
  4059b8:	2a08      	cmp	r2, #8
  4059ba:	d313      	bcc.n	4059e4 <memcpy+0x114>
  4059bc:	078b      	lsls	r3, r1, #30
  4059be:	d08d      	beq.n	4058dc <memcpy+0xc>
  4059c0:	f010 0303 	ands.w	r3, r0, #3
  4059c4:	d08a      	beq.n	4058dc <memcpy+0xc>
  4059c6:	f1c3 0304 	rsb	r3, r3, #4
  4059ca:	1ad2      	subs	r2, r2, r3
  4059cc:	07db      	lsls	r3, r3, #31
  4059ce:	bf1c      	itt	ne
  4059d0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4059d4:	f800 3b01 	strbne.w	r3, [r0], #1
  4059d8:	d380      	bcc.n	4058dc <memcpy+0xc>
  4059da:	f831 3b02 	ldrh.w	r3, [r1], #2
  4059de:	f820 3b02 	strh.w	r3, [r0], #2
  4059e2:	e77b      	b.n	4058dc <memcpy+0xc>
  4059e4:	3a04      	subs	r2, #4
  4059e6:	d3d9      	bcc.n	40599c <memcpy+0xcc>
  4059e8:	3a01      	subs	r2, #1
  4059ea:	f811 3b01 	ldrb.w	r3, [r1], #1
  4059ee:	f800 3b01 	strb.w	r3, [r0], #1
  4059f2:	d2f9      	bcs.n	4059e8 <memcpy+0x118>
  4059f4:	780b      	ldrb	r3, [r1, #0]
  4059f6:	7003      	strb	r3, [r0, #0]
  4059f8:	784b      	ldrb	r3, [r1, #1]
  4059fa:	7043      	strb	r3, [r0, #1]
  4059fc:	788b      	ldrb	r3, [r1, #2]
  4059fe:	7083      	strb	r3, [r0, #2]
  405a00:	4660      	mov	r0, ip
  405a02:	4770      	bx	lr

00405a04 <memmove>:
  405a04:	4288      	cmp	r0, r1
  405a06:	b5f0      	push	{r4, r5, r6, r7, lr}
  405a08:	d90d      	bls.n	405a26 <memmove+0x22>
  405a0a:	188b      	adds	r3, r1, r2
  405a0c:	4298      	cmp	r0, r3
  405a0e:	d20a      	bcs.n	405a26 <memmove+0x22>
  405a10:	1884      	adds	r4, r0, r2
  405a12:	2a00      	cmp	r2, #0
  405a14:	d051      	beq.n	405aba <memmove+0xb6>
  405a16:	4622      	mov	r2, r4
  405a18:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405a1c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405a20:	4299      	cmp	r1, r3
  405a22:	d1f9      	bne.n	405a18 <memmove+0x14>
  405a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405a26:	2a0f      	cmp	r2, #15
  405a28:	d948      	bls.n	405abc <memmove+0xb8>
  405a2a:	ea41 0300 	orr.w	r3, r1, r0
  405a2e:	079b      	lsls	r3, r3, #30
  405a30:	d146      	bne.n	405ac0 <memmove+0xbc>
  405a32:	f100 0410 	add.w	r4, r0, #16
  405a36:	f101 0310 	add.w	r3, r1, #16
  405a3a:	4615      	mov	r5, r2
  405a3c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405a40:	f844 6c10 	str.w	r6, [r4, #-16]
  405a44:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405a48:	f844 6c0c 	str.w	r6, [r4, #-12]
  405a4c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405a50:	f844 6c08 	str.w	r6, [r4, #-8]
  405a54:	3d10      	subs	r5, #16
  405a56:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405a5a:	f844 6c04 	str.w	r6, [r4, #-4]
  405a5e:	2d0f      	cmp	r5, #15
  405a60:	f103 0310 	add.w	r3, r3, #16
  405a64:	f104 0410 	add.w	r4, r4, #16
  405a68:	d8e8      	bhi.n	405a3c <memmove+0x38>
  405a6a:	f1a2 0310 	sub.w	r3, r2, #16
  405a6e:	f023 030f 	bic.w	r3, r3, #15
  405a72:	f002 0e0f 	and.w	lr, r2, #15
  405a76:	3310      	adds	r3, #16
  405a78:	f1be 0f03 	cmp.w	lr, #3
  405a7c:	4419      	add	r1, r3
  405a7e:	4403      	add	r3, r0
  405a80:	d921      	bls.n	405ac6 <memmove+0xc2>
  405a82:	1f1e      	subs	r6, r3, #4
  405a84:	460d      	mov	r5, r1
  405a86:	4674      	mov	r4, lr
  405a88:	3c04      	subs	r4, #4
  405a8a:	f855 7b04 	ldr.w	r7, [r5], #4
  405a8e:	f846 7f04 	str.w	r7, [r6, #4]!
  405a92:	2c03      	cmp	r4, #3
  405a94:	d8f8      	bhi.n	405a88 <memmove+0x84>
  405a96:	f1ae 0404 	sub.w	r4, lr, #4
  405a9a:	f024 0403 	bic.w	r4, r4, #3
  405a9e:	3404      	adds	r4, #4
  405aa0:	4421      	add	r1, r4
  405aa2:	4423      	add	r3, r4
  405aa4:	f002 0203 	and.w	r2, r2, #3
  405aa8:	b162      	cbz	r2, 405ac4 <memmove+0xc0>
  405aaa:	3b01      	subs	r3, #1
  405aac:	440a      	add	r2, r1
  405aae:	f811 4b01 	ldrb.w	r4, [r1], #1
  405ab2:	f803 4f01 	strb.w	r4, [r3, #1]!
  405ab6:	428a      	cmp	r2, r1
  405ab8:	d1f9      	bne.n	405aae <memmove+0xaa>
  405aba:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405abc:	4603      	mov	r3, r0
  405abe:	e7f3      	b.n	405aa8 <memmove+0xa4>
  405ac0:	4603      	mov	r3, r0
  405ac2:	e7f2      	b.n	405aaa <memmove+0xa6>
  405ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405ac6:	4672      	mov	r2, lr
  405ac8:	e7ee      	b.n	405aa8 <memmove+0xa4>
  405aca:	bf00      	nop

00405acc <__malloc_lock>:
  405acc:	4801      	ldr	r0, [pc, #4]	; (405ad4 <__malloc_lock+0x8>)
  405ace:	f7ff bb79 	b.w	4051c4 <__retarget_lock_acquire_recursive>
  405ad2:	bf00      	nop
  405ad4:	20400aa0 	.word	0x20400aa0

00405ad8 <__malloc_unlock>:
  405ad8:	4801      	ldr	r0, [pc, #4]	; (405ae0 <__malloc_unlock+0x8>)
  405ada:	f7ff bb75 	b.w	4051c8 <__retarget_lock_release_recursive>
  405ade:	bf00      	nop
  405ae0:	20400aa0 	.word	0x20400aa0

00405ae4 <_Balloc>:
  405ae4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405ae6:	b570      	push	{r4, r5, r6, lr}
  405ae8:	4605      	mov	r5, r0
  405aea:	460c      	mov	r4, r1
  405aec:	b14b      	cbz	r3, 405b02 <_Balloc+0x1e>
  405aee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  405af2:	b180      	cbz	r0, 405b16 <_Balloc+0x32>
  405af4:	6802      	ldr	r2, [r0, #0]
  405af6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405afa:	2300      	movs	r3, #0
  405afc:	6103      	str	r3, [r0, #16]
  405afe:	60c3      	str	r3, [r0, #12]
  405b00:	bd70      	pop	{r4, r5, r6, pc}
  405b02:	2221      	movs	r2, #33	; 0x21
  405b04:	2104      	movs	r1, #4
  405b06:	f000 fe35 	bl	406774 <_calloc_r>
  405b0a:	64e8      	str	r0, [r5, #76]	; 0x4c
  405b0c:	4603      	mov	r3, r0
  405b0e:	2800      	cmp	r0, #0
  405b10:	d1ed      	bne.n	405aee <_Balloc+0xa>
  405b12:	2000      	movs	r0, #0
  405b14:	bd70      	pop	{r4, r5, r6, pc}
  405b16:	2101      	movs	r1, #1
  405b18:	fa01 f604 	lsl.w	r6, r1, r4
  405b1c:	1d72      	adds	r2, r6, #5
  405b1e:	4628      	mov	r0, r5
  405b20:	0092      	lsls	r2, r2, #2
  405b22:	f000 fe27 	bl	406774 <_calloc_r>
  405b26:	2800      	cmp	r0, #0
  405b28:	d0f3      	beq.n	405b12 <_Balloc+0x2e>
  405b2a:	6044      	str	r4, [r0, #4]
  405b2c:	6086      	str	r6, [r0, #8]
  405b2e:	e7e4      	b.n	405afa <_Balloc+0x16>

00405b30 <_Bfree>:
  405b30:	b131      	cbz	r1, 405b40 <_Bfree+0x10>
  405b32:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405b34:	684a      	ldr	r2, [r1, #4]
  405b36:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405b3a:	6008      	str	r0, [r1, #0]
  405b3c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405b40:	4770      	bx	lr
  405b42:	bf00      	nop

00405b44 <__multadd>:
  405b44:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b46:	690c      	ldr	r4, [r1, #16]
  405b48:	b083      	sub	sp, #12
  405b4a:	460d      	mov	r5, r1
  405b4c:	4606      	mov	r6, r0
  405b4e:	f101 0e14 	add.w	lr, r1, #20
  405b52:	2700      	movs	r7, #0
  405b54:	f8de 0000 	ldr.w	r0, [lr]
  405b58:	b281      	uxth	r1, r0
  405b5a:	fb02 3301 	mla	r3, r2, r1, r3
  405b5e:	0c01      	lsrs	r1, r0, #16
  405b60:	0c18      	lsrs	r0, r3, #16
  405b62:	fb02 0101 	mla	r1, r2, r1, r0
  405b66:	b29b      	uxth	r3, r3
  405b68:	3701      	adds	r7, #1
  405b6a:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405b6e:	42bc      	cmp	r4, r7
  405b70:	f84e 3b04 	str.w	r3, [lr], #4
  405b74:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405b78:	dcec      	bgt.n	405b54 <__multadd+0x10>
  405b7a:	b13b      	cbz	r3, 405b8c <__multadd+0x48>
  405b7c:	68aa      	ldr	r2, [r5, #8]
  405b7e:	4294      	cmp	r4, r2
  405b80:	da07      	bge.n	405b92 <__multadd+0x4e>
  405b82:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  405b86:	3401      	adds	r4, #1
  405b88:	6153      	str	r3, [r2, #20]
  405b8a:	612c      	str	r4, [r5, #16]
  405b8c:	4628      	mov	r0, r5
  405b8e:	b003      	add	sp, #12
  405b90:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b92:	6869      	ldr	r1, [r5, #4]
  405b94:	9301      	str	r3, [sp, #4]
  405b96:	3101      	adds	r1, #1
  405b98:	4630      	mov	r0, r6
  405b9a:	f7ff ffa3 	bl	405ae4 <_Balloc>
  405b9e:	692a      	ldr	r2, [r5, #16]
  405ba0:	3202      	adds	r2, #2
  405ba2:	f105 010c 	add.w	r1, r5, #12
  405ba6:	4607      	mov	r7, r0
  405ba8:	0092      	lsls	r2, r2, #2
  405baa:	300c      	adds	r0, #12
  405bac:	f7ff fe90 	bl	4058d0 <memcpy>
  405bb0:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  405bb2:	6869      	ldr	r1, [r5, #4]
  405bb4:	9b01      	ldr	r3, [sp, #4]
  405bb6:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405bba:	6028      	str	r0, [r5, #0]
  405bbc:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405bc0:	463d      	mov	r5, r7
  405bc2:	e7de      	b.n	405b82 <__multadd+0x3e>

00405bc4 <__hi0bits>:
  405bc4:	0c02      	lsrs	r2, r0, #16
  405bc6:	0412      	lsls	r2, r2, #16
  405bc8:	4603      	mov	r3, r0
  405bca:	b9b2      	cbnz	r2, 405bfa <__hi0bits+0x36>
  405bcc:	0403      	lsls	r3, r0, #16
  405bce:	2010      	movs	r0, #16
  405bd0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  405bd4:	bf04      	itt	eq
  405bd6:	021b      	lsleq	r3, r3, #8
  405bd8:	3008      	addeq	r0, #8
  405bda:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405bde:	bf04      	itt	eq
  405be0:	011b      	lsleq	r3, r3, #4
  405be2:	3004      	addeq	r0, #4
  405be4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405be8:	bf04      	itt	eq
  405bea:	009b      	lsleq	r3, r3, #2
  405bec:	3002      	addeq	r0, #2
  405bee:	2b00      	cmp	r3, #0
  405bf0:	db02      	blt.n	405bf8 <__hi0bits+0x34>
  405bf2:	005b      	lsls	r3, r3, #1
  405bf4:	d403      	bmi.n	405bfe <__hi0bits+0x3a>
  405bf6:	2020      	movs	r0, #32
  405bf8:	4770      	bx	lr
  405bfa:	2000      	movs	r0, #0
  405bfc:	e7e8      	b.n	405bd0 <__hi0bits+0xc>
  405bfe:	3001      	adds	r0, #1
  405c00:	4770      	bx	lr
  405c02:	bf00      	nop

00405c04 <__lo0bits>:
  405c04:	6803      	ldr	r3, [r0, #0]
  405c06:	f013 0207 	ands.w	r2, r3, #7
  405c0a:	4601      	mov	r1, r0
  405c0c:	d007      	beq.n	405c1e <__lo0bits+0x1a>
  405c0e:	07da      	lsls	r2, r3, #31
  405c10:	d421      	bmi.n	405c56 <__lo0bits+0x52>
  405c12:	0798      	lsls	r0, r3, #30
  405c14:	d421      	bmi.n	405c5a <__lo0bits+0x56>
  405c16:	089b      	lsrs	r3, r3, #2
  405c18:	600b      	str	r3, [r1, #0]
  405c1a:	2002      	movs	r0, #2
  405c1c:	4770      	bx	lr
  405c1e:	b298      	uxth	r0, r3
  405c20:	b198      	cbz	r0, 405c4a <__lo0bits+0x46>
  405c22:	4610      	mov	r0, r2
  405c24:	f013 0fff 	tst.w	r3, #255	; 0xff
  405c28:	bf04      	itt	eq
  405c2a:	0a1b      	lsreq	r3, r3, #8
  405c2c:	3008      	addeq	r0, #8
  405c2e:	071a      	lsls	r2, r3, #28
  405c30:	bf04      	itt	eq
  405c32:	091b      	lsreq	r3, r3, #4
  405c34:	3004      	addeq	r0, #4
  405c36:	079a      	lsls	r2, r3, #30
  405c38:	bf04      	itt	eq
  405c3a:	089b      	lsreq	r3, r3, #2
  405c3c:	3002      	addeq	r0, #2
  405c3e:	07da      	lsls	r2, r3, #31
  405c40:	d407      	bmi.n	405c52 <__lo0bits+0x4e>
  405c42:	085b      	lsrs	r3, r3, #1
  405c44:	d104      	bne.n	405c50 <__lo0bits+0x4c>
  405c46:	2020      	movs	r0, #32
  405c48:	4770      	bx	lr
  405c4a:	0c1b      	lsrs	r3, r3, #16
  405c4c:	2010      	movs	r0, #16
  405c4e:	e7e9      	b.n	405c24 <__lo0bits+0x20>
  405c50:	3001      	adds	r0, #1
  405c52:	600b      	str	r3, [r1, #0]
  405c54:	4770      	bx	lr
  405c56:	2000      	movs	r0, #0
  405c58:	4770      	bx	lr
  405c5a:	085b      	lsrs	r3, r3, #1
  405c5c:	600b      	str	r3, [r1, #0]
  405c5e:	2001      	movs	r0, #1
  405c60:	4770      	bx	lr
  405c62:	bf00      	nop

00405c64 <__i2b>:
  405c64:	b510      	push	{r4, lr}
  405c66:	460c      	mov	r4, r1
  405c68:	2101      	movs	r1, #1
  405c6a:	f7ff ff3b 	bl	405ae4 <_Balloc>
  405c6e:	2201      	movs	r2, #1
  405c70:	6144      	str	r4, [r0, #20]
  405c72:	6102      	str	r2, [r0, #16]
  405c74:	bd10      	pop	{r4, pc}
  405c76:	bf00      	nop

00405c78 <__multiply>:
  405c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405c7c:	690c      	ldr	r4, [r1, #16]
  405c7e:	6915      	ldr	r5, [r2, #16]
  405c80:	42ac      	cmp	r4, r5
  405c82:	b083      	sub	sp, #12
  405c84:	468b      	mov	fp, r1
  405c86:	4616      	mov	r6, r2
  405c88:	da04      	bge.n	405c94 <__multiply+0x1c>
  405c8a:	4622      	mov	r2, r4
  405c8c:	46b3      	mov	fp, r6
  405c8e:	462c      	mov	r4, r5
  405c90:	460e      	mov	r6, r1
  405c92:	4615      	mov	r5, r2
  405c94:	f8db 3008 	ldr.w	r3, [fp, #8]
  405c98:	f8db 1004 	ldr.w	r1, [fp, #4]
  405c9c:	eb04 0805 	add.w	r8, r4, r5
  405ca0:	4598      	cmp	r8, r3
  405ca2:	bfc8      	it	gt
  405ca4:	3101      	addgt	r1, #1
  405ca6:	f7ff ff1d 	bl	405ae4 <_Balloc>
  405caa:	f100 0914 	add.w	r9, r0, #20
  405cae:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  405cb2:	45d1      	cmp	r9, sl
  405cb4:	9000      	str	r0, [sp, #0]
  405cb6:	d205      	bcs.n	405cc4 <__multiply+0x4c>
  405cb8:	464b      	mov	r3, r9
  405cba:	2100      	movs	r1, #0
  405cbc:	f843 1b04 	str.w	r1, [r3], #4
  405cc0:	459a      	cmp	sl, r3
  405cc2:	d8fb      	bhi.n	405cbc <__multiply+0x44>
  405cc4:	f106 0c14 	add.w	ip, r6, #20
  405cc8:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405ccc:	f10b 0b14 	add.w	fp, fp, #20
  405cd0:	459c      	cmp	ip, r3
  405cd2:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  405cd6:	d24c      	bcs.n	405d72 <__multiply+0xfa>
  405cd8:	f8cd a004 	str.w	sl, [sp, #4]
  405cdc:	469a      	mov	sl, r3
  405cde:	f8dc 5000 	ldr.w	r5, [ip]
  405ce2:	b2af      	uxth	r7, r5
  405ce4:	b1ef      	cbz	r7, 405d22 <__multiply+0xaa>
  405ce6:	2100      	movs	r1, #0
  405ce8:	464d      	mov	r5, r9
  405cea:	465e      	mov	r6, fp
  405cec:	460c      	mov	r4, r1
  405cee:	f856 2b04 	ldr.w	r2, [r6], #4
  405cf2:	6828      	ldr	r0, [r5, #0]
  405cf4:	b293      	uxth	r3, r2
  405cf6:	b281      	uxth	r1, r0
  405cf8:	fb07 1303 	mla	r3, r7, r3, r1
  405cfc:	0c12      	lsrs	r2, r2, #16
  405cfe:	0c01      	lsrs	r1, r0, #16
  405d00:	4423      	add	r3, r4
  405d02:	fb07 1102 	mla	r1, r7, r2, r1
  405d06:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405d0a:	b29b      	uxth	r3, r3
  405d0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405d10:	45b6      	cmp	lr, r6
  405d12:	f845 3b04 	str.w	r3, [r5], #4
  405d16:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405d1a:	d8e8      	bhi.n	405cee <__multiply+0x76>
  405d1c:	602c      	str	r4, [r5, #0]
  405d1e:	f8dc 5000 	ldr.w	r5, [ip]
  405d22:	0c2d      	lsrs	r5, r5, #16
  405d24:	d01d      	beq.n	405d62 <__multiply+0xea>
  405d26:	f8d9 3000 	ldr.w	r3, [r9]
  405d2a:	4648      	mov	r0, r9
  405d2c:	461c      	mov	r4, r3
  405d2e:	4659      	mov	r1, fp
  405d30:	2200      	movs	r2, #0
  405d32:	880e      	ldrh	r6, [r1, #0]
  405d34:	0c24      	lsrs	r4, r4, #16
  405d36:	fb05 4406 	mla	r4, r5, r6, r4
  405d3a:	4422      	add	r2, r4
  405d3c:	b29b      	uxth	r3, r3
  405d3e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405d42:	f840 3b04 	str.w	r3, [r0], #4
  405d46:	f851 3b04 	ldr.w	r3, [r1], #4
  405d4a:	6804      	ldr	r4, [r0, #0]
  405d4c:	0c1b      	lsrs	r3, r3, #16
  405d4e:	b2a6      	uxth	r6, r4
  405d50:	fb05 6303 	mla	r3, r5, r3, r6
  405d54:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405d58:	458e      	cmp	lr, r1
  405d5a:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405d5e:	d8e8      	bhi.n	405d32 <__multiply+0xba>
  405d60:	6003      	str	r3, [r0, #0]
  405d62:	f10c 0c04 	add.w	ip, ip, #4
  405d66:	45e2      	cmp	sl, ip
  405d68:	f109 0904 	add.w	r9, r9, #4
  405d6c:	d8b7      	bhi.n	405cde <__multiply+0x66>
  405d6e:	f8dd a004 	ldr.w	sl, [sp, #4]
  405d72:	f1b8 0f00 	cmp.w	r8, #0
  405d76:	dd0b      	ble.n	405d90 <__multiply+0x118>
  405d78:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405d7c:	f1aa 0a04 	sub.w	sl, sl, #4
  405d80:	b11b      	cbz	r3, 405d8a <__multiply+0x112>
  405d82:	e005      	b.n	405d90 <__multiply+0x118>
  405d84:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405d88:	b913      	cbnz	r3, 405d90 <__multiply+0x118>
  405d8a:	f1b8 0801 	subs.w	r8, r8, #1
  405d8e:	d1f9      	bne.n	405d84 <__multiply+0x10c>
  405d90:	9800      	ldr	r0, [sp, #0]
  405d92:	f8c0 8010 	str.w	r8, [r0, #16]
  405d96:	b003      	add	sp, #12
  405d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405d9c <__pow5mult>:
  405d9c:	f012 0303 	ands.w	r3, r2, #3
  405da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405da4:	4614      	mov	r4, r2
  405da6:	4607      	mov	r7, r0
  405da8:	d12e      	bne.n	405e08 <__pow5mult+0x6c>
  405daa:	460d      	mov	r5, r1
  405dac:	10a4      	asrs	r4, r4, #2
  405dae:	d01c      	beq.n	405dea <__pow5mult+0x4e>
  405db0:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  405db2:	b396      	cbz	r6, 405e1a <__pow5mult+0x7e>
  405db4:	07e3      	lsls	r3, r4, #31
  405db6:	f04f 0800 	mov.w	r8, #0
  405dba:	d406      	bmi.n	405dca <__pow5mult+0x2e>
  405dbc:	1064      	asrs	r4, r4, #1
  405dbe:	d014      	beq.n	405dea <__pow5mult+0x4e>
  405dc0:	6830      	ldr	r0, [r6, #0]
  405dc2:	b1a8      	cbz	r0, 405df0 <__pow5mult+0x54>
  405dc4:	4606      	mov	r6, r0
  405dc6:	07e3      	lsls	r3, r4, #31
  405dc8:	d5f8      	bpl.n	405dbc <__pow5mult+0x20>
  405dca:	4632      	mov	r2, r6
  405dcc:	4629      	mov	r1, r5
  405dce:	4638      	mov	r0, r7
  405dd0:	f7ff ff52 	bl	405c78 <__multiply>
  405dd4:	b1b5      	cbz	r5, 405e04 <__pow5mult+0x68>
  405dd6:	686a      	ldr	r2, [r5, #4]
  405dd8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405dda:	1064      	asrs	r4, r4, #1
  405ddc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405de0:	6029      	str	r1, [r5, #0]
  405de2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405de6:	4605      	mov	r5, r0
  405de8:	d1ea      	bne.n	405dc0 <__pow5mult+0x24>
  405dea:	4628      	mov	r0, r5
  405dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405df0:	4632      	mov	r2, r6
  405df2:	4631      	mov	r1, r6
  405df4:	4638      	mov	r0, r7
  405df6:	f7ff ff3f 	bl	405c78 <__multiply>
  405dfa:	6030      	str	r0, [r6, #0]
  405dfc:	f8c0 8000 	str.w	r8, [r0]
  405e00:	4606      	mov	r6, r0
  405e02:	e7e0      	b.n	405dc6 <__pow5mult+0x2a>
  405e04:	4605      	mov	r5, r0
  405e06:	e7d9      	b.n	405dbc <__pow5mult+0x20>
  405e08:	1e5a      	subs	r2, r3, #1
  405e0a:	4d0b      	ldr	r5, [pc, #44]	; (405e38 <__pow5mult+0x9c>)
  405e0c:	2300      	movs	r3, #0
  405e0e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  405e12:	f7ff fe97 	bl	405b44 <__multadd>
  405e16:	4605      	mov	r5, r0
  405e18:	e7c8      	b.n	405dac <__pow5mult+0x10>
  405e1a:	2101      	movs	r1, #1
  405e1c:	4638      	mov	r0, r7
  405e1e:	f7ff fe61 	bl	405ae4 <_Balloc>
  405e22:	f240 2171 	movw	r1, #625	; 0x271
  405e26:	2201      	movs	r2, #1
  405e28:	2300      	movs	r3, #0
  405e2a:	6141      	str	r1, [r0, #20]
  405e2c:	6102      	str	r2, [r0, #16]
  405e2e:	4606      	mov	r6, r0
  405e30:	64b8      	str	r0, [r7, #72]	; 0x48
  405e32:	6003      	str	r3, [r0, #0]
  405e34:	e7be      	b.n	405db4 <__pow5mult+0x18>
  405e36:	bf00      	nop
  405e38:	004072b0 	.word	0x004072b0

00405e3c <__lshift>:
  405e3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405e40:	4691      	mov	r9, r2
  405e42:	690a      	ldr	r2, [r1, #16]
  405e44:	688b      	ldr	r3, [r1, #8]
  405e46:	ea4f 1469 	mov.w	r4, r9, asr #5
  405e4a:	eb04 0802 	add.w	r8, r4, r2
  405e4e:	f108 0501 	add.w	r5, r8, #1
  405e52:	429d      	cmp	r5, r3
  405e54:	460e      	mov	r6, r1
  405e56:	4607      	mov	r7, r0
  405e58:	6849      	ldr	r1, [r1, #4]
  405e5a:	dd04      	ble.n	405e66 <__lshift+0x2a>
  405e5c:	005b      	lsls	r3, r3, #1
  405e5e:	429d      	cmp	r5, r3
  405e60:	f101 0101 	add.w	r1, r1, #1
  405e64:	dcfa      	bgt.n	405e5c <__lshift+0x20>
  405e66:	4638      	mov	r0, r7
  405e68:	f7ff fe3c 	bl	405ae4 <_Balloc>
  405e6c:	2c00      	cmp	r4, #0
  405e6e:	f100 0314 	add.w	r3, r0, #20
  405e72:	dd06      	ble.n	405e82 <__lshift+0x46>
  405e74:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405e78:	2100      	movs	r1, #0
  405e7a:	f843 1b04 	str.w	r1, [r3], #4
  405e7e:	429a      	cmp	r2, r3
  405e80:	d1fb      	bne.n	405e7a <__lshift+0x3e>
  405e82:	6934      	ldr	r4, [r6, #16]
  405e84:	f106 0114 	add.w	r1, r6, #20
  405e88:	f019 091f 	ands.w	r9, r9, #31
  405e8c:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405e90:	d01d      	beq.n	405ece <__lshift+0x92>
  405e92:	f1c9 0c20 	rsb	ip, r9, #32
  405e96:	2200      	movs	r2, #0
  405e98:	680c      	ldr	r4, [r1, #0]
  405e9a:	fa04 f409 	lsl.w	r4, r4, r9
  405e9e:	4314      	orrs	r4, r2
  405ea0:	f843 4b04 	str.w	r4, [r3], #4
  405ea4:	f851 2b04 	ldr.w	r2, [r1], #4
  405ea8:	458e      	cmp	lr, r1
  405eaa:	fa22 f20c 	lsr.w	r2, r2, ip
  405eae:	d8f3      	bhi.n	405e98 <__lshift+0x5c>
  405eb0:	601a      	str	r2, [r3, #0]
  405eb2:	b10a      	cbz	r2, 405eb8 <__lshift+0x7c>
  405eb4:	f108 0502 	add.w	r5, r8, #2
  405eb8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405eba:	6872      	ldr	r2, [r6, #4]
  405ebc:	3d01      	subs	r5, #1
  405ebe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405ec2:	6105      	str	r5, [r0, #16]
  405ec4:	6031      	str	r1, [r6, #0]
  405ec6:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405eca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405ece:	3b04      	subs	r3, #4
  405ed0:	f851 2b04 	ldr.w	r2, [r1], #4
  405ed4:	f843 2f04 	str.w	r2, [r3, #4]!
  405ed8:	458e      	cmp	lr, r1
  405eda:	d8f9      	bhi.n	405ed0 <__lshift+0x94>
  405edc:	e7ec      	b.n	405eb8 <__lshift+0x7c>
  405ede:	bf00      	nop

00405ee0 <__mcmp>:
  405ee0:	b430      	push	{r4, r5}
  405ee2:	690b      	ldr	r3, [r1, #16]
  405ee4:	4605      	mov	r5, r0
  405ee6:	6900      	ldr	r0, [r0, #16]
  405ee8:	1ac0      	subs	r0, r0, r3
  405eea:	d10f      	bne.n	405f0c <__mcmp+0x2c>
  405eec:	009b      	lsls	r3, r3, #2
  405eee:	3514      	adds	r5, #20
  405ef0:	3114      	adds	r1, #20
  405ef2:	4419      	add	r1, r3
  405ef4:	442b      	add	r3, r5
  405ef6:	e001      	b.n	405efc <__mcmp+0x1c>
  405ef8:	429d      	cmp	r5, r3
  405efa:	d207      	bcs.n	405f0c <__mcmp+0x2c>
  405efc:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405f00:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405f04:	4294      	cmp	r4, r2
  405f06:	d0f7      	beq.n	405ef8 <__mcmp+0x18>
  405f08:	d302      	bcc.n	405f10 <__mcmp+0x30>
  405f0a:	2001      	movs	r0, #1
  405f0c:	bc30      	pop	{r4, r5}
  405f0e:	4770      	bx	lr
  405f10:	f04f 30ff 	mov.w	r0, #4294967295
  405f14:	e7fa      	b.n	405f0c <__mcmp+0x2c>
  405f16:	bf00      	nop

00405f18 <__mdiff>:
  405f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405f1c:	690f      	ldr	r7, [r1, #16]
  405f1e:	460e      	mov	r6, r1
  405f20:	6911      	ldr	r1, [r2, #16]
  405f22:	1a7f      	subs	r7, r7, r1
  405f24:	2f00      	cmp	r7, #0
  405f26:	4690      	mov	r8, r2
  405f28:	d117      	bne.n	405f5a <__mdiff+0x42>
  405f2a:	0089      	lsls	r1, r1, #2
  405f2c:	f106 0514 	add.w	r5, r6, #20
  405f30:	f102 0e14 	add.w	lr, r2, #20
  405f34:	186b      	adds	r3, r5, r1
  405f36:	4471      	add	r1, lr
  405f38:	e001      	b.n	405f3e <__mdiff+0x26>
  405f3a:	429d      	cmp	r5, r3
  405f3c:	d25c      	bcs.n	405ff8 <__mdiff+0xe0>
  405f3e:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405f42:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405f46:	42a2      	cmp	r2, r4
  405f48:	d0f7      	beq.n	405f3a <__mdiff+0x22>
  405f4a:	d25e      	bcs.n	40600a <__mdiff+0xf2>
  405f4c:	4633      	mov	r3, r6
  405f4e:	462c      	mov	r4, r5
  405f50:	4646      	mov	r6, r8
  405f52:	4675      	mov	r5, lr
  405f54:	4698      	mov	r8, r3
  405f56:	2701      	movs	r7, #1
  405f58:	e005      	b.n	405f66 <__mdiff+0x4e>
  405f5a:	db58      	blt.n	40600e <__mdiff+0xf6>
  405f5c:	f106 0514 	add.w	r5, r6, #20
  405f60:	f108 0414 	add.w	r4, r8, #20
  405f64:	2700      	movs	r7, #0
  405f66:	6871      	ldr	r1, [r6, #4]
  405f68:	f7ff fdbc 	bl	405ae4 <_Balloc>
  405f6c:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405f70:	6936      	ldr	r6, [r6, #16]
  405f72:	60c7      	str	r7, [r0, #12]
  405f74:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405f78:	46a6      	mov	lr, r4
  405f7a:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405f7e:	f100 0414 	add.w	r4, r0, #20
  405f82:	2300      	movs	r3, #0
  405f84:	f85e 1b04 	ldr.w	r1, [lr], #4
  405f88:	f855 8b04 	ldr.w	r8, [r5], #4
  405f8c:	b28a      	uxth	r2, r1
  405f8e:	fa13 f388 	uxtah	r3, r3, r8
  405f92:	0c09      	lsrs	r1, r1, #16
  405f94:	1a9a      	subs	r2, r3, r2
  405f96:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405f9a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405f9e:	b292      	uxth	r2, r2
  405fa0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405fa4:	45f4      	cmp	ip, lr
  405fa6:	f844 2b04 	str.w	r2, [r4], #4
  405faa:	ea4f 4323 	mov.w	r3, r3, asr #16
  405fae:	d8e9      	bhi.n	405f84 <__mdiff+0x6c>
  405fb0:	42af      	cmp	r7, r5
  405fb2:	d917      	bls.n	405fe4 <__mdiff+0xcc>
  405fb4:	46a4      	mov	ip, r4
  405fb6:	46ae      	mov	lr, r5
  405fb8:	f85e 2b04 	ldr.w	r2, [lr], #4
  405fbc:	fa13 f382 	uxtah	r3, r3, r2
  405fc0:	1419      	asrs	r1, r3, #16
  405fc2:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  405fc6:	b29b      	uxth	r3, r3
  405fc8:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405fcc:	4577      	cmp	r7, lr
  405fce:	f84c 2b04 	str.w	r2, [ip], #4
  405fd2:	ea4f 4321 	mov.w	r3, r1, asr #16
  405fd6:	d8ef      	bhi.n	405fb8 <__mdiff+0xa0>
  405fd8:	43ed      	mvns	r5, r5
  405fda:	442f      	add	r7, r5
  405fdc:	f027 0703 	bic.w	r7, r7, #3
  405fe0:	3704      	adds	r7, #4
  405fe2:	443c      	add	r4, r7
  405fe4:	3c04      	subs	r4, #4
  405fe6:	b922      	cbnz	r2, 405ff2 <__mdiff+0xda>
  405fe8:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405fec:	3e01      	subs	r6, #1
  405fee:	2b00      	cmp	r3, #0
  405ff0:	d0fa      	beq.n	405fe8 <__mdiff+0xd0>
  405ff2:	6106      	str	r6, [r0, #16]
  405ff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405ff8:	2100      	movs	r1, #0
  405ffa:	f7ff fd73 	bl	405ae4 <_Balloc>
  405ffe:	2201      	movs	r2, #1
  406000:	2300      	movs	r3, #0
  406002:	6102      	str	r2, [r0, #16]
  406004:	6143      	str	r3, [r0, #20]
  406006:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40600a:	4674      	mov	r4, lr
  40600c:	e7ab      	b.n	405f66 <__mdiff+0x4e>
  40600e:	4633      	mov	r3, r6
  406010:	f106 0414 	add.w	r4, r6, #20
  406014:	f102 0514 	add.w	r5, r2, #20
  406018:	4616      	mov	r6, r2
  40601a:	2701      	movs	r7, #1
  40601c:	4698      	mov	r8, r3
  40601e:	e7a2      	b.n	405f66 <__mdiff+0x4e>

00406020 <__d2b>:
  406020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406024:	b082      	sub	sp, #8
  406026:	2101      	movs	r1, #1
  406028:	461c      	mov	r4, r3
  40602a:	f3c3 570a 	ubfx	r7, r3, #20, #11
  40602e:	4615      	mov	r5, r2
  406030:	9e08      	ldr	r6, [sp, #32]
  406032:	f7ff fd57 	bl	405ae4 <_Balloc>
  406036:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40603a:	4680      	mov	r8, r0
  40603c:	b10f      	cbz	r7, 406042 <__d2b+0x22>
  40603e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  406042:	9401      	str	r4, [sp, #4]
  406044:	b31d      	cbz	r5, 40608e <__d2b+0x6e>
  406046:	a802      	add	r0, sp, #8
  406048:	f840 5d08 	str.w	r5, [r0, #-8]!
  40604c:	f7ff fdda 	bl	405c04 <__lo0bits>
  406050:	2800      	cmp	r0, #0
  406052:	d134      	bne.n	4060be <__d2b+0x9e>
  406054:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406058:	f8c8 2014 	str.w	r2, [r8, #20]
  40605c:	2b00      	cmp	r3, #0
  40605e:	bf0c      	ite	eq
  406060:	2101      	moveq	r1, #1
  406062:	2102      	movne	r1, #2
  406064:	f8c8 3018 	str.w	r3, [r8, #24]
  406068:	f8c8 1010 	str.w	r1, [r8, #16]
  40606c:	b9df      	cbnz	r7, 4060a6 <__d2b+0x86>
  40606e:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  406072:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406076:	6030      	str	r0, [r6, #0]
  406078:	6918      	ldr	r0, [r3, #16]
  40607a:	f7ff fda3 	bl	405bc4 <__hi0bits>
  40607e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406080:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406084:	6018      	str	r0, [r3, #0]
  406086:	4640      	mov	r0, r8
  406088:	b002      	add	sp, #8
  40608a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40608e:	a801      	add	r0, sp, #4
  406090:	f7ff fdb8 	bl	405c04 <__lo0bits>
  406094:	9b01      	ldr	r3, [sp, #4]
  406096:	f8c8 3014 	str.w	r3, [r8, #20]
  40609a:	2101      	movs	r1, #1
  40609c:	3020      	adds	r0, #32
  40609e:	f8c8 1010 	str.w	r1, [r8, #16]
  4060a2:	2f00      	cmp	r7, #0
  4060a4:	d0e3      	beq.n	40606e <__d2b+0x4e>
  4060a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4060a8:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4060ac:	4407      	add	r7, r0
  4060ae:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4060b2:	6037      	str	r7, [r6, #0]
  4060b4:	6018      	str	r0, [r3, #0]
  4060b6:	4640      	mov	r0, r8
  4060b8:	b002      	add	sp, #8
  4060ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4060be:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4060c2:	f1c0 0220 	rsb	r2, r0, #32
  4060c6:	fa03 f202 	lsl.w	r2, r3, r2
  4060ca:	430a      	orrs	r2, r1
  4060cc:	40c3      	lsrs	r3, r0
  4060ce:	9301      	str	r3, [sp, #4]
  4060d0:	f8c8 2014 	str.w	r2, [r8, #20]
  4060d4:	e7c2      	b.n	40605c <__d2b+0x3c>
  4060d6:	bf00      	nop

004060d8 <_putc_r>:
  4060d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4060da:	460e      	mov	r6, r1
  4060dc:	4614      	mov	r4, r2
  4060de:	4607      	mov	r7, r0
  4060e0:	b108      	cbz	r0, 4060e6 <_putc_r+0xe>
  4060e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4060e4:	b34b      	cbz	r3, 40613a <_putc_r+0x62>
  4060e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4060e8:	07d8      	lsls	r0, r3, #31
  4060ea:	d402      	bmi.n	4060f2 <_putc_r+0x1a>
  4060ec:	89a3      	ldrh	r3, [r4, #12]
  4060ee:	0599      	lsls	r1, r3, #22
  4060f0:	d526      	bpl.n	406140 <_putc_r+0x68>
  4060f2:	68a3      	ldr	r3, [r4, #8]
  4060f4:	3b01      	subs	r3, #1
  4060f6:	2b00      	cmp	r3, #0
  4060f8:	60a3      	str	r3, [r4, #8]
  4060fa:	db11      	blt.n	406120 <_putc_r+0x48>
  4060fc:	b2f5      	uxtb	r5, r6
  4060fe:	6823      	ldr	r3, [r4, #0]
  406100:	1c5a      	adds	r2, r3, #1
  406102:	6022      	str	r2, [r4, #0]
  406104:	701e      	strb	r6, [r3, #0]
  406106:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406108:	07da      	lsls	r2, r3, #31
  40610a:	d402      	bmi.n	406112 <_putc_r+0x3a>
  40610c:	89a3      	ldrh	r3, [r4, #12]
  40610e:	059b      	lsls	r3, r3, #22
  406110:	d501      	bpl.n	406116 <_putc_r+0x3e>
  406112:	4628      	mov	r0, r5
  406114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406116:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406118:	f7ff f856 	bl	4051c8 <__retarget_lock_release_recursive>
  40611c:	4628      	mov	r0, r5
  40611e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406120:	69a2      	ldr	r2, [r4, #24]
  406122:	4293      	cmp	r3, r2
  406124:	db02      	blt.n	40612c <_putc_r+0x54>
  406126:	b2f5      	uxtb	r5, r6
  406128:	2d0a      	cmp	r5, #10
  40612a:	d1e8      	bne.n	4060fe <_putc_r+0x26>
  40612c:	4631      	mov	r1, r6
  40612e:	4638      	mov	r0, r7
  406130:	4622      	mov	r2, r4
  406132:	f000 fa4f 	bl	4065d4 <__swbuf_r>
  406136:	4605      	mov	r5, r0
  406138:	e7e5      	b.n	406106 <_putc_r+0x2e>
  40613a:	f7fe fd07 	bl	404b4c <__sinit>
  40613e:	e7d2      	b.n	4060e6 <_putc_r+0xe>
  406140:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406142:	f7ff f83f 	bl	4051c4 <__retarget_lock_acquire_recursive>
  406146:	e7d4      	b.n	4060f2 <_putc_r+0x1a>

00406148 <_realloc_r>:
  406148:	2900      	cmp	r1, #0
  40614a:	f000 8095 	beq.w	406278 <_realloc_r+0x130>
  40614e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406152:	460d      	mov	r5, r1
  406154:	4616      	mov	r6, r2
  406156:	b083      	sub	sp, #12
  406158:	4680      	mov	r8, r0
  40615a:	f106 070b 	add.w	r7, r6, #11
  40615e:	f7ff fcb5 	bl	405acc <__malloc_lock>
  406162:	f855 ec04 	ldr.w	lr, [r5, #-4]
  406166:	2f16      	cmp	r7, #22
  406168:	f02e 0403 	bic.w	r4, lr, #3
  40616c:	f1a5 0908 	sub.w	r9, r5, #8
  406170:	d83c      	bhi.n	4061ec <_realloc_r+0xa4>
  406172:	2210      	movs	r2, #16
  406174:	4617      	mov	r7, r2
  406176:	42be      	cmp	r6, r7
  406178:	d83d      	bhi.n	4061f6 <_realloc_r+0xae>
  40617a:	4294      	cmp	r4, r2
  40617c:	da43      	bge.n	406206 <_realloc_r+0xbe>
  40617e:	4bc4      	ldr	r3, [pc, #784]	; (406490 <_realloc_r+0x348>)
  406180:	6899      	ldr	r1, [r3, #8]
  406182:	eb09 0004 	add.w	r0, r9, r4
  406186:	4288      	cmp	r0, r1
  406188:	f000 80b4 	beq.w	4062f4 <_realloc_r+0x1ac>
  40618c:	6843      	ldr	r3, [r0, #4]
  40618e:	f023 0101 	bic.w	r1, r3, #1
  406192:	4401      	add	r1, r0
  406194:	6849      	ldr	r1, [r1, #4]
  406196:	07c9      	lsls	r1, r1, #31
  406198:	d54c      	bpl.n	406234 <_realloc_r+0xec>
  40619a:	f01e 0f01 	tst.w	lr, #1
  40619e:	f000 809b 	beq.w	4062d8 <_realloc_r+0x190>
  4061a2:	4631      	mov	r1, r6
  4061a4:	4640      	mov	r0, r8
  4061a6:	f7ff f891 	bl	4052cc <_malloc_r>
  4061aa:	4606      	mov	r6, r0
  4061ac:	2800      	cmp	r0, #0
  4061ae:	d03a      	beq.n	406226 <_realloc_r+0xde>
  4061b0:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4061b4:	f023 0301 	bic.w	r3, r3, #1
  4061b8:	444b      	add	r3, r9
  4061ba:	f1a0 0208 	sub.w	r2, r0, #8
  4061be:	429a      	cmp	r2, r3
  4061c0:	f000 8121 	beq.w	406406 <_realloc_r+0x2be>
  4061c4:	1f22      	subs	r2, r4, #4
  4061c6:	2a24      	cmp	r2, #36	; 0x24
  4061c8:	f200 8107 	bhi.w	4063da <_realloc_r+0x292>
  4061cc:	2a13      	cmp	r2, #19
  4061ce:	f200 80db 	bhi.w	406388 <_realloc_r+0x240>
  4061d2:	4603      	mov	r3, r0
  4061d4:	462a      	mov	r2, r5
  4061d6:	6811      	ldr	r1, [r2, #0]
  4061d8:	6019      	str	r1, [r3, #0]
  4061da:	6851      	ldr	r1, [r2, #4]
  4061dc:	6059      	str	r1, [r3, #4]
  4061de:	6892      	ldr	r2, [r2, #8]
  4061e0:	609a      	str	r2, [r3, #8]
  4061e2:	4629      	mov	r1, r5
  4061e4:	4640      	mov	r0, r8
  4061e6:	f7fe fd53 	bl	404c90 <_free_r>
  4061ea:	e01c      	b.n	406226 <_realloc_r+0xde>
  4061ec:	f027 0707 	bic.w	r7, r7, #7
  4061f0:	2f00      	cmp	r7, #0
  4061f2:	463a      	mov	r2, r7
  4061f4:	dabf      	bge.n	406176 <_realloc_r+0x2e>
  4061f6:	2600      	movs	r6, #0
  4061f8:	230c      	movs	r3, #12
  4061fa:	4630      	mov	r0, r6
  4061fc:	f8c8 3000 	str.w	r3, [r8]
  406200:	b003      	add	sp, #12
  406202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406206:	462e      	mov	r6, r5
  406208:	1be3      	subs	r3, r4, r7
  40620a:	2b0f      	cmp	r3, #15
  40620c:	d81e      	bhi.n	40624c <_realloc_r+0x104>
  40620e:	f8d9 3004 	ldr.w	r3, [r9, #4]
  406212:	f003 0301 	and.w	r3, r3, #1
  406216:	4323      	orrs	r3, r4
  406218:	444c      	add	r4, r9
  40621a:	f8c9 3004 	str.w	r3, [r9, #4]
  40621e:	6863      	ldr	r3, [r4, #4]
  406220:	f043 0301 	orr.w	r3, r3, #1
  406224:	6063      	str	r3, [r4, #4]
  406226:	4640      	mov	r0, r8
  406228:	f7ff fc56 	bl	405ad8 <__malloc_unlock>
  40622c:	4630      	mov	r0, r6
  40622e:	b003      	add	sp, #12
  406230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406234:	f023 0303 	bic.w	r3, r3, #3
  406238:	18e1      	adds	r1, r4, r3
  40623a:	4291      	cmp	r1, r2
  40623c:	db1f      	blt.n	40627e <_realloc_r+0x136>
  40623e:	68c3      	ldr	r3, [r0, #12]
  406240:	6882      	ldr	r2, [r0, #8]
  406242:	462e      	mov	r6, r5
  406244:	60d3      	str	r3, [r2, #12]
  406246:	460c      	mov	r4, r1
  406248:	609a      	str	r2, [r3, #8]
  40624a:	e7dd      	b.n	406208 <_realloc_r+0xc0>
  40624c:	f8d9 2004 	ldr.w	r2, [r9, #4]
  406250:	eb09 0107 	add.w	r1, r9, r7
  406254:	f002 0201 	and.w	r2, r2, #1
  406258:	444c      	add	r4, r9
  40625a:	f043 0301 	orr.w	r3, r3, #1
  40625e:	4317      	orrs	r7, r2
  406260:	f8c9 7004 	str.w	r7, [r9, #4]
  406264:	604b      	str	r3, [r1, #4]
  406266:	6863      	ldr	r3, [r4, #4]
  406268:	f043 0301 	orr.w	r3, r3, #1
  40626c:	3108      	adds	r1, #8
  40626e:	6063      	str	r3, [r4, #4]
  406270:	4640      	mov	r0, r8
  406272:	f7fe fd0d 	bl	404c90 <_free_r>
  406276:	e7d6      	b.n	406226 <_realloc_r+0xde>
  406278:	4611      	mov	r1, r2
  40627a:	f7ff b827 	b.w	4052cc <_malloc_r>
  40627e:	f01e 0f01 	tst.w	lr, #1
  406282:	d18e      	bne.n	4061a2 <_realloc_r+0x5a>
  406284:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406288:	eba9 0a01 	sub.w	sl, r9, r1
  40628c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406290:	f021 0103 	bic.w	r1, r1, #3
  406294:	440b      	add	r3, r1
  406296:	4423      	add	r3, r4
  406298:	4293      	cmp	r3, r2
  40629a:	db25      	blt.n	4062e8 <_realloc_r+0x1a0>
  40629c:	68c2      	ldr	r2, [r0, #12]
  40629e:	6881      	ldr	r1, [r0, #8]
  4062a0:	4656      	mov	r6, sl
  4062a2:	60ca      	str	r2, [r1, #12]
  4062a4:	6091      	str	r1, [r2, #8]
  4062a6:	f8da 100c 	ldr.w	r1, [sl, #12]
  4062aa:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4062ae:	1f22      	subs	r2, r4, #4
  4062b0:	2a24      	cmp	r2, #36	; 0x24
  4062b2:	60c1      	str	r1, [r0, #12]
  4062b4:	6088      	str	r0, [r1, #8]
  4062b6:	f200 8094 	bhi.w	4063e2 <_realloc_r+0x29a>
  4062ba:	2a13      	cmp	r2, #19
  4062bc:	d96f      	bls.n	40639e <_realloc_r+0x256>
  4062be:	6829      	ldr	r1, [r5, #0]
  4062c0:	f8ca 1008 	str.w	r1, [sl, #8]
  4062c4:	6869      	ldr	r1, [r5, #4]
  4062c6:	f8ca 100c 	str.w	r1, [sl, #12]
  4062ca:	2a1b      	cmp	r2, #27
  4062cc:	f200 80a2 	bhi.w	406414 <_realloc_r+0x2cc>
  4062d0:	3508      	adds	r5, #8
  4062d2:	f10a 0210 	add.w	r2, sl, #16
  4062d6:	e063      	b.n	4063a0 <_realloc_r+0x258>
  4062d8:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4062dc:	eba9 0a03 	sub.w	sl, r9, r3
  4062e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4062e4:	f021 0103 	bic.w	r1, r1, #3
  4062e8:	1863      	adds	r3, r4, r1
  4062ea:	4293      	cmp	r3, r2
  4062ec:	f6ff af59 	blt.w	4061a2 <_realloc_r+0x5a>
  4062f0:	4656      	mov	r6, sl
  4062f2:	e7d8      	b.n	4062a6 <_realloc_r+0x15e>
  4062f4:	6841      	ldr	r1, [r0, #4]
  4062f6:	f021 0b03 	bic.w	fp, r1, #3
  4062fa:	44a3      	add	fp, r4
  4062fc:	f107 0010 	add.w	r0, r7, #16
  406300:	4583      	cmp	fp, r0
  406302:	da56      	bge.n	4063b2 <_realloc_r+0x26a>
  406304:	f01e 0f01 	tst.w	lr, #1
  406308:	f47f af4b 	bne.w	4061a2 <_realloc_r+0x5a>
  40630c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406310:	eba9 0a01 	sub.w	sl, r9, r1
  406314:	f8da 1004 	ldr.w	r1, [sl, #4]
  406318:	f021 0103 	bic.w	r1, r1, #3
  40631c:	448b      	add	fp, r1
  40631e:	4558      	cmp	r0, fp
  406320:	dce2      	bgt.n	4062e8 <_realloc_r+0x1a0>
  406322:	4656      	mov	r6, sl
  406324:	f8da 100c 	ldr.w	r1, [sl, #12]
  406328:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40632c:	1f22      	subs	r2, r4, #4
  40632e:	2a24      	cmp	r2, #36	; 0x24
  406330:	60c1      	str	r1, [r0, #12]
  406332:	6088      	str	r0, [r1, #8]
  406334:	f200 808f 	bhi.w	406456 <_realloc_r+0x30e>
  406338:	2a13      	cmp	r2, #19
  40633a:	f240 808a 	bls.w	406452 <_realloc_r+0x30a>
  40633e:	6829      	ldr	r1, [r5, #0]
  406340:	f8ca 1008 	str.w	r1, [sl, #8]
  406344:	6869      	ldr	r1, [r5, #4]
  406346:	f8ca 100c 	str.w	r1, [sl, #12]
  40634a:	2a1b      	cmp	r2, #27
  40634c:	f200 808a 	bhi.w	406464 <_realloc_r+0x31c>
  406350:	3508      	adds	r5, #8
  406352:	f10a 0210 	add.w	r2, sl, #16
  406356:	6829      	ldr	r1, [r5, #0]
  406358:	6011      	str	r1, [r2, #0]
  40635a:	6869      	ldr	r1, [r5, #4]
  40635c:	6051      	str	r1, [r2, #4]
  40635e:	68a9      	ldr	r1, [r5, #8]
  406360:	6091      	str	r1, [r2, #8]
  406362:	eb0a 0107 	add.w	r1, sl, r7
  406366:	ebab 0207 	sub.w	r2, fp, r7
  40636a:	f042 0201 	orr.w	r2, r2, #1
  40636e:	6099      	str	r1, [r3, #8]
  406370:	604a      	str	r2, [r1, #4]
  406372:	f8da 3004 	ldr.w	r3, [sl, #4]
  406376:	f003 0301 	and.w	r3, r3, #1
  40637a:	431f      	orrs	r7, r3
  40637c:	4640      	mov	r0, r8
  40637e:	f8ca 7004 	str.w	r7, [sl, #4]
  406382:	f7ff fba9 	bl	405ad8 <__malloc_unlock>
  406386:	e751      	b.n	40622c <_realloc_r+0xe4>
  406388:	682b      	ldr	r3, [r5, #0]
  40638a:	6003      	str	r3, [r0, #0]
  40638c:	686b      	ldr	r3, [r5, #4]
  40638e:	6043      	str	r3, [r0, #4]
  406390:	2a1b      	cmp	r2, #27
  406392:	d82d      	bhi.n	4063f0 <_realloc_r+0x2a8>
  406394:	f100 0308 	add.w	r3, r0, #8
  406398:	f105 0208 	add.w	r2, r5, #8
  40639c:	e71b      	b.n	4061d6 <_realloc_r+0x8e>
  40639e:	4632      	mov	r2, r6
  4063a0:	6829      	ldr	r1, [r5, #0]
  4063a2:	6011      	str	r1, [r2, #0]
  4063a4:	6869      	ldr	r1, [r5, #4]
  4063a6:	6051      	str	r1, [r2, #4]
  4063a8:	68a9      	ldr	r1, [r5, #8]
  4063aa:	6091      	str	r1, [r2, #8]
  4063ac:	461c      	mov	r4, r3
  4063ae:	46d1      	mov	r9, sl
  4063b0:	e72a      	b.n	406208 <_realloc_r+0xc0>
  4063b2:	eb09 0107 	add.w	r1, r9, r7
  4063b6:	ebab 0b07 	sub.w	fp, fp, r7
  4063ba:	f04b 0201 	orr.w	r2, fp, #1
  4063be:	6099      	str	r1, [r3, #8]
  4063c0:	604a      	str	r2, [r1, #4]
  4063c2:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4063c6:	f003 0301 	and.w	r3, r3, #1
  4063ca:	431f      	orrs	r7, r3
  4063cc:	4640      	mov	r0, r8
  4063ce:	f845 7c04 	str.w	r7, [r5, #-4]
  4063d2:	f7ff fb81 	bl	405ad8 <__malloc_unlock>
  4063d6:	462e      	mov	r6, r5
  4063d8:	e728      	b.n	40622c <_realloc_r+0xe4>
  4063da:	4629      	mov	r1, r5
  4063dc:	f7ff fb12 	bl	405a04 <memmove>
  4063e0:	e6ff      	b.n	4061e2 <_realloc_r+0x9a>
  4063e2:	4629      	mov	r1, r5
  4063e4:	4630      	mov	r0, r6
  4063e6:	461c      	mov	r4, r3
  4063e8:	46d1      	mov	r9, sl
  4063ea:	f7ff fb0b 	bl	405a04 <memmove>
  4063ee:	e70b      	b.n	406208 <_realloc_r+0xc0>
  4063f0:	68ab      	ldr	r3, [r5, #8]
  4063f2:	6083      	str	r3, [r0, #8]
  4063f4:	68eb      	ldr	r3, [r5, #12]
  4063f6:	60c3      	str	r3, [r0, #12]
  4063f8:	2a24      	cmp	r2, #36	; 0x24
  4063fa:	d017      	beq.n	40642c <_realloc_r+0x2e4>
  4063fc:	f100 0310 	add.w	r3, r0, #16
  406400:	f105 0210 	add.w	r2, r5, #16
  406404:	e6e7      	b.n	4061d6 <_realloc_r+0x8e>
  406406:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40640a:	f023 0303 	bic.w	r3, r3, #3
  40640e:	441c      	add	r4, r3
  406410:	462e      	mov	r6, r5
  406412:	e6f9      	b.n	406208 <_realloc_r+0xc0>
  406414:	68a9      	ldr	r1, [r5, #8]
  406416:	f8ca 1010 	str.w	r1, [sl, #16]
  40641a:	68e9      	ldr	r1, [r5, #12]
  40641c:	f8ca 1014 	str.w	r1, [sl, #20]
  406420:	2a24      	cmp	r2, #36	; 0x24
  406422:	d00c      	beq.n	40643e <_realloc_r+0x2f6>
  406424:	3510      	adds	r5, #16
  406426:	f10a 0218 	add.w	r2, sl, #24
  40642a:	e7b9      	b.n	4063a0 <_realloc_r+0x258>
  40642c:	692b      	ldr	r3, [r5, #16]
  40642e:	6103      	str	r3, [r0, #16]
  406430:	696b      	ldr	r3, [r5, #20]
  406432:	6143      	str	r3, [r0, #20]
  406434:	f105 0218 	add.w	r2, r5, #24
  406438:	f100 0318 	add.w	r3, r0, #24
  40643c:	e6cb      	b.n	4061d6 <_realloc_r+0x8e>
  40643e:	692a      	ldr	r2, [r5, #16]
  406440:	f8ca 2018 	str.w	r2, [sl, #24]
  406444:	696a      	ldr	r2, [r5, #20]
  406446:	f8ca 201c 	str.w	r2, [sl, #28]
  40644a:	3518      	adds	r5, #24
  40644c:	f10a 0220 	add.w	r2, sl, #32
  406450:	e7a6      	b.n	4063a0 <_realloc_r+0x258>
  406452:	4632      	mov	r2, r6
  406454:	e77f      	b.n	406356 <_realloc_r+0x20e>
  406456:	4629      	mov	r1, r5
  406458:	4630      	mov	r0, r6
  40645a:	9301      	str	r3, [sp, #4]
  40645c:	f7ff fad2 	bl	405a04 <memmove>
  406460:	9b01      	ldr	r3, [sp, #4]
  406462:	e77e      	b.n	406362 <_realloc_r+0x21a>
  406464:	68a9      	ldr	r1, [r5, #8]
  406466:	f8ca 1010 	str.w	r1, [sl, #16]
  40646a:	68e9      	ldr	r1, [r5, #12]
  40646c:	f8ca 1014 	str.w	r1, [sl, #20]
  406470:	2a24      	cmp	r2, #36	; 0x24
  406472:	d003      	beq.n	40647c <_realloc_r+0x334>
  406474:	3510      	adds	r5, #16
  406476:	f10a 0218 	add.w	r2, sl, #24
  40647a:	e76c      	b.n	406356 <_realloc_r+0x20e>
  40647c:	692a      	ldr	r2, [r5, #16]
  40647e:	f8ca 2018 	str.w	r2, [sl, #24]
  406482:	696a      	ldr	r2, [r5, #20]
  406484:	f8ca 201c 	str.w	r2, [sl, #28]
  406488:	3518      	adds	r5, #24
  40648a:	f10a 0220 	add.w	r2, sl, #32
  40648e:	e762      	b.n	406356 <_realloc_r+0x20e>
  406490:	2040043c 	.word	0x2040043c

00406494 <_sbrk_r>:
  406494:	b538      	push	{r3, r4, r5, lr}
  406496:	4c07      	ldr	r4, [pc, #28]	; (4064b4 <_sbrk_r+0x20>)
  406498:	2300      	movs	r3, #0
  40649a:	4605      	mov	r5, r0
  40649c:	4608      	mov	r0, r1
  40649e:	6023      	str	r3, [r4, #0]
  4064a0:	f7fa fca4 	bl	400dec <_sbrk>
  4064a4:	1c43      	adds	r3, r0, #1
  4064a6:	d000      	beq.n	4064aa <_sbrk_r+0x16>
  4064a8:	bd38      	pop	{r3, r4, r5, pc}
  4064aa:	6823      	ldr	r3, [r4, #0]
  4064ac:	2b00      	cmp	r3, #0
  4064ae:	d0fb      	beq.n	4064a8 <_sbrk_r+0x14>
  4064b0:	602b      	str	r3, [r5, #0]
  4064b2:	bd38      	pop	{r3, r4, r5, pc}
  4064b4:	20400ab4 	.word	0x20400ab4

004064b8 <__sread>:
  4064b8:	b510      	push	{r4, lr}
  4064ba:	460c      	mov	r4, r1
  4064bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4064c0:	f000 fae0 	bl	406a84 <_read_r>
  4064c4:	2800      	cmp	r0, #0
  4064c6:	db03      	blt.n	4064d0 <__sread+0x18>
  4064c8:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4064ca:	4403      	add	r3, r0
  4064cc:	6523      	str	r3, [r4, #80]	; 0x50
  4064ce:	bd10      	pop	{r4, pc}
  4064d0:	89a3      	ldrh	r3, [r4, #12]
  4064d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4064d6:	81a3      	strh	r3, [r4, #12]
  4064d8:	bd10      	pop	{r4, pc}
  4064da:	bf00      	nop

004064dc <__swrite>:
  4064dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4064e0:	4616      	mov	r6, r2
  4064e2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4064e6:	461f      	mov	r7, r3
  4064e8:	05d3      	lsls	r3, r2, #23
  4064ea:	460c      	mov	r4, r1
  4064ec:	4605      	mov	r5, r0
  4064ee:	d507      	bpl.n	406500 <__swrite+0x24>
  4064f0:	2200      	movs	r2, #0
  4064f2:	2302      	movs	r3, #2
  4064f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4064f8:	f000 fa98 	bl	406a2c <_lseek_r>
  4064fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406500:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406504:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  406508:	81a2      	strh	r2, [r4, #12]
  40650a:	463b      	mov	r3, r7
  40650c:	4632      	mov	r2, r6
  40650e:	4628      	mov	r0, r5
  406510:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406514:	f000 b8b6 	b.w	406684 <_write_r>

00406518 <__sseek>:
  406518:	b510      	push	{r4, lr}
  40651a:	460c      	mov	r4, r1
  40651c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406520:	f000 fa84 	bl	406a2c <_lseek_r>
  406524:	89a3      	ldrh	r3, [r4, #12]
  406526:	1c42      	adds	r2, r0, #1
  406528:	bf0e      	itee	eq
  40652a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40652e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  406532:	6520      	strne	r0, [r4, #80]	; 0x50
  406534:	81a3      	strh	r3, [r4, #12]
  406536:	bd10      	pop	{r4, pc}

00406538 <__sclose>:
  406538:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40653c:	f000 b94a 	b.w	4067d4 <_close_r>

00406540 <__sprint_r.part.0>:
  406540:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406544:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  406546:	049c      	lsls	r4, r3, #18
  406548:	4693      	mov	fp, r2
  40654a:	d52f      	bpl.n	4065ac <__sprint_r.part.0+0x6c>
  40654c:	6893      	ldr	r3, [r2, #8]
  40654e:	6812      	ldr	r2, [r2, #0]
  406550:	b353      	cbz	r3, 4065a8 <__sprint_r.part.0+0x68>
  406552:	460e      	mov	r6, r1
  406554:	4607      	mov	r7, r0
  406556:	f102 0908 	add.w	r9, r2, #8
  40655a:	e919 0420 	ldmdb	r9, {r5, sl}
  40655e:	ea5f 089a 	movs.w	r8, sl, lsr #2
  406562:	d017      	beq.n	406594 <__sprint_r.part.0+0x54>
  406564:	3d04      	subs	r5, #4
  406566:	2400      	movs	r4, #0
  406568:	e001      	b.n	40656e <__sprint_r.part.0+0x2e>
  40656a:	45a0      	cmp	r8, r4
  40656c:	d010      	beq.n	406590 <__sprint_r.part.0+0x50>
  40656e:	4632      	mov	r2, r6
  406570:	f855 1f04 	ldr.w	r1, [r5, #4]!
  406574:	4638      	mov	r0, r7
  406576:	f000 f9f1 	bl	40695c <_fputwc_r>
  40657a:	1c43      	adds	r3, r0, #1
  40657c:	f104 0401 	add.w	r4, r4, #1
  406580:	d1f3      	bne.n	40656a <__sprint_r.part.0+0x2a>
  406582:	2300      	movs	r3, #0
  406584:	f8cb 3008 	str.w	r3, [fp, #8]
  406588:	f8cb 3004 	str.w	r3, [fp, #4]
  40658c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406590:	f8db 3008 	ldr.w	r3, [fp, #8]
  406594:	f02a 0a03 	bic.w	sl, sl, #3
  406598:	eba3 030a 	sub.w	r3, r3, sl
  40659c:	f8cb 3008 	str.w	r3, [fp, #8]
  4065a0:	f109 0908 	add.w	r9, r9, #8
  4065a4:	2b00      	cmp	r3, #0
  4065a6:	d1d8      	bne.n	40655a <__sprint_r.part.0+0x1a>
  4065a8:	2000      	movs	r0, #0
  4065aa:	e7ea      	b.n	406582 <__sprint_r.part.0+0x42>
  4065ac:	f7fe fc56 	bl	404e5c <__sfvwrite_r>
  4065b0:	2300      	movs	r3, #0
  4065b2:	f8cb 3008 	str.w	r3, [fp, #8]
  4065b6:	f8cb 3004 	str.w	r3, [fp, #4]
  4065ba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4065be:	bf00      	nop

004065c0 <__sprint_r>:
  4065c0:	6893      	ldr	r3, [r2, #8]
  4065c2:	b10b      	cbz	r3, 4065c8 <__sprint_r+0x8>
  4065c4:	f7ff bfbc 	b.w	406540 <__sprint_r.part.0>
  4065c8:	b410      	push	{r4}
  4065ca:	4618      	mov	r0, r3
  4065cc:	6053      	str	r3, [r2, #4]
  4065ce:	bc10      	pop	{r4}
  4065d0:	4770      	bx	lr
  4065d2:	bf00      	nop

004065d4 <__swbuf_r>:
  4065d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4065d6:	460d      	mov	r5, r1
  4065d8:	4614      	mov	r4, r2
  4065da:	4606      	mov	r6, r0
  4065dc:	b110      	cbz	r0, 4065e4 <__swbuf_r+0x10>
  4065de:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4065e0:	2b00      	cmp	r3, #0
  4065e2:	d04b      	beq.n	40667c <__swbuf_r+0xa8>
  4065e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4065e8:	69a3      	ldr	r3, [r4, #24]
  4065ea:	60a3      	str	r3, [r4, #8]
  4065ec:	b291      	uxth	r1, r2
  4065ee:	0708      	lsls	r0, r1, #28
  4065f0:	d539      	bpl.n	406666 <__swbuf_r+0x92>
  4065f2:	6923      	ldr	r3, [r4, #16]
  4065f4:	2b00      	cmp	r3, #0
  4065f6:	d036      	beq.n	406666 <__swbuf_r+0x92>
  4065f8:	b2ed      	uxtb	r5, r5
  4065fa:	0489      	lsls	r1, r1, #18
  4065fc:	462f      	mov	r7, r5
  4065fe:	d515      	bpl.n	40662c <__swbuf_r+0x58>
  406600:	6822      	ldr	r2, [r4, #0]
  406602:	6961      	ldr	r1, [r4, #20]
  406604:	1ad3      	subs	r3, r2, r3
  406606:	428b      	cmp	r3, r1
  406608:	da1c      	bge.n	406644 <__swbuf_r+0x70>
  40660a:	3301      	adds	r3, #1
  40660c:	68a1      	ldr	r1, [r4, #8]
  40660e:	1c50      	adds	r0, r2, #1
  406610:	3901      	subs	r1, #1
  406612:	60a1      	str	r1, [r4, #8]
  406614:	6020      	str	r0, [r4, #0]
  406616:	7015      	strb	r5, [r2, #0]
  406618:	6962      	ldr	r2, [r4, #20]
  40661a:	429a      	cmp	r2, r3
  40661c:	d01a      	beq.n	406654 <__swbuf_r+0x80>
  40661e:	89a3      	ldrh	r3, [r4, #12]
  406620:	07db      	lsls	r3, r3, #31
  406622:	d501      	bpl.n	406628 <__swbuf_r+0x54>
  406624:	2d0a      	cmp	r5, #10
  406626:	d015      	beq.n	406654 <__swbuf_r+0x80>
  406628:	4638      	mov	r0, r7
  40662a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40662c:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40662e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406632:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  406636:	81a2      	strh	r2, [r4, #12]
  406638:	6822      	ldr	r2, [r4, #0]
  40663a:	6661      	str	r1, [r4, #100]	; 0x64
  40663c:	6961      	ldr	r1, [r4, #20]
  40663e:	1ad3      	subs	r3, r2, r3
  406640:	428b      	cmp	r3, r1
  406642:	dbe2      	blt.n	40660a <__swbuf_r+0x36>
  406644:	4621      	mov	r1, r4
  406646:	4630      	mov	r0, r6
  406648:	f7fe fa28 	bl	404a9c <_fflush_r>
  40664c:	b940      	cbnz	r0, 406660 <__swbuf_r+0x8c>
  40664e:	6822      	ldr	r2, [r4, #0]
  406650:	2301      	movs	r3, #1
  406652:	e7db      	b.n	40660c <__swbuf_r+0x38>
  406654:	4621      	mov	r1, r4
  406656:	4630      	mov	r0, r6
  406658:	f7fe fa20 	bl	404a9c <_fflush_r>
  40665c:	2800      	cmp	r0, #0
  40665e:	d0e3      	beq.n	406628 <__swbuf_r+0x54>
  406660:	f04f 37ff 	mov.w	r7, #4294967295
  406664:	e7e0      	b.n	406628 <__swbuf_r+0x54>
  406666:	4621      	mov	r1, r4
  406668:	4630      	mov	r0, r6
  40666a:	f7fd f945 	bl	4038f8 <__swsetup_r>
  40666e:	2800      	cmp	r0, #0
  406670:	d1f6      	bne.n	406660 <__swbuf_r+0x8c>
  406672:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406676:	6923      	ldr	r3, [r4, #16]
  406678:	b291      	uxth	r1, r2
  40667a:	e7bd      	b.n	4065f8 <__swbuf_r+0x24>
  40667c:	f7fe fa66 	bl	404b4c <__sinit>
  406680:	e7b0      	b.n	4065e4 <__swbuf_r+0x10>
  406682:	bf00      	nop

00406684 <_write_r>:
  406684:	b570      	push	{r4, r5, r6, lr}
  406686:	460d      	mov	r5, r1
  406688:	4c08      	ldr	r4, [pc, #32]	; (4066ac <_write_r+0x28>)
  40668a:	4611      	mov	r1, r2
  40668c:	4606      	mov	r6, r0
  40668e:	461a      	mov	r2, r3
  406690:	4628      	mov	r0, r5
  406692:	2300      	movs	r3, #0
  406694:	6023      	str	r3, [r4, #0]
  406696:	f7f9 fdf3 	bl	400280 <_write>
  40669a:	1c43      	adds	r3, r0, #1
  40669c:	d000      	beq.n	4066a0 <_write_r+0x1c>
  40669e:	bd70      	pop	{r4, r5, r6, pc}
  4066a0:	6823      	ldr	r3, [r4, #0]
  4066a2:	2b00      	cmp	r3, #0
  4066a4:	d0fb      	beq.n	40669e <_write_r+0x1a>
  4066a6:	6033      	str	r3, [r6, #0]
  4066a8:	bd70      	pop	{r4, r5, r6, pc}
  4066aa:	bf00      	nop
  4066ac:	20400ab4 	.word	0x20400ab4

004066b0 <__register_exitproc>:
  4066b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4066b4:	4d2c      	ldr	r5, [pc, #176]	; (406768 <__register_exitproc+0xb8>)
  4066b6:	4606      	mov	r6, r0
  4066b8:	6828      	ldr	r0, [r5, #0]
  4066ba:	4698      	mov	r8, r3
  4066bc:	460f      	mov	r7, r1
  4066be:	4691      	mov	r9, r2
  4066c0:	f7fe fd80 	bl	4051c4 <__retarget_lock_acquire_recursive>
  4066c4:	4b29      	ldr	r3, [pc, #164]	; (40676c <__register_exitproc+0xbc>)
  4066c6:	681c      	ldr	r4, [r3, #0]
  4066c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4066cc:	2b00      	cmp	r3, #0
  4066ce:	d03e      	beq.n	40674e <__register_exitproc+0x9e>
  4066d0:	685a      	ldr	r2, [r3, #4]
  4066d2:	2a1f      	cmp	r2, #31
  4066d4:	dc1c      	bgt.n	406710 <__register_exitproc+0x60>
  4066d6:	f102 0e01 	add.w	lr, r2, #1
  4066da:	b176      	cbz	r6, 4066fa <__register_exitproc+0x4a>
  4066dc:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4066e0:	2401      	movs	r4, #1
  4066e2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4066e6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4066ea:	4094      	lsls	r4, r2
  4066ec:	4320      	orrs	r0, r4
  4066ee:	2e02      	cmp	r6, #2
  4066f0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4066f4:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4066f8:	d023      	beq.n	406742 <__register_exitproc+0x92>
  4066fa:	3202      	adds	r2, #2
  4066fc:	f8c3 e004 	str.w	lr, [r3, #4]
  406700:	6828      	ldr	r0, [r5, #0]
  406702:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  406706:	f7fe fd5f 	bl	4051c8 <__retarget_lock_release_recursive>
  40670a:	2000      	movs	r0, #0
  40670c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406710:	4b17      	ldr	r3, [pc, #92]	; (406770 <__register_exitproc+0xc0>)
  406712:	b30b      	cbz	r3, 406758 <__register_exitproc+0xa8>
  406714:	f44f 70c8 	mov.w	r0, #400	; 0x190
  406718:	f7fe fdd0 	bl	4052bc <malloc>
  40671c:	4603      	mov	r3, r0
  40671e:	b1d8      	cbz	r0, 406758 <__register_exitproc+0xa8>
  406720:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  406724:	6002      	str	r2, [r0, #0]
  406726:	2100      	movs	r1, #0
  406728:	6041      	str	r1, [r0, #4]
  40672a:	460a      	mov	r2, r1
  40672c:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  406730:	f04f 0e01 	mov.w	lr, #1
  406734:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  406738:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40673c:	2e00      	cmp	r6, #0
  40673e:	d0dc      	beq.n	4066fa <__register_exitproc+0x4a>
  406740:	e7cc      	b.n	4066dc <__register_exitproc+0x2c>
  406742:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  406746:	430c      	orrs	r4, r1
  406748:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40674c:	e7d5      	b.n	4066fa <__register_exitproc+0x4a>
  40674e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  406752:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  406756:	e7bb      	b.n	4066d0 <__register_exitproc+0x20>
  406758:	6828      	ldr	r0, [r5, #0]
  40675a:	f7fe fd35 	bl	4051c8 <__retarget_lock_release_recursive>
  40675e:	f04f 30ff 	mov.w	r0, #4294967295
  406762:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406766:	bf00      	nop
  406768:	20400438 	.word	0x20400438
  40676c:	00407148 	.word	0x00407148
  406770:	004052bd 	.word	0x004052bd

00406774 <_calloc_r>:
  406774:	b510      	push	{r4, lr}
  406776:	fb02 f101 	mul.w	r1, r2, r1
  40677a:	f7fe fda7 	bl	4052cc <_malloc_r>
  40677e:	4604      	mov	r4, r0
  406780:	b1d8      	cbz	r0, 4067ba <_calloc_r+0x46>
  406782:	f850 2c04 	ldr.w	r2, [r0, #-4]
  406786:	f022 0203 	bic.w	r2, r2, #3
  40678a:	3a04      	subs	r2, #4
  40678c:	2a24      	cmp	r2, #36	; 0x24
  40678e:	d818      	bhi.n	4067c2 <_calloc_r+0x4e>
  406790:	2a13      	cmp	r2, #19
  406792:	d914      	bls.n	4067be <_calloc_r+0x4a>
  406794:	2300      	movs	r3, #0
  406796:	2a1b      	cmp	r2, #27
  406798:	6003      	str	r3, [r0, #0]
  40679a:	6043      	str	r3, [r0, #4]
  40679c:	d916      	bls.n	4067cc <_calloc_r+0x58>
  40679e:	2a24      	cmp	r2, #36	; 0x24
  4067a0:	6083      	str	r3, [r0, #8]
  4067a2:	60c3      	str	r3, [r0, #12]
  4067a4:	bf11      	iteee	ne
  4067a6:	f100 0210 	addne.w	r2, r0, #16
  4067aa:	6103      	streq	r3, [r0, #16]
  4067ac:	6143      	streq	r3, [r0, #20]
  4067ae:	f100 0218 	addeq.w	r2, r0, #24
  4067b2:	2300      	movs	r3, #0
  4067b4:	6013      	str	r3, [r2, #0]
  4067b6:	6053      	str	r3, [r2, #4]
  4067b8:	6093      	str	r3, [r2, #8]
  4067ba:	4620      	mov	r0, r4
  4067bc:	bd10      	pop	{r4, pc}
  4067be:	4602      	mov	r2, r0
  4067c0:	e7f7      	b.n	4067b2 <_calloc_r+0x3e>
  4067c2:	2100      	movs	r1, #0
  4067c4:	f7fb fb8c 	bl	401ee0 <memset>
  4067c8:	4620      	mov	r0, r4
  4067ca:	bd10      	pop	{r4, pc}
  4067cc:	f100 0208 	add.w	r2, r0, #8
  4067d0:	e7ef      	b.n	4067b2 <_calloc_r+0x3e>
  4067d2:	bf00      	nop

004067d4 <_close_r>:
  4067d4:	b538      	push	{r3, r4, r5, lr}
  4067d6:	4c07      	ldr	r4, [pc, #28]	; (4067f4 <_close_r+0x20>)
  4067d8:	2300      	movs	r3, #0
  4067da:	4605      	mov	r5, r0
  4067dc:	4608      	mov	r0, r1
  4067de:	6023      	str	r3, [r4, #0]
  4067e0:	f7fa fb20 	bl	400e24 <_close>
  4067e4:	1c43      	adds	r3, r0, #1
  4067e6:	d000      	beq.n	4067ea <_close_r+0x16>
  4067e8:	bd38      	pop	{r3, r4, r5, pc}
  4067ea:	6823      	ldr	r3, [r4, #0]
  4067ec:	2b00      	cmp	r3, #0
  4067ee:	d0fb      	beq.n	4067e8 <_close_r+0x14>
  4067f0:	602b      	str	r3, [r5, #0]
  4067f2:	bd38      	pop	{r3, r4, r5, pc}
  4067f4:	20400ab4 	.word	0x20400ab4

004067f8 <_fclose_r>:
  4067f8:	b570      	push	{r4, r5, r6, lr}
  4067fa:	b159      	cbz	r1, 406814 <_fclose_r+0x1c>
  4067fc:	4605      	mov	r5, r0
  4067fe:	460c      	mov	r4, r1
  406800:	b110      	cbz	r0, 406808 <_fclose_r+0x10>
  406802:	6b83      	ldr	r3, [r0, #56]	; 0x38
  406804:	2b00      	cmp	r3, #0
  406806:	d03c      	beq.n	406882 <_fclose_r+0x8a>
  406808:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40680a:	07d8      	lsls	r0, r3, #31
  40680c:	d505      	bpl.n	40681a <_fclose_r+0x22>
  40680e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406812:	b92b      	cbnz	r3, 406820 <_fclose_r+0x28>
  406814:	2600      	movs	r6, #0
  406816:	4630      	mov	r0, r6
  406818:	bd70      	pop	{r4, r5, r6, pc}
  40681a:	89a3      	ldrh	r3, [r4, #12]
  40681c:	0599      	lsls	r1, r3, #22
  40681e:	d53c      	bpl.n	40689a <_fclose_r+0xa2>
  406820:	4621      	mov	r1, r4
  406822:	4628      	mov	r0, r5
  406824:	f7fe f89a 	bl	40495c <__sflush_r>
  406828:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40682a:	4606      	mov	r6, r0
  40682c:	b133      	cbz	r3, 40683c <_fclose_r+0x44>
  40682e:	69e1      	ldr	r1, [r4, #28]
  406830:	4628      	mov	r0, r5
  406832:	4798      	blx	r3
  406834:	2800      	cmp	r0, #0
  406836:	bfb8      	it	lt
  406838:	f04f 36ff 	movlt.w	r6, #4294967295
  40683c:	89a3      	ldrh	r3, [r4, #12]
  40683e:	061a      	lsls	r2, r3, #24
  406840:	d422      	bmi.n	406888 <_fclose_r+0x90>
  406842:	6b21      	ldr	r1, [r4, #48]	; 0x30
  406844:	b141      	cbz	r1, 406858 <_fclose_r+0x60>
  406846:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40684a:	4299      	cmp	r1, r3
  40684c:	d002      	beq.n	406854 <_fclose_r+0x5c>
  40684e:	4628      	mov	r0, r5
  406850:	f7fe fa1e 	bl	404c90 <_free_r>
  406854:	2300      	movs	r3, #0
  406856:	6323      	str	r3, [r4, #48]	; 0x30
  406858:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40685a:	b121      	cbz	r1, 406866 <_fclose_r+0x6e>
  40685c:	4628      	mov	r0, r5
  40685e:	f7fe fa17 	bl	404c90 <_free_r>
  406862:	2300      	movs	r3, #0
  406864:	6463      	str	r3, [r4, #68]	; 0x44
  406866:	f7fe f99d 	bl	404ba4 <__sfp_lock_acquire>
  40686a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40686c:	2200      	movs	r2, #0
  40686e:	07db      	lsls	r3, r3, #31
  406870:	81a2      	strh	r2, [r4, #12]
  406872:	d50e      	bpl.n	406892 <_fclose_r+0x9a>
  406874:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406876:	f7fe fca3 	bl	4051c0 <__retarget_lock_close_recursive>
  40687a:	f7fe f999 	bl	404bb0 <__sfp_lock_release>
  40687e:	4630      	mov	r0, r6
  406880:	bd70      	pop	{r4, r5, r6, pc}
  406882:	f7fe f963 	bl	404b4c <__sinit>
  406886:	e7bf      	b.n	406808 <_fclose_r+0x10>
  406888:	6921      	ldr	r1, [r4, #16]
  40688a:	4628      	mov	r0, r5
  40688c:	f7fe fa00 	bl	404c90 <_free_r>
  406890:	e7d7      	b.n	406842 <_fclose_r+0x4a>
  406892:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406894:	f7fe fc98 	bl	4051c8 <__retarget_lock_release_recursive>
  406898:	e7ec      	b.n	406874 <_fclose_r+0x7c>
  40689a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40689c:	f7fe fc92 	bl	4051c4 <__retarget_lock_acquire_recursive>
  4068a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4068a4:	2b00      	cmp	r3, #0
  4068a6:	d1bb      	bne.n	406820 <_fclose_r+0x28>
  4068a8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4068aa:	f016 0601 	ands.w	r6, r6, #1
  4068ae:	d1b1      	bne.n	406814 <_fclose_r+0x1c>
  4068b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4068b2:	f7fe fc89 	bl	4051c8 <__retarget_lock_release_recursive>
  4068b6:	4630      	mov	r0, r6
  4068b8:	bd70      	pop	{r4, r5, r6, pc}
  4068ba:	bf00      	nop

004068bc <__fputwc>:
  4068bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4068c0:	b082      	sub	sp, #8
  4068c2:	4680      	mov	r8, r0
  4068c4:	4689      	mov	r9, r1
  4068c6:	4614      	mov	r4, r2
  4068c8:	f000 f8a2 	bl	406a10 <__locale_mb_cur_max>
  4068cc:	2801      	cmp	r0, #1
  4068ce:	d036      	beq.n	40693e <__fputwc+0x82>
  4068d0:	464a      	mov	r2, r9
  4068d2:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4068d6:	a901      	add	r1, sp, #4
  4068d8:	4640      	mov	r0, r8
  4068da:	f000 f8e9 	bl	406ab0 <_wcrtomb_r>
  4068de:	1c42      	adds	r2, r0, #1
  4068e0:	4606      	mov	r6, r0
  4068e2:	d025      	beq.n	406930 <__fputwc+0x74>
  4068e4:	b3a8      	cbz	r0, 406952 <__fputwc+0x96>
  4068e6:	f89d e004 	ldrb.w	lr, [sp, #4]
  4068ea:	2500      	movs	r5, #0
  4068ec:	f10d 0a04 	add.w	sl, sp, #4
  4068f0:	e009      	b.n	406906 <__fputwc+0x4a>
  4068f2:	6823      	ldr	r3, [r4, #0]
  4068f4:	1c5a      	adds	r2, r3, #1
  4068f6:	6022      	str	r2, [r4, #0]
  4068f8:	f883 e000 	strb.w	lr, [r3]
  4068fc:	3501      	adds	r5, #1
  4068fe:	42b5      	cmp	r5, r6
  406900:	d227      	bcs.n	406952 <__fputwc+0x96>
  406902:	f815 e00a 	ldrb.w	lr, [r5, sl]
  406906:	68a3      	ldr	r3, [r4, #8]
  406908:	3b01      	subs	r3, #1
  40690a:	2b00      	cmp	r3, #0
  40690c:	60a3      	str	r3, [r4, #8]
  40690e:	daf0      	bge.n	4068f2 <__fputwc+0x36>
  406910:	69a7      	ldr	r7, [r4, #24]
  406912:	42bb      	cmp	r3, r7
  406914:	4671      	mov	r1, lr
  406916:	4622      	mov	r2, r4
  406918:	4640      	mov	r0, r8
  40691a:	db02      	blt.n	406922 <__fputwc+0x66>
  40691c:	f1be 0f0a 	cmp.w	lr, #10
  406920:	d1e7      	bne.n	4068f2 <__fputwc+0x36>
  406922:	f7ff fe57 	bl	4065d4 <__swbuf_r>
  406926:	1c43      	adds	r3, r0, #1
  406928:	d1e8      	bne.n	4068fc <__fputwc+0x40>
  40692a:	b002      	add	sp, #8
  40692c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406930:	89a3      	ldrh	r3, [r4, #12]
  406932:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406936:	81a3      	strh	r3, [r4, #12]
  406938:	b002      	add	sp, #8
  40693a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40693e:	f109 33ff 	add.w	r3, r9, #4294967295
  406942:	2bfe      	cmp	r3, #254	; 0xfe
  406944:	d8c4      	bhi.n	4068d0 <__fputwc+0x14>
  406946:	fa5f fe89 	uxtb.w	lr, r9
  40694a:	4606      	mov	r6, r0
  40694c:	f88d e004 	strb.w	lr, [sp, #4]
  406950:	e7cb      	b.n	4068ea <__fputwc+0x2e>
  406952:	4648      	mov	r0, r9
  406954:	b002      	add	sp, #8
  406956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40695a:	bf00      	nop

0040695c <_fputwc_r>:
  40695c:	b530      	push	{r4, r5, lr}
  40695e:	6e53      	ldr	r3, [r2, #100]	; 0x64
  406960:	f013 0f01 	tst.w	r3, #1
  406964:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  406968:	4614      	mov	r4, r2
  40696a:	b083      	sub	sp, #12
  40696c:	4605      	mov	r5, r0
  40696e:	b29a      	uxth	r2, r3
  406970:	d101      	bne.n	406976 <_fputwc_r+0x1a>
  406972:	0590      	lsls	r0, r2, #22
  406974:	d51c      	bpl.n	4069b0 <_fputwc_r+0x54>
  406976:	0490      	lsls	r0, r2, #18
  406978:	d406      	bmi.n	406988 <_fputwc_r+0x2c>
  40697a:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40697c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  406980:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406984:	81a3      	strh	r3, [r4, #12]
  406986:	6662      	str	r2, [r4, #100]	; 0x64
  406988:	4628      	mov	r0, r5
  40698a:	4622      	mov	r2, r4
  40698c:	f7ff ff96 	bl	4068bc <__fputwc>
  406990:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406992:	07da      	lsls	r2, r3, #31
  406994:	4605      	mov	r5, r0
  406996:	d402      	bmi.n	40699e <_fputwc_r+0x42>
  406998:	89a3      	ldrh	r3, [r4, #12]
  40699a:	059b      	lsls	r3, r3, #22
  40699c:	d502      	bpl.n	4069a4 <_fputwc_r+0x48>
  40699e:	4628      	mov	r0, r5
  4069a0:	b003      	add	sp, #12
  4069a2:	bd30      	pop	{r4, r5, pc}
  4069a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4069a6:	f7fe fc0f 	bl	4051c8 <__retarget_lock_release_recursive>
  4069aa:	4628      	mov	r0, r5
  4069ac:	b003      	add	sp, #12
  4069ae:	bd30      	pop	{r4, r5, pc}
  4069b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4069b2:	9101      	str	r1, [sp, #4]
  4069b4:	f7fe fc06 	bl	4051c4 <__retarget_lock_acquire_recursive>
  4069b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4069bc:	9901      	ldr	r1, [sp, #4]
  4069be:	b29a      	uxth	r2, r3
  4069c0:	e7d9      	b.n	406976 <_fputwc_r+0x1a>
  4069c2:	bf00      	nop

004069c4 <_fstat_r>:
  4069c4:	b538      	push	{r3, r4, r5, lr}
  4069c6:	460b      	mov	r3, r1
  4069c8:	4c07      	ldr	r4, [pc, #28]	; (4069e8 <_fstat_r+0x24>)
  4069ca:	4605      	mov	r5, r0
  4069cc:	4611      	mov	r1, r2
  4069ce:	4618      	mov	r0, r3
  4069d0:	2300      	movs	r3, #0
  4069d2:	6023      	str	r3, [r4, #0]
  4069d4:	f7fa fa29 	bl	400e2a <_fstat>
  4069d8:	1c43      	adds	r3, r0, #1
  4069da:	d000      	beq.n	4069de <_fstat_r+0x1a>
  4069dc:	bd38      	pop	{r3, r4, r5, pc}
  4069de:	6823      	ldr	r3, [r4, #0]
  4069e0:	2b00      	cmp	r3, #0
  4069e2:	d0fb      	beq.n	4069dc <_fstat_r+0x18>
  4069e4:	602b      	str	r3, [r5, #0]
  4069e6:	bd38      	pop	{r3, r4, r5, pc}
  4069e8:	20400ab4 	.word	0x20400ab4

004069ec <_isatty_r>:
  4069ec:	b538      	push	{r3, r4, r5, lr}
  4069ee:	4c07      	ldr	r4, [pc, #28]	; (406a0c <_isatty_r+0x20>)
  4069f0:	2300      	movs	r3, #0
  4069f2:	4605      	mov	r5, r0
  4069f4:	4608      	mov	r0, r1
  4069f6:	6023      	str	r3, [r4, #0]
  4069f8:	f7fa fa1c 	bl	400e34 <_isatty>
  4069fc:	1c43      	adds	r3, r0, #1
  4069fe:	d000      	beq.n	406a02 <_isatty_r+0x16>
  406a00:	bd38      	pop	{r3, r4, r5, pc}
  406a02:	6823      	ldr	r3, [r4, #0]
  406a04:	2b00      	cmp	r3, #0
  406a06:	d0fb      	beq.n	406a00 <_isatty_r+0x14>
  406a08:	602b      	str	r3, [r5, #0]
  406a0a:	bd38      	pop	{r3, r4, r5, pc}
  406a0c:	20400ab4 	.word	0x20400ab4

00406a10 <__locale_mb_cur_max>:
  406a10:	4b04      	ldr	r3, [pc, #16]	; (406a24 <__locale_mb_cur_max+0x14>)
  406a12:	4a05      	ldr	r2, [pc, #20]	; (406a28 <__locale_mb_cur_max+0x18>)
  406a14:	681b      	ldr	r3, [r3, #0]
  406a16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  406a18:	2b00      	cmp	r3, #0
  406a1a:	bf08      	it	eq
  406a1c:	4613      	moveq	r3, r2
  406a1e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  406a22:	4770      	bx	lr
  406a24:	20400008 	.word	0x20400008
  406a28:	2040084c 	.word	0x2040084c

00406a2c <_lseek_r>:
  406a2c:	b570      	push	{r4, r5, r6, lr}
  406a2e:	460d      	mov	r5, r1
  406a30:	4c08      	ldr	r4, [pc, #32]	; (406a54 <_lseek_r+0x28>)
  406a32:	4611      	mov	r1, r2
  406a34:	4606      	mov	r6, r0
  406a36:	461a      	mov	r2, r3
  406a38:	4628      	mov	r0, r5
  406a3a:	2300      	movs	r3, #0
  406a3c:	6023      	str	r3, [r4, #0]
  406a3e:	f7fa f9fb 	bl	400e38 <_lseek>
  406a42:	1c43      	adds	r3, r0, #1
  406a44:	d000      	beq.n	406a48 <_lseek_r+0x1c>
  406a46:	bd70      	pop	{r4, r5, r6, pc}
  406a48:	6823      	ldr	r3, [r4, #0]
  406a4a:	2b00      	cmp	r3, #0
  406a4c:	d0fb      	beq.n	406a46 <_lseek_r+0x1a>
  406a4e:	6033      	str	r3, [r6, #0]
  406a50:	bd70      	pop	{r4, r5, r6, pc}
  406a52:	bf00      	nop
  406a54:	20400ab4 	.word	0x20400ab4

00406a58 <__ascii_mbtowc>:
  406a58:	b082      	sub	sp, #8
  406a5a:	b149      	cbz	r1, 406a70 <__ascii_mbtowc+0x18>
  406a5c:	b15a      	cbz	r2, 406a76 <__ascii_mbtowc+0x1e>
  406a5e:	b16b      	cbz	r3, 406a7c <__ascii_mbtowc+0x24>
  406a60:	7813      	ldrb	r3, [r2, #0]
  406a62:	600b      	str	r3, [r1, #0]
  406a64:	7812      	ldrb	r2, [r2, #0]
  406a66:	1c10      	adds	r0, r2, #0
  406a68:	bf18      	it	ne
  406a6a:	2001      	movne	r0, #1
  406a6c:	b002      	add	sp, #8
  406a6e:	4770      	bx	lr
  406a70:	a901      	add	r1, sp, #4
  406a72:	2a00      	cmp	r2, #0
  406a74:	d1f3      	bne.n	406a5e <__ascii_mbtowc+0x6>
  406a76:	4610      	mov	r0, r2
  406a78:	b002      	add	sp, #8
  406a7a:	4770      	bx	lr
  406a7c:	f06f 0001 	mvn.w	r0, #1
  406a80:	e7f4      	b.n	406a6c <__ascii_mbtowc+0x14>
  406a82:	bf00      	nop

00406a84 <_read_r>:
  406a84:	b570      	push	{r4, r5, r6, lr}
  406a86:	460d      	mov	r5, r1
  406a88:	4c08      	ldr	r4, [pc, #32]	; (406aac <_read_r+0x28>)
  406a8a:	4611      	mov	r1, r2
  406a8c:	4606      	mov	r6, r0
  406a8e:	461a      	mov	r2, r3
  406a90:	4628      	mov	r0, r5
  406a92:	2300      	movs	r3, #0
  406a94:	6023      	str	r3, [r4, #0]
  406a96:	f7f9 fbd5 	bl	400244 <_read>
  406a9a:	1c43      	adds	r3, r0, #1
  406a9c:	d000      	beq.n	406aa0 <_read_r+0x1c>
  406a9e:	bd70      	pop	{r4, r5, r6, pc}
  406aa0:	6823      	ldr	r3, [r4, #0]
  406aa2:	2b00      	cmp	r3, #0
  406aa4:	d0fb      	beq.n	406a9e <_read_r+0x1a>
  406aa6:	6033      	str	r3, [r6, #0]
  406aa8:	bd70      	pop	{r4, r5, r6, pc}
  406aaa:	bf00      	nop
  406aac:	20400ab4 	.word	0x20400ab4

00406ab0 <_wcrtomb_r>:
  406ab0:	b5f0      	push	{r4, r5, r6, r7, lr}
  406ab2:	4606      	mov	r6, r0
  406ab4:	b085      	sub	sp, #20
  406ab6:	461f      	mov	r7, r3
  406ab8:	b189      	cbz	r1, 406ade <_wcrtomb_r+0x2e>
  406aba:	4c10      	ldr	r4, [pc, #64]	; (406afc <_wcrtomb_r+0x4c>)
  406abc:	4d10      	ldr	r5, [pc, #64]	; (406b00 <_wcrtomb_r+0x50>)
  406abe:	6824      	ldr	r4, [r4, #0]
  406ac0:	6b64      	ldr	r4, [r4, #52]	; 0x34
  406ac2:	2c00      	cmp	r4, #0
  406ac4:	bf08      	it	eq
  406ac6:	462c      	moveq	r4, r5
  406ac8:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  406acc:	47a0      	blx	r4
  406ace:	1c43      	adds	r3, r0, #1
  406ad0:	d103      	bne.n	406ada <_wcrtomb_r+0x2a>
  406ad2:	2200      	movs	r2, #0
  406ad4:	238a      	movs	r3, #138	; 0x8a
  406ad6:	603a      	str	r2, [r7, #0]
  406ad8:	6033      	str	r3, [r6, #0]
  406ada:	b005      	add	sp, #20
  406adc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406ade:	460c      	mov	r4, r1
  406ae0:	4906      	ldr	r1, [pc, #24]	; (406afc <_wcrtomb_r+0x4c>)
  406ae2:	4a07      	ldr	r2, [pc, #28]	; (406b00 <_wcrtomb_r+0x50>)
  406ae4:	6809      	ldr	r1, [r1, #0]
  406ae6:	6b49      	ldr	r1, [r1, #52]	; 0x34
  406ae8:	2900      	cmp	r1, #0
  406aea:	bf08      	it	eq
  406aec:	4611      	moveq	r1, r2
  406aee:	4622      	mov	r2, r4
  406af0:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  406af4:	a901      	add	r1, sp, #4
  406af6:	47a0      	blx	r4
  406af8:	e7e9      	b.n	406ace <_wcrtomb_r+0x1e>
  406afa:	bf00      	nop
  406afc:	20400008 	.word	0x20400008
  406b00:	2040084c 	.word	0x2040084c

00406b04 <__ascii_wctomb>:
  406b04:	b121      	cbz	r1, 406b10 <__ascii_wctomb+0xc>
  406b06:	2aff      	cmp	r2, #255	; 0xff
  406b08:	d804      	bhi.n	406b14 <__ascii_wctomb+0x10>
  406b0a:	700a      	strb	r2, [r1, #0]
  406b0c:	2001      	movs	r0, #1
  406b0e:	4770      	bx	lr
  406b10:	4608      	mov	r0, r1
  406b12:	4770      	bx	lr
  406b14:	238a      	movs	r3, #138	; 0x8a
  406b16:	6003      	str	r3, [r0, #0]
  406b18:	f04f 30ff 	mov.w	r0, #4294967295
  406b1c:	4770      	bx	lr
  406b1e:	bf00      	nop

00406b20 <__gedf2>:
  406b20:	f04f 3cff 	mov.w	ip, #4294967295
  406b24:	e006      	b.n	406b34 <__cmpdf2+0x4>
  406b26:	bf00      	nop

00406b28 <__ledf2>:
  406b28:	f04f 0c01 	mov.w	ip, #1
  406b2c:	e002      	b.n	406b34 <__cmpdf2+0x4>
  406b2e:	bf00      	nop

00406b30 <__cmpdf2>:
  406b30:	f04f 0c01 	mov.w	ip, #1
  406b34:	f84d cd04 	str.w	ip, [sp, #-4]!
  406b38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406b3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406b44:	bf18      	it	ne
  406b46:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406b4a:	d01b      	beq.n	406b84 <__cmpdf2+0x54>
  406b4c:	b001      	add	sp, #4
  406b4e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  406b52:	bf0c      	ite	eq
  406b54:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406b58:	ea91 0f03 	teqne	r1, r3
  406b5c:	bf02      	ittt	eq
  406b5e:	ea90 0f02 	teqeq	r0, r2
  406b62:	2000      	moveq	r0, #0
  406b64:	4770      	bxeq	lr
  406b66:	f110 0f00 	cmn.w	r0, #0
  406b6a:	ea91 0f03 	teq	r1, r3
  406b6e:	bf58      	it	pl
  406b70:	4299      	cmppl	r1, r3
  406b72:	bf08      	it	eq
  406b74:	4290      	cmpeq	r0, r2
  406b76:	bf2c      	ite	cs
  406b78:	17d8      	asrcs	r0, r3, #31
  406b7a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406b7e:	f040 0001 	orr.w	r0, r0, #1
  406b82:	4770      	bx	lr
  406b84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406b88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b8c:	d102      	bne.n	406b94 <__cmpdf2+0x64>
  406b8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406b92:	d107      	bne.n	406ba4 <__cmpdf2+0x74>
  406b94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406b98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b9c:	d1d6      	bne.n	406b4c <__cmpdf2+0x1c>
  406b9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406ba2:	d0d3      	beq.n	406b4c <__cmpdf2+0x1c>
  406ba4:	f85d 0b04 	ldr.w	r0, [sp], #4
  406ba8:	4770      	bx	lr
  406baa:	bf00      	nop

00406bac <__aeabi_cdrcmple>:
  406bac:	4684      	mov	ip, r0
  406bae:	4610      	mov	r0, r2
  406bb0:	4662      	mov	r2, ip
  406bb2:	468c      	mov	ip, r1
  406bb4:	4619      	mov	r1, r3
  406bb6:	4663      	mov	r3, ip
  406bb8:	e000      	b.n	406bbc <__aeabi_cdcmpeq>
  406bba:	bf00      	nop

00406bbc <__aeabi_cdcmpeq>:
  406bbc:	b501      	push	{r0, lr}
  406bbe:	f7ff ffb7 	bl	406b30 <__cmpdf2>
  406bc2:	2800      	cmp	r0, #0
  406bc4:	bf48      	it	mi
  406bc6:	f110 0f00 	cmnmi.w	r0, #0
  406bca:	bd01      	pop	{r0, pc}

00406bcc <__aeabi_dcmpeq>:
  406bcc:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bd0:	f7ff fff4 	bl	406bbc <__aeabi_cdcmpeq>
  406bd4:	bf0c      	ite	eq
  406bd6:	2001      	moveq	r0, #1
  406bd8:	2000      	movne	r0, #0
  406bda:	f85d fb08 	ldr.w	pc, [sp], #8
  406bde:	bf00      	nop

00406be0 <__aeabi_dcmplt>:
  406be0:	f84d ed08 	str.w	lr, [sp, #-8]!
  406be4:	f7ff ffea 	bl	406bbc <__aeabi_cdcmpeq>
  406be8:	bf34      	ite	cc
  406bea:	2001      	movcc	r0, #1
  406bec:	2000      	movcs	r0, #0
  406bee:	f85d fb08 	ldr.w	pc, [sp], #8
  406bf2:	bf00      	nop

00406bf4 <__aeabi_dcmple>:
  406bf4:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bf8:	f7ff ffe0 	bl	406bbc <__aeabi_cdcmpeq>
  406bfc:	bf94      	ite	ls
  406bfe:	2001      	movls	r0, #1
  406c00:	2000      	movhi	r0, #0
  406c02:	f85d fb08 	ldr.w	pc, [sp], #8
  406c06:	bf00      	nop

00406c08 <__aeabi_dcmpge>:
  406c08:	f84d ed08 	str.w	lr, [sp, #-8]!
  406c0c:	f7ff ffce 	bl	406bac <__aeabi_cdrcmple>
  406c10:	bf94      	ite	ls
  406c12:	2001      	movls	r0, #1
  406c14:	2000      	movhi	r0, #0
  406c16:	f85d fb08 	ldr.w	pc, [sp], #8
  406c1a:	bf00      	nop

00406c1c <__aeabi_dcmpgt>:
  406c1c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406c20:	f7ff ffc4 	bl	406bac <__aeabi_cdrcmple>
  406c24:	bf34      	ite	cc
  406c26:	2001      	movcc	r0, #1
  406c28:	2000      	movcs	r0, #0
  406c2a:	f85d fb08 	ldr.w	pc, [sp], #8
  406c2e:	bf00      	nop

00406c30 <__aeabi_dcmpun>:
  406c30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406c34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406c38:	d102      	bne.n	406c40 <__aeabi_dcmpun+0x10>
  406c3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406c3e:	d10a      	bne.n	406c56 <__aeabi_dcmpun+0x26>
  406c40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406c44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406c48:	d102      	bne.n	406c50 <__aeabi_dcmpun+0x20>
  406c4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406c4e:	d102      	bne.n	406c56 <__aeabi_dcmpun+0x26>
  406c50:	f04f 0000 	mov.w	r0, #0
  406c54:	4770      	bx	lr
  406c56:	f04f 0001 	mov.w	r0, #1
  406c5a:	4770      	bx	lr

00406c5c <__aeabi_d2iz>:
  406c5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406c60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406c64:	d215      	bcs.n	406c92 <__aeabi_d2iz+0x36>
  406c66:	d511      	bpl.n	406c8c <__aeabi_d2iz+0x30>
  406c68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406c6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406c70:	d912      	bls.n	406c98 <__aeabi_d2iz+0x3c>
  406c72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  406c76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406c7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406c7e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406c82:	fa23 f002 	lsr.w	r0, r3, r2
  406c86:	bf18      	it	ne
  406c88:	4240      	negne	r0, r0
  406c8a:	4770      	bx	lr
  406c8c:	f04f 0000 	mov.w	r0, #0
  406c90:	4770      	bx	lr
  406c92:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  406c96:	d105      	bne.n	406ca4 <__aeabi_d2iz+0x48>
  406c98:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406c9c:	bf08      	it	eq
  406c9e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  406ca2:	4770      	bx	lr
  406ca4:	f04f 0000 	mov.w	r0, #0
  406ca8:	4770      	bx	lr
  406caa:	bf00      	nop

00406cac <__aeabi_uldivmod>:
  406cac:	b953      	cbnz	r3, 406cc4 <__aeabi_uldivmod+0x18>
  406cae:	b94a      	cbnz	r2, 406cc4 <__aeabi_uldivmod+0x18>
  406cb0:	2900      	cmp	r1, #0
  406cb2:	bf08      	it	eq
  406cb4:	2800      	cmpeq	r0, #0
  406cb6:	bf1c      	itt	ne
  406cb8:	f04f 31ff 	movne.w	r1, #4294967295
  406cbc:	f04f 30ff 	movne.w	r0, #4294967295
  406cc0:	f000 b97a 	b.w	406fb8 <__aeabi_idiv0>
  406cc4:	f1ad 0c08 	sub.w	ip, sp, #8
  406cc8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406ccc:	f000 f806 	bl	406cdc <__udivmoddi4>
  406cd0:	f8dd e004 	ldr.w	lr, [sp, #4]
  406cd4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406cd8:	b004      	add	sp, #16
  406cda:	4770      	bx	lr

00406cdc <__udivmoddi4>:
  406cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406ce0:	468c      	mov	ip, r1
  406ce2:	460d      	mov	r5, r1
  406ce4:	4604      	mov	r4, r0
  406ce6:	9e08      	ldr	r6, [sp, #32]
  406ce8:	2b00      	cmp	r3, #0
  406cea:	d151      	bne.n	406d90 <__udivmoddi4+0xb4>
  406cec:	428a      	cmp	r2, r1
  406cee:	4617      	mov	r7, r2
  406cf0:	d96d      	bls.n	406dce <__udivmoddi4+0xf2>
  406cf2:	fab2 fe82 	clz	lr, r2
  406cf6:	f1be 0f00 	cmp.w	lr, #0
  406cfa:	d00b      	beq.n	406d14 <__udivmoddi4+0x38>
  406cfc:	f1ce 0c20 	rsb	ip, lr, #32
  406d00:	fa01 f50e 	lsl.w	r5, r1, lr
  406d04:	fa20 fc0c 	lsr.w	ip, r0, ip
  406d08:	fa02 f70e 	lsl.w	r7, r2, lr
  406d0c:	ea4c 0c05 	orr.w	ip, ip, r5
  406d10:	fa00 f40e 	lsl.w	r4, r0, lr
  406d14:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406d18:	0c25      	lsrs	r5, r4, #16
  406d1a:	fbbc f8fa 	udiv	r8, ip, sl
  406d1e:	fa1f f987 	uxth.w	r9, r7
  406d22:	fb0a cc18 	mls	ip, sl, r8, ip
  406d26:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406d2a:	fb08 f309 	mul.w	r3, r8, r9
  406d2e:	42ab      	cmp	r3, r5
  406d30:	d90a      	bls.n	406d48 <__udivmoddi4+0x6c>
  406d32:	19ed      	adds	r5, r5, r7
  406d34:	f108 32ff 	add.w	r2, r8, #4294967295
  406d38:	f080 8123 	bcs.w	406f82 <__udivmoddi4+0x2a6>
  406d3c:	42ab      	cmp	r3, r5
  406d3e:	f240 8120 	bls.w	406f82 <__udivmoddi4+0x2a6>
  406d42:	f1a8 0802 	sub.w	r8, r8, #2
  406d46:	443d      	add	r5, r7
  406d48:	1aed      	subs	r5, r5, r3
  406d4a:	b2a4      	uxth	r4, r4
  406d4c:	fbb5 f0fa 	udiv	r0, r5, sl
  406d50:	fb0a 5510 	mls	r5, sl, r0, r5
  406d54:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406d58:	fb00 f909 	mul.w	r9, r0, r9
  406d5c:	45a1      	cmp	r9, r4
  406d5e:	d909      	bls.n	406d74 <__udivmoddi4+0x98>
  406d60:	19e4      	adds	r4, r4, r7
  406d62:	f100 33ff 	add.w	r3, r0, #4294967295
  406d66:	f080 810a 	bcs.w	406f7e <__udivmoddi4+0x2a2>
  406d6a:	45a1      	cmp	r9, r4
  406d6c:	f240 8107 	bls.w	406f7e <__udivmoddi4+0x2a2>
  406d70:	3802      	subs	r0, #2
  406d72:	443c      	add	r4, r7
  406d74:	eba4 0409 	sub.w	r4, r4, r9
  406d78:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406d7c:	2100      	movs	r1, #0
  406d7e:	2e00      	cmp	r6, #0
  406d80:	d061      	beq.n	406e46 <__udivmoddi4+0x16a>
  406d82:	fa24 f40e 	lsr.w	r4, r4, lr
  406d86:	2300      	movs	r3, #0
  406d88:	6034      	str	r4, [r6, #0]
  406d8a:	6073      	str	r3, [r6, #4]
  406d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406d90:	428b      	cmp	r3, r1
  406d92:	d907      	bls.n	406da4 <__udivmoddi4+0xc8>
  406d94:	2e00      	cmp	r6, #0
  406d96:	d054      	beq.n	406e42 <__udivmoddi4+0x166>
  406d98:	2100      	movs	r1, #0
  406d9a:	e886 0021 	stmia.w	r6, {r0, r5}
  406d9e:	4608      	mov	r0, r1
  406da0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406da4:	fab3 f183 	clz	r1, r3
  406da8:	2900      	cmp	r1, #0
  406daa:	f040 808e 	bne.w	406eca <__udivmoddi4+0x1ee>
  406dae:	42ab      	cmp	r3, r5
  406db0:	d302      	bcc.n	406db8 <__udivmoddi4+0xdc>
  406db2:	4282      	cmp	r2, r0
  406db4:	f200 80fa 	bhi.w	406fac <__udivmoddi4+0x2d0>
  406db8:	1a84      	subs	r4, r0, r2
  406dba:	eb65 0503 	sbc.w	r5, r5, r3
  406dbe:	2001      	movs	r0, #1
  406dc0:	46ac      	mov	ip, r5
  406dc2:	2e00      	cmp	r6, #0
  406dc4:	d03f      	beq.n	406e46 <__udivmoddi4+0x16a>
  406dc6:	e886 1010 	stmia.w	r6, {r4, ip}
  406dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406dce:	b912      	cbnz	r2, 406dd6 <__udivmoddi4+0xfa>
  406dd0:	2701      	movs	r7, #1
  406dd2:	fbb7 f7f2 	udiv	r7, r7, r2
  406dd6:	fab7 fe87 	clz	lr, r7
  406dda:	f1be 0f00 	cmp.w	lr, #0
  406dde:	d134      	bne.n	406e4a <__udivmoddi4+0x16e>
  406de0:	1beb      	subs	r3, r5, r7
  406de2:	0c3a      	lsrs	r2, r7, #16
  406de4:	fa1f fc87 	uxth.w	ip, r7
  406de8:	2101      	movs	r1, #1
  406dea:	fbb3 f8f2 	udiv	r8, r3, r2
  406dee:	0c25      	lsrs	r5, r4, #16
  406df0:	fb02 3318 	mls	r3, r2, r8, r3
  406df4:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406df8:	fb0c f308 	mul.w	r3, ip, r8
  406dfc:	42ab      	cmp	r3, r5
  406dfe:	d907      	bls.n	406e10 <__udivmoddi4+0x134>
  406e00:	19ed      	adds	r5, r5, r7
  406e02:	f108 30ff 	add.w	r0, r8, #4294967295
  406e06:	d202      	bcs.n	406e0e <__udivmoddi4+0x132>
  406e08:	42ab      	cmp	r3, r5
  406e0a:	f200 80d1 	bhi.w	406fb0 <__udivmoddi4+0x2d4>
  406e0e:	4680      	mov	r8, r0
  406e10:	1aed      	subs	r5, r5, r3
  406e12:	b2a3      	uxth	r3, r4
  406e14:	fbb5 f0f2 	udiv	r0, r5, r2
  406e18:	fb02 5510 	mls	r5, r2, r0, r5
  406e1c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406e20:	fb0c fc00 	mul.w	ip, ip, r0
  406e24:	45a4      	cmp	ip, r4
  406e26:	d907      	bls.n	406e38 <__udivmoddi4+0x15c>
  406e28:	19e4      	adds	r4, r4, r7
  406e2a:	f100 33ff 	add.w	r3, r0, #4294967295
  406e2e:	d202      	bcs.n	406e36 <__udivmoddi4+0x15a>
  406e30:	45a4      	cmp	ip, r4
  406e32:	f200 80b8 	bhi.w	406fa6 <__udivmoddi4+0x2ca>
  406e36:	4618      	mov	r0, r3
  406e38:	eba4 040c 	sub.w	r4, r4, ip
  406e3c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406e40:	e79d      	b.n	406d7e <__udivmoddi4+0xa2>
  406e42:	4631      	mov	r1, r6
  406e44:	4630      	mov	r0, r6
  406e46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406e4a:	f1ce 0420 	rsb	r4, lr, #32
  406e4e:	fa05 f30e 	lsl.w	r3, r5, lr
  406e52:	fa07 f70e 	lsl.w	r7, r7, lr
  406e56:	fa20 f804 	lsr.w	r8, r0, r4
  406e5a:	0c3a      	lsrs	r2, r7, #16
  406e5c:	fa25 f404 	lsr.w	r4, r5, r4
  406e60:	ea48 0803 	orr.w	r8, r8, r3
  406e64:	fbb4 f1f2 	udiv	r1, r4, r2
  406e68:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406e6c:	fb02 4411 	mls	r4, r2, r1, r4
  406e70:	fa1f fc87 	uxth.w	ip, r7
  406e74:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406e78:	fb01 f30c 	mul.w	r3, r1, ip
  406e7c:	42ab      	cmp	r3, r5
  406e7e:	fa00 f40e 	lsl.w	r4, r0, lr
  406e82:	d909      	bls.n	406e98 <__udivmoddi4+0x1bc>
  406e84:	19ed      	adds	r5, r5, r7
  406e86:	f101 30ff 	add.w	r0, r1, #4294967295
  406e8a:	f080 808a 	bcs.w	406fa2 <__udivmoddi4+0x2c6>
  406e8e:	42ab      	cmp	r3, r5
  406e90:	f240 8087 	bls.w	406fa2 <__udivmoddi4+0x2c6>
  406e94:	3902      	subs	r1, #2
  406e96:	443d      	add	r5, r7
  406e98:	1aeb      	subs	r3, r5, r3
  406e9a:	fa1f f588 	uxth.w	r5, r8
  406e9e:	fbb3 f0f2 	udiv	r0, r3, r2
  406ea2:	fb02 3310 	mls	r3, r2, r0, r3
  406ea6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406eaa:	fb00 f30c 	mul.w	r3, r0, ip
  406eae:	42ab      	cmp	r3, r5
  406eb0:	d907      	bls.n	406ec2 <__udivmoddi4+0x1e6>
  406eb2:	19ed      	adds	r5, r5, r7
  406eb4:	f100 38ff 	add.w	r8, r0, #4294967295
  406eb8:	d26f      	bcs.n	406f9a <__udivmoddi4+0x2be>
  406eba:	42ab      	cmp	r3, r5
  406ebc:	d96d      	bls.n	406f9a <__udivmoddi4+0x2be>
  406ebe:	3802      	subs	r0, #2
  406ec0:	443d      	add	r5, r7
  406ec2:	1aeb      	subs	r3, r5, r3
  406ec4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406ec8:	e78f      	b.n	406dea <__udivmoddi4+0x10e>
  406eca:	f1c1 0720 	rsb	r7, r1, #32
  406ece:	fa22 f807 	lsr.w	r8, r2, r7
  406ed2:	408b      	lsls	r3, r1
  406ed4:	fa05 f401 	lsl.w	r4, r5, r1
  406ed8:	ea48 0303 	orr.w	r3, r8, r3
  406edc:	fa20 fe07 	lsr.w	lr, r0, r7
  406ee0:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406ee4:	40fd      	lsrs	r5, r7
  406ee6:	ea4e 0e04 	orr.w	lr, lr, r4
  406eea:	fbb5 f9fc 	udiv	r9, r5, ip
  406eee:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406ef2:	fb0c 5519 	mls	r5, ip, r9, r5
  406ef6:	fa1f f883 	uxth.w	r8, r3
  406efa:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406efe:	fb09 f408 	mul.w	r4, r9, r8
  406f02:	42ac      	cmp	r4, r5
  406f04:	fa02 f201 	lsl.w	r2, r2, r1
  406f08:	fa00 fa01 	lsl.w	sl, r0, r1
  406f0c:	d908      	bls.n	406f20 <__udivmoddi4+0x244>
  406f0e:	18ed      	adds	r5, r5, r3
  406f10:	f109 30ff 	add.w	r0, r9, #4294967295
  406f14:	d243      	bcs.n	406f9e <__udivmoddi4+0x2c2>
  406f16:	42ac      	cmp	r4, r5
  406f18:	d941      	bls.n	406f9e <__udivmoddi4+0x2c2>
  406f1a:	f1a9 0902 	sub.w	r9, r9, #2
  406f1e:	441d      	add	r5, r3
  406f20:	1b2d      	subs	r5, r5, r4
  406f22:	fa1f fe8e 	uxth.w	lr, lr
  406f26:	fbb5 f0fc 	udiv	r0, r5, ip
  406f2a:	fb0c 5510 	mls	r5, ip, r0, r5
  406f2e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406f32:	fb00 f808 	mul.w	r8, r0, r8
  406f36:	45a0      	cmp	r8, r4
  406f38:	d907      	bls.n	406f4a <__udivmoddi4+0x26e>
  406f3a:	18e4      	adds	r4, r4, r3
  406f3c:	f100 35ff 	add.w	r5, r0, #4294967295
  406f40:	d229      	bcs.n	406f96 <__udivmoddi4+0x2ba>
  406f42:	45a0      	cmp	r8, r4
  406f44:	d927      	bls.n	406f96 <__udivmoddi4+0x2ba>
  406f46:	3802      	subs	r0, #2
  406f48:	441c      	add	r4, r3
  406f4a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406f4e:	eba4 0408 	sub.w	r4, r4, r8
  406f52:	fba0 8902 	umull	r8, r9, r0, r2
  406f56:	454c      	cmp	r4, r9
  406f58:	46c6      	mov	lr, r8
  406f5a:	464d      	mov	r5, r9
  406f5c:	d315      	bcc.n	406f8a <__udivmoddi4+0x2ae>
  406f5e:	d012      	beq.n	406f86 <__udivmoddi4+0x2aa>
  406f60:	b156      	cbz	r6, 406f78 <__udivmoddi4+0x29c>
  406f62:	ebba 030e 	subs.w	r3, sl, lr
  406f66:	eb64 0405 	sbc.w	r4, r4, r5
  406f6a:	fa04 f707 	lsl.w	r7, r4, r7
  406f6e:	40cb      	lsrs	r3, r1
  406f70:	431f      	orrs	r7, r3
  406f72:	40cc      	lsrs	r4, r1
  406f74:	6037      	str	r7, [r6, #0]
  406f76:	6074      	str	r4, [r6, #4]
  406f78:	2100      	movs	r1, #0
  406f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406f7e:	4618      	mov	r0, r3
  406f80:	e6f8      	b.n	406d74 <__udivmoddi4+0x98>
  406f82:	4690      	mov	r8, r2
  406f84:	e6e0      	b.n	406d48 <__udivmoddi4+0x6c>
  406f86:	45c2      	cmp	sl, r8
  406f88:	d2ea      	bcs.n	406f60 <__udivmoddi4+0x284>
  406f8a:	ebb8 0e02 	subs.w	lr, r8, r2
  406f8e:	eb69 0503 	sbc.w	r5, r9, r3
  406f92:	3801      	subs	r0, #1
  406f94:	e7e4      	b.n	406f60 <__udivmoddi4+0x284>
  406f96:	4628      	mov	r0, r5
  406f98:	e7d7      	b.n	406f4a <__udivmoddi4+0x26e>
  406f9a:	4640      	mov	r0, r8
  406f9c:	e791      	b.n	406ec2 <__udivmoddi4+0x1e6>
  406f9e:	4681      	mov	r9, r0
  406fa0:	e7be      	b.n	406f20 <__udivmoddi4+0x244>
  406fa2:	4601      	mov	r1, r0
  406fa4:	e778      	b.n	406e98 <__udivmoddi4+0x1bc>
  406fa6:	3802      	subs	r0, #2
  406fa8:	443c      	add	r4, r7
  406faa:	e745      	b.n	406e38 <__udivmoddi4+0x15c>
  406fac:	4608      	mov	r0, r1
  406fae:	e708      	b.n	406dc2 <__udivmoddi4+0xe6>
  406fb0:	f1a8 0802 	sub.w	r8, r8, #2
  406fb4:	443d      	add	r5, r7
  406fb6:	e72b      	b.n	406e10 <__udivmoddi4+0x134>

00406fb8 <__aeabi_idiv0>:
  406fb8:	4770      	bx	lr
  406fba:	bf00      	nop
  406fbc:	666e6f43 	.word	0x666e6f43
  406fc0:	72756769 	.word	0x72756769
  406fc4:	79732065 	.word	0x79732065
  406fc8:	6d657473 	.word	0x6d657473
  406fcc:	63697420 	.word	0x63697420
  406fd0:	6f74206b 	.word	0x6f74206b
  406fd4:	74656720 	.word	0x74656720
  406fd8:	736d3120 	.word	0x736d3120
  406fdc:	63697420 	.word	0x63697420
  406fe0:	6570206b 	.word	0x6570206b
  406fe4:	646f6972 	.word	0x646f6972
  406fe8:	00000d2e 	.word	0x00000d2e
  406fec:	3358414d 	.word	0x3358414d
  406ff0:	30303130 	.word	0x30303130
  406ff4:	74656420 	.word	0x74656420
  406ff8:	65746365 	.word	0x65746365
  406ffc:	00002164 	.word	0x00002164
  407000:	3358414d 	.word	0x3358414d
  407004:	30303130 	.word	0x30303130
  407008:	73657220 	.word	0x73657220
  40700c:	63207465 	.word	0x63207465
  407010:	6c706d6f 	.word	0x6c706d6f
  407014:	00657465 	.word	0x00657465
  407018:	324f7053 	.word	0x324f7053
  40701c:	6d617320 	.word	0x6d617320
  407020:	20656c70 	.word	0x20656c70
  407024:	65746172 	.word	0x65746172
  407028:	25203d20 	.word	0x25203d20
  40702c:	7a482064 	.word	0x7a482064
  407030:	0000000a 	.word	0x0000000a
  407034:	2044454c 	.word	0x2044454c
  407038:	736c7570 	.word	0x736c7570
  40703c:	69772065 	.word	0x69772065
  407040:	20687464 	.word	0x20687464
  407044:	6425203d 	.word	0x6425203d
  407048:	0a537520 	.word	0x0a537520
  40704c:	00000000 	.word	0x00000000
  407050:	20646552 	.word	0x20646552
  407054:	2044454c 	.word	0x2044454c
  407058:	72727563 	.word	0x72727563
  40705c:	20746e65 	.word	0x20746e65
  407060:	6625203d 	.word	0x6625203d
  407064:	0a416d20 	.word	0x0a416d20
  407068:	00000000 	.word	0x00000000
  40706c:	4c205249 	.word	0x4c205249
  407070:	63204445 	.word	0x63204445
  407074:	65727275 	.word	0x65727275
  407078:	3d20746e 	.word	0x3d20746e
  40707c:	20662520 	.word	0x20662520
  407080:	000a416d 	.word	0x000a416d
  407084:	20746f67 	.word	0x20746f67
  407088:	72206425 	.word	0x72206425
  40708c:	73646165 	.word	0x73646165
  407090:	0000000a 	.word	0x0000000a
  407094:	00206425 	.word	0x00206425
  407098:	092d452d 	.word	0x092d452d
  40709c:	20495754 	.word	0x20495754
  4070a0:	7473616d 	.word	0x7473616d
  4070a4:	69207265 	.word	0x69207265
  4070a8:	6974696e 	.word	0x6974696e
  4070ac:	7a696c61 	.word	0x7a696c61
  4070b0:	6f697461 	.word	0x6f697461
  4070b4:	6166206e 	.word	0x6166206e
  4070b8:	64656c69 	.word	0x64656c69
  4070bc:	00000d2e 	.word	0x00000d2e
  4070c0:	092d452d 	.word	0x092d452d
  4070c4:	64616552 	.word	0x64616552
  4070c8:	6f727720 	.word	0x6f727720
  4070cc:	7020676e 	.word	0x7020676e
  4070d0:	20747261 	.word	0x20747261
  4070d4:	66204449 	.word	0x66204449
  4070d8:	206d6f72 	.word	0x206d6f72
  4070dc:	3358414d 	.word	0x3358414d
  4070e0:	30303130 	.word	0x30303130
  4070e4:	00000d2e 	.word	0x00000d2e
  4070e8:	092d452d 	.word	0x092d452d
  4070ec:	20495754 	.word	0x20495754
  4070f0:	7473616d 	.word	0x7473616d
  4070f4:	72207265 	.word	0x72207265
  4070f8:	20646165 	.word	0x20646165
  4070fc:	6b636170 	.word	0x6b636170
  407100:	66207465 	.word	0x66207465
  407104:	656c6961 	.word	0x656c6961
  407108:	000d2e64 	.word	0x000d2e64
  40710c:	092d452d 	.word	0x092d452d
  407110:	20495754 	.word	0x20495754
  407114:	7473616d 	.word	0x7473616d
  407118:	77207265 	.word	0x77207265
  40711c:	65746972 	.word	0x65746972
  407120:	63617020 	.word	0x63617020
  407124:	2074656b 	.word	0x2074656b
  407128:	6c696166 	.word	0x6c696166
  40712c:	0d2e6465 	.word	0x0d2e6465
  407130:	00000000 	.word	0x00000000
  407134:	73206425 	.word	0x73206425
  407138:	6c706d61 	.word	0x6c706d61
  40713c:	61207365 	.word	0x61207365
  407140:	6c696176 	.word	0x6c696176
  407144:	00000000 	.word	0x00000000

00407148 <_global_impure_ptr>:
  407148:	20400010 00464e49 00666e69 004e414e     ..@ INF.inf.NAN.
  407158:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  407168:	46454443 00000000 33323130 37363534     CDEF....01234567
  407178:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  407188:	0000296c 00000030                       l)..0...

00407190 <blanks.7238>:
  407190:	20202020 20202020 20202020 20202020                     

004071a0 <zeroes.7239>:
  4071a0:	30303030 30303030 30303030 30303030     0000000000000000
  4071b0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

004071c0 <__mprec_bigtens>:
  4071c0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4071d0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4071e0:	7f73bf3c 75154fdd                       <.s..O.u

004071e8 <__mprec_tens>:
  4071e8:	00000000 3ff00000 00000000 40240000     .......?......$@
  4071f8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  407208:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  407218:	00000000 412e8480 00000000 416312d0     .......A......cA
  407228:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  407238:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  407248:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  407258:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  407268:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  407278:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  407288:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  407298:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4072a8:	79d99db4 44ea7843                       ...yCx.D

004072b0 <p05.6055>:
  4072b0:	00000005 00000019 0000007d 00000043     ........}...C...
  4072c0:	49534f50 00000058 0000002e              POSIX.......

004072cc <_ctype_>:
  4072cc:	20202000 20202020 28282020 20282828     .         ((((( 
  4072dc:	20202020 20202020 20202020 20202020                     
  4072ec:	10108820 10101010 10101010 10101010      ...............
  4072fc:	04040410 04040404 10040404 10101010     ................
  40730c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  40731c:	01010101 01010101 01010101 10101010     ................
  40732c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  40733c:	02020202 02020202 02020202 10101010     ................
  40734c:	00000020 00000000 00000000 00000000      ...............
	...

004073d0 <_init>:
  4073d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4073d2:	bf00      	nop
  4073d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4073d6:	bc08      	pop	{r3}
  4073d8:	469e      	mov	lr, r3
  4073da:	4770      	bx	lr

004073dc <__init_array_start>:
  4073dc:	004039c1 	.word	0x004039c1

004073e0 <__frame_dummy_init_array_entry>:
  4073e0:	0040018d                                ..@.

004073e4 <_fini>:
  4073e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4073e6:	bf00      	nop
  4073e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4073ea:	bc08      	pop	{r3}
  4073ec:	469e      	mov	lr, r3
  4073ee:	4770      	bx	lr

004073f0 <__fini_array_start>:
  4073f0:	00400169 	.word	0x00400169
