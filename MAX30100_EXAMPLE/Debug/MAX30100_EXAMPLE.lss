
MAX30100_EXAMPLE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000073b4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004073b4  004073b4  000173b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20400000  004073bc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000100  204009b8  00407d74  000209b8  2**2
                  ALLOC
  4 .stack        00002000  20400ab8  00407e74  000209b8  2**0
                  ALLOC
  5 .heap         00000200  20402ab8  00409e74  000209b8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  8 .debug_info   00015609  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002d1a  00000000  00000000  00036048  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000056cd  00000000  00000000  00038d62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000b58  00000000  00000000  0003e42f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000bb8  00000000  00000000  0003ef87  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000205b7  00000000  00000000  0003fb3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000b2a2  00000000  00000000  000600f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000949fa  00000000  00000000  0006b398  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002c80  00000000  00000000  000ffd94  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	b8 2a 40 20 81 0b 40 00 7f 0b 40 00 7f 0b 40 00     .*@ ..@...@...@.
  400010:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	7f 0b 40 00 7f 0b 40 00 00 00 00 00 7f 0b 40 00     ..@...@.......@.
  40003c:	f5 0f 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40004c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40005c:	7f 0b 40 00 7f 0b 40 00 00 00 00 00 7d 06 40 00     ..@...@.....}.@.
  40006c:	91 06 40 00 a5 06 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40007c:	7f 0b 40 00 b9 06 40 00 cd 06 40 00 7f 0b 40 00     ..@...@...@...@.
  40008c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40009c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000ac:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000bc:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000cc:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000dc:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000ec:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  4000fc:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40010c:	7f 0b 40 00 7f 0b 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ......@...@...@.
  40012c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40013c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40014c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00 7f 0b 40 00     ..@...@...@...@.
  40015c:	7f 0b 40 00 7f 0b 40 00 7f 0b 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009b8 	.word	0x204009b8
  400184:	00000000 	.word	0x00000000
  400188:	004073bc 	.word	0x004073bc

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	004073bc 	.word	0x004073bc
  4001c8:	204009bc 	.word	0x204009bc
  4001cc:	004073bc 	.word	0x004073bc
  4001d0:	00000000 	.word	0x00000000

004001d4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4001d4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX/2);
  4001d6:	4810      	ldr	r0, [pc, #64]	; (400218 <sysclk_init+0x44>)
  4001d8:	4b10      	ldr	r3, [pc, #64]	; (40021c <sysclk_init+0x48>)
  4001da:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4001dc:	213e      	movs	r1, #62	; 0x3e
  4001de:	2000      	movs	r0, #0
  4001e0:	4b0f      	ldr	r3, [pc, #60]	; (400220 <sysclk_init+0x4c>)
  4001e2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4001e4:	4c0f      	ldr	r4, [pc, #60]	; (400224 <sysclk_init+0x50>)
  4001e6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4001e8:	2800      	cmp	r0, #0
  4001ea:	d0fc      	beq.n	4001e6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4001ec:	4b0e      	ldr	r3, [pc, #56]	; (400228 <sysclk_init+0x54>)
  4001ee:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4001f0:	4a0e      	ldr	r2, [pc, #56]	; (40022c <sysclk_init+0x58>)
  4001f2:	4b0f      	ldr	r3, [pc, #60]	; (400230 <sysclk_init+0x5c>)
  4001f4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4001f6:	4c0f      	ldr	r4, [pc, #60]	; (400234 <sysclk_init+0x60>)
  4001f8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4001fa:	2800      	cmp	r0, #0
  4001fc:	d0fc      	beq.n	4001f8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4001fe:	2002      	movs	r0, #2
  400200:	4b0d      	ldr	r3, [pc, #52]	; (400238 <sysclk_init+0x64>)
  400202:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400204:	2000      	movs	r0, #0
  400206:	4b0d      	ldr	r3, [pc, #52]	; (40023c <sysclk_init+0x68>)
  400208:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40020a:	4b0d      	ldr	r3, [pc, #52]	; (400240 <sysclk_init+0x6c>)
  40020c:	4798      	blx	r3

	/* Set a flash wait state depending on the master clock frequency */
	system_init_flash(sysclk_get_cpu_hz() / CONFIG_SYSCLK_DIV);
  40020e:	4802      	ldr	r0, [pc, #8]	; (400218 <sysclk_init+0x44>)
  400210:	4b02      	ldr	r3, [pc, #8]	; (40021c <sysclk_init+0x48>)
  400212:	4798      	blx	r3
  400214:	bd10      	pop	{r4, pc}
  400216:	bf00      	nop
  400218:	08f0d180 	.word	0x08f0d180
  40021c:	00400d55 	.word	0x00400d55
  400220:	0040077d 	.word	0x0040077d
  400224:	004007d1 	.word	0x004007d1
  400228:	004007e1 	.word	0x004007e1
  40022c:	20183f01 	.word	0x20183f01
  400230:	400e0600 	.word	0x400e0600
  400234:	004007f1 	.word	0x004007f1
  400238:	004006e1 	.word	0x004006e1
  40023c:	00400719 	.word	0x00400719
  400240:	00400c49 	.word	0x00400c49

00400244 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400248:	b980      	cbnz	r0, 40026c <_read+0x28>
  40024a:	460c      	mov	r4, r1
  40024c:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40024e:	2a00      	cmp	r2, #0
  400250:	dd0f      	ble.n	400272 <_read+0x2e>
  400252:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400254:	4e08      	ldr	r6, [pc, #32]	; (400278 <_read+0x34>)
  400256:	4d09      	ldr	r5, [pc, #36]	; (40027c <_read+0x38>)
  400258:	6830      	ldr	r0, [r6, #0]
  40025a:	4621      	mov	r1, r4
  40025c:	682b      	ldr	r3, [r5, #0]
  40025e:	4798      	blx	r3
		ptr++;
  400260:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400262:	42bc      	cmp	r4, r7
  400264:	d1f8      	bne.n	400258 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400266:	4640      	mov	r0, r8
  400268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40026c:	f04f 38ff 	mov.w	r8, #4294967295
  400270:	e7f9      	b.n	400266 <_read+0x22>
	for (; len > 0; --len) {
  400272:	4680      	mov	r8, r0
  400274:	e7f7      	b.n	400266 <_read+0x22>
  400276:	bf00      	nop
  400278:	20400a8c 	.word	0x20400a8c
  40027c:	20400a84 	.word	0x20400a84

00400280 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400280:	3801      	subs	r0, #1
  400282:	2802      	cmp	r0, #2
  400284:	d815      	bhi.n	4002b2 <_write+0x32>
{
  400286:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40028a:	460e      	mov	r6, r1
  40028c:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  40028e:	b19a      	cbz	r2, 4002b8 <_write+0x38>
  400290:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400292:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4002cc <_write+0x4c>
  400296:	4f0c      	ldr	r7, [pc, #48]	; (4002c8 <_write+0x48>)
  400298:	f8d8 0000 	ldr.w	r0, [r8]
  40029c:	f815 1b01 	ldrb.w	r1, [r5], #1
  4002a0:	683b      	ldr	r3, [r7, #0]
  4002a2:	4798      	blx	r3
  4002a4:	2800      	cmp	r0, #0
  4002a6:	db0a      	blt.n	4002be <_write+0x3e>
  4002a8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4002aa:	3c01      	subs	r4, #1
  4002ac:	d1f4      	bne.n	400298 <_write+0x18>
  4002ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4002b2:	f04f 30ff 	mov.w	r0, #4294967295
  4002b6:	4770      	bx	lr
	for (; len != 0; --len) {
  4002b8:	4610      	mov	r0, r2
  4002ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4002be:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4002c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4002c6:	bf00      	nop
  4002c8:	20400a88 	.word	0x20400a88
  4002cc:	20400a8c 	.word	0x20400a8c

004002d0 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4002d2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4002d6:	4b6c      	ldr	r3, [pc, #432]	; (400488 <board_init+0x1b8>)
  4002d8:	605a      	str	r2, [r3, #4]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4002da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002de:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  4002e2:	4b6a      	ldr	r3, [pc, #424]	; (40048c <board_init+0x1bc>)
  4002e4:	2100      	movs	r1, #0
  4002e6:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  4002ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002ee:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  4002f2:	695a      	ldr	r2, [r3, #20]
  4002f4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4002f8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  4002fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002fe:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  400302:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400306:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  40030a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40030e:	f3c7 354e 	ubfx	r5, r7, #13, #15
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400312:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  400316:	016e      	lsls	r6, r5, #5
  400318:	ea4f 7c87 	mov.w	ip, r7, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40031c:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  400320:	461c      	mov	r4, r3
  400322:	ea06 000e 	and.w	r0, r6, lr
  400326:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400328:	463b      	mov	r3, r7
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40032a:	ea40 0102 	orr.w	r1, r0, r2
  40032e:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  400332:	3b01      	subs	r3, #1
  400334:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  400338:	f1b3 3fff 	cmp.w	r3, #4294967295
  40033c:	d1f5      	bne.n	40032a <board_init+0x5a>
    } while(sets-- != 0U);
  40033e:	3d01      	subs	r5, #1
  400340:	3e20      	subs	r6, #32
  400342:	f1b5 3fff 	cmp.w	r5, #4294967295
  400346:	d1ec      	bne.n	400322 <board_init+0x52>
  400348:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  40034c:	4b4f      	ldr	r3, [pc, #316]	; (40048c <board_init+0x1bc>)
  40034e:	695a      	ldr	r2, [r3, #20]
  400350:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400354:	615a      	str	r2, [r3, #20]
  400356:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40035a:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40035e:	4a4c      	ldr	r2, [pc, #304]	; (400490 <board_init+0x1c0>)
  400360:	494c      	ldr	r1, [pc, #304]	; (400494 <board_init+0x1c4>)
  400362:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400364:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400368:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
  40036a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40036e:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400372:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400376:	f022 0201 	bic.w	r2, r2, #1
  40037a:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40037e:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400382:	f022 0201 	bic.w	r2, r2, #1
  400386:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb 0xF":::"memory");
  40038a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40038e:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400392:	200a      	movs	r0, #10
  400394:	4c40      	ldr	r4, [pc, #256]	; (400498 <board_init+0x1c8>)
  400396:	47a0      	blx	r4
  400398:	200b      	movs	r0, #11
  40039a:	47a0      	blx	r4
  40039c:	200c      	movs	r0, #12
  40039e:	47a0      	blx	r4
  4003a0:	2010      	movs	r0, #16
  4003a2:	47a0      	blx	r4
  4003a4:	2011      	movs	r0, #17
  4003a6:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4003a8:	4b3c      	ldr	r3, [pc, #240]	; (40049c <board_init+0x1cc>)
  4003aa:	f44f 7280 	mov.w	r2, #256	; 0x100
  4003ae:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003b4:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4003b6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4003ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4003be:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003c0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4003c4:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4003c6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003ca:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  4003cc:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  4003ce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  4003d2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003d4:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003d8:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4003da:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003dc:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003e0:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4003e2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4003e6:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4003ea:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4003ee:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4003f2:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4003f4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003f8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4003fa:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4003fc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400400:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400402:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400406:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400408:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40040a:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  40040e:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400410:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400412:	4923      	ldr	r1, [pc, #140]	; (4004a0 <board_init+0x1d0>)
  400414:	f8d1 2114 	ldr.w	r2, [r1, #276]	; 0x114
  400418:	f042 0210 	orr.w	r2, r2, #16
  40041c:	f8c1 2114 	str.w	r2, [r1, #276]	; 0x114
		base->PIO_PUDR = mask;
  400420:	f501 21b2 	add.w	r1, r1, #364544	; 0x59000
  400424:	2210      	movs	r2, #16
  400426:	660a      	str	r2, [r1, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400428:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
		base->PIO_MDDR = mask;
  40042c:	654a      	str	r2, [r1, #84]	; 0x54
		base->PIO_IFDR = mask;
  40042e:	624a      	str	r2, [r1, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400430:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400434:	6f08      	ldr	r0, [r1, #112]	; 0x70
  400436:	4310      	orrs	r0, r2
  400438:	6708      	str	r0, [r1, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40043a:	6f48      	ldr	r0, [r1, #116]	; 0x74
  40043c:	4310      	orrs	r0, r2
  40043e:	6748      	str	r0, [r1, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400440:	604a      	str	r2, [r1, #4]
		base->PIO_PUDR = mask;
  400442:	2108      	movs	r1, #8
  400444:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400446:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40044a:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40044c:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40044e:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400452:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400454:	f020 0008 	bic.w	r0, r0, #8
  400458:	6718      	str	r0, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40045a:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40045c:	f020 0008 	bic.w	r0, r0, #8
  400460:	6758      	str	r0, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400462:	6059      	str	r1, [r3, #4]
		base->PIO_PUDR = mask;
  400464:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400466:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40046a:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40046c:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40046e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400472:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400474:	f021 0110 	bic.w	r1, r1, #16
  400478:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40047a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40047c:	f021 0110 	bic.w	r1, r1, #16
  400480:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400482:	605a      	str	r2, [r3, #4]
  400484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400486:	bf00      	nop
  400488:	400e1850 	.word	0x400e1850
  40048c:	e000ed00 	.word	0xe000ed00
  400490:	400e0c00 	.word	0x400e0c00
  400494:	5a00080c 	.word	0x5a00080c
  400498:	00400801 	.word	0x00400801
  40049c:	400e1200 	.word	0x400e1200
  4004a0:	40088000 	.word	0x40088000

004004a4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4004a4:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4004a6:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4004aa:	d03a      	beq.n	400522 <pio_set_peripheral+0x7e>
  4004ac:	d813      	bhi.n	4004d6 <pio_set_peripheral+0x32>
  4004ae:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4004b2:	d025      	beq.n	400500 <pio_set_peripheral+0x5c>
  4004b4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4004b8:	d10a      	bne.n	4004d0 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004ba:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004bc:	4313      	orrs	r3, r2
  4004be:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4004c0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4004c2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4004c4:	400b      	ands	r3, r1
  4004c6:	ea23 0302 	bic.w	r3, r3, r2
  4004ca:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4004cc:	6042      	str	r2, [r0, #4]
  4004ce:	4770      	bx	lr
	switch (ul_type) {
  4004d0:	2900      	cmp	r1, #0
  4004d2:	d1fb      	bne.n	4004cc <pio_set_peripheral+0x28>
  4004d4:	4770      	bx	lr
  4004d6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4004da:	d021      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004dc:	d809      	bhi.n	4004f2 <pio_set_peripheral+0x4e>
  4004de:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4004e2:	d1f3      	bne.n	4004cc <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004e6:	4313      	orrs	r3, r2
  4004e8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4004ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4004ec:	4313      	orrs	r3, r2
  4004ee:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4004f0:	e7ec      	b.n	4004cc <pio_set_peripheral+0x28>
	switch (ul_type) {
  4004f2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4004f6:	d013      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004f8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4004fc:	d010      	beq.n	400520 <pio_set_peripheral+0x7c>
  4004fe:	e7e5      	b.n	4004cc <pio_set_peripheral+0x28>
{
  400500:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400502:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400504:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400506:	43d3      	mvns	r3, r2
  400508:	4021      	ands	r1, r4
  40050a:	461c      	mov	r4, r3
  40050c:	4019      	ands	r1, r3
  40050e:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400510:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400512:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400514:	400b      	ands	r3, r1
  400516:	4023      	ands	r3, r4
  400518:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40051a:	6042      	str	r2, [r0, #4]
}
  40051c:	f85d 4b04 	ldr.w	r4, [sp], #4
  400520:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400522:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400524:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400526:	400b      	ands	r3, r1
  400528:	ea23 0302 	bic.w	r3, r3, r2
  40052c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40052e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400530:	4313      	orrs	r3, r2
  400532:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400534:	e7ca      	b.n	4004cc <pio_set_peripheral+0x28>

00400536 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400536:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400538:	f012 0f01 	tst.w	r2, #1
  40053c:	d10d      	bne.n	40055a <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  40053e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400540:	f012 0f0a 	tst.w	r2, #10
  400544:	d00b      	beq.n	40055e <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400546:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400548:	f012 0f02 	tst.w	r2, #2
  40054c:	d109      	bne.n	400562 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  40054e:	f012 0f08 	tst.w	r2, #8
  400552:	d008      	beq.n	400566 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400554:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400558:	e005      	b.n	400566 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  40055a:	6641      	str	r1, [r0, #100]	; 0x64
  40055c:	e7f0      	b.n	400540 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  40055e:	6241      	str	r1, [r0, #36]	; 0x24
  400560:	e7f2      	b.n	400548 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400562:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400566:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400568:	6001      	str	r1, [r0, #0]
  40056a:	4770      	bx	lr

0040056c <pio_set_output>:
{
  40056c:	b410      	push	{r4}
  40056e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400570:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400572:	b94c      	cbnz	r4, 400588 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400574:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400576:	b14b      	cbz	r3, 40058c <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400578:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40057a:	b94a      	cbnz	r2, 400590 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  40057c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40057e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400580:	6001      	str	r1, [r0, #0]
}
  400582:	f85d 4b04 	ldr.w	r4, [sp], #4
  400586:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400588:	6641      	str	r1, [r0, #100]	; 0x64
  40058a:	e7f4      	b.n	400576 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40058c:	6541      	str	r1, [r0, #84]	; 0x54
  40058e:	e7f4      	b.n	40057a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400590:	6301      	str	r1, [r0, #48]	; 0x30
  400592:	e7f4      	b.n	40057e <pio_set_output+0x12>

00400594 <pio_configure>:
{
  400594:	b570      	push	{r4, r5, r6, lr}
  400596:	b082      	sub	sp, #8
  400598:	4605      	mov	r5, r0
  40059a:	4616      	mov	r6, r2
  40059c:	461c      	mov	r4, r3
	switch (ul_type) {
  40059e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4005a2:	d014      	beq.n	4005ce <pio_configure+0x3a>
  4005a4:	d90a      	bls.n	4005bc <pio_configure+0x28>
  4005a6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4005aa:	d024      	beq.n	4005f6 <pio_configure+0x62>
  4005ac:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4005b0:	d021      	beq.n	4005f6 <pio_configure+0x62>
  4005b2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4005b6:	d017      	beq.n	4005e8 <pio_configure+0x54>
		return 0;
  4005b8:	2000      	movs	r0, #0
  4005ba:	e01a      	b.n	4005f2 <pio_configure+0x5e>
	switch (ul_type) {
  4005bc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4005c0:	d005      	beq.n	4005ce <pio_configure+0x3a>
  4005c2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4005c6:	d002      	beq.n	4005ce <pio_configure+0x3a>
  4005c8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4005cc:	d1f4      	bne.n	4005b8 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  4005ce:	4632      	mov	r2, r6
  4005d0:	4628      	mov	r0, r5
  4005d2:	4b11      	ldr	r3, [pc, #68]	; (400618 <pio_configure+0x84>)
  4005d4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4005d6:	f014 0f01 	tst.w	r4, #1
  4005da:	d102      	bne.n	4005e2 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  4005dc:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  4005de:	2001      	movs	r0, #1
  4005e0:	e007      	b.n	4005f2 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  4005e2:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  4005e4:	2001      	movs	r0, #1
  4005e6:	e004      	b.n	4005f2 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  4005e8:	461a      	mov	r2, r3
  4005ea:	4631      	mov	r1, r6
  4005ec:	4b0b      	ldr	r3, [pc, #44]	; (40061c <pio_configure+0x88>)
  4005ee:	4798      	blx	r3
	return 1;
  4005f0:	2001      	movs	r0, #1
}
  4005f2:	b002      	add	sp, #8
  4005f4:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  4005f6:	f004 0301 	and.w	r3, r4, #1
  4005fa:	9300      	str	r3, [sp, #0]
  4005fc:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400600:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400604:	bf14      	ite	ne
  400606:	2200      	movne	r2, #0
  400608:	2201      	moveq	r2, #1
  40060a:	4631      	mov	r1, r6
  40060c:	4628      	mov	r0, r5
  40060e:	4c04      	ldr	r4, [pc, #16]	; (400620 <pio_configure+0x8c>)
  400610:	47a0      	blx	r4
	return 1;
  400612:	2001      	movs	r0, #1
		break;
  400614:	e7ed      	b.n	4005f2 <pio_configure+0x5e>
  400616:	bf00      	nop
  400618:	004004a5 	.word	0x004004a5
  40061c:	00400537 	.word	0x00400537
  400620:	0040056d 	.word	0x0040056d

00400624 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400624:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400626:	4770      	bx	lr

00400628 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400628:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40062a:	4770      	bx	lr

0040062c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40062c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400630:	4604      	mov	r4, r0
  400632:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400634:	4b0e      	ldr	r3, [pc, #56]	; (400670 <pio_handler_process+0x44>)
  400636:	4798      	blx	r3
  400638:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40063a:	4620      	mov	r0, r4
  40063c:	4b0d      	ldr	r3, [pc, #52]	; (400674 <pio_handler_process+0x48>)
  40063e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400640:	4005      	ands	r5, r0
  400642:	d013      	beq.n	40066c <pio_handler_process+0x40>
  400644:	4c0c      	ldr	r4, [pc, #48]	; (400678 <pio_handler_process+0x4c>)
  400646:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40064a:	e003      	b.n	400654 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40064c:	42b4      	cmp	r4, r6
  40064e:	d00d      	beq.n	40066c <pio_handler_process+0x40>
  400650:	3410      	adds	r4, #16
		while (status != 0) {
  400652:	b15d      	cbz	r5, 40066c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400654:	6820      	ldr	r0, [r4, #0]
  400656:	4540      	cmp	r0, r8
  400658:	d1f8      	bne.n	40064c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40065a:	6861      	ldr	r1, [r4, #4]
  40065c:	4229      	tst	r1, r5
  40065e:	d0f5      	beq.n	40064c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400660:	68e3      	ldr	r3, [r4, #12]
  400662:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400664:	6863      	ldr	r3, [r4, #4]
  400666:	ea25 0503 	bic.w	r5, r5, r3
  40066a:	e7ef      	b.n	40064c <pio_handler_process+0x20>
  40066c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400670:	00400625 	.word	0x00400625
  400674:	00400629 	.word	0x00400629
  400678:	204009d4 	.word	0x204009d4

0040067c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  40067c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  40067e:	210a      	movs	r1, #10
  400680:	4801      	ldr	r0, [pc, #4]	; (400688 <PIOA_Handler+0xc>)
  400682:	4b02      	ldr	r3, [pc, #8]	; (40068c <PIOA_Handler+0x10>)
  400684:	4798      	blx	r3
  400686:	bd08      	pop	{r3, pc}
  400688:	400e0e00 	.word	0x400e0e00
  40068c:	0040062d 	.word	0x0040062d

00400690 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400690:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400692:	210b      	movs	r1, #11
  400694:	4801      	ldr	r0, [pc, #4]	; (40069c <PIOB_Handler+0xc>)
  400696:	4b02      	ldr	r3, [pc, #8]	; (4006a0 <PIOB_Handler+0x10>)
  400698:	4798      	blx	r3
  40069a:	bd08      	pop	{r3, pc}
  40069c:	400e1000 	.word	0x400e1000
  4006a0:	0040062d 	.word	0x0040062d

004006a4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4006a4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  4006a6:	210c      	movs	r1, #12
  4006a8:	4801      	ldr	r0, [pc, #4]	; (4006b0 <PIOC_Handler+0xc>)
  4006aa:	4b02      	ldr	r3, [pc, #8]	; (4006b4 <PIOC_Handler+0x10>)
  4006ac:	4798      	blx	r3
  4006ae:	bd08      	pop	{r3, pc}
  4006b0:	400e1200 	.word	0x400e1200
  4006b4:	0040062d 	.word	0x0040062d

004006b8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  4006b8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  4006ba:	2110      	movs	r1, #16
  4006bc:	4801      	ldr	r0, [pc, #4]	; (4006c4 <PIOD_Handler+0xc>)
  4006be:	4b02      	ldr	r3, [pc, #8]	; (4006c8 <PIOD_Handler+0x10>)
  4006c0:	4798      	blx	r3
  4006c2:	bd08      	pop	{r3, pc}
  4006c4:	400e1400 	.word	0x400e1400
  4006c8:	0040062d 	.word	0x0040062d

004006cc <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  4006cc:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  4006ce:	2111      	movs	r1, #17
  4006d0:	4801      	ldr	r0, [pc, #4]	; (4006d8 <PIOE_Handler+0xc>)
  4006d2:	4b02      	ldr	r3, [pc, #8]	; (4006dc <PIOE_Handler+0x10>)
  4006d4:	4798      	blx	r3
  4006d6:	bd08      	pop	{r3, pc}
  4006d8:	400e1600 	.word	0x400e1600
  4006dc:	0040062d 	.word	0x0040062d

004006e0 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  4006e0:	2803      	cmp	r0, #3
  4006e2:	d011      	beq.n	400708 <pmc_mck_set_division+0x28>
  4006e4:	2804      	cmp	r0, #4
  4006e6:	d012      	beq.n	40070e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  4006e8:	2802      	cmp	r0, #2
  4006ea:	bf0c      	ite	eq
  4006ec:	f44f 7180 	moveq.w	r1, #256	; 0x100
  4006f0:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4006f2:	4a08      	ldr	r2, [pc, #32]	; (400714 <pmc_mck_set_division+0x34>)
  4006f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4006f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4006fa:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  4006fc:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4006fe:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400700:	f013 0f08 	tst.w	r3, #8
  400704:	d0fb      	beq.n	4006fe <pmc_mck_set_division+0x1e>
}
  400706:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400708:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  40070c:	e7f1      	b.n	4006f2 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40070e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400712:	e7ee      	b.n	4006f2 <pmc_mck_set_division+0x12>
  400714:	400e0600 	.word	0x400e0600

00400718 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400718:	4a17      	ldr	r2, [pc, #92]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  40071a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40071c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400720:	4318      	orrs	r0, r3
  400722:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400724:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400726:	f013 0f08 	tst.w	r3, #8
  40072a:	d10a      	bne.n	400742 <pmc_switch_mck_to_pllack+0x2a>
  40072c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400730:	4911      	ldr	r1, [pc, #68]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  400732:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400734:	f012 0f08 	tst.w	r2, #8
  400738:	d103      	bne.n	400742 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40073a:	3b01      	subs	r3, #1
  40073c:	d1f9      	bne.n	400732 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40073e:	2001      	movs	r0, #1
  400740:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400742:	4a0d      	ldr	r2, [pc, #52]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  400744:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400746:	f023 0303 	bic.w	r3, r3, #3
  40074a:	f043 0302 	orr.w	r3, r3, #2
  40074e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400750:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400752:	f013 0f08 	tst.w	r3, #8
  400756:	d10a      	bne.n	40076e <pmc_switch_mck_to_pllack+0x56>
  400758:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40075c:	4906      	ldr	r1, [pc, #24]	; (400778 <pmc_switch_mck_to_pllack+0x60>)
  40075e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400760:	f012 0f08 	tst.w	r2, #8
  400764:	d105      	bne.n	400772 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400766:	3b01      	subs	r3, #1
  400768:	d1f9      	bne.n	40075e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40076a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40076c:	4770      	bx	lr
	return 0;
  40076e:	2000      	movs	r0, #0
  400770:	4770      	bx	lr
  400772:	2000      	movs	r0, #0
  400774:	4770      	bx	lr
  400776:	bf00      	nop
  400778:	400e0600 	.word	0x400e0600

0040077c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40077c:	b9a0      	cbnz	r0, 4007a8 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40077e:	480e      	ldr	r0, [pc, #56]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  400780:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400782:	0209      	lsls	r1, r1, #8
  400784:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400786:	4a0d      	ldr	r2, [pc, #52]	; (4007bc <pmc_switch_mainck_to_xtal+0x40>)
  400788:	401a      	ands	r2, r3
  40078a:	4b0d      	ldr	r3, [pc, #52]	; (4007c0 <pmc_switch_mainck_to_xtal+0x44>)
  40078c:	4313      	orrs	r3, r2
  40078e:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400790:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400792:	4602      	mov	r2, r0
  400794:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400796:	f013 0f01 	tst.w	r3, #1
  40079a:	d0fb      	beq.n	400794 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40079c:	4a06      	ldr	r2, [pc, #24]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  40079e:	6a11      	ldr	r1, [r2, #32]
  4007a0:	4b08      	ldr	r3, [pc, #32]	; (4007c4 <pmc_switch_mainck_to_xtal+0x48>)
  4007a2:	430b      	orrs	r3, r1
  4007a4:	6213      	str	r3, [r2, #32]
  4007a6:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007a8:	4903      	ldr	r1, [pc, #12]	; (4007b8 <pmc_switch_mainck_to_xtal+0x3c>)
  4007aa:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4007ac:	4a06      	ldr	r2, [pc, #24]	; (4007c8 <pmc_switch_mainck_to_xtal+0x4c>)
  4007ae:	401a      	ands	r2, r3
  4007b0:	4b06      	ldr	r3, [pc, #24]	; (4007cc <pmc_switch_mainck_to_xtal+0x50>)
  4007b2:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007b4:	620b      	str	r3, [r1, #32]
  4007b6:	4770      	bx	lr
  4007b8:	400e0600 	.word	0x400e0600
  4007bc:	ffc8fffc 	.word	0xffc8fffc
  4007c0:	00370001 	.word	0x00370001
  4007c4:	01370000 	.word	0x01370000
  4007c8:	fec8fffc 	.word	0xfec8fffc
  4007cc:	01370002 	.word	0x01370002

004007d0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4007d0:	4b02      	ldr	r3, [pc, #8]	; (4007dc <pmc_osc_is_ready_mainck+0xc>)
  4007d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4007d4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4007d8:	4770      	bx	lr
  4007da:	bf00      	nop
  4007dc:	400e0600 	.word	0x400e0600

004007e0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4007e0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4007e4:	4b01      	ldr	r3, [pc, #4]	; (4007ec <pmc_disable_pllack+0xc>)
  4007e6:	629a      	str	r2, [r3, #40]	; 0x28
  4007e8:	4770      	bx	lr
  4007ea:	bf00      	nop
  4007ec:	400e0600 	.word	0x400e0600

004007f0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4007f0:	4b02      	ldr	r3, [pc, #8]	; (4007fc <pmc_is_locked_pllack+0xc>)
  4007f2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4007f4:	f000 0002 	and.w	r0, r0, #2
  4007f8:	4770      	bx	lr
  4007fa:	bf00      	nop
  4007fc:	400e0600 	.word	0x400e0600

00400800 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400800:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400804:	4b05      	ldr	r3, [pc, #20]	; (40081c <pmc_enable_periph_clk+0x1c>)
  400806:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  40080a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  40080e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  400812:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400816:	2000      	movs	r0, #0
  400818:	4770      	bx	lr
  40081a:	bf00      	nop
  40081c:	400e0600 	.word	0x400e0600

00400820 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400820:	4b28      	ldr	r3, [pc, #160]	; (4008c4 <twihs_set_speed+0xa4>)
  400822:	4299      	cmp	r1, r3
  400824:	d84b      	bhi.n	4008be <twihs_set_speed+0x9e>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400826:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  40082a:	4299      	cmp	r1, r3
  40082c:	d92d      	bls.n	40088a <twihs_set_speed+0x6a>
{
  40082e:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  400830:	4c25      	ldr	r4, [pc, #148]	; (4008c8 <twihs_set_speed+0xa8>)
  400832:	fba4 3402 	umull	r3, r4, r4, r2
  400836:	0ba4      	lsrs	r4, r4, #14
  400838:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40083a:	4b24      	ldr	r3, [pc, #144]	; (4008cc <twihs_set_speed+0xac>)
  40083c:	440b      	add	r3, r1
  40083e:	009b      	lsls	r3, r3, #2
  400840:	fbb2 f2f3 	udiv	r2, r2, r3
  400844:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400846:	2cff      	cmp	r4, #255	; 0xff
  400848:	d91d      	bls.n	400886 <twihs_set_speed+0x66>
  40084a:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  40084c:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  40084e:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400850:	2cff      	cmp	r4, #255	; 0xff
  400852:	d901      	bls.n	400858 <twihs_set_speed+0x38>
  400854:	2906      	cmp	r1, #6
  400856:	d9f9      	bls.n	40084c <twihs_set_speed+0x2c>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400858:	2aff      	cmp	r2, #255	; 0xff
  40085a:	d907      	bls.n	40086c <twihs_set_speed+0x4c>
  40085c:	2906      	cmp	r1, #6
  40085e:	d805      	bhi.n	40086c <twihs_set_speed+0x4c>
			/* Increase clock divider */
			ckdiv++;
  400860:	3101      	adds	r1, #1
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  400862:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400864:	2aff      	cmp	r2, #255	; 0xff
  400866:	d901      	bls.n	40086c <twihs_set_speed+0x4c>
  400868:	2906      	cmp	r1, #6
  40086a:	d9f9      	bls.n	400860 <twihs_set_speed+0x40>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  40086c:	0213      	lsls	r3, r2, #8
  40086e:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  400870:	0409      	lsls	r1, r1, #16
  400872:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  400876:	430b      	orrs	r3, r1
  400878:	b2e4      	uxtb	r4, r4
  40087a:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  40087c:	6103      	str	r3, [r0, #16]
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  40087e:	2000      	movs	r0, #0
}
  400880:	f85d 4b04 	ldr.w	r4, [sp], #4
  400884:	4770      	bx	lr
	uint32_t ckdiv = 0;
  400886:	2100      	movs	r1, #0
  400888:	e7e6      	b.n	400858 <twihs_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40088a:	0049      	lsls	r1, r1, #1
  40088c:	fbb2 f2f1 	udiv	r2, r2, r1
  400890:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  400892:	2aff      	cmp	r2, #255	; 0xff
  400894:	d911      	bls.n	4008ba <twihs_set_speed+0x9a>
  400896:	2300      	movs	r3, #0
			ckdiv++;
  400898:	3301      	adds	r3, #1
			c_lh_div /= TWIHS_CLK_DIVIDER;
  40089a:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40089c:	2aff      	cmp	r2, #255	; 0xff
  40089e:	d901      	bls.n	4008a4 <twihs_set_speed+0x84>
  4008a0:	2b06      	cmp	r3, #6
  4008a2:	d9f9      	bls.n	400898 <twihs_set_speed+0x78>
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4008a4:	0211      	lsls	r1, r2, #8
  4008a6:	b289      	uxth	r1, r1
				TWIHS_CWGR_CKDIV(ckdiv);
  4008a8:	041b      	lsls	r3, r3, #16
  4008aa:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4008ae:	430b      	orrs	r3, r1
  4008b0:	b2d2      	uxtb	r2, r2
  4008b2:	431a      	orrs	r2, r3
		p_twihs->TWIHS_CWGR =
  4008b4:	6102      	str	r2, [r0, #16]
	return PASS;
  4008b6:	2000      	movs	r0, #0
  4008b8:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4008ba:	2300      	movs	r3, #0
  4008bc:	e7f2      	b.n	4008a4 <twihs_set_speed+0x84>
		return FAIL;
  4008be:	2001      	movs	r0, #1
  4008c0:	4770      	bx	lr
  4008c2:	bf00      	nop
  4008c4:	00061a80 	.word	0x00061a80
  4008c8:	057619f1 	.word	0x057619f1
  4008cc:	3ffd1200 	.word	0x3ffd1200

004008d0 <twihs_master_init>:
{
  4008d0:	b508      	push	{r3, lr}
	p_twihs->TWIHS_IDR = ~0UL;
  4008d2:	f04f 32ff 	mov.w	r2, #4294967295
  4008d6:	6282      	str	r2, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  4008d8:	6a02      	ldr	r2, [r0, #32]
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4008da:	2280      	movs	r2, #128	; 0x80
  4008dc:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_RHR;
  4008de:	6b02      	ldr	r2, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4008e0:	2208      	movs	r2, #8
  4008e2:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4008e4:	2220      	movs	r2, #32
  4008e6:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4008e8:	2204      	movs	r2, #4
  4008ea:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4008ec:	680a      	ldr	r2, [r1, #0]
  4008ee:	6849      	ldr	r1, [r1, #4]
  4008f0:	4b03      	ldr	r3, [pc, #12]	; (400900 <twihs_master_init+0x30>)
  4008f2:	4798      	blx	r3
}
  4008f4:	2801      	cmp	r0, #1
  4008f6:	bf14      	ite	ne
  4008f8:	2000      	movne	r0, #0
  4008fa:	2001      	moveq	r0, #1
  4008fc:	bd08      	pop	{r3, pc}
  4008fe:	bf00      	nop
  400900:	00400821 	.word	0x00400821

00400904 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  400904:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  400906:	2b00      	cmp	r3, #0
  400908:	d04b      	beq.n	4009a2 <twihs_master_read+0x9e>
{
  40090a:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  40090c:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  40090e:	2600      	movs	r6, #0
  400910:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  400912:	684a      	ldr	r2, [r1, #4]
  400914:	0212      	lsls	r2, r2, #8
  400916:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  40091a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  40091e:	7c0d      	ldrb	r5, [r1, #16]
  400920:	042d      	lsls	r5, r5, #16
  400922:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  400926:	432a      	orrs	r2, r5
  400928:	6042      	str	r2, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  40092a:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40092c:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  40092e:	b15d      	cbz	r5, 400948 <twihs_master_read+0x44>
	val = addr[0];
  400930:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  400932:	2d01      	cmp	r5, #1
  400934:	dd02      	ble.n	40093c <twihs_master_read+0x38>
		val |= addr[1];
  400936:	784e      	ldrb	r6, [r1, #1]
  400938:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  40093c:	2d02      	cmp	r5, #2
  40093e:	dd04      	ble.n	40094a <twihs_master_read+0x46>
		val |= addr[2];
  400940:	7889      	ldrb	r1, [r1, #2]
  400942:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  400946:	e000      	b.n	40094a <twihs_master_read+0x46>
		return 0;
  400948:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40094a:	60c2      	str	r2, [r0, #12]
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  40094c:	2201      	movs	r2, #1
  40094e:	6002      	str	r2, [r0, #0]
  400950:	e006      	b.n	400960 <twihs_master_read+0x5c>
		if (cnt == 1) {
  400952:	2b01      	cmp	r3, #1
  400954:	d019      	beq.n	40098a <twihs_master_read+0x86>
		*buffer++ = p_twihs->TWIHS_RHR;
  400956:	6b02      	ldr	r2, [r0, #48]	; 0x30
  400958:	f804 2b01 	strb.w	r2, [r4], #1
	while (cnt > 0) {
  40095c:	3b01      	subs	r3, #1
  40095e:	d018      	beq.n	400992 <twihs_master_read+0x8e>
		status = p_twihs->TWIHS_SR;
  400960:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400962:	f412 7f80 	tst.w	r2, #256	; 0x100
  400966:	d122      	bne.n	4009ae <twihs_master_read+0xaa>
		if (!(status & TWIHS_SR_RXRDY)) {
  400968:	f012 0f02 	tst.w	r2, #2
  40096c:	d1f1      	bne.n	400952 <twihs_master_read+0x4e>
  40096e:	f247 5230 	movw	r2, #30000	; 0x7530
		status = p_twihs->TWIHS_SR;
  400972:	6a01      	ldr	r1, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  400974:	f411 7f80 	tst.w	r1, #256	; 0x100
  400978:	d115      	bne.n	4009a6 <twihs_master_read+0xa2>
		if (!timeout--) {
  40097a:	3a01      	subs	r2, #1
  40097c:	d015      	beq.n	4009aa <twihs_master_read+0xa6>
		if (!(status & TWIHS_SR_RXRDY)) {
  40097e:	f011 0f02 	tst.w	r1, #2
  400982:	d1e6      	bne.n	400952 <twihs_master_read+0x4e>
	while (cnt > 0) {
  400984:	2b00      	cmp	r3, #0
  400986:	d1f4      	bne.n	400972 <twihs_master_read+0x6e>
  400988:	e003      	b.n	400992 <twihs_master_read+0x8e>
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  40098a:	2302      	movs	r3, #2
  40098c:	6003      	str	r3, [r0, #0]
		*buffer++ = p_twihs->TWIHS_RHR;
  40098e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400990:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  400992:	6a03      	ldr	r3, [r0, #32]
  400994:	f013 0f01 	tst.w	r3, #1
  400998:	d0fb      	beq.n	400992 <twihs_master_read+0x8e>
	p_twihs->TWIHS_SR;
  40099a:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  40099c:	2000      	movs	r0, #0
}
  40099e:	bc70      	pop	{r4, r5, r6}
  4009a0:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  4009a2:	2001      	movs	r0, #1
  4009a4:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  4009a6:	2005      	movs	r0, #5
  4009a8:	e7f9      	b.n	40099e <twihs_master_read+0x9a>
			return TWIHS_ERROR_TIMEOUT;
  4009aa:	2009      	movs	r0, #9
  4009ac:	e7f7      	b.n	40099e <twihs_master_read+0x9a>
			return TWIHS_RECEIVE_NACK;
  4009ae:	2005      	movs	r0, #5
  4009b0:	e7f5      	b.n	40099e <twihs_master_read+0x9a>

004009b2 <twihs_master_write>:
{
  4009b2:	b470      	push	{r4, r5, r6}
  4009b4:	4603      	mov	r3, r0
	uint32_t status, cnt = p_packet->length;
  4009b6:	68c8      	ldr	r0, [r1, #12]
	uint8_t *buffer = p_packet->buffer;
  4009b8:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  4009ba:	2600      	movs	r6, #0
  4009bc:	605e      	str	r6, [r3, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4009be:	7c0a      	ldrb	r2, [r1, #16]
  4009c0:	0412      	lsls	r2, r2, #16
  4009c2:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4009c6:	684d      	ldr	r5, [r1, #4]
  4009c8:	022d      	lsls	r5, r5, #8
  4009ca:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4009ce:	432a      	orrs	r2, r5
  4009d0:	605a      	str	r2, [r3, #4]
	p_twihs->TWIHS_IADR = 0;
  4009d2:	60de      	str	r6, [r3, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4009d4:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  4009d6:	b15d      	cbz	r5, 4009f0 <twihs_master_write+0x3e>
	val = addr[0];
  4009d8:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  4009da:	2d01      	cmp	r5, #1
  4009dc:	dd02      	ble.n	4009e4 <twihs_master_write+0x32>
		val |= addr[1];
  4009de:	784e      	ldrb	r6, [r1, #1]
  4009e0:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  4009e4:	2d02      	cmp	r5, #2
  4009e6:	dd04      	ble.n	4009f2 <twihs_master_write+0x40>
		val |= addr[2];
  4009e8:	7889      	ldrb	r1, [r1, #2]
  4009ea:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  4009ee:	e000      	b.n	4009f2 <twihs_master_write+0x40>
		return 0;
  4009f0:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4009f2:	60da      	str	r2, [r3, #12]
	while (cnt > 0) {
  4009f4:	e003      	b.n	4009fe <twihs_master_write+0x4c>
		p_twihs->TWIHS_THR = *buffer++;
  4009f6:	f814 2b01 	ldrb.w	r2, [r4], #1
  4009fa:	635a      	str	r2, [r3, #52]	; 0x34
		cnt--;
  4009fc:	3801      	subs	r0, #1
	while (cnt > 0) {
  4009fe:	b170      	cbz	r0, 400a1e <twihs_master_write+0x6c>
		status = p_twihs->TWIHS_SR;
  400a00:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  400a02:	f412 7f80 	tst.w	r2, #256	; 0x100
  400a06:	d11a      	bne.n	400a3e <twihs_master_write+0x8c>
		if (!(status & TWIHS_SR_TXRDY)) {
  400a08:	f012 0f04 	tst.w	r2, #4
  400a0c:	d1f3      	bne.n	4009f6 <twihs_master_write+0x44>
		status = p_twihs->TWIHS_SR;
  400a0e:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  400a10:	f412 7f80 	tst.w	r2, #256	; 0x100
  400a14:	d111      	bne.n	400a3a <twihs_master_write+0x88>
		if (!(status & TWIHS_SR_TXRDY)) {
  400a16:	f012 0f04 	tst.w	r2, #4
  400a1a:	d0f8      	beq.n	400a0e <twihs_master_write+0x5c>
  400a1c:	e7eb      	b.n	4009f6 <twihs_master_write+0x44>
		status = p_twihs->TWIHS_SR;
  400a1e:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  400a20:	f412 7f80 	tst.w	r2, #256	; 0x100
  400a24:	d10e      	bne.n	400a44 <twihs_master_write+0x92>
		if (status & TWIHS_SR_TXRDY) {
  400a26:	f012 0f04 	tst.w	r2, #4
  400a2a:	d0f8      	beq.n	400a1e <twihs_master_write+0x6c>
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  400a2c:	2202      	movs	r2, #2
  400a2e:	601a      	str	r2, [r3, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  400a30:	6a1a      	ldr	r2, [r3, #32]
  400a32:	f012 0f01 	tst.w	r2, #1
  400a36:	d0fb      	beq.n	400a30 <twihs_master_write+0x7e>
  400a38:	e002      	b.n	400a40 <twihs_master_write+0x8e>
			return TWIHS_RECEIVE_NACK;
  400a3a:	2005      	movs	r0, #5
  400a3c:	e000      	b.n	400a40 <twihs_master_write+0x8e>
  400a3e:	2005      	movs	r0, #5
}
  400a40:	bc70      	pop	{r4, r5, r6}
  400a42:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  400a44:	2005      	movs	r0, #5
  400a46:	e7fb      	b.n	400a40 <twihs_master_write+0x8e>

00400a48 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400a48:	6943      	ldr	r3, [r0, #20]
  400a4a:	f013 0f02 	tst.w	r3, #2
  400a4e:	d002      	beq.n	400a56 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400a50:	61c1      	str	r1, [r0, #28]
	return 0;
  400a52:	2000      	movs	r0, #0
  400a54:	4770      	bx	lr
		return 1;
  400a56:	2001      	movs	r0, #1
}
  400a58:	4770      	bx	lr

00400a5a <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400a5a:	6943      	ldr	r3, [r0, #20]
  400a5c:	f013 0f01 	tst.w	r3, #1
  400a60:	d003      	beq.n	400a6a <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400a62:	6983      	ldr	r3, [r0, #24]
  400a64:	700b      	strb	r3, [r1, #0]
	return 0;
  400a66:	2000      	movs	r0, #0
  400a68:	4770      	bx	lr
		return 1;
  400a6a:	2001      	movs	r0, #1
}
  400a6c:	4770      	bx	lr

00400a6e <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400a6e:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400a70:	010b      	lsls	r3, r1, #4
  400a72:	4293      	cmp	r3, r2
  400a74:	d914      	bls.n	400aa0 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a76:	00c9      	lsls	r1, r1, #3
  400a78:	084b      	lsrs	r3, r1, #1
  400a7a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400a7e:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400a82:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a84:	1e5c      	subs	r4, r3, #1
  400a86:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a8a:	428c      	cmp	r4, r1
  400a8c:	d901      	bls.n	400a92 <usart_set_async_baudrate+0x24>
		return 1;
  400a8e:	2001      	movs	r0, #1
  400a90:	e017      	b.n	400ac2 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400a92:	6841      	ldr	r1, [r0, #4]
  400a94:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400a98:	6041      	str	r1, [r0, #4]
  400a9a:	e00c      	b.n	400ab6 <usart_set_async_baudrate+0x48>
		return 1;
  400a9c:	2001      	movs	r0, #1
  400a9e:	e010      	b.n	400ac2 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400aa0:	0859      	lsrs	r1, r3, #1
  400aa2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400aa6:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400aaa:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400aac:	1e5c      	subs	r4, r3, #1
  400aae:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400ab2:	428c      	cmp	r4, r1
  400ab4:	d8f2      	bhi.n	400a9c <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400ab6:	0412      	lsls	r2, r2, #16
  400ab8:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400abc:	431a      	orrs	r2, r3
  400abe:	6202      	str	r2, [r0, #32]

	return 0;
  400ac0:	2000      	movs	r0, #0
}
  400ac2:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ac6:	4770      	bx	lr

00400ac8 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400ac8:	4b08      	ldr	r3, [pc, #32]	; (400aec <usart_reset+0x24>)
  400aca:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400ace:	2300      	movs	r3, #0
  400ad0:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400ad2:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400ad4:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400ad6:	2388      	movs	r3, #136	; 0x88
  400ad8:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400ada:	2324      	movs	r3, #36	; 0x24
  400adc:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400ade:	f44f 7380 	mov.w	r3, #256	; 0x100
  400ae2:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400ae4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400ae8:	6003      	str	r3, [r0, #0]
  400aea:	4770      	bx	lr
  400aec:	55534100 	.word	0x55534100

00400af0 <usart_init_rs232>:
{
  400af0:	b570      	push	{r4, r5, r6, lr}
  400af2:	4605      	mov	r5, r0
  400af4:	460c      	mov	r4, r1
  400af6:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400af8:	4b0f      	ldr	r3, [pc, #60]	; (400b38 <usart_init_rs232+0x48>)
  400afa:	4798      	blx	r3
	ul_reg_val = 0;
  400afc:	2200      	movs	r2, #0
  400afe:	4b0f      	ldr	r3, [pc, #60]	; (400b3c <usart_init_rs232+0x4c>)
  400b00:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400b02:	b1a4      	cbz	r4, 400b2e <usart_init_rs232+0x3e>
  400b04:	4632      	mov	r2, r6
  400b06:	6821      	ldr	r1, [r4, #0]
  400b08:	4628      	mov	r0, r5
  400b0a:	4b0d      	ldr	r3, [pc, #52]	; (400b40 <usart_init_rs232+0x50>)
  400b0c:	4798      	blx	r3
  400b0e:	4602      	mov	r2, r0
  400b10:	b978      	cbnz	r0, 400b32 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b12:	6863      	ldr	r3, [r4, #4]
  400b14:	68a1      	ldr	r1, [r4, #8]
  400b16:	430b      	orrs	r3, r1
  400b18:	6921      	ldr	r1, [r4, #16]
  400b1a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400b1c:	68e1      	ldr	r1, [r4, #12]
  400b1e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b20:	4906      	ldr	r1, [pc, #24]	; (400b3c <usart_init_rs232+0x4c>)
  400b22:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400b24:	6869      	ldr	r1, [r5, #4]
  400b26:	430b      	orrs	r3, r1
  400b28:	606b      	str	r3, [r5, #4]
}
  400b2a:	4610      	mov	r0, r2
  400b2c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400b2e:	2201      	movs	r2, #1
  400b30:	e7fb      	b.n	400b2a <usart_init_rs232+0x3a>
  400b32:	2201      	movs	r2, #1
  400b34:	e7f9      	b.n	400b2a <usart_init_rs232+0x3a>
  400b36:	bf00      	nop
  400b38:	00400ac9 	.word	0x00400ac9
  400b3c:	20400a44 	.word	0x20400a44
  400b40:	00400a6f 	.word	0x00400a6f

00400b44 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400b44:	2340      	movs	r3, #64	; 0x40
  400b46:	6003      	str	r3, [r0, #0]
  400b48:	4770      	bx	lr

00400b4a <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400b4a:	2310      	movs	r3, #16
  400b4c:	6003      	str	r3, [r0, #0]
  400b4e:	4770      	bx	lr

00400b50 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400b50:	6943      	ldr	r3, [r0, #20]
  400b52:	f013 0f02 	tst.w	r3, #2
  400b56:	d004      	beq.n	400b62 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  400b58:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b5c:	61c1      	str	r1, [r0, #28]
	return 0;
  400b5e:	2000      	movs	r0, #0
  400b60:	4770      	bx	lr
		return 1;
  400b62:	2001      	movs	r0, #1
}
  400b64:	4770      	bx	lr

00400b66 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400b66:	6943      	ldr	r3, [r0, #20]
  400b68:	f013 0f01 	tst.w	r3, #1
  400b6c:	d005      	beq.n	400b7a <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400b6e:	6983      	ldr	r3, [r0, #24]
  400b70:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400b74:	600b      	str	r3, [r1, #0]
	return 0;
  400b76:	2000      	movs	r0, #0
  400b78:	4770      	bx	lr
		return 1;
  400b7a:	2001      	movs	r0, #1
}
  400b7c:	4770      	bx	lr

00400b7e <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400b7e:	e7fe      	b.n	400b7e <Dummy_Handler>

00400b80 <Reset_Handler>:
{
  400b80:	b500      	push	{lr}
  400b82:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  400b84:	4b25      	ldr	r3, [pc, #148]	; (400c1c <Reset_Handler+0x9c>)
  400b86:	4a26      	ldr	r2, [pc, #152]	; (400c20 <Reset_Handler+0xa0>)
  400b88:	429a      	cmp	r2, r3
  400b8a:	d010      	beq.n	400bae <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  400b8c:	4b25      	ldr	r3, [pc, #148]	; (400c24 <Reset_Handler+0xa4>)
  400b8e:	4a23      	ldr	r2, [pc, #140]	; (400c1c <Reset_Handler+0x9c>)
  400b90:	429a      	cmp	r2, r3
  400b92:	d20c      	bcs.n	400bae <Reset_Handler+0x2e>
  400b94:	3b01      	subs	r3, #1
  400b96:	1a9b      	subs	r3, r3, r2
  400b98:	f023 0303 	bic.w	r3, r3, #3
  400b9c:	3304      	adds	r3, #4
  400b9e:	4413      	add	r3, r2
  400ba0:	491f      	ldr	r1, [pc, #124]	; (400c20 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  400ba2:	f851 0b04 	ldr.w	r0, [r1], #4
  400ba6:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400baa:	429a      	cmp	r2, r3
  400bac:	d1f9      	bne.n	400ba2 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  400bae:	4b1e      	ldr	r3, [pc, #120]	; (400c28 <Reset_Handler+0xa8>)
  400bb0:	4a1e      	ldr	r2, [pc, #120]	; (400c2c <Reset_Handler+0xac>)
  400bb2:	429a      	cmp	r2, r3
  400bb4:	d20a      	bcs.n	400bcc <Reset_Handler+0x4c>
  400bb6:	3b01      	subs	r3, #1
  400bb8:	1a9b      	subs	r3, r3, r2
  400bba:	f023 0303 	bic.w	r3, r3, #3
  400bbe:	3304      	adds	r3, #4
  400bc0:	4413      	add	r3, r2
                *pDest++ = 0;
  400bc2:	2100      	movs	r1, #0
  400bc4:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400bc8:	4293      	cmp	r3, r2
  400bca:	d1fb      	bne.n	400bc4 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400bcc:	4a18      	ldr	r2, [pc, #96]	; (400c30 <Reset_Handler+0xb0>)
  400bce:	4b19      	ldr	r3, [pc, #100]	; (400c34 <Reset_Handler+0xb4>)
  400bd0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400bd4:	6093      	str	r3, [r2, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400bd6:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400bda:	fab3 f383 	clz	r3, r3
  400bde:	095b      	lsrs	r3, r3, #5
  400be0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400be2:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400be4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400be8:	2200      	movs	r2, #0
  400bea:	4b13      	ldr	r3, [pc, #76]	; (400c38 <Reset_Handler+0xb8>)
  400bec:	701a      	strb	r2, [r3, #0]
	return flags;
  400bee:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400bf0:	4a12      	ldr	r2, [pc, #72]	; (400c3c <Reset_Handler+0xbc>)
  400bf2:	6813      	ldr	r3, [r2, #0]
  400bf4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400bf8:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb 0xF":::"memory");
  400bfa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400bfe:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400c02:	b129      	cbz	r1, 400c10 <Reset_Handler+0x90>
		cpu_irq_enable();
  400c04:	2201      	movs	r2, #1
  400c06:	4b0c      	ldr	r3, [pc, #48]	; (400c38 <Reset_Handler+0xb8>)
  400c08:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400c0a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400c0e:	b662      	cpsie	i
        __libc_init_array();
  400c10:	4b0b      	ldr	r3, [pc, #44]	; (400c40 <Reset_Handler+0xc0>)
  400c12:	4798      	blx	r3
        main();
  400c14:	4b0b      	ldr	r3, [pc, #44]	; (400c44 <Reset_Handler+0xc4>)
  400c16:	4798      	blx	r3
  400c18:	e7fe      	b.n	400c18 <Reset_Handler+0x98>
  400c1a:	bf00      	nop
  400c1c:	20400000 	.word	0x20400000
  400c20:	004073bc 	.word	0x004073bc
  400c24:	204009b8 	.word	0x204009b8
  400c28:	20400ab8 	.word	0x20400ab8
  400c2c:	204009b8 	.word	0x204009b8
  400c30:	e000ed00 	.word	0xe000ed00
  400c34:	00400000 	.word	0x00400000
  400c38:	20400000 	.word	0x20400000
  400c3c:	e000ed88 	.word	0xe000ed88
  400c40:	00401e75 	.word	0x00401e75
  400c44:	00401399 	.word	0x00401399

00400c48 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  400c48:	4b3b      	ldr	r3, [pc, #236]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c4c:	f003 0303 	and.w	r3, r3, #3
  400c50:	2b01      	cmp	r3, #1
  400c52:	d01d      	beq.n	400c90 <SystemCoreClockUpdate+0x48>
  400c54:	b183      	cbz	r3, 400c78 <SystemCoreClockUpdate+0x30>
  400c56:	2b02      	cmp	r3, #2
  400c58:	d036      	beq.n	400cc8 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  400c5a:	4b37      	ldr	r3, [pc, #220]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c5e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400c62:	2b70      	cmp	r3, #112	; 0x70
  400c64:	d05f      	beq.n	400d26 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400c66:	4b34      	ldr	r3, [pc, #208]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400c6a:	4934      	ldr	r1, [pc, #208]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400c6c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400c70:	680b      	ldr	r3, [r1, #0]
  400c72:	40d3      	lsrs	r3, r2
  400c74:	600b      	str	r3, [r1, #0]
  400c76:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  400c78:	4b31      	ldr	r3, [pc, #196]	; (400d40 <SystemCoreClockUpdate+0xf8>)
  400c7a:	695b      	ldr	r3, [r3, #20]
  400c7c:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400c80:	bf14      	ite	ne
  400c82:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400c86:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400c8a:	4b2c      	ldr	r3, [pc, #176]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400c8c:	601a      	str	r2, [r3, #0]
  400c8e:	e7e4      	b.n	400c5a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400c90:	4b29      	ldr	r3, [pc, #164]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400c92:	6a1b      	ldr	r3, [r3, #32]
  400c94:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400c98:	d003      	beq.n	400ca2 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400c9a:	4a2a      	ldr	r2, [pc, #168]	; (400d44 <SystemCoreClockUpdate+0xfc>)
  400c9c:	4b27      	ldr	r3, [pc, #156]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400c9e:	601a      	str	r2, [r3, #0]
  400ca0:	e7db      	b.n	400c5a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400ca2:	4a29      	ldr	r2, [pc, #164]	; (400d48 <SystemCoreClockUpdate+0x100>)
  400ca4:	4b25      	ldr	r3, [pc, #148]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400ca6:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400ca8:	4b23      	ldr	r3, [pc, #140]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400caa:	6a1b      	ldr	r3, [r3, #32]
  400cac:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400cb0:	2b10      	cmp	r3, #16
  400cb2:	d005      	beq.n	400cc0 <SystemCoreClockUpdate+0x78>
  400cb4:	2b20      	cmp	r3, #32
  400cb6:	d1d0      	bne.n	400c5a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  400cb8:	4a22      	ldr	r2, [pc, #136]	; (400d44 <SystemCoreClockUpdate+0xfc>)
  400cba:	4b20      	ldr	r3, [pc, #128]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400cbc:	601a      	str	r2, [r3, #0]
          break;
  400cbe:	e7cc      	b.n	400c5a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  400cc0:	4a22      	ldr	r2, [pc, #136]	; (400d4c <SystemCoreClockUpdate+0x104>)
  400cc2:	4b1e      	ldr	r3, [pc, #120]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400cc4:	601a      	str	r2, [r3, #0]
          break;
  400cc6:	e7c8      	b.n	400c5a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400cc8:	4b1b      	ldr	r3, [pc, #108]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400cca:	6a1b      	ldr	r3, [r3, #32]
  400ccc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400cd0:	d016      	beq.n	400d00 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400cd2:	4a1c      	ldr	r2, [pc, #112]	; (400d44 <SystemCoreClockUpdate+0xfc>)
  400cd4:	4b19      	ldr	r3, [pc, #100]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400cd6:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  400cd8:	4b17      	ldr	r3, [pc, #92]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400cda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400cdc:	f003 0303 	and.w	r3, r3, #3
  400ce0:	2b02      	cmp	r3, #2
  400ce2:	d1ba      	bne.n	400c5a <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400ce4:	4a14      	ldr	r2, [pc, #80]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400ce6:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400ce8:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400cea:	4814      	ldr	r0, [pc, #80]	; (400d3c <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400cec:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400cf0:	6803      	ldr	r3, [r0, #0]
  400cf2:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400cf6:	b2d2      	uxtb	r2, r2
  400cf8:	fbb3 f3f2 	udiv	r3, r3, r2
  400cfc:	6003      	str	r3, [r0, #0]
  400cfe:	e7ac      	b.n	400c5a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400d00:	4a11      	ldr	r2, [pc, #68]	; (400d48 <SystemCoreClockUpdate+0x100>)
  400d02:	4b0e      	ldr	r3, [pc, #56]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400d04:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400d06:	4b0c      	ldr	r3, [pc, #48]	; (400d38 <SystemCoreClockUpdate+0xf0>)
  400d08:	6a1b      	ldr	r3, [r3, #32]
  400d0a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400d0e:	2b10      	cmp	r3, #16
  400d10:	d005      	beq.n	400d1e <SystemCoreClockUpdate+0xd6>
  400d12:	2b20      	cmp	r3, #32
  400d14:	d1e0      	bne.n	400cd8 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  400d16:	4a0b      	ldr	r2, [pc, #44]	; (400d44 <SystemCoreClockUpdate+0xfc>)
  400d18:	4b08      	ldr	r3, [pc, #32]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400d1a:	601a      	str	r2, [r3, #0]
          break;
  400d1c:	e7dc      	b.n	400cd8 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  400d1e:	4a0b      	ldr	r2, [pc, #44]	; (400d4c <SystemCoreClockUpdate+0x104>)
  400d20:	4b06      	ldr	r3, [pc, #24]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400d22:	601a      	str	r2, [r3, #0]
          break;
  400d24:	e7d8      	b.n	400cd8 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  400d26:	4a05      	ldr	r2, [pc, #20]	; (400d3c <SystemCoreClockUpdate+0xf4>)
  400d28:	6813      	ldr	r3, [r2, #0]
  400d2a:	4909      	ldr	r1, [pc, #36]	; (400d50 <SystemCoreClockUpdate+0x108>)
  400d2c:	fba1 1303 	umull	r1, r3, r1, r3
  400d30:	085b      	lsrs	r3, r3, #1
  400d32:	6013      	str	r3, [r2, #0]
  400d34:	4770      	bx	lr
  400d36:	bf00      	nop
  400d38:	400e0600 	.word	0x400e0600
  400d3c:	20400004 	.word	0x20400004
  400d40:	400e1810 	.word	0x400e1810
  400d44:	00b71b00 	.word	0x00b71b00
  400d48:	003d0900 	.word	0x003d0900
  400d4c:	007a1200 	.word	0x007a1200
  400d50:	aaaaaaab 	.word	0xaaaaaaab

00400d54 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  400d54:	4b16      	ldr	r3, [pc, #88]	; (400db0 <system_init_flash+0x5c>)
  400d56:	4298      	cmp	r0, r3
  400d58:	d913      	bls.n	400d82 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  400d5a:	4b16      	ldr	r3, [pc, #88]	; (400db4 <system_init_flash+0x60>)
  400d5c:	4298      	cmp	r0, r3
  400d5e:	d915      	bls.n	400d8c <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  400d60:	4b15      	ldr	r3, [pc, #84]	; (400db8 <system_init_flash+0x64>)
  400d62:	4298      	cmp	r0, r3
  400d64:	d916      	bls.n	400d94 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  400d66:	4b15      	ldr	r3, [pc, #84]	; (400dbc <system_init_flash+0x68>)
  400d68:	4298      	cmp	r0, r3
  400d6a:	d917      	bls.n	400d9c <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  400d6c:	4b14      	ldr	r3, [pc, #80]	; (400dc0 <system_init_flash+0x6c>)
  400d6e:	4298      	cmp	r0, r3
  400d70:	d918      	bls.n	400da4 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  400d72:	4b14      	ldr	r3, [pc, #80]	; (400dc4 <system_init_flash+0x70>)
  400d74:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400d76:	bf94      	ite	ls
  400d78:	4a13      	ldrls	r2, [pc, #76]	; (400dc8 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  400d7a:	4a14      	ldrhi	r2, [pc, #80]	; (400dcc <system_init_flash+0x78>)
  400d7c:	4b14      	ldr	r3, [pc, #80]	; (400dd0 <system_init_flash+0x7c>)
  400d7e:	601a      	str	r2, [r3, #0]
  400d80:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400d82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400d86:	4b12      	ldr	r3, [pc, #72]	; (400dd0 <system_init_flash+0x7c>)
  400d88:	601a      	str	r2, [r3, #0]
  400d8a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400d8c:	4a11      	ldr	r2, [pc, #68]	; (400dd4 <system_init_flash+0x80>)
  400d8e:	4b10      	ldr	r3, [pc, #64]	; (400dd0 <system_init_flash+0x7c>)
  400d90:	601a      	str	r2, [r3, #0]
  400d92:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400d94:	4a10      	ldr	r2, [pc, #64]	; (400dd8 <system_init_flash+0x84>)
  400d96:	4b0e      	ldr	r3, [pc, #56]	; (400dd0 <system_init_flash+0x7c>)
  400d98:	601a      	str	r2, [r3, #0]
  400d9a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400d9c:	4a0f      	ldr	r2, [pc, #60]	; (400ddc <system_init_flash+0x88>)
  400d9e:	4b0c      	ldr	r3, [pc, #48]	; (400dd0 <system_init_flash+0x7c>)
  400da0:	601a      	str	r2, [r3, #0]
  400da2:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400da4:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  400da8:	4b09      	ldr	r3, [pc, #36]	; (400dd0 <system_init_flash+0x7c>)
  400daa:	601a      	str	r2, [r3, #0]
  400dac:	4770      	bx	lr
  400dae:	bf00      	nop
  400db0:	015ef3bf 	.word	0x015ef3bf
  400db4:	02bde77f 	.word	0x02bde77f
  400db8:	041cdb3f 	.word	0x041cdb3f
  400dbc:	057bceff 	.word	0x057bceff
  400dc0:	06dac2bf 	.word	0x06dac2bf
  400dc4:	0839b67f 	.word	0x0839b67f
  400dc8:	04000500 	.word	0x04000500
  400dcc:	04000600 	.word	0x04000600
  400dd0:	400e0c00 	.word	0x400e0c00
  400dd4:	04000100 	.word	0x04000100
  400dd8:	04000200 	.word	0x04000200
  400ddc:	04000300 	.word	0x04000300

00400de0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400de0:	4b0a      	ldr	r3, [pc, #40]	; (400e0c <_sbrk+0x2c>)
  400de2:	681b      	ldr	r3, [r3, #0]
  400de4:	b153      	cbz	r3, 400dfc <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400de6:	4b09      	ldr	r3, [pc, #36]	; (400e0c <_sbrk+0x2c>)
  400de8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400dea:	181a      	adds	r2, r3, r0
  400dec:	4908      	ldr	r1, [pc, #32]	; (400e10 <_sbrk+0x30>)
  400dee:	4291      	cmp	r1, r2
  400df0:	db08      	blt.n	400e04 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400df2:	4610      	mov	r0, r2
  400df4:	4a05      	ldr	r2, [pc, #20]	; (400e0c <_sbrk+0x2c>)
  400df6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400df8:	4618      	mov	r0, r3
  400dfa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400dfc:	4a05      	ldr	r2, [pc, #20]	; (400e14 <_sbrk+0x34>)
  400dfe:	4b03      	ldr	r3, [pc, #12]	; (400e0c <_sbrk+0x2c>)
  400e00:	601a      	str	r2, [r3, #0]
  400e02:	e7f0      	b.n	400de6 <_sbrk+0x6>
		return (caddr_t) -1;	
  400e04:	f04f 30ff 	mov.w	r0, #4294967295
}
  400e08:	4770      	bx	lr
  400e0a:	bf00      	nop
  400e0c:	20400a48 	.word	0x20400a48
  400e10:	2045fffc 	.word	0x2045fffc
  400e14:	20402cb8 	.word	0x20402cb8

00400e18 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400e18:	f04f 30ff 	mov.w	r0, #4294967295
  400e1c:	4770      	bx	lr

00400e1e <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400e1e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400e22:	604b      	str	r3, [r1, #4]

	return 0;
}
  400e24:	2000      	movs	r0, #0
  400e26:	4770      	bx	lr

00400e28 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400e28:	2001      	movs	r0, #1
  400e2a:	4770      	bx	lr

00400e2c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400e2c:	2000      	movs	r0, #0
  400e2e:	4770      	bx	lr

00400e30 <mdelay>:
 */
static void mdelay(uint32_t ul_dly_ticks)
{
	uint32_t ul_cur_ticks;

	ul_cur_ticks = g_ul_ms_ticks;
  400e30:	4b03      	ldr	r3, [pc, #12]	; (400e40 <mdelay+0x10>)
  400e32:	6819      	ldr	r1, [r3, #0]
	while ((g_ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks);
  400e34:	461a      	mov	r2, r3
  400e36:	6813      	ldr	r3, [r2, #0]
  400e38:	1a5b      	subs	r3, r3, r1
  400e3a:	4283      	cmp	r3, r0
  400e3c:	d3fb      	bcc.n	400e36 <mdelay+0x6>
}
  400e3e:	4770      	bx	lr
  400e40:	20400a4c 	.word	0x20400a4c

00400e44 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400e44:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e46:	b083      	sub	sp, #12
  400e48:	4605      	mov	r5, r0
  400e4a:	460c      	mov	r4, r1
	uint32_t val = 0;
  400e4c:	2300      	movs	r3, #0
  400e4e:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400e50:	4b2a      	ldr	r3, [pc, #168]	; (400efc <usart_serial_getchar+0xb8>)
  400e52:	4298      	cmp	r0, r3
  400e54:	d013      	beq.n	400e7e <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400e56:	4b2a      	ldr	r3, [pc, #168]	; (400f00 <usart_serial_getchar+0xbc>)
  400e58:	4298      	cmp	r0, r3
  400e5a:	d018      	beq.n	400e8e <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400e5c:	4b29      	ldr	r3, [pc, #164]	; (400f04 <usart_serial_getchar+0xc0>)
  400e5e:	4298      	cmp	r0, r3
  400e60:	d01d      	beq.n	400e9e <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400e62:	4b29      	ldr	r3, [pc, #164]	; (400f08 <usart_serial_getchar+0xc4>)
  400e64:	429d      	cmp	r5, r3
  400e66:	d022      	beq.n	400eae <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400e68:	4b28      	ldr	r3, [pc, #160]	; (400f0c <usart_serial_getchar+0xc8>)
  400e6a:	429d      	cmp	r5, r3
  400e6c:	d027      	beq.n	400ebe <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400e6e:	4b28      	ldr	r3, [pc, #160]	; (400f10 <usart_serial_getchar+0xcc>)
  400e70:	429d      	cmp	r5, r3
  400e72:	d02e      	beq.n	400ed2 <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400e74:	4b27      	ldr	r3, [pc, #156]	; (400f14 <usart_serial_getchar+0xd0>)
  400e76:	429d      	cmp	r5, r3
  400e78:	d035      	beq.n	400ee6 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400e7a:	b003      	add	sp, #12
  400e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400e7e:	461f      	mov	r7, r3
  400e80:	4e25      	ldr	r6, [pc, #148]	; (400f18 <usart_serial_getchar+0xd4>)
  400e82:	4621      	mov	r1, r4
  400e84:	4638      	mov	r0, r7
  400e86:	47b0      	blx	r6
  400e88:	2800      	cmp	r0, #0
  400e8a:	d1fa      	bne.n	400e82 <usart_serial_getchar+0x3e>
  400e8c:	e7e9      	b.n	400e62 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400e8e:	461f      	mov	r7, r3
  400e90:	4e21      	ldr	r6, [pc, #132]	; (400f18 <usart_serial_getchar+0xd4>)
  400e92:	4621      	mov	r1, r4
  400e94:	4638      	mov	r0, r7
  400e96:	47b0      	blx	r6
  400e98:	2800      	cmp	r0, #0
  400e9a:	d1fa      	bne.n	400e92 <usart_serial_getchar+0x4e>
  400e9c:	e7e4      	b.n	400e68 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  400e9e:	461f      	mov	r7, r3
  400ea0:	4e1d      	ldr	r6, [pc, #116]	; (400f18 <usart_serial_getchar+0xd4>)
  400ea2:	4621      	mov	r1, r4
  400ea4:	4638      	mov	r0, r7
  400ea6:	47b0      	blx	r6
  400ea8:	2800      	cmp	r0, #0
  400eaa:	d1fa      	bne.n	400ea2 <usart_serial_getchar+0x5e>
  400eac:	e7df      	b.n	400e6e <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  400eae:	461f      	mov	r7, r3
  400eb0:	4e19      	ldr	r6, [pc, #100]	; (400f18 <usart_serial_getchar+0xd4>)
  400eb2:	4621      	mov	r1, r4
  400eb4:	4638      	mov	r0, r7
  400eb6:	47b0      	blx	r6
  400eb8:	2800      	cmp	r0, #0
  400eba:	d1fa      	bne.n	400eb2 <usart_serial_getchar+0x6e>
  400ebc:	e7da      	b.n	400e74 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  400ebe:	461e      	mov	r6, r3
  400ec0:	4d16      	ldr	r5, [pc, #88]	; (400f1c <usart_serial_getchar+0xd8>)
  400ec2:	a901      	add	r1, sp, #4
  400ec4:	4630      	mov	r0, r6
  400ec6:	47a8      	blx	r5
  400ec8:	2800      	cmp	r0, #0
  400eca:	d1fa      	bne.n	400ec2 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  400ecc:	9b01      	ldr	r3, [sp, #4]
  400ece:	7023      	strb	r3, [r4, #0]
  400ed0:	e7d3      	b.n	400e7a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400ed2:	461e      	mov	r6, r3
  400ed4:	4d11      	ldr	r5, [pc, #68]	; (400f1c <usart_serial_getchar+0xd8>)
  400ed6:	a901      	add	r1, sp, #4
  400ed8:	4630      	mov	r0, r6
  400eda:	47a8      	blx	r5
  400edc:	2800      	cmp	r0, #0
  400ede:	d1fa      	bne.n	400ed6 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  400ee0:	9b01      	ldr	r3, [sp, #4]
  400ee2:	7023      	strb	r3, [r4, #0]
  400ee4:	e7c9      	b.n	400e7a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400ee6:	461e      	mov	r6, r3
  400ee8:	4d0c      	ldr	r5, [pc, #48]	; (400f1c <usart_serial_getchar+0xd8>)
  400eea:	a901      	add	r1, sp, #4
  400eec:	4630      	mov	r0, r6
  400eee:	47a8      	blx	r5
  400ef0:	2800      	cmp	r0, #0
  400ef2:	d1fa      	bne.n	400eea <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  400ef4:	9b01      	ldr	r3, [sp, #4]
  400ef6:	7023      	strb	r3, [r4, #0]
}
  400ef8:	e7bf      	b.n	400e7a <usart_serial_getchar+0x36>
  400efa:	bf00      	nop
  400efc:	400e0800 	.word	0x400e0800
  400f00:	400e0a00 	.word	0x400e0a00
  400f04:	400e1a00 	.word	0x400e1a00
  400f08:	400e1c00 	.word	0x400e1c00
  400f0c:	40024000 	.word	0x40024000
  400f10:	40028000 	.word	0x40028000
  400f14:	4002c000 	.word	0x4002c000
  400f18:	00400a5b 	.word	0x00400a5b
  400f1c:	00400b67 	.word	0x00400b67

00400f20 <usart_serial_putchar>:
{
  400f20:	b570      	push	{r4, r5, r6, lr}
  400f22:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400f24:	4b2a      	ldr	r3, [pc, #168]	; (400fd0 <usart_serial_putchar+0xb0>)
  400f26:	4298      	cmp	r0, r3
  400f28:	d013      	beq.n	400f52 <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  400f2a:	4b2a      	ldr	r3, [pc, #168]	; (400fd4 <usart_serial_putchar+0xb4>)
  400f2c:	4298      	cmp	r0, r3
  400f2e:	d019      	beq.n	400f64 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  400f30:	4b29      	ldr	r3, [pc, #164]	; (400fd8 <usart_serial_putchar+0xb8>)
  400f32:	4298      	cmp	r0, r3
  400f34:	d01f      	beq.n	400f76 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  400f36:	4b29      	ldr	r3, [pc, #164]	; (400fdc <usart_serial_putchar+0xbc>)
  400f38:	4298      	cmp	r0, r3
  400f3a:	d025      	beq.n	400f88 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  400f3c:	4b28      	ldr	r3, [pc, #160]	; (400fe0 <usart_serial_putchar+0xc0>)
  400f3e:	4298      	cmp	r0, r3
  400f40:	d02b      	beq.n	400f9a <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  400f42:	4b28      	ldr	r3, [pc, #160]	; (400fe4 <usart_serial_putchar+0xc4>)
  400f44:	4298      	cmp	r0, r3
  400f46:	d031      	beq.n	400fac <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  400f48:	4b27      	ldr	r3, [pc, #156]	; (400fe8 <usart_serial_putchar+0xc8>)
  400f4a:	4298      	cmp	r0, r3
  400f4c:	d037      	beq.n	400fbe <usart_serial_putchar+0x9e>
	return 0;
  400f4e:	2000      	movs	r0, #0
}
  400f50:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f52:	461e      	mov	r6, r3
  400f54:	4d25      	ldr	r5, [pc, #148]	; (400fec <usart_serial_putchar+0xcc>)
  400f56:	4621      	mov	r1, r4
  400f58:	4630      	mov	r0, r6
  400f5a:	47a8      	blx	r5
  400f5c:	2800      	cmp	r0, #0
  400f5e:	d1fa      	bne.n	400f56 <usart_serial_putchar+0x36>
		return 1;
  400f60:	2001      	movs	r0, #1
  400f62:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f64:	461e      	mov	r6, r3
  400f66:	4d21      	ldr	r5, [pc, #132]	; (400fec <usart_serial_putchar+0xcc>)
  400f68:	4621      	mov	r1, r4
  400f6a:	4630      	mov	r0, r6
  400f6c:	47a8      	blx	r5
  400f6e:	2800      	cmp	r0, #0
  400f70:	d1fa      	bne.n	400f68 <usart_serial_putchar+0x48>
		return 1;
  400f72:	2001      	movs	r0, #1
  400f74:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f76:	461e      	mov	r6, r3
  400f78:	4d1c      	ldr	r5, [pc, #112]	; (400fec <usart_serial_putchar+0xcc>)
  400f7a:	4621      	mov	r1, r4
  400f7c:	4630      	mov	r0, r6
  400f7e:	47a8      	blx	r5
  400f80:	2800      	cmp	r0, #0
  400f82:	d1fa      	bne.n	400f7a <usart_serial_putchar+0x5a>
		return 1;
  400f84:	2001      	movs	r0, #1
  400f86:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400f88:	461e      	mov	r6, r3
  400f8a:	4d18      	ldr	r5, [pc, #96]	; (400fec <usart_serial_putchar+0xcc>)
  400f8c:	4621      	mov	r1, r4
  400f8e:	4630      	mov	r0, r6
  400f90:	47a8      	blx	r5
  400f92:	2800      	cmp	r0, #0
  400f94:	d1fa      	bne.n	400f8c <usart_serial_putchar+0x6c>
		return 1;
  400f96:	2001      	movs	r0, #1
  400f98:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400f9a:	461e      	mov	r6, r3
  400f9c:	4d14      	ldr	r5, [pc, #80]	; (400ff0 <usart_serial_putchar+0xd0>)
  400f9e:	4621      	mov	r1, r4
  400fa0:	4630      	mov	r0, r6
  400fa2:	47a8      	blx	r5
  400fa4:	2800      	cmp	r0, #0
  400fa6:	d1fa      	bne.n	400f9e <usart_serial_putchar+0x7e>
		return 1;
  400fa8:	2001      	movs	r0, #1
  400faa:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400fac:	461e      	mov	r6, r3
  400fae:	4d10      	ldr	r5, [pc, #64]	; (400ff0 <usart_serial_putchar+0xd0>)
  400fb0:	4621      	mov	r1, r4
  400fb2:	4630      	mov	r0, r6
  400fb4:	47a8      	blx	r5
  400fb6:	2800      	cmp	r0, #0
  400fb8:	d1fa      	bne.n	400fb0 <usart_serial_putchar+0x90>
		return 1;
  400fba:	2001      	movs	r0, #1
  400fbc:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400fbe:	461e      	mov	r6, r3
  400fc0:	4d0b      	ldr	r5, [pc, #44]	; (400ff0 <usart_serial_putchar+0xd0>)
  400fc2:	4621      	mov	r1, r4
  400fc4:	4630      	mov	r0, r6
  400fc6:	47a8      	blx	r5
  400fc8:	2800      	cmp	r0, #0
  400fca:	d1fa      	bne.n	400fc2 <usart_serial_putchar+0xa2>
		return 1;
  400fcc:	2001      	movs	r0, #1
  400fce:	bd70      	pop	{r4, r5, r6, pc}
  400fd0:	400e0800 	.word	0x400e0800
  400fd4:	400e0a00 	.word	0x400e0a00
  400fd8:	400e1a00 	.word	0x400e1a00
  400fdc:	400e1c00 	.word	0x400e1c00
  400fe0:	40024000 	.word	0x40024000
  400fe4:	40028000 	.word	0x40028000
  400fe8:	4002c000 	.word	0x4002c000
  400fec:	00400a49 	.word	0x00400a49
  400ff0:	00400b51 	.word	0x00400b51

00400ff4 <SysTick_Handler>:
	g_ul_ms_ticks++;
  400ff4:	4a02      	ldr	r2, [pc, #8]	; (401000 <SysTick_Handler+0xc>)
  400ff6:	6813      	ldr	r3, [r2, #0]
  400ff8:	3301      	adds	r3, #1
  400ffa:	6013      	str	r3, [r2, #0]
  400ffc:	4770      	bx	lr
  400ffe:	bf00      	nop
  401000:	20400a4c 	.word	0x20400a4c

00401004 <max30100_read>:


void max30100_read(uint8_t *buffer, uint32_t bufferlen) {
  401004:	b500      	push	{lr}
  401006:	b087      	sub	sp, #28
	twihs_packet_t packet_rx;
	
	/* Configure the data packet to be received */
	packet_rx.chip        = MAX30100_CHIP_ID;
  401008:	2357      	movs	r3, #87	; 0x57
  40100a:	f88d 3014 	strb.w	r3, [sp, #20]
	packet_rx.addr[0]     = 0;
  40100e:	2300      	movs	r3, #0
  401010:	f88d 3004 	strb.w	r3, [sp, #4]
	packet_rx.addr_length = 0;
  401014:	9302      	str	r3, [sp, #8]
	packet_rx.buffer      = buffer;
  401016:	9003      	str	r0, [sp, #12]
	packet_rx.length      = bufferlen;
  401018:	9104      	str	r1, [sp, #16]
	
	/* Get memory from EEPROM*/
	uint32_t ret = twihs_master_read(MAX30100_I2C, &packet_rx);
  40101a:	a901      	add	r1, sp, #4
  40101c:	4805      	ldr	r0, [pc, #20]	; (401034 <max30100_read+0x30>)
  40101e:	4b06      	ldr	r3, [pc, #24]	; (401038 <max30100_read+0x34>)
  401020:	4798      	blx	r3
	
	if (ret != TWIHS_SUCCESS) {
  401022:	b910      	cbnz	r0, 40102a <max30100_read+0x26>
		puts("-E-\tTWI master read packet failed.\r");
		while (1) {
			/* Capture error */
		}
	}
}
  401024:	b007      	add	sp, #28
  401026:	f85d fb04 	ldr.w	pc, [sp], #4
		puts("-E-\tTWI master read packet failed.\r");
  40102a:	4804      	ldr	r0, [pc, #16]	; (40103c <max30100_read+0x38>)
  40102c:	4b04      	ldr	r3, [pc, #16]	; (401040 <max30100_read+0x3c>)
  40102e:	4798      	blx	r3
  401030:	e7fe      	b.n	401030 <max30100_read+0x2c>
  401032:	bf00      	nop
  401034:	40018000 	.word	0x40018000
  401038:	00400905 	.word	0x00400905
  40103c:	004070a8 	.word	0x004070a8
  401040:	00402039 	.word	0x00402039

00401044 <max30100_read_reg>:


void max30100_read_reg(uint8_t addr, uint8_t *buffer, uint32_t bufferlen) {
  401044:	b530      	push	{r4, r5, lr}
  401046:	b08d      	sub	sp, #52	; 0x34
	twihs_packet_t packet_tx, packet_rx;
	uint8_t buffer_tx[1];
	
	buffer_tx[0] = addr;
  401048:	f88d 0004 	strb.w	r0, [sp, #4]
	
	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  40104c:	2457      	movs	r4, #87	; 0x57
  40104e:	f88d 402c 	strb.w	r4, [sp, #44]	; 0x2c
	packet_tx.addr[0]     = addr;
  401052:	f88d 001c 	strb.w	r0, [sp, #28]
	packet_tx.addr_length = 1;
  401056:	2301      	movs	r3, #1
  401058:	9308      	str	r3, [sp, #32]
	packet_tx.buffer      = (uint8_t *) buffer_tx;
  40105a:	ad01      	add	r5, sp, #4
  40105c:	9509      	str	r5, [sp, #36]	; 0x24
	packet_tx.length      = 0;
  40105e:	2500      	movs	r5, #0
  401060:	950a      	str	r5, [sp, #40]	; 0x28

	/* Configure the data packet to be received */
	packet_rx.chip        = MAX30100_CHIP_ID;
  401062:	f88d 4018 	strb.w	r4, [sp, #24]
	packet_rx.addr[0]     = addr;
  401066:	f88d 0008 	strb.w	r0, [sp, #8]
	packet_rx.addr_length = 1;
  40106a:	9303      	str	r3, [sp, #12]
	packet_rx.buffer      = buffer;
  40106c:	9104      	str	r1, [sp, #16]
	packet_rx.length      = bufferlen;
  40106e:	9205      	str	r2, [sp, #20]
	
	/* Send test pattern to EEPROM */
	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  401070:	a907      	add	r1, sp, #28
  401072:	480b      	ldr	r0, [pc, #44]	; (4010a0 <max30100_read_reg+0x5c>)
  401074:	4b0b      	ldr	r3, [pc, #44]	; (4010a4 <max30100_read_reg+0x60>)
  401076:	4798      	blx	r3
  401078:	b118      	cbz	r0, 401082 <max30100_read_reg+0x3e>
		puts("-E-\tTWI master write packet failed.\r");
  40107a:	480b      	ldr	r0, [pc, #44]	; (4010a8 <max30100_read_reg+0x64>)
  40107c:	4b0b      	ldr	r3, [pc, #44]	; (4010ac <max30100_read_reg+0x68>)
  40107e:	4798      	blx	r3
  401080:	e7fe      	b.n	401080 <max30100_read_reg+0x3c>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  401082:	200a      	movs	r0, #10
  401084:	4b0a      	ldr	r3, [pc, #40]	; (4010b0 <max30100_read_reg+0x6c>)
  401086:	4798      	blx	r3
	
	
	/* Get memory from EEPROM*/
	uint32_t ret = twihs_master_read(MAX30100_I2C, &packet_rx);
  401088:	a902      	add	r1, sp, #8
  40108a:	4805      	ldr	r0, [pc, #20]	; (4010a0 <max30100_read_reg+0x5c>)
  40108c:	4b09      	ldr	r3, [pc, #36]	; (4010b4 <max30100_read_reg+0x70>)
  40108e:	4798      	blx	r3
	
	if (ret != TWIHS_SUCCESS) {
  401090:	b908      	cbnz	r0, 401096 <max30100_read_reg+0x52>
		puts("-E-\tTWI master read packet failed.\r");
		while (1) {
			/* Capture error */
		}
	}
}
  401092:	b00d      	add	sp, #52	; 0x34
  401094:	bd30      	pop	{r4, r5, pc}
		puts("-E-\tTWI master read packet failed.\r");
  401096:	4808      	ldr	r0, [pc, #32]	; (4010b8 <max30100_read_reg+0x74>)
  401098:	4b04      	ldr	r3, [pc, #16]	; (4010ac <max30100_read_reg+0x68>)
  40109a:	4798      	blx	r3
  40109c:	e7fe      	b.n	40109c <max30100_read_reg+0x58>
  40109e:	bf00      	nop
  4010a0:	40018000 	.word	0x40018000
  4010a4:	004009b3 	.word	0x004009b3
  4010a8:	004070cc 	.word	0x004070cc
  4010ac:	00402039 	.word	0x00402039
  4010b0:	00400e31 	.word	0x00400e31
  4010b4:	00400905 	.word	0x00400905
  4010b8:	004070a8 	.word	0x004070a8

004010bc <max30100_write_reg>:

void max30100_write_reg(uint8_t addr, uint8_t *buffer, uint32_t bufferlen) {
  4010bc:	b500      	push	{lr}
  4010be:	b087      	sub	sp, #28
	twihs_packet_t packet_tx;

	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  4010c0:	2357      	movs	r3, #87	; 0x57
  4010c2:	f88d 3014 	strb.w	r3, [sp, #20]
	packet_tx.addr[0]     = addr;
  4010c6:	f88d 0004 	strb.w	r0, [sp, #4]
	packet_tx.addr_length = 1;
  4010ca:	2301      	movs	r3, #1
  4010cc:	9302      	str	r3, [sp, #8]
	packet_tx.buffer      = (uint8_t *) buffer;
  4010ce:	9103      	str	r1, [sp, #12]
	packet_tx.length      = bufferlen;
  4010d0:	9204      	str	r2, [sp, #16]

	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  4010d2:	a901      	add	r1, sp, #4
  4010d4:	4806      	ldr	r0, [pc, #24]	; (4010f0 <max30100_write_reg+0x34>)
  4010d6:	4b07      	ldr	r3, [pc, #28]	; (4010f4 <max30100_write_reg+0x38>)
  4010d8:	4798      	blx	r3
  4010da:	b118      	cbz	r0, 4010e4 <max30100_write_reg+0x28>
		puts("-E-\tTWI master write packet failed.\r");
  4010dc:	4806      	ldr	r0, [pc, #24]	; (4010f8 <max30100_write_reg+0x3c>)
  4010de:	4b07      	ldr	r3, [pc, #28]	; (4010fc <max30100_write_reg+0x40>)
  4010e0:	4798      	blx	r3
  4010e2:	e7fe      	b.n	4010e2 <max30100_write_reg+0x26>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  4010e4:	200a      	movs	r0, #10
  4010e6:	4b06      	ldr	r3, [pc, #24]	; (401100 <max30100_write_reg+0x44>)
  4010e8:	4798      	blx	r3
}
  4010ea:	b007      	add	sp, #28
  4010ec:	f85d fb04 	ldr.w	pc, [sp], #4
  4010f0:	40018000 	.word	0x40018000
  4010f4:	004009b3 	.word	0x004009b3
  4010f8:	004070cc 	.word	0x004070cc
  4010fc:	00402039 	.word	0x00402039
  401100:	00400e31 	.word	0x00400e31

00401104 <max30100_write8>:


void max30100_write8(uint8_t val) {
  401104:	b500      	push	{lr}
  401106:	b089      	sub	sp, #36	; 0x24
  401108:	f88d 0007 	strb.w	r0, [sp, #7]
	twihs_packet_t packet_tx;

	/* Configure the data packet to be transmitted */
	packet_tx.chip        = MAX30100_CHIP_ID;
  40110c:	2357      	movs	r3, #87	; 0x57
  40110e:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_tx.addr_length = 0;
  401112:	2300      	movs	r3, #0
  401114:	9304      	str	r3, [sp, #16]
	packet_tx.buffer      = &val;
  401116:	f10d 0307 	add.w	r3, sp, #7
  40111a:	9305      	str	r3, [sp, #20]
	packet_tx.length      = 1;
  40111c:	2301      	movs	r3, #1
  40111e:	9306      	str	r3, [sp, #24]

	if (twihs_master_write(MAX30100_I2C, &packet_tx) != TWIHS_SUCCESS) {
  401120:	a903      	add	r1, sp, #12
  401122:	4807      	ldr	r0, [pc, #28]	; (401140 <max30100_write8+0x3c>)
  401124:	4b07      	ldr	r3, [pc, #28]	; (401144 <max30100_write8+0x40>)
  401126:	4798      	blx	r3
  401128:	b118      	cbz	r0, 401132 <max30100_write8+0x2e>
		puts("-E-\tTWI master write packet failed.\r");
  40112a:	4807      	ldr	r0, [pc, #28]	; (401148 <max30100_write8+0x44>)
  40112c:	4b07      	ldr	r3, [pc, #28]	; (40114c <max30100_write8+0x48>)
  40112e:	4798      	blx	r3
  401130:	e7fe      	b.n	401130 <max30100_write8+0x2c>
		while (1) {
			
		}
	}
	
	mdelay(WAIT_TIME);
  401132:	200a      	movs	r0, #10
  401134:	4b06      	ldr	r3, [pc, #24]	; (401150 <max30100_write8+0x4c>)
  401136:	4798      	blx	r3
}
  401138:	b009      	add	sp, #36	; 0x24
  40113a:	f85d fb04 	ldr.w	pc, [sp], #4
  40113e:	bf00      	nop
  401140:	40018000 	.word	0x40018000
  401144:	004009b3 	.word	0x004009b3
  401148:	004070cc 	.word	0x004070cc
  40114c:	00402039 	.word	0x00402039
  401150:	00400e31 	.word	0x00400e31

00401154 <max30100_read_reg8>:


uint8_t max30100_read_reg8(uint8_t addr) {
  401154:	b500      	push	{lr}
  401156:	b083      	sub	sp, #12
	uint8_t data;
	
	max30100_read_reg(addr, &data, 1);
  401158:	2201      	movs	r2, #1
  40115a:	f10d 0107 	add.w	r1, sp, #7
  40115e:	4b03      	ldr	r3, [pc, #12]	; (40116c <max30100_read_reg8+0x18>)
  401160:	4798      	blx	r3
	return data;
}
  401162:	f89d 0007 	ldrb.w	r0, [sp, #7]
  401166:	b003      	add	sp, #12
  401168:	f85d fb04 	ldr.w	pc, [sp], #4
  40116c:	00401045 	.word	0x00401045

00401170 <max30100_write_reg8>:
	max30100_read_reg(addr, &data, 2);
	return data;
}


void max30100_write_reg8(uint8_t addr, uint8_t value) {
  401170:	b500      	push	{lr}
  401172:	b083      	sub	sp, #12
  401174:	ab02      	add	r3, sp, #8
  401176:	f803 1d01 	strb.w	r1, [r3, #-1]!
	max30100_write_reg(addr, &value, 1);
  40117a:	2201      	movs	r2, #1
  40117c:	4619      	mov	r1, r3
  40117e:	4b02      	ldr	r3, [pc, #8]	; (401188 <max30100_write_reg8+0x18>)
  401180:	4798      	blx	r3
}
  401182:	b003      	add	sp, #12
  401184:	f85d fb04 	ldr.w	pc, [sp], #4
  401188:	004010bd 	.word	0x004010bd

0040118c <max30100_setspo2samplerate>:
	  temp += tfrac * 0.0625;
	  return temp;
	  
}

void max30100_setspo2samplerate(max30100_spo2_samplerate_t rate) {
  40118c:	b510      	push	{r4, lr}
  40118e:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  401190:	2007      	movs	r0, #7
  401192:	4b05      	ldr	r3, [pc, #20]	; (4011a8 <max30100_setspo2samplerate+0x1c>)
  401194:	4798      	blx	r3

	v &= 0b11100011; // clear out old settings
  401196:	f020 011c 	bic.w	r1, r0, #28
	v |= rate << 2;
  40119a:	ea41 0184 	orr.w	r1, r1, r4, lsl #2
	max30100_write_reg8(MAX30100_SPO2CFG_REG, v);
  40119e:	b2c9      	uxtb	r1, r1
  4011a0:	2007      	movs	r0, #7
  4011a2:	4b02      	ldr	r3, [pc, #8]	; (4011ac <max30100_setspo2samplerate+0x20>)
  4011a4:	4798      	blx	r3
  4011a6:	bd10      	pop	{r4, pc}
  4011a8:	00401155 	.word	0x00401155
  4011ac:	00401171 	.word	0x00401171

004011b0 <max30100_getspo2samplerate>:
}

max30100_spo2_samplerate_t max30100_getspo2samplerate(void) {
  4011b0:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  4011b2:	2007      	movs	r0, #7
  4011b4:	4b02      	ldr	r3, [pc, #8]	; (4011c0 <max30100_getspo2samplerate+0x10>)
  4011b6:	4798      	blx	r3
	v >>= 2;
	v &= 0x7; // mask off only the 3 bits

	return (max30100_spo2_samplerate_t)v;
}
  4011b8:	f3c0 0082 	ubfx	r0, r0, #2, #3
  4011bc:	bd08      	pop	{r3, pc}
  4011be:	bf00      	nop
  4011c0:	00401155 	.word	0x00401155

004011c4 <max30100_readfifo>:
	max30100_write_reg8(MAX30100_FIFO_OVERFLOW_REG, 0);
	max30100_write_reg8(MAX30100_FIFO_RDPTR_REG, 0);
}


uint8_t max30100_readfifo(uint32_t *fifoptr, uint8_t maxentries) {
  4011c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4011c8:	b090      	sub	sp, #64	; 0x40
  4011ca:	4680      	mov	r8, r0
  4011cc:	460e      	mov	r6, r1
	uint32_t t;
	int8_t numsamples = 0;
	uint8_t buffer[64];
	
	do {
		int8_t wrptr = max30100_read_reg8(MAX30100_FIFO_WRPTR_REG);
  4011ce:	4d20      	ldr	r5, [pc, #128]	; (401250 <max30100_readfifo+0x8c>)
	  
		numsamples = wrptr - rdptr;
		if (numsamples < 0) numsamples +=16;
	  
		numsamples = min(maxentries, numsamples);
		printf("%d samples avail", numsamples);
  4011d0:	f8df 9090 	ldr.w	r9, [pc, #144]	; 401264 <max30100_readfifo+0xa0>
  4011d4:	4f1f      	ldr	r7, [pc, #124]	; (401254 <max30100_readfifo+0x90>)
  4011d6:	e00e      	b.n	4011f6 <max30100_readfifo+0x32>
		numsamples = min(maxentries, numsamples);
  4011d8:	42b3      	cmp	r3, r6
  4011da:	bfa8      	it	ge
  4011dc:	4633      	movge	r3, r6
  4011de:	461c      	mov	r4, r3
		printf("%d samples avail", numsamples);
  4011e0:	fa4f fa83 	sxtb.w	sl, r3
  4011e4:	4651      	mov	r1, sl
  4011e6:	4648      	mov	r0, r9
  4011e8:	47b8      	blx	r7
		mdelay(2000);
  4011ea:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
  4011ee:	4b1a      	ldr	r3, [pc, #104]	; (401258 <max30100_readfifo+0x94>)
  4011f0:	4798      	blx	r3
	  } while (numsamples < maxentries);
  4011f2:	4556      	cmp	r6, sl
  4011f4:	dd0c      	ble.n	401210 <max30100_readfifo+0x4c>
		int8_t wrptr = max30100_read_reg8(MAX30100_FIFO_WRPTR_REG);
  4011f6:	2002      	movs	r0, #2
  4011f8:	47a8      	blx	r5
  4011fa:	4604      	mov	r4, r0
		int8_t rdptr = max30100_read_reg8(MAX30100_FIFO_RDPTR_REG);
  4011fc:	2004      	movs	r0, #4
  4011fe:	47a8      	blx	r5
		numsamples = wrptr - rdptr;
  401200:	1a20      	subs	r0, r4, r0
  401202:	b2c0      	uxtb	r0, r0
  401204:	b243      	sxtb	r3, r0
		if (numsamples < 0) numsamples +=16;
  401206:	2b00      	cmp	r3, #0
  401208:	dae6      	bge.n	4011d8 <max30100_readfifo+0x14>
  40120a:	3010      	adds	r0, #16
  40120c:	b243      	sxtb	r3, r0
  40120e:	e7e3      	b.n	4011d8 <max30100_readfifo+0x14>

	max30100_write8(MAX30100_FIFO_DATA_REG);
  401210:	2005      	movs	r0, #5
  401212:	4b12      	ldr	r3, [pc, #72]	; (40125c <max30100_readfifo+0x98>)
  401214:	4798      	blx	r3
	max30100_read(buffer, numsamples *4 );
  401216:	ea4f 018a 	mov.w	r1, sl, lsl #2
  40121a:	4668      	mov	r0, sp
  40121c:	4b10      	ldr	r3, [pc, #64]	; (401260 <max30100_readfifo+0x9c>)
  40121e:	4798      	blx	r3
  401220:	466b      	mov	r3, sp
  401222:	f1a8 0704 	sub.w	r7, r8, #4
  401226:	a808      	add	r0, sp, #32
	  for (uint8_t i=0; i<8; i++) {
		  t = buffer[i*4];
  401228:	781a      	ldrb	r2, [r3, #0]
		  t <<= 8;
		  t |= buffer[i*4+1];
  40122a:	7859      	ldrb	r1, [r3, #1]
  40122c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
		  t <<= 8;
		  t |= buffer[i*4+2];
  401230:	789a      	ldrb	r2, [r3, #2]
  401232:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
		  t <<= 8;
		  t |= buffer[i*4+3];
  401236:	78da      	ldrb	r2, [r3, #3]
  401238:	ea42 2201 	orr.w	r2, r2, r1, lsl #8

		  fifoptr[i] = t;
  40123c:	f847 2f04 	str.w	r2, [r7, #4]!
  401240:	3304      	adds	r3, #4
	  for (uint8_t i=0; i<8; i++) {
  401242:	4283      	cmp	r3, r0
  401244:	d1f0      	bne.n	401228 <max30100_readfifo+0x64>
	  }
	  return numsamples;
}
  401246:	b2e0      	uxtb	r0, r4
  401248:	b010      	add	sp, #64	; 0x40
  40124a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40124e:	bf00      	nop
  401250:	00401155 	.word	0x00401155
  401254:	00401f61 	.word	0x00401f61
  401258:	00400e31 	.word	0x00400e31
  40125c:	00401105 	.word	0x00401105
  401260:	00401005 	.word	0x00401005
  401264:	004070f4 	.word	0x004070f4

00401268 <max30100_set_led_pulse_width>:

	// set to spo2 + HR mode

}

void max30100_set_led_pulse_width(max30100_led_pulsewidth_t pw) {
  401268:	b510      	push	{r4, lr}
  40126a:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  40126c:	2007      	movs	r0, #7
  40126e:	4b04      	ldr	r3, [pc, #16]	; (401280 <max30100_set_led_pulse_width+0x18>)
  401270:	4798      	blx	r3
	v &= 0b11111100; // clear out old settings
  401272:	f000 01fc 	and.w	r1, r0, #252	; 0xfc
	v |= pw;
	max30100_write_reg8(MAX30100_SPO2CFG_REG, v);
  401276:	4321      	orrs	r1, r4
  401278:	2007      	movs	r0, #7
  40127a:	4b02      	ldr	r3, [pc, #8]	; (401284 <max30100_set_led_pulse_width+0x1c>)
  40127c:	4798      	blx	r3
  40127e:	bd10      	pop	{r4, pc}
  401280:	00401155 	.word	0x00401155
  401284:	00401171 	.word	0x00401171

00401288 <max30100_get_led_pulse_width>:
}

max30100_led_pulsewidth_t max30100_get_led_pulse_width(void) {
  401288:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_SPO2CFG_REG);
  40128a:	2007      	movs	r0, #7
  40128c:	4b02      	ldr	r3, [pc, #8]	; (401298 <max30100_get_led_pulse_width+0x10>)
  40128e:	4798      	blx	r3
	v &= 0x03;
	return (max30100_led_pulsewidth_t)v;
}
  401290:	f000 0003 	and.w	r0, r0, #3
  401294:	bd08      	pop	{r3, pc}
  401296:	bf00      	nop
  401298:	00401155 	.word	0x00401155

0040129c <max30100_set_red_led_current>:

void max30100_set_red_led_current(max30100_led_current_t i) {
  40129c:	b510      	push	{r4, lr}
  40129e:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  4012a0:	2009      	movs	r0, #9
  4012a2:	4b05      	ldr	r3, [pc, #20]	; (4012b8 <max30100_set_red_led_current+0x1c>)
  4012a4:	4798      	blx	r3
	v &= 0x0F; // clear out old settings
  4012a6:	f000 010f 	and.w	r1, r0, #15
	v |= i << 4;
  4012aa:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
	max30100_write_reg8(MAX30100_LEDCFG_REG, v);
  4012ae:	b2c9      	uxtb	r1, r1
  4012b0:	2009      	movs	r0, #9
  4012b2:	4b02      	ldr	r3, [pc, #8]	; (4012bc <max30100_set_red_led_current+0x20>)
  4012b4:	4798      	blx	r3
  4012b6:	bd10      	pop	{r4, pc}
  4012b8:	00401155 	.word	0x00401155
  4012bc:	00401171 	.word	0x00401171

004012c0 <max30100_get_red_led_current>:
}

max30100_led_current_t max30100_get_red_led_current() {
  4012c0:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  4012c2:	2009      	movs	r0, #9
  4012c4:	4b02      	ldr	r3, [pc, #8]	; (4012d0 <max30100_get_red_led_current+0x10>)
  4012c6:	4798      	blx	r3
	return (max30100_led_current_t)(v >> 4);
}
  4012c8:	f3c0 1007 	ubfx	r0, r0, #4, #8
  4012cc:	bd08      	pop	{r3, pc}
  4012ce:	bf00      	nop
  4012d0:	00401155 	.word	0x00401155

004012d4 <max30100_set_ir_led_current>:
void max30100_set_interrupt_flag(uint8_t interrupt) {
	max30100_write_reg8(MAX30100_IRQENABLE_REG, interrupt);
}


void max30100_set_ir_led_current(max30100_led_current_t i) {
  4012d4:	b510      	push	{r4, lr}
  4012d6:	4604      	mov	r4, r0
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  4012d8:	2009      	movs	r0, #9
  4012da:	4b04      	ldr	r3, [pc, #16]	; (4012ec <max30100_set_ir_led_current+0x18>)
  4012dc:	4798      	blx	r3
	v &= 0xF0; // clear out old settings
  4012de:	f000 01f0 	and.w	r1, r0, #240	; 0xf0
	v |= i;
	max30100_write_reg8(MAX30100_LEDCFG_REG, v);
  4012e2:	4321      	orrs	r1, r4
  4012e4:	2009      	movs	r0, #9
  4012e6:	4b02      	ldr	r3, [pc, #8]	; (4012f0 <max30100_set_ir_led_current+0x1c>)
  4012e8:	4798      	blx	r3
  4012ea:	bd10      	pop	{r4, pc}
  4012ec:	00401155 	.word	0x00401155
  4012f0:	00401171 	.word	0x00401171

004012f4 <max30100_get_ir_led_current>:
}

max30100_led_current_t max30100_get_ir_led_current() {
  4012f4:	b508      	push	{r3, lr}
	uint8_t v;
	v = max30100_read_reg8(MAX30100_LEDCFG_REG);
  4012f6:	2009      	movs	r0, #9
  4012f8:	4b02      	ldr	r3, [pc, #8]	; (401304 <max30100_get_ir_led_current+0x10>)
  4012fa:	4798      	blx	r3
	return (max30100_led_current_t)(v & 0xF);
}
  4012fc:	f000 000f 	and.w	r0, r0, #15
  401300:	bd08      	pop	{r3, pc}
  401302:	bf00      	nop
  401304:	00401155 	.word	0x00401155

00401308 <max30100_init>:


void max30100_init() {
  401308:	b510      	push	{r4, lr}
  40130a:	b084      	sub	sp, #16
	twihs_options_t opt;
	
	/* Configure the options of TWI driver */
	opt.master_clk = sysclk_get_peripheral_hz();
  40130c:	4b15      	ldr	r3, [pc, #84]	; (401364 <max30100_init+0x5c>)
  40130e:	9301      	str	r3, [sp, #4]
	opt.speed      = TWIHS_CLK;
  401310:	4b15      	ldr	r3, [pc, #84]	; (401368 <max30100_init+0x60>)
  401312:	9302      	str	r3, [sp, #8]
	
	/* Enable the peripheral clock for TWI */
	pmc_enable_periph_clk(MAX30100_I2C_ID);
  401314:	2013      	movs	r0, #19
  401316:	4b15      	ldr	r3, [pc, #84]	; (40136c <max30100_init+0x64>)
  401318:	4798      	blx	r3
	
	if (twihs_master_init(MAX30100_I2C, &opt) != TWIHS_SUCCESS) {
  40131a:	a901      	add	r1, sp, #4
  40131c:	4814      	ldr	r0, [pc, #80]	; (401370 <max30100_init+0x68>)
  40131e:	4b15      	ldr	r3, [pc, #84]	; (401374 <max30100_init+0x6c>)
  401320:	4798      	blx	r3
  401322:	b118      	cbz	r0, 40132c <max30100_init+0x24>
		puts("-E-\tTWI master initialization failed.\r");
  401324:	4814      	ldr	r0, [pc, #80]	; (401378 <max30100_init+0x70>)
  401326:	4b15      	ldr	r3, [pc, #84]	; (40137c <max30100_init+0x74>)
  401328:	4798      	blx	r3
  40132a:	e7fe      	b.n	40132a <max30100_init+0x22>
		while (1) {
			/* Capture error */
		}
	}
	
	if(max30100_read_reg8(MAX30100_REG_PARTID) != MAX30100_EXPECTED_PARTID) {
  40132c:	20ff      	movs	r0, #255	; 0xff
  40132e:	4b14      	ldr	r3, [pc, #80]	; (401380 <max30100_init+0x78>)
  401330:	4798      	blx	r3
  401332:	2811      	cmp	r0, #17
  401334:	d003      	beq.n	40133e <max30100_init+0x36>
		puts("-E-\tRead wrong part ID from MAX30100.\r");
  401336:	4813      	ldr	r0, [pc, #76]	; (401384 <max30100_init+0x7c>)
  401338:	4b10      	ldr	r3, [pc, #64]	; (40137c <max30100_init+0x74>)
  40133a:	4798      	blx	r3
  40133c:	e7fe      	b.n	40133c <max30100_init+0x34>
		while(1){}
	}
	
	max30100_write_reg8(MAX30100_MODECFG_REG, MAX30100_MODECFG_HRONLY);
  40133e:	2102      	movs	r1, #2
  401340:	2006      	movs	r0, #6
  401342:	4c11      	ldr	r4, [pc, #68]	; (401388 <max30100_init+0x80>)
  401344:	47a0      	blx	r4
	max30100_set_led_pulse_width(MAX30100_LEDPW_1600US);
  401346:	2003      	movs	r0, #3
  401348:	4b10      	ldr	r3, [pc, #64]	; (40138c <max30100_init+0x84>)
  40134a:	4798      	blx	r3
	max30100_set_ir_led_current(MAX30100_LEDCURRENT_50MA);
  40134c:	200f      	movs	r0, #15
  40134e:	4b10      	ldr	r3, [pc, #64]	; (401390 <max30100_init+0x88>)
  401350:	4798      	blx	r3
	max30100_set_red_led_current(MAX30100_LEDCURRENT_50MA);
  401352:	200f      	movs	r0, #15
  401354:	4b0f      	ldr	r3, [pc, #60]	; (401394 <max30100_init+0x8c>)
  401356:	4798      	blx	r3
	max30100_write_reg8(MAX30100_SPO2CFG_REG, MAX30100_SPO2CFG_HIGHRES);
  401358:	2140      	movs	r1, #64	; 0x40
  40135a:	2007      	movs	r0, #7
  40135c:	47a0      	blx	r4

	
}
  40135e:	b004      	add	sp, #16
  401360:	bd10      	pop	{r4, pc}
  401362:	bf00      	nop
  401364:	08f0d180 	.word	0x08f0d180
  401368:	000186a0 	.word	0x000186a0
  40136c:	00400801 	.word	0x00400801
  401370:	40018000 	.word	0x40018000
  401374:	004008d1 	.word	0x004008d1
  401378:	00407058 	.word	0x00407058
  40137c:	00402039 	.word	0x00402039
  401380:	00401155 	.word	0x00401155
  401384:	00407080 	.word	0x00407080
  401388:	00401171 	.word	0x00401171
  40138c:	00401269 	.word	0x00401269
  401390:	004012d5 	.word	0x004012d5
  401394:	0040129d 	.word	0x0040129d

00401398 <main>:
 * \brief Application entry point for TWI EEPROM example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  401398:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40139c:	b096      	sub	sp, #88	; 0x58
	uint32_t buffer[16];
	
	/* Initialize the SAM system */
	sysclk_init();
  40139e:	4b83      	ldr	r3, [pc, #524]	; (4015ac <main+0x214>)
  4013a0:	4798      	blx	r3

	/* Initialize the board */
	board_init();
  4013a2:	4b83      	ldr	r3, [pc, #524]	; (4015b0 <main+0x218>)
  4013a4:	4798      	blx	r3
  4013a6:	200e      	movs	r0, #14
  4013a8:	4e82      	ldr	r6, [pc, #520]	; (4015b4 <main+0x21c>)
  4013aa:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4013ac:	4d82      	ldr	r5, [pc, #520]	; (4015b8 <main+0x220>)
  4013ae:	4b83      	ldr	r3, [pc, #524]	; (4015bc <main+0x224>)
  4013b0:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4013b2:	4a83      	ldr	r2, [pc, #524]	; (4015c0 <main+0x228>)
  4013b4:	4b83      	ldr	r3, [pc, #524]	; (4015c4 <main+0x22c>)
  4013b6:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4013b8:	4a83      	ldr	r2, [pc, #524]	; (4015c8 <main+0x230>)
  4013ba:	4b84      	ldr	r3, [pc, #528]	; (4015cc <main+0x234>)
  4013bc:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  4013be:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4013c2:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  4013c4:	23c0      	movs	r3, #192	; 0xc0
  4013c6:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  4013c8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4013cc:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  4013ce:	2400      	movs	r4, #0
  4013d0:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4013d2:	9404      	str	r4, [sp, #16]
  4013d4:	200e      	movs	r0, #14
  4013d6:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  4013d8:	4a7d      	ldr	r2, [pc, #500]	; (4015d0 <main+0x238>)
  4013da:	4669      	mov	r1, sp
  4013dc:	4628      	mov	r0, r5
  4013de:	4b7d      	ldr	r3, [pc, #500]	; (4015d4 <main+0x23c>)
  4013e0:	4798      	blx	r3
		usart_enable_tx(p_usart);
  4013e2:	4628      	mov	r0, r5
  4013e4:	4b7c      	ldr	r3, [pc, #496]	; (4015d8 <main+0x240>)
  4013e6:	4798      	blx	r3
		usart_enable_rx(p_usart);
  4013e8:	4628      	mov	r0, r5
  4013ea:	4b7c      	ldr	r3, [pc, #496]	; (4015dc <main+0x244>)
  4013ec:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4013ee:	4e7c      	ldr	r6, [pc, #496]	; (4015e0 <main+0x248>)
  4013f0:	6833      	ldr	r3, [r6, #0]
  4013f2:	4621      	mov	r1, r4
  4013f4:	6898      	ldr	r0, [r3, #8]
  4013f6:	4d7b      	ldr	r5, [pc, #492]	; (4015e4 <main+0x24c>)
  4013f8:	47a8      	blx	r5
	setbuf(stdin, NULL);
  4013fa:	6833      	ldr	r3, [r6, #0]
  4013fc:	4621      	mov	r1, r4
  4013fe:	6858      	ldr	r0, [r3, #4]
  401400:	47a8      	blx	r5

    /* Initialize the console UART */
	configure_console();
	pio_configure(PIOB, PIO_INPUT, 1 << 1, PIO_DEFAULT);
  401402:	4623      	mov	r3, r4
  401404:	2202      	movs	r2, #2
  401406:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40140a:	4877      	ldr	r0, [pc, #476]	; (4015e8 <main+0x250>)
  40140c:	4d77      	ldr	r5, [pc, #476]	; (4015ec <main+0x254>)
  40140e:	47a8      	blx	r5
	
	/* Configure systick for 1 ms */
	puts("Configure system tick to get 1ms tick period.\r");
  401410:	4877      	ldr	r0, [pc, #476]	; (4015f0 <main+0x258>)
  401412:	4d78      	ldr	r5, [pc, #480]	; (4015f4 <main+0x25c>)
  401414:	47a8      	blx	r5
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  401416:	4b78      	ldr	r3, [pc, #480]	; (4015f8 <main+0x260>)
  401418:	4a78      	ldr	r2, [pc, #480]	; (4015fc <main+0x264>)
  40141a:	605a      	str	r2, [r3, #4]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40141c:	21e0      	movs	r1, #224	; 0xe0
  40141e:	4a78      	ldr	r2, [pc, #480]	; (401600 <main+0x268>)
  401420:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
  401424:	609c      	str	r4, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  401426:	2207      	movs	r2, #7
  401428:	601a      	str	r2, [r3, #0]
		while (1) {
			/* Capture error */
		}
	}
	
	max30100_init();
  40142a:	4b76      	ldr	r3, [pc, #472]	; (401604 <main+0x26c>)
  40142c:	4798      	blx	r3
	puts("MAX30100 detected!");
  40142e:	4876      	ldr	r0, [pc, #472]	; (401608 <main+0x270>)
  401430:	47a8      	blx	r5
	puts("MAX30100 reset complete");
  401432:	4876      	ldr	r0, [pc, #472]	; (40160c <main+0x274>)
  401434:	47a8      	blx	r5
	
	max30100_setspo2samplerate(MAX30100_SPO2SR_50HZ);
  401436:	4620      	mov	r0, r4
  401438:	4b75      	ldr	r3, [pc, #468]	; (401610 <main+0x278>)
  40143a:	4798      	blx	r3
	max30100_spo2_samplerate_t rate = max30100_getspo2samplerate();
  40143c:	4b75      	ldr	r3, [pc, #468]	; (401614 <main+0x27c>)
  40143e:	4798      	blx	r3
	uint16_t ratehz = 0;
	switch (rate) {
  401440:	2807      	cmp	r0, #7
  401442:	d826      	bhi.n	401492 <main+0xfa>
  401444:	e8df f000 	tbb	[pc, r0]
  401448:	17151304 	.word	0x17151304
  40144c:	221f1c19 	.word	0x221f1c19
		case MAX30100_SPO2SR_50HZ: ratehz = 50; break;
  401450:	2132      	movs	r1, #50	; 0x32
		case MAX30100_SPO2SR_400HZ: ratehz = 400; break;
		case MAX30100_SPO2SR_600HZ: ratehz = 600; break;
		case MAX30100_SPO2SR_800HZ: ratehz = 800; break;
		case MAX30100_SPO2SR_1000HZ: ratehz = 1000; break;
	}
	printf("SpO2 sample rate = %d Hz\n", ratehz); 
  401452:	4871      	ldr	r0, [pc, #452]	; (401618 <main+0x280>)
  401454:	4b71      	ldr	r3, [pc, #452]	; (40161c <main+0x284>)
  401456:	4798      	blx	r3
	
	max30100_set_led_pulse_width(MAX30100_LEDPW_1600US);
  401458:	2003      	movs	r0, #3
  40145a:	4b71      	ldr	r3, [pc, #452]	; (401620 <main+0x288>)
  40145c:	4798      	blx	r3
	max30100_led_pulsewidth_t width = max30100_get_led_pulse_width();
  40145e:	4b71      	ldr	r3, [pc, #452]	; (401624 <main+0x28c>)
  401460:	4798      	blx	r3
	uint16_t pulsewidth = 0;
	switch (width) {
  401462:	2803      	cmp	r0, #3
  401464:	d841      	bhi.n	4014ea <main+0x152>
  401466:	e8df f000 	tbb	[pc, r0]
  40146a:	3716      	.short	0x3716
  40146c:	3d3a      	.short	0x3d3a
		case MAX30100_SPO2SR_100HZ: ratehz = 100; break;
  40146e:	2164      	movs	r1, #100	; 0x64
  401470:	e7ef      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_167HZ: ratehz = 167; break;
  401472:	21a7      	movs	r1, #167	; 0xa7
  401474:	e7ed      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_200HZ: ratehz = 200; break;
  401476:	21c8      	movs	r1, #200	; 0xc8
  401478:	e7eb      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_400HZ: ratehz = 400; break;
  40147a:	f44f 71c8 	mov.w	r1, #400	; 0x190
  40147e:	e7e8      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_600HZ: ratehz = 600; break;
  401480:	f44f 7116 	mov.w	r1, #600	; 0x258
  401484:	e7e5      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_800HZ: ratehz = 800; break;
  401486:	f44f 7148 	mov.w	r1, #800	; 0x320
  40148a:	e7e2      	b.n	401452 <main+0xba>
		case MAX30100_SPO2SR_1000HZ: ratehz = 1000; break;
  40148c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  401490:	e7df      	b.n	401452 <main+0xba>
	uint16_t ratehz = 0;
  401492:	2100      	movs	r1, #0
  401494:	e7dd      	b.n	401452 <main+0xba>
		case  MAX30100_LEDPW_200US: pulsewidth = 200; break;
  401496:	21c8      	movs	r1, #200	; 0xc8
		case  MAX30100_LEDPW_400US: pulsewidth = 400; break;
		case  MAX30100_LEDPW_800US: pulsewidth = 800; break;
		case  MAX30100_LEDPW_1600US: pulsewidth = 1600; break;
	}
	printf("LED pulse width = %d uS\n", pulsewidth); 
  401498:	4863      	ldr	r0, [pc, #396]	; (401628 <main+0x290>)
  40149a:	4b60      	ldr	r3, [pc, #384]	; (40161c <main+0x284>)
  40149c:	4798      	blx	r3
	
	max30100_set_red_led_current(MAX30100_LEDCURRENT_27_1MA);
  40149e:	2008      	movs	r0, #8
  4014a0:	4b62      	ldr	r3, [pc, #392]	; (40162c <main+0x294>)
  4014a2:	4798      	blx	r3
	max30100_set_ir_led_current(MAX30100_LEDCURRENT_50MA);
  4014a4:	200f      	movs	r0, #15
  4014a6:	4b62      	ldr	r3, [pc, #392]	; (401630 <main+0x298>)
  4014a8:	4798      	blx	r3
	max30100_led_current_t red = max30100_get_red_led_current();
  4014aa:	4b62      	ldr	r3, [pc, #392]	; (401634 <main+0x29c>)
  4014ac:	4798      	blx	r3
  4014ae:	4604      	mov	r4, r0
	max30100_led_current_t ir = max30100_get_ir_led_current();
  4014b0:	4b61      	ldr	r3, [pc, #388]	; (401638 <main+0x2a0>)
  4014b2:	4798      	blx	r3
  4014b4:	4605      	mov	r5, r0
	max30100_write_reg8(MAX30100_MODECFG_REG, MAX30100_MODECFG_HRSP02);
  4014b6:	2103      	movs	r1, #3
  4014b8:	2006      	movs	r0, #6
  4014ba:	4b60      	ldr	r3, [pc, #384]	; (40163c <main+0x2a4>)
  4014bc:	4798      	blx	r3
	float ledcurrent = 0;
	switch (red) {
  4014be:	1e63      	subs	r3, r4, #1
  4014c0:	2b0e      	cmp	r3, #14
  4014c2:	d845      	bhi.n	401550 <main+0x1b8>
  4014c4:	e8df f003 	tbb	[pc, r3]
  4014c8:	2c2a2813 	.word	0x2c2a2813
  4014cc:	3432302e 	.word	0x3432302e
  4014d0:	3c3a3836 	.word	0x3c3a3836
  4014d4:	403e      	.short	0x403e
  4014d6:	42          	.byte	0x42
  4014d7:	00          	.byte	0x00
		case  MAX30100_LEDPW_400US: pulsewidth = 400; break;
  4014d8:	f44f 71c8 	mov.w	r1, #400	; 0x190
  4014dc:	e7dc      	b.n	401498 <main+0x100>
		case  MAX30100_LEDPW_800US: pulsewidth = 800; break;
  4014de:	f44f 7148 	mov.w	r1, #800	; 0x320
  4014e2:	e7d9      	b.n	401498 <main+0x100>
		case  MAX30100_LEDPW_1600US: pulsewidth = 1600; break;
  4014e4:	f44f 61c8 	mov.w	r1, #1600	; 0x640
  4014e8:	e7d6      	b.n	401498 <main+0x100>
	uint16_t pulsewidth = 0;
  4014ea:	2100      	movs	r1, #0
  4014ec:	e7d4      	b.n	401498 <main+0x100>
		case MAX30100_LEDCURRENT_0MA:    ledcurrent = 0; break;
		case MAX30100_LEDCURRENT_4_4MA:  ledcurrent = 4.4; break;
  4014ee:	4c54      	ldr	r4, [pc, #336]	; (401640 <main+0x2a8>)
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
	}
    printf("Red LED current = %f mA\n", ledcurrent); 
  4014f0:	4620      	mov	r0, r4
  4014f2:	4b54      	ldr	r3, [pc, #336]	; (401644 <main+0x2ac>)
  4014f4:	4798      	blx	r3
  4014f6:	4602      	mov	r2, r0
  4014f8:	460b      	mov	r3, r1
  4014fa:	4853      	ldr	r0, [pc, #332]	; (401648 <main+0x2b0>)
  4014fc:	4947      	ldr	r1, [pc, #284]	; (40161c <main+0x284>)
  4014fe:	4788      	blx	r1

	switch (ir) {
  401500:	2d0f      	cmp	r5, #15
  401502:	d828      	bhi.n	401556 <main+0x1be>
  401504:	e8df f005 	tbb	[pc, r5]
  401508:	39373526 	.word	0x39373526
  40150c:	413f3d3b 	.word	0x413f3d3b
  401510:	49474543 	.word	0x49474543
  401514:	c44f4d4b 	.word	0xc44f4d4b
		case MAX30100_LEDCURRENT_7_6MA:  ledcurrent = 7.6; break;
  401518:	4c4c      	ldr	r4, [pc, #304]	; (40164c <main+0x2b4>)
  40151a:	e7e9      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_11MA:   ledcurrent = 11; break;
  40151c:	4c4c      	ldr	r4, [pc, #304]	; (401650 <main+0x2b8>)
  40151e:	e7e7      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_14_2MA: ledcurrent = 14.2; break;
  401520:	4c4c      	ldr	r4, [pc, #304]	; (401654 <main+0x2bc>)
  401522:	e7e5      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_17_4MA: ledcurrent = 17.4; break;
  401524:	4c4c      	ldr	r4, [pc, #304]	; (401658 <main+0x2c0>)
  401526:	e7e3      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_20_8MA: ledcurrent = 20.8; break;
  401528:	4c4c      	ldr	r4, [pc, #304]	; (40165c <main+0x2c4>)
  40152a:	e7e1      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_24MA:   ledcurrent = 24; break;
  40152c:	4c4c      	ldr	r4, [pc, #304]	; (401660 <main+0x2c8>)
  40152e:	e7df      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_27_1MA: ledcurrent = 27.1; break;
  401530:	4c4c      	ldr	r4, [pc, #304]	; (401664 <main+0x2cc>)
  401532:	e7dd      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_30_6MA: ledcurrent = 30.6; break;
  401534:	4c4c      	ldr	r4, [pc, #304]	; (401668 <main+0x2d0>)
  401536:	e7db      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_33_8MA: ledcurrent = 33.8; break;
  401538:	4c4c      	ldr	r4, [pc, #304]	; (40166c <main+0x2d4>)
  40153a:	e7d9      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_37MA:   ledcurrent = 37; break;
  40153c:	4c4c      	ldr	r4, [pc, #304]	; (401670 <main+0x2d8>)
  40153e:	e7d7      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
  401540:	4c4c      	ldr	r4, [pc, #304]	; (401674 <main+0x2dc>)
  401542:	e7d5      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
  401544:	4c4c      	ldr	r4, [pc, #304]	; (401678 <main+0x2e0>)
  401546:	e7d3      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
  401548:	4c4c      	ldr	r4, [pc, #304]	; (40167c <main+0x2e4>)
  40154a:	e7d1      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
  40154c:	4c4c      	ldr	r4, [pc, #304]	; (401680 <main+0x2e8>)
  40154e:	e7cf      	b.n	4014f0 <main+0x158>
	float ledcurrent = 0;
  401550:	2400      	movs	r4, #0
  401552:	e7cd      	b.n	4014f0 <main+0x158>
		case MAX30100_LEDCURRENT_0MA:    ledcurrent = 0; break;
  401554:	2400      	movs	r4, #0
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
	}
	printf("IR LED current = %f mA\n", ledcurrent); 
  401556:	4620      	mov	r0, r4
  401558:	4b3a      	ldr	r3, [pc, #232]	; (401644 <main+0x2ac>)
  40155a:	4798      	blx	r3
  40155c:	4602      	mov	r2, r0
  40155e:	460b      	mov	r3, r1
  401560:	4848      	ldr	r0, [pc, #288]	; (401684 <main+0x2ec>)
  401562:	492e      	ldr	r1, [pc, #184]	; (40161c <main+0x284>)
  401564:	4788      	blx	r1

	//max30100_start_read();

	while (1) {
		uint8_t read = max30100_readfifo(buffer, 16);
  401566:	f8df a120 	ldr.w	sl, [pc, #288]	; 401688 <main+0x2f0>
		printf("got %d reads\n", read);
  40156a:	f8df 9120 	ldr.w	r9, [pc, #288]	; 40168c <main+0x2f4>
  40156e:	4e2b      	ldr	r6, [pc, #172]	; (40161c <main+0x284>)
  401570:	e097      	b.n	4016a2 <main+0x30a>
		case MAX30100_LEDCURRENT_4_4MA:  ledcurrent = 4.4; break;
  401572:	4c33      	ldr	r4, [pc, #204]	; (401640 <main+0x2a8>)
  401574:	e7ef      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_7_6MA:  ledcurrent = 7.6; break;
  401576:	4c35      	ldr	r4, [pc, #212]	; (40164c <main+0x2b4>)
  401578:	e7ed      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_11MA:   ledcurrent = 11; break;
  40157a:	4c35      	ldr	r4, [pc, #212]	; (401650 <main+0x2b8>)
  40157c:	e7eb      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_14_2MA: ledcurrent = 14.2; break;
  40157e:	4c35      	ldr	r4, [pc, #212]	; (401654 <main+0x2bc>)
  401580:	e7e9      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_17_4MA: ledcurrent = 17.4; break;
  401582:	4c35      	ldr	r4, [pc, #212]	; (401658 <main+0x2c0>)
  401584:	e7e7      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_20_8MA: ledcurrent = 20.8; break;
  401586:	4c35      	ldr	r4, [pc, #212]	; (40165c <main+0x2c4>)
  401588:	e7e5      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_24MA:   ledcurrent = 24; break;
  40158a:	4c35      	ldr	r4, [pc, #212]	; (401660 <main+0x2c8>)
  40158c:	e7e3      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_27_1MA: ledcurrent = 27.1; break;
  40158e:	4c35      	ldr	r4, [pc, #212]	; (401664 <main+0x2cc>)
  401590:	e7e1      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_30_6MA: ledcurrent = 30.6; break;
  401592:	4c35      	ldr	r4, [pc, #212]	; (401668 <main+0x2d0>)
  401594:	e7df      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_33_8MA: ledcurrent = 33.8; break;
  401596:	4c35      	ldr	r4, [pc, #212]	; (40166c <main+0x2d4>)
  401598:	e7dd      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_37MA:   ledcurrent = 37; break;
  40159a:	4c35      	ldr	r4, [pc, #212]	; (401670 <main+0x2d8>)
  40159c:	e7db      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_40_2MA: ledcurrent = 40.2; break;
  40159e:	4c35      	ldr	r4, [pc, #212]	; (401674 <main+0x2dc>)
  4015a0:	e7d9      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_43_6MA: ledcurrent = 43.6; break;
  4015a2:	4c35      	ldr	r4, [pc, #212]	; (401678 <main+0x2e0>)
  4015a4:	e7d7      	b.n	401556 <main+0x1be>
		case MAX30100_LEDCURRENT_46_8MA: ledcurrent = 46.8; break;
  4015a6:	4c35      	ldr	r4, [pc, #212]	; (40167c <main+0x2e4>)
  4015a8:	e7d5      	b.n	401556 <main+0x1be>
  4015aa:	bf00      	nop
  4015ac:	004001d5 	.word	0x004001d5
  4015b0:	004002d1 	.word	0x004002d1
  4015b4:	00400801 	.word	0x00400801
  4015b8:	40028000 	.word	0x40028000
  4015bc:	20400a8c 	.word	0x20400a8c
  4015c0:	00400f21 	.word	0x00400f21
  4015c4:	20400a88 	.word	0x20400a88
  4015c8:	00400e45 	.word	0x00400e45
  4015cc:	20400a84 	.word	0x20400a84
  4015d0:	08f0d180 	.word	0x08f0d180
  4015d4:	00400af1 	.word	0x00400af1
  4015d8:	00400b45 	.word	0x00400b45
  4015dc:	00400b4b 	.word	0x00400b4b
  4015e0:	20400008 	.word	0x20400008
  4015e4:	00402049 	.word	0x00402049
  4015e8:	400e1000 	.word	0x400e1000
  4015ec:	00400595 	.word	0x00400595
  4015f0:	00406f7c 	.word	0x00406f7c
  4015f4:	00402039 	.word	0x00402039
  4015f8:	e000e010 	.word	0xe000e010
  4015fc:	000493df 	.word	0x000493df
  401600:	e000ed00 	.word	0xe000ed00
  401604:	00401309 	.word	0x00401309
  401608:	00406fac 	.word	0x00406fac
  40160c:	00406fc0 	.word	0x00406fc0
  401610:	0040118d 	.word	0x0040118d
  401614:	004011b1 	.word	0x004011b1
  401618:	00406fd8 	.word	0x00406fd8
  40161c:	00401f61 	.word	0x00401f61
  401620:	00401269 	.word	0x00401269
  401624:	00401289 	.word	0x00401289
  401628:	00406ff4 	.word	0x00406ff4
  40162c:	0040129d 	.word	0x0040129d
  401630:	004012d5 	.word	0x004012d5
  401634:	004012c1 	.word	0x004012c1
  401638:	004012f5 	.word	0x004012f5
  40163c:	00401171 	.word	0x00401171
  401640:	408ccccd 	.word	0x408ccccd
  401644:	004019a9 	.word	0x004019a9
  401648:	00407010 	.word	0x00407010
  40164c:	40f33333 	.word	0x40f33333
  401650:	41300000 	.word	0x41300000
  401654:	41633333 	.word	0x41633333
  401658:	418b3333 	.word	0x418b3333
  40165c:	41a66666 	.word	0x41a66666
  401660:	41c00000 	.word	0x41c00000
  401664:	41d8cccd 	.word	0x41d8cccd
  401668:	41f4cccd 	.word	0x41f4cccd
  40166c:	42073333 	.word	0x42073333
  401670:	42140000 	.word	0x42140000
  401674:	4220cccd 	.word	0x4220cccd
  401678:	422e6666 	.word	0x422e6666
  40167c:	423b3333 	.word	0x423b3333
  401680:	42480000 	.word	0x42480000
  401684:	0040702c 	.word	0x0040702c
  401688:	004011c5 	.word	0x004011c5
  40168c:	00407044 	.word	0x00407044
		case MAX30100_LEDCURRENT_50MA:   ledcurrent = 50; break;
  401690:	4c0f      	ldr	r4, [pc, #60]	; (4016d0 <main+0x338>)
  401692:	e760      	b.n	401556 <main+0x1be>
		for(int i = 0; i < read; i++) {
			printf("%d ", buffer[i]);
		}
		printf("\n");
  401694:	200a      	movs	r0, #10
  401696:	4b0f      	ldr	r3, [pc, #60]	; (4016d4 <main+0x33c>)
  401698:	4798      	blx	r3
		mdelay(20000);
  40169a:	f644 6020 	movw	r0, #20000	; 0x4e20
  40169e:	4b0e      	ldr	r3, [pc, #56]	; (4016d8 <main+0x340>)
  4016a0:	4798      	blx	r3
		uint8_t read = max30100_readfifo(buffer, 16);
  4016a2:	2110      	movs	r1, #16
  4016a4:	a806      	add	r0, sp, #24
  4016a6:	47d0      	blx	sl
  4016a8:	4604      	mov	r4, r0
		printf("got %d reads\n", read);
  4016aa:	4607      	mov	r7, r0
  4016ac:	4601      	mov	r1, r0
  4016ae:	4648      	mov	r0, r9
  4016b0:	47b0      	blx	r6
		for(int i = 0; i < read; i++) {
  4016b2:	2c00      	cmp	r4, #0
  4016b4:	ddee      	ble.n	401694 <main+0x2fc>
  4016b6:	ad05      	add	r5, sp, #20
  4016b8:	2400      	movs	r4, #0
			printf("%d ", buffer[i]);
  4016ba:	f8df 8020 	ldr.w	r8, [pc, #32]	; 4016dc <main+0x344>
  4016be:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4016c2:	4640      	mov	r0, r8
  4016c4:	47b0      	blx	r6
		for(int i = 0; i < read; i++) {
  4016c6:	3401      	adds	r4, #1
  4016c8:	42a7      	cmp	r7, r4
  4016ca:	d1f8      	bne.n	4016be <main+0x326>
  4016cc:	e7e2      	b.n	401694 <main+0x2fc>
  4016ce:	bf00      	nop
  4016d0:	42480000 	.word	0x42480000
  4016d4:	00401f89 	.word	0x00401f89
  4016d8:	00400e31 	.word	0x00400e31
  4016dc:	00407054 	.word	0x00407054

004016e0 <__aeabi_drsub>:
  4016e0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4016e4:	e002      	b.n	4016ec <__adddf3>
  4016e6:	bf00      	nop

004016e8 <__aeabi_dsub>:
  4016e8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004016ec <__adddf3>:
  4016ec:	b530      	push	{r4, r5, lr}
  4016ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4016f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4016f6:	ea94 0f05 	teq	r4, r5
  4016fa:	bf08      	it	eq
  4016fc:	ea90 0f02 	teqeq	r0, r2
  401700:	bf1f      	itttt	ne
  401702:	ea54 0c00 	orrsne.w	ip, r4, r0
  401706:	ea55 0c02 	orrsne.w	ip, r5, r2
  40170a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40170e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401712:	f000 80e2 	beq.w	4018da <__adddf3+0x1ee>
  401716:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40171a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40171e:	bfb8      	it	lt
  401720:	426d      	neglt	r5, r5
  401722:	dd0c      	ble.n	40173e <__adddf3+0x52>
  401724:	442c      	add	r4, r5
  401726:	ea80 0202 	eor.w	r2, r0, r2
  40172a:	ea81 0303 	eor.w	r3, r1, r3
  40172e:	ea82 0000 	eor.w	r0, r2, r0
  401732:	ea83 0101 	eor.w	r1, r3, r1
  401736:	ea80 0202 	eor.w	r2, r0, r2
  40173a:	ea81 0303 	eor.w	r3, r1, r3
  40173e:	2d36      	cmp	r5, #54	; 0x36
  401740:	bf88      	it	hi
  401742:	bd30      	pophi	{r4, r5, pc}
  401744:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401748:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40174c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401750:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401754:	d002      	beq.n	40175c <__adddf3+0x70>
  401756:	4240      	negs	r0, r0
  401758:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40175c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401760:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401764:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401768:	d002      	beq.n	401770 <__adddf3+0x84>
  40176a:	4252      	negs	r2, r2
  40176c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401770:	ea94 0f05 	teq	r4, r5
  401774:	f000 80a7 	beq.w	4018c6 <__adddf3+0x1da>
  401778:	f1a4 0401 	sub.w	r4, r4, #1
  40177c:	f1d5 0e20 	rsbs	lr, r5, #32
  401780:	db0d      	blt.n	40179e <__adddf3+0xb2>
  401782:	fa02 fc0e 	lsl.w	ip, r2, lr
  401786:	fa22 f205 	lsr.w	r2, r2, r5
  40178a:	1880      	adds	r0, r0, r2
  40178c:	f141 0100 	adc.w	r1, r1, #0
  401790:	fa03 f20e 	lsl.w	r2, r3, lr
  401794:	1880      	adds	r0, r0, r2
  401796:	fa43 f305 	asr.w	r3, r3, r5
  40179a:	4159      	adcs	r1, r3
  40179c:	e00e      	b.n	4017bc <__adddf3+0xd0>
  40179e:	f1a5 0520 	sub.w	r5, r5, #32
  4017a2:	f10e 0e20 	add.w	lr, lr, #32
  4017a6:	2a01      	cmp	r2, #1
  4017a8:	fa03 fc0e 	lsl.w	ip, r3, lr
  4017ac:	bf28      	it	cs
  4017ae:	f04c 0c02 	orrcs.w	ip, ip, #2
  4017b2:	fa43 f305 	asr.w	r3, r3, r5
  4017b6:	18c0      	adds	r0, r0, r3
  4017b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4017bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4017c0:	d507      	bpl.n	4017d2 <__adddf3+0xe6>
  4017c2:	f04f 0e00 	mov.w	lr, #0
  4017c6:	f1dc 0c00 	rsbs	ip, ip, #0
  4017ca:	eb7e 0000 	sbcs.w	r0, lr, r0
  4017ce:	eb6e 0101 	sbc.w	r1, lr, r1
  4017d2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4017d6:	d31b      	bcc.n	401810 <__adddf3+0x124>
  4017d8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4017dc:	d30c      	bcc.n	4017f8 <__adddf3+0x10c>
  4017de:	0849      	lsrs	r1, r1, #1
  4017e0:	ea5f 0030 	movs.w	r0, r0, rrx
  4017e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4017e8:	f104 0401 	add.w	r4, r4, #1
  4017ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4017f0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4017f4:	f080 809a 	bcs.w	40192c <__adddf3+0x240>
  4017f8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4017fc:	bf08      	it	eq
  4017fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401802:	f150 0000 	adcs.w	r0, r0, #0
  401806:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40180a:	ea41 0105 	orr.w	r1, r1, r5
  40180e:	bd30      	pop	{r4, r5, pc}
  401810:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401814:	4140      	adcs	r0, r0
  401816:	eb41 0101 	adc.w	r1, r1, r1
  40181a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40181e:	f1a4 0401 	sub.w	r4, r4, #1
  401822:	d1e9      	bne.n	4017f8 <__adddf3+0x10c>
  401824:	f091 0f00 	teq	r1, #0
  401828:	bf04      	itt	eq
  40182a:	4601      	moveq	r1, r0
  40182c:	2000      	moveq	r0, #0
  40182e:	fab1 f381 	clz	r3, r1
  401832:	bf08      	it	eq
  401834:	3320      	addeq	r3, #32
  401836:	f1a3 030b 	sub.w	r3, r3, #11
  40183a:	f1b3 0220 	subs.w	r2, r3, #32
  40183e:	da0c      	bge.n	40185a <__adddf3+0x16e>
  401840:	320c      	adds	r2, #12
  401842:	dd08      	ble.n	401856 <__adddf3+0x16a>
  401844:	f102 0c14 	add.w	ip, r2, #20
  401848:	f1c2 020c 	rsb	r2, r2, #12
  40184c:	fa01 f00c 	lsl.w	r0, r1, ip
  401850:	fa21 f102 	lsr.w	r1, r1, r2
  401854:	e00c      	b.n	401870 <__adddf3+0x184>
  401856:	f102 0214 	add.w	r2, r2, #20
  40185a:	bfd8      	it	le
  40185c:	f1c2 0c20 	rsble	ip, r2, #32
  401860:	fa01 f102 	lsl.w	r1, r1, r2
  401864:	fa20 fc0c 	lsr.w	ip, r0, ip
  401868:	bfdc      	itt	le
  40186a:	ea41 010c 	orrle.w	r1, r1, ip
  40186e:	4090      	lslle	r0, r2
  401870:	1ae4      	subs	r4, r4, r3
  401872:	bfa2      	ittt	ge
  401874:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401878:	4329      	orrge	r1, r5
  40187a:	bd30      	popge	{r4, r5, pc}
  40187c:	ea6f 0404 	mvn.w	r4, r4
  401880:	3c1f      	subs	r4, #31
  401882:	da1c      	bge.n	4018be <__adddf3+0x1d2>
  401884:	340c      	adds	r4, #12
  401886:	dc0e      	bgt.n	4018a6 <__adddf3+0x1ba>
  401888:	f104 0414 	add.w	r4, r4, #20
  40188c:	f1c4 0220 	rsb	r2, r4, #32
  401890:	fa20 f004 	lsr.w	r0, r0, r4
  401894:	fa01 f302 	lsl.w	r3, r1, r2
  401898:	ea40 0003 	orr.w	r0, r0, r3
  40189c:	fa21 f304 	lsr.w	r3, r1, r4
  4018a0:	ea45 0103 	orr.w	r1, r5, r3
  4018a4:	bd30      	pop	{r4, r5, pc}
  4018a6:	f1c4 040c 	rsb	r4, r4, #12
  4018aa:	f1c4 0220 	rsb	r2, r4, #32
  4018ae:	fa20 f002 	lsr.w	r0, r0, r2
  4018b2:	fa01 f304 	lsl.w	r3, r1, r4
  4018b6:	ea40 0003 	orr.w	r0, r0, r3
  4018ba:	4629      	mov	r1, r5
  4018bc:	bd30      	pop	{r4, r5, pc}
  4018be:	fa21 f004 	lsr.w	r0, r1, r4
  4018c2:	4629      	mov	r1, r5
  4018c4:	bd30      	pop	{r4, r5, pc}
  4018c6:	f094 0f00 	teq	r4, #0
  4018ca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4018ce:	bf06      	itte	eq
  4018d0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4018d4:	3401      	addeq	r4, #1
  4018d6:	3d01      	subne	r5, #1
  4018d8:	e74e      	b.n	401778 <__adddf3+0x8c>
  4018da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4018de:	bf18      	it	ne
  4018e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4018e4:	d029      	beq.n	40193a <__adddf3+0x24e>
  4018e6:	ea94 0f05 	teq	r4, r5
  4018ea:	bf08      	it	eq
  4018ec:	ea90 0f02 	teqeq	r0, r2
  4018f0:	d005      	beq.n	4018fe <__adddf3+0x212>
  4018f2:	ea54 0c00 	orrs.w	ip, r4, r0
  4018f6:	bf04      	itt	eq
  4018f8:	4619      	moveq	r1, r3
  4018fa:	4610      	moveq	r0, r2
  4018fc:	bd30      	pop	{r4, r5, pc}
  4018fe:	ea91 0f03 	teq	r1, r3
  401902:	bf1e      	ittt	ne
  401904:	2100      	movne	r1, #0
  401906:	2000      	movne	r0, #0
  401908:	bd30      	popne	{r4, r5, pc}
  40190a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40190e:	d105      	bne.n	40191c <__adddf3+0x230>
  401910:	0040      	lsls	r0, r0, #1
  401912:	4149      	adcs	r1, r1
  401914:	bf28      	it	cs
  401916:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40191a:	bd30      	pop	{r4, r5, pc}
  40191c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401920:	bf3c      	itt	cc
  401922:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401926:	bd30      	popcc	{r4, r5, pc}
  401928:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40192c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401930:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401934:	f04f 0000 	mov.w	r0, #0
  401938:	bd30      	pop	{r4, r5, pc}
  40193a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40193e:	bf1a      	itte	ne
  401940:	4619      	movne	r1, r3
  401942:	4610      	movne	r0, r2
  401944:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401948:	bf1c      	itt	ne
  40194a:	460b      	movne	r3, r1
  40194c:	4602      	movne	r2, r0
  40194e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401952:	bf06      	itte	eq
  401954:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401958:	ea91 0f03 	teqeq	r1, r3
  40195c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401960:	bd30      	pop	{r4, r5, pc}
  401962:	bf00      	nop

00401964 <__aeabi_ui2d>:
  401964:	f090 0f00 	teq	r0, #0
  401968:	bf04      	itt	eq
  40196a:	2100      	moveq	r1, #0
  40196c:	4770      	bxeq	lr
  40196e:	b530      	push	{r4, r5, lr}
  401970:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401974:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401978:	f04f 0500 	mov.w	r5, #0
  40197c:	f04f 0100 	mov.w	r1, #0
  401980:	e750      	b.n	401824 <__adddf3+0x138>
  401982:	bf00      	nop

00401984 <__aeabi_i2d>:
  401984:	f090 0f00 	teq	r0, #0
  401988:	bf04      	itt	eq
  40198a:	2100      	moveq	r1, #0
  40198c:	4770      	bxeq	lr
  40198e:	b530      	push	{r4, r5, lr}
  401990:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401994:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401998:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  40199c:	bf48      	it	mi
  40199e:	4240      	negmi	r0, r0
  4019a0:	f04f 0100 	mov.w	r1, #0
  4019a4:	e73e      	b.n	401824 <__adddf3+0x138>
  4019a6:	bf00      	nop

004019a8 <__aeabi_f2d>:
  4019a8:	0042      	lsls	r2, r0, #1
  4019aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4019ae:	ea4f 0131 	mov.w	r1, r1, rrx
  4019b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4019b6:	bf1f      	itttt	ne
  4019b8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4019bc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4019c0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4019c4:	4770      	bxne	lr
  4019c6:	f092 0f00 	teq	r2, #0
  4019ca:	bf14      	ite	ne
  4019cc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4019d0:	4770      	bxeq	lr
  4019d2:	b530      	push	{r4, r5, lr}
  4019d4:	f44f 7460 	mov.w	r4, #896	; 0x380
  4019d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4019dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4019e0:	e720      	b.n	401824 <__adddf3+0x138>
  4019e2:	bf00      	nop

004019e4 <__aeabi_ul2d>:
  4019e4:	ea50 0201 	orrs.w	r2, r0, r1
  4019e8:	bf08      	it	eq
  4019ea:	4770      	bxeq	lr
  4019ec:	b530      	push	{r4, r5, lr}
  4019ee:	f04f 0500 	mov.w	r5, #0
  4019f2:	e00a      	b.n	401a0a <__aeabi_l2d+0x16>

004019f4 <__aeabi_l2d>:
  4019f4:	ea50 0201 	orrs.w	r2, r0, r1
  4019f8:	bf08      	it	eq
  4019fa:	4770      	bxeq	lr
  4019fc:	b530      	push	{r4, r5, lr}
  4019fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401a02:	d502      	bpl.n	401a0a <__aeabi_l2d+0x16>
  401a04:	4240      	negs	r0, r0
  401a06:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401a0a:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a0e:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a12:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401a16:	f43f aedc 	beq.w	4017d2 <__adddf3+0xe6>
  401a1a:	f04f 0203 	mov.w	r2, #3
  401a1e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401a22:	bf18      	it	ne
  401a24:	3203      	addne	r2, #3
  401a26:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401a2a:	bf18      	it	ne
  401a2c:	3203      	addne	r2, #3
  401a2e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401a32:	f1c2 0320 	rsb	r3, r2, #32
  401a36:	fa00 fc03 	lsl.w	ip, r0, r3
  401a3a:	fa20 f002 	lsr.w	r0, r0, r2
  401a3e:	fa01 fe03 	lsl.w	lr, r1, r3
  401a42:	ea40 000e 	orr.w	r0, r0, lr
  401a46:	fa21 f102 	lsr.w	r1, r1, r2
  401a4a:	4414      	add	r4, r2
  401a4c:	e6c1      	b.n	4017d2 <__adddf3+0xe6>
  401a4e:	bf00      	nop

00401a50 <__aeabi_dmul>:
  401a50:	b570      	push	{r4, r5, r6, lr}
  401a52:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401a56:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401a5a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401a5e:	bf1d      	ittte	ne
  401a60:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401a64:	ea94 0f0c 	teqne	r4, ip
  401a68:	ea95 0f0c 	teqne	r5, ip
  401a6c:	f000 f8de 	bleq	401c2c <__aeabi_dmul+0x1dc>
  401a70:	442c      	add	r4, r5
  401a72:	ea81 0603 	eor.w	r6, r1, r3
  401a76:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401a7a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401a7e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401a82:	bf18      	it	ne
  401a84:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401a88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401a8c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401a90:	d038      	beq.n	401b04 <__aeabi_dmul+0xb4>
  401a92:	fba0 ce02 	umull	ip, lr, r0, r2
  401a96:	f04f 0500 	mov.w	r5, #0
  401a9a:	fbe1 e502 	umlal	lr, r5, r1, r2
  401a9e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401aa2:	fbe0 e503 	umlal	lr, r5, r0, r3
  401aa6:	f04f 0600 	mov.w	r6, #0
  401aaa:	fbe1 5603 	umlal	r5, r6, r1, r3
  401aae:	f09c 0f00 	teq	ip, #0
  401ab2:	bf18      	it	ne
  401ab4:	f04e 0e01 	orrne.w	lr, lr, #1
  401ab8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401abc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401ac0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401ac4:	d204      	bcs.n	401ad0 <__aeabi_dmul+0x80>
  401ac6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401aca:	416d      	adcs	r5, r5
  401acc:	eb46 0606 	adc.w	r6, r6, r6
  401ad0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401ad4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401ad8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401adc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401ae0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401ae4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401ae8:	bf88      	it	hi
  401aea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401aee:	d81e      	bhi.n	401b2e <__aeabi_dmul+0xde>
  401af0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401af4:	bf08      	it	eq
  401af6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401afa:	f150 0000 	adcs.w	r0, r0, #0
  401afe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401b02:	bd70      	pop	{r4, r5, r6, pc}
  401b04:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401b08:	ea46 0101 	orr.w	r1, r6, r1
  401b0c:	ea40 0002 	orr.w	r0, r0, r2
  401b10:	ea81 0103 	eor.w	r1, r1, r3
  401b14:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401b18:	bfc2      	ittt	gt
  401b1a:	ebd4 050c 	rsbsgt	r5, r4, ip
  401b1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401b22:	bd70      	popgt	{r4, r5, r6, pc}
  401b24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b28:	f04f 0e00 	mov.w	lr, #0
  401b2c:	3c01      	subs	r4, #1
  401b2e:	f300 80ab 	bgt.w	401c88 <__aeabi_dmul+0x238>
  401b32:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401b36:	bfde      	ittt	le
  401b38:	2000      	movle	r0, #0
  401b3a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401b3e:	bd70      	pople	{r4, r5, r6, pc}
  401b40:	f1c4 0400 	rsb	r4, r4, #0
  401b44:	3c20      	subs	r4, #32
  401b46:	da35      	bge.n	401bb4 <__aeabi_dmul+0x164>
  401b48:	340c      	adds	r4, #12
  401b4a:	dc1b      	bgt.n	401b84 <__aeabi_dmul+0x134>
  401b4c:	f104 0414 	add.w	r4, r4, #20
  401b50:	f1c4 0520 	rsb	r5, r4, #32
  401b54:	fa00 f305 	lsl.w	r3, r0, r5
  401b58:	fa20 f004 	lsr.w	r0, r0, r4
  401b5c:	fa01 f205 	lsl.w	r2, r1, r5
  401b60:	ea40 0002 	orr.w	r0, r0, r2
  401b64:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401b68:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401b6c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401b70:	fa21 f604 	lsr.w	r6, r1, r4
  401b74:	eb42 0106 	adc.w	r1, r2, r6
  401b78:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401b7c:	bf08      	it	eq
  401b7e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401b82:	bd70      	pop	{r4, r5, r6, pc}
  401b84:	f1c4 040c 	rsb	r4, r4, #12
  401b88:	f1c4 0520 	rsb	r5, r4, #32
  401b8c:	fa00 f304 	lsl.w	r3, r0, r4
  401b90:	fa20 f005 	lsr.w	r0, r0, r5
  401b94:	fa01 f204 	lsl.w	r2, r1, r4
  401b98:	ea40 0002 	orr.w	r0, r0, r2
  401b9c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401ba0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401ba4:	f141 0100 	adc.w	r1, r1, #0
  401ba8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401bac:	bf08      	it	eq
  401bae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401bb2:	bd70      	pop	{r4, r5, r6, pc}
  401bb4:	f1c4 0520 	rsb	r5, r4, #32
  401bb8:	fa00 f205 	lsl.w	r2, r0, r5
  401bbc:	ea4e 0e02 	orr.w	lr, lr, r2
  401bc0:	fa20 f304 	lsr.w	r3, r0, r4
  401bc4:	fa01 f205 	lsl.w	r2, r1, r5
  401bc8:	ea43 0302 	orr.w	r3, r3, r2
  401bcc:	fa21 f004 	lsr.w	r0, r1, r4
  401bd0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401bd4:	fa21 f204 	lsr.w	r2, r1, r4
  401bd8:	ea20 0002 	bic.w	r0, r0, r2
  401bdc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401be0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401be4:	bf08      	it	eq
  401be6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401bea:	bd70      	pop	{r4, r5, r6, pc}
  401bec:	f094 0f00 	teq	r4, #0
  401bf0:	d10f      	bne.n	401c12 <__aeabi_dmul+0x1c2>
  401bf2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401bf6:	0040      	lsls	r0, r0, #1
  401bf8:	eb41 0101 	adc.w	r1, r1, r1
  401bfc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401c00:	bf08      	it	eq
  401c02:	3c01      	subeq	r4, #1
  401c04:	d0f7      	beq.n	401bf6 <__aeabi_dmul+0x1a6>
  401c06:	ea41 0106 	orr.w	r1, r1, r6
  401c0a:	f095 0f00 	teq	r5, #0
  401c0e:	bf18      	it	ne
  401c10:	4770      	bxne	lr
  401c12:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401c16:	0052      	lsls	r2, r2, #1
  401c18:	eb43 0303 	adc.w	r3, r3, r3
  401c1c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401c20:	bf08      	it	eq
  401c22:	3d01      	subeq	r5, #1
  401c24:	d0f7      	beq.n	401c16 <__aeabi_dmul+0x1c6>
  401c26:	ea43 0306 	orr.w	r3, r3, r6
  401c2a:	4770      	bx	lr
  401c2c:	ea94 0f0c 	teq	r4, ip
  401c30:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401c34:	bf18      	it	ne
  401c36:	ea95 0f0c 	teqne	r5, ip
  401c3a:	d00c      	beq.n	401c56 <__aeabi_dmul+0x206>
  401c3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401c40:	bf18      	it	ne
  401c42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401c46:	d1d1      	bne.n	401bec <__aeabi_dmul+0x19c>
  401c48:	ea81 0103 	eor.w	r1, r1, r3
  401c4c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c50:	f04f 0000 	mov.w	r0, #0
  401c54:	bd70      	pop	{r4, r5, r6, pc}
  401c56:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401c5a:	bf06      	itte	eq
  401c5c:	4610      	moveq	r0, r2
  401c5e:	4619      	moveq	r1, r3
  401c60:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401c64:	d019      	beq.n	401c9a <__aeabi_dmul+0x24a>
  401c66:	ea94 0f0c 	teq	r4, ip
  401c6a:	d102      	bne.n	401c72 <__aeabi_dmul+0x222>
  401c6c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401c70:	d113      	bne.n	401c9a <__aeabi_dmul+0x24a>
  401c72:	ea95 0f0c 	teq	r5, ip
  401c76:	d105      	bne.n	401c84 <__aeabi_dmul+0x234>
  401c78:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401c7c:	bf1c      	itt	ne
  401c7e:	4610      	movne	r0, r2
  401c80:	4619      	movne	r1, r3
  401c82:	d10a      	bne.n	401c9a <__aeabi_dmul+0x24a>
  401c84:	ea81 0103 	eor.w	r1, r1, r3
  401c88:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c8c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401c90:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401c94:	f04f 0000 	mov.w	r0, #0
  401c98:	bd70      	pop	{r4, r5, r6, pc}
  401c9a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401c9e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401ca2:	bd70      	pop	{r4, r5, r6, pc}

00401ca4 <__aeabi_ddiv>:
  401ca4:	b570      	push	{r4, r5, r6, lr}
  401ca6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401caa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401cae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401cb2:	bf1d      	ittte	ne
  401cb4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401cb8:	ea94 0f0c 	teqne	r4, ip
  401cbc:	ea95 0f0c 	teqne	r5, ip
  401cc0:	f000 f8a7 	bleq	401e12 <__aeabi_ddiv+0x16e>
  401cc4:	eba4 0405 	sub.w	r4, r4, r5
  401cc8:	ea81 0e03 	eor.w	lr, r1, r3
  401ccc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401cd0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401cd4:	f000 8088 	beq.w	401de8 <__aeabi_ddiv+0x144>
  401cd8:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401cdc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401ce0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401ce4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401ce8:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401cec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401cf0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401cf4:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401cf8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401cfc:	429d      	cmp	r5, r3
  401cfe:	bf08      	it	eq
  401d00:	4296      	cmpeq	r6, r2
  401d02:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401d06:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401d0a:	d202      	bcs.n	401d12 <__aeabi_ddiv+0x6e>
  401d0c:	085b      	lsrs	r3, r3, #1
  401d0e:	ea4f 0232 	mov.w	r2, r2, rrx
  401d12:	1ab6      	subs	r6, r6, r2
  401d14:	eb65 0503 	sbc.w	r5, r5, r3
  401d18:	085b      	lsrs	r3, r3, #1
  401d1a:	ea4f 0232 	mov.w	r2, r2, rrx
  401d1e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401d22:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401d26:	ebb6 0e02 	subs.w	lr, r6, r2
  401d2a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d2e:	bf22      	ittt	cs
  401d30:	1ab6      	subcs	r6, r6, r2
  401d32:	4675      	movcs	r5, lr
  401d34:	ea40 000c 	orrcs.w	r0, r0, ip
  401d38:	085b      	lsrs	r3, r3, #1
  401d3a:	ea4f 0232 	mov.w	r2, r2, rrx
  401d3e:	ebb6 0e02 	subs.w	lr, r6, r2
  401d42:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d46:	bf22      	ittt	cs
  401d48:	1ab6      	subcs	r6, r6, r2
  401d4a:	4675      	movcs	r5, lr
  401d4c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401d50:	085b      	lsrs	r3, r3, #1
  401d52:	ea4f 0232 	mov.w	r2, r2, rrx
  401d56:	ebb6 0e02 	subs.w	lr, r6, r2
  401d5a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d5e:	bf22      	ittt	cs
  401d60:	1ab6      	subcs	r6, r6, r2
  401d62:	4675      	movcs	r5, lr
  401d64:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401d68:	085b      	lsrs	r3, r3, #1
  401d6a:	ea4f 0232 	mov.w	r2, r2, rrx
  401d6e:	ebb6 0e02 	subs.w	lr, r6, r2
  401d72:	eb75 0e03 	sbcs.w	lr, r5, r3
  401d76:	bf22      	ittt	cs
  401d78:	1ab6      	subcs	r6, r6, r2
  401d7a:	4675      	movcs	r5, lr
  401d7c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401d80:	ea55 0e06 	orrs.w	lr, r5, r6
  401d84:	d018      	beq.n	401db8 <__aeabi_ddiv+0x114>
  401d86:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401d8a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401d8e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401d92:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401d96:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401d9a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401d9e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401da2:	d1c0      	bne.n	401d26 <__aeabi_ddiv+0x82>
  401da4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401da8:	d10b      	bne.n	401dc2 <__aeabi_ddiv+0x11e>
  401daa:	ea41 0100 	orr.w	r1, r1, r0
  401dae:	f04f 0000 	mov.w	r0, #0
  401db2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401db6:	e7b6      	b.n	401d26 <__aeabi_ddiv+0x82>
  401db8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401dbc:	bf04      	itt	eq
  401dbe:	4301      	orreq	r1, r0
  401dc0:	2000      	moveq	r0, #0
  401dc2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401dc6:	bf88      	it	hi
  401dc8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401dcc:	f63f aeaf 	bhi.w	401b2e <__aeabi_dmul+0xde>
  401dd0:	ebb5 0c03 	subs.w	ip, r5, r3
  401dd4:	bf04      	itt	eq
  401dd6:	ebb6 0c02 	subseq.w	ip, r6, r2
  401dda:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401dde:	f150 0000 	adcs.w	r0, r0, #0
  401de2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401de6:	bd70      	pop	{r4, r5, r6, pc}
  401de8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401dec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401df0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401df4:	bfc2      	ittt	gt
  401df6:	ebd4 050c 	rsbsgt	r5, r4, ip
  401dfa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401dfe:	bd70      	popgt	{r4, r5, r6, pc}
  401e00:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e04:	f04f 0e00 	mov.w	lr, #0
  401e08:	3c01      	subs	r4, #1
  401e0a:	e690      	b.n	401b2e <__aeabi_dmul+0xde>
  401e0c:	ea45 0e06 	orr.w	lr, r5, r6
  401e10:	e68d      	b.n	401b2e <__aeabi_dmul+0xde>
  401e12:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401e16:	ea94 0f0c 	teq	r4, ip
  401e1a:	bf08      	it	eq
  401e1c:	ea95 0f0c 	teqeq	r5, ip
  401e20:	f43f af3b 	beq.w	401c9a <__aeabi_dmul+0x24a>
  401e24:	ea94 0f0c 	teq	r4, ip
  401e28:	d10a      	bne.n	401e40 <__aeabi_ddiv+0x19c>
  401e2a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401e2e:	f47f af34 	bne.w	401c9a <__aeabi_dmul+0x24a>
  401e32:	ea95 0f0c 	teq	r5, ip
  401e36:	f47f af25 	bne.w	401c84 <__aeabi_dmul+0x234>
  401e3a:	4610      	mov	r0, r2
  401e3c:	4619      	mov	r1, r3
  401e3e:	e72c      	b.n	401c9a <__aeabi_dmul+0x24a>
  401e40:	ea95 0f0c 	teq	r5, ip
  401e44:	d106      	bne.n	401e54 <__aeabi_ddiv+0x1b0>
  401e46:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401e4a:	f43f aefd 	beq.w	401c48 <__aeabi_dmul+0x1f8>
  401e4e:	4610      	mov	r0, r2
  401e50:	4619      	mov	r1, r3
  401e52:	e722      	b.n	401c9a <__aeabi_dmul+0x24a>
  401e54:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401e58:	bf18      	it	ne
  401e5a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401e5e:	f47f aec5 	bne.w	401bec <__aeabi_dmul+0x19c>
  401e62:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401e66:	f47f af0d 	bne.w	401c84 <__aeabi_dmul+0x234>
  401e6a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401e6e:	f47f aeeb 	bne.w	401c48 <__aeabi_dmul+0x1f8>
  401e72:	e712      	b.n	401c9a <__aeabi_dmul+0x24a>

00401e74 <__libc_init_array>:
  401e74:	b570      	push	{r4, r5, r6, lr}
  401e76:	4e0f      	ldr	r6, [pc, #60]	; (401eb4 <__libc_init_array+0x40>)
  401e78:	4d0f      	ldr	r5, [pc, #60]	; (401eb8 <__libc_init_array+0x44>)
  401e7a:	1b76      	subs	r6, r6, r5
  401e7c:	10b6      	asrs	r6, r6, #2
  401e7e:	bf18      	it	ne
  401e80:	2400      	movne	r4, #0
  401e82:	d005      	beq.n	401e90 <__libc_init_array+0x1c>
  401e84:	3401      	adds	r4, #1
  401e86:	f855 3b04 	ldr.w	r3, [r5], #4
  401e8a:	4798      	blx	r3
  401e8c:	42a6      	cmp	r6, r4
  401e8e:	d1f9      	bne.n	401e84 <__libc_init_array+0x10>
  401e90:	4e0a      	ldr	r6, [pc, #40]	; (401ebc <__libc_init_array+0x48>)
  401e92:	4d0b      	ldr	r5, [pc, #44]	; (401ec0 <__libc_init_array+0x4c>)
  401e94:	1b76      	subs	r6, r6, r5
  401e96:	f005 fa7b 	bl	407390 <_init>
  401e9a:	10b6      	asrs	r6, r6, #2
  401e9c:	bf18      	it	ne
  401e9e:	2400      	movne	r4, #0
  401ea0:	d006      	beq.n	401eb0 <__libc_init_array+0x3c>
  401ea2:	3401      	adds	r4, #1
  401ea4:	f855 3b04 	ldr.w	r3, [r5], #4
  401ea8:	4798      	blx	r3
  401eaa:	42a6      	cmp	r6, r4
  401eac:	d1f9      	bne.n	401ea2 <__libc_init_array+0x2e>
  401eae:	bd70      	pop	{r4, r5, r6, pc}
  401eb0:	bd70      	pop	{r4, r5, r6, pc}
  401eb2:	bf00      	nop
  401eb4:	0040739c 	.word	0x0040739c
  401eb8:	0040739c 	.word	0x0040739c
  401ebc:	004073a4 	.word	0x004073a4
  401ec0:	0040739c 	.word	0x0040739c

00401ec4 <memset>:
  401ec4:	b470      	push	{r4, r5, r6}
  401ec6:	0786      	lsls	r6, r0, #30
  401ec8:	d046      	beq.n	401f58 <memset+0x94>
  401eca:	1e54      	subs	r4, r2, #1
  401ecc:	2a00      	cmp	r2, #0
  401ece:	d041      	beq.n	401f54 <memset+0x90>
  401ed0:	b2ca      	uxtb	r2, r1
  401ed2:	4603      	mov	r3, r0
  401ed4:	e002      	b.n	401edc <memset+0x18>
  401ed6:	f114 34ff 	adds.w	r4, r4, #4294967295
  401eda:	d33b      	bcc.n	401f54 <memset+0x90>
  401edc:	f803 2b01 	strb.w	r2, [r3], #1
  401ee0:	079d      	lsls	r5, r3, #30
  401ee2:	d1f8      	bne.n	401ed6 <memset+0x12>
  401ee4:	2c03      	cmp	r4, #3
  401ee6:	d92e      	bls.n	401f46 <memset+0x82>
  401ee8:	b2cd      	uxtb	r5, r1
  401eea:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401eee:	2c0f      	cmp	r4, #15
  401ef0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401ef4:	d919      	bls.n	401f2a <memset+0x66>
  401ef6:	f103 0210 	add.w	r2, r3, #16
  401efa:	4626      	mov	r6, r4
  401efc:	3e10      	subs	r6, #16
  401efe:	2e0f      	cmp	r6, #15
  401f00:	f842 5c10 	str.w	r5, [r2, #-16]
  401f04:	f842 5c0c 	str.w	r5, [r2, #-12]
  401f08:	f842 5c08 	str.w	r5, [r2, #-8]
  401f0c:	f842 5c04 	str.w	r5, [r2, #-4]
  401f10:	f102 0210 	add.w	r2, r2, #16
  401f14:	d8f2      	bhi.n	401efc <memset+0x38>
  401f16:	f1a4 0210 	sub.w	r2, r4, #16
  401f1a:	f022 020f 	bic.w	r2, r2, #15
  401f1e:	f004 040f 	and.w	r4, r4, #15
  401f22:	3210      	adds	r2, #16
  401f24:	2c03      	cmp	r4, #3
  401f26:	4413      	add	r3, r2
  401f28:	d90d      	bls.n	401f46 <memset+0x82>
  401f2a:	461e      	mov	r6, r3
  401f2c:	4622      	mov	r2, r4
  401f2e:	3a04      	subs	r2, #4
  401f30:	2a03      	cmp	r2, #3
  401f32:	f846 5b04 	str.w	r5, [r6], #4
  401f36:	d8fa      	bhi.n	401f2e <memset+0x6a>
  401f38:	1f22      	subs	r2, r4, #4
  401f3a:	f022 0203 	bic.w	r2, r2, #3
  401f3e:	3204      	adds	r2, #4
  401f40:	4413      	add	r3, r2
  401f42:	f004 0403 	and.w	r4, r4, #3
  401f46:	b12c      	cbz	r4, 401f54 <memset+0x90>
  401f48:	b2c9      	uxtb	r1, r1
  401f4a:	441c      	add	r4, r3
  401f4c:	f803 1b01 	strb.w	r1, [r3], #1
  401f50:	429c      	cmp	r4, r3
  401f52:	d1fb      	bne.n	401f4c <memset+0x88>
  401f54:	bc70      	pop	{r4, r5, r6}
  401f56:	4770      	bx	lr
  401f58:	4614      	mov	r4, r2
  401f5a:	4603      	mov	r3, r0
  401f5c:	e7c2      	b.n	401ee4 <memset+0x20>
  401f5e:	bf00      	nop

00401f60 <printf>:
  401f60:	b40f      	push	{r0, r1, r2, r3}
  401f62:	b500      	push	{lr}
  401f64:	4907      	ldr	r1, [pc, #28]	; (401f84 <printf+0x24>)
  401f66:	b083      	sub	sp, #12
  401f68:	ab04      	add	r3, sp, #16
  401f6a:	6808      	ldr	r0, [r1, #0]
  401f6c:	f853 2b04 	ldr.w	r2, [r3], #4
  401f70:	6881      	ldr	r1, [r0, #8]
  401f72:	9301      	str	r3, [sp, #4]
  401f74:	f000 f9b2 	bl	4022dc <_vfprintf_r>
  401f78:	b003      	add	sp, #12
  401f7a:	f85d eb04 	ldr.w	lr, [sp], #4
  401f7e:	b004      	add	sp, #16
  401f80:	4770      	bx	lr
  401f82:	bf00      	nop
  401f84:	20400008 	.word	0x20400008

00401f88 <putchar>:
  401f88:	4b03      	ldr	r3, [pc, #12]	; (401f98 <putchar+0x10>)
  401f8a:	681b      	ldr	r3, [r3, #0]
  401f8c:	4601      	mov	r1, r0
  401f8e:	689a      	ldr	r2, [r3, #8]
  401f90:	4618      	mov	r0, r3
  401f92:	f004 b881 	b.w	406098 <_putc_r>
  401f96:	bf00      	nop
  401f98:	20400008 	.word	0x20400008

00401f9c <_puts_r>:
  401f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  401f9e:	4605      	mov	r5, r0
  401fa0:	b089      	sub	sp, #36	; 0x24
  401fa2:	4608      	mov	r0, r1
  401fa4:	460c      	mov	r4, r1
  401fa6:	f000 f92b 	bl	402200 <strlen>
  401faa:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401fac:	4f21      	ldr	r7, [pc, #132]	; (402034 <_puts_r+0x98>)
  401fae:	9404      	str	r4, [sp, #16]
  401fb0:	2601      	movs	r6, #1
  401fb2:	1c44      	adds	r4, r0, #1
  401fb4:	a904      	add	r1, sp, #16
  401fb6:	2202      	movs	r2, #2
  401fb8:	9403      	str	r4, [sp, #12]
  401fba:	9005      	str	r0, [sp, #20]
  401fbc:	68ac      	ldr	r4, [r5, #8]
  401fbe:	9706      	str	r7, [sp, #24]
  401fc0:	9607      	str	r6, [sp, #28]
  401fc2:	9101      	str	r1, [sp, #4]
  401fc4:	9202      	str	r2, [sp, #8]
  401fc6:	b353      	cbz	r3, 40201e <_puts_r+0x82>
  401fc8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401fca:	f013 0f01 	tst.w	r3, #1
  401fce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401fd2:	b29a      	uxth	r2, r3
  401fd4:	d101      	bne.n	401fda <_puts_r+0x3e>
  401fd6:	0590      	lsls	r0, r2, #22
  401fd8:	d525      	bpl.n	402026 <_puts_r+0x8a>
  401fda:	0491      	lsls	r1, r2, #18
  401fdc:	d406      	bmi.n	401fec <_puts_r+0x50>
  401fde:	6e62      	ldr	r2, [r4, #100]	; 0x64
  401fe0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401fe4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401fe8:	81a3      	strh	r3, [r4, #12]
  401fea:	6662      	str	r2, [r4, #100]	; 0x64
  401fec:	4628      	mov	r0, r5
  401fee:	aa01      	add	r2, sp, #4
  401ff0:	4621      	mov	r1, r4
  401ff2:	f002 ff13 	bl	404e1c <__sfvwrite_r>
  401ff6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401ff8:	2800      	cmp	r0, #0
  401ffa:	bf0c      	ite	eq
  401ffc:	250a      	moveq	r5, #10
  401ffe:	f04f 35ff 	movne.w	r5, #4294967295
  402002:	07da      	lsls	r2, r3, #31
  402004:	d402      	bmi.n	40200c <_puts_r+0x70>
  402006:	89a3      	ldrh	r3, [r4, #12]
  402008:	059b      	lsls	r3, r3, #22
  40200a:	d502      	bpl.n	402012 <_puts_r+0x76>
  40200c:	4628      	mov	r0, r5
  40200e:	b009      	add	sp, #36	; 0x24
  402010:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402012:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402014:	f003 f8b8 	bl	405188 <__retarget_lock_release_recursive>
  402018:	4628      	mov	r0, r5
  40201a:	b009      	add	sp, #36	; 0x24
  40201c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40201e:	4628      	mov	r0, r5
  402020:	f002 fd74 	bl	404b0c <__sinit>
  402024:	e7d0      	b.n	401fc8 <_puts_r+0x2c>
  402026:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402028:	f003 f8ac 	bl	405184 <__retarget_lock_acquire_recursive>
  40202c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402030:	b29a      	uxth	r2, r3
  402032:	e7d2      	b.n	401fda <_puts_r+0x3e>
  402034:	00407050 	.word	0x00407050

00402038 <puts>:
  402038:	4b02      	ldr	r3, [pc, #8]	; (402044 <puts+0xc>)
  40203a:	4601      	mov	r1, r0
  40203c:	6818      	ldr	r0, [r3, #0]
  40203e:	f7ff bfad 	b.w	401f9c <_puts_r>
  402042:	bf00      	nop
  402044:	20400008 	.word	0x20400008

00402048 <setbuf>:
  402048:	2900      	cmp	r1, #0
  40204a:	bf0c      	ite	eq
  40204c:	2202      	moveq	r2, #2
  40204e:	2200      	movne	r2, #0
  402050:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402054:	f000 b800 	b.w	402058 <setvbuf>

00402058 <setvbuf>:
  402058:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40205c:	4c61      	ldr	r4, [pc, #388]	; (4021e4 <setvbuf+0x18c>)
  40205e:	6825      	ldr	r5, [r4, #0]
  402060:	b083      	sub	sp, #12
  402062:	4604      	mov	r4, r0
  402064:	460f      	mov	r7, r1
  402066:	4690      	mov	r8, r2
  402068:	461e      	mov	r6, r3
  40206a:	b115      	cbz	r5, 402072 <setvbuf+0x1a>
  40206c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40206e:	2b00      	cmp	r3, #0
  402070:	d064      	beq.n	40213c <setvbuf+0xe4>
  402072:	f1b8 0f02 	cmp.w	r8, #2
  402076:	d006      	beq.n	402086 <setvbuf+0x2e>
  402078:	f1b8 0f01 	cmp.w	r8, #1
  40207c:	f200 809f 	bhi.w	4021be <setvbuf+0x166>
  402080:	2e00      	cmp	r6, #0
  402082:	f2c0 809c 	blt.w	4021be <setvbuf+0x166>
  402086:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402088:	07d8      	lsls	r0, r3, #31
  40208a:	d534      	bpl.n	4020f6 <setvbuf+0x9e>
  40208c:	4621      	mov	r1, r4
  40208e:	4628      	mov	r0, r5
  402090:	f002 fce4 	bl	404a5c <_fflush_r>
  402094:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402096:	b141      	cbz	r1, 4020aa <setvbuf+0x52>
  402098:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40209c:	4299      	cmp	r1, r3
  40209e:	d002      	beq.n	4020a6 <setvbuf+0x4e>
  4020a0:	4628      	mov	r0, r5
  4020a2:	f002 fdd5 	bl	404c50 <_free_r>
  4020a6:	2300      	movs	r3, #0
  4020a8:	6323      	str	r3, [r4, #48]	; 0x30
  4020aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4020ae:	2200      	movs	r2, #0
  4020b0:	61a2      	str	r2, [r4, #24]
  4020b2:	6062      	str	r2, [r4, #4]
  4020b4:	061a      	lsls	r2, r3, #24
  4020b6:	d43a      	bmi.n	40212e <setvbuf+0xd6>
  4020b8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4020bc:	f023 0303 	bic.w	r3, r3, #3
  4020c0:	f1b8 0f02 	cmp.w	r8, #2
  4020c4:	81a3      	strh	r3, [r4, #12]
  4020c6:	d01d      	beq.n	402104 <setvbuf+0xac>
  4020c8:	ab01      	add	r3, sp, #4
  4020ca:	466a      	mov	r2, sp
  4020cc:	4621      	mov	r1, r4
  4020ce:	4628      	mov	r0, r5
  4020d0:	f003 f85c 	bl	40518c <__swhatbuf_r>
  4020d4:	89a3      	ldrh	r3, [r4, #12]
  4020d6:	4318      	orrs	r0, r3
  4020d8:	81a0      	strh	r0, [r4, #12]
  4020da:	2e00      	cmp	r6, #0
  4020dc:	d132      	bne.n	402144 <setvbuf+0xec>
  4020de:	9e00      	ldr	r6, [sp, #0]
  4020e0:	4630      	mov	r0, r6
  4020e2:	f003 f8cb 	bl	40527c <malloc>
  4020e6:	4607      	mov	r7, r0
  4020e8:	2800      	cmp	r0, #0
  4020ea:	d06b      	beq.n	4021c4 <setvbuf+0x16c>
  4020ec:	89a3      	ldrh	r3, [r4, #12]
  4020ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4020f2:	81a3      	strh	r3, [r4, #12]
  4020f4:	e028      	b.n	402148 <setvbuf+0xf0>
  4020f6:	89a3      	ldrh	r3, [r4, #12]
  4020f8:	0599      	lsls	r1, r3, #22
  4020fa:	d4c7      	bmi.n	40208c <setvbuf+0x34>
  4020fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4020fe:	f003 f841 	bl	405184 <__retarget_lock_acquire_recursive>
  402102:	e7c3      	b.n	40208c <setvbuf+0x34>
  402104:	2500      	movs	r5, #0
  402106:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402108:	2600      	movs	r6, #0
  40210a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40210e:	f043 0302 	orr.w	r3, r3, #2
  402112:	2001      	movs	r0, #1
  402114:	60a6      	str	r6, [r4, #8]
  402116:	07ce      	lsls	r6, r1, #31
  402118:	81a3      	strh	r3, [r4, #12]
  40211a:	6022      	str	r2, [r4, #0]
  40211c:	6122      	str	r2, [r4, #16]
  40211e:	6160      	str	r0, [r4, #20]
  402120:	d401      	bmi.n	402126 <setvbuf+0xce>
  402122:	0598      	lsls	r0, r3, #22
  402124:	d53e      	bpl.n	4021a4 <setvbuf+0x14c>
  402126:	4628      	mov	r0, r5
  402128:	b003      	add	sp, #12
  40212a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40212e:	6921      	ldr	r1, [r4, #16]
  402130:	4628      	mov	r0, r5
  402132:	f002 fd8d 	bl	404c50 <_free_r>
  402136:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40213a:	e7bd      	b.n	4020b8 <setvbuf+0x60>
  40213c:	4628      	mov	r0, r5
  40213e:	f002 fce5 	bl	404b0c <__sinit>
  402142:	e796      	b.n	402072 <setvbuf+0x1a>
  402144:	2f00      	cmp	r7, #0
  402146:	d0cb      	beq.n	4020e0 <setvbuf+0x88>
  402148:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40214a:	2b00      	cmp	r3, #0
  40214c:	d033      	beq.n	4021b6 <setvbuf+0x15e>
  40214e:	9b00      	ldr	r3, [sp, #0]
  402150:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402154:	6027      	str	r7, [r4, #0]
  402156:	429e      	cmp	r6, r3
  402158:	bf1c      	itt	ne
  40215a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40215e:	81a2      	strhne	r2, [r4, #12]
  402160:	f1b8 0f01 	cmp.w	r8, #1
  402164:	bf04      	itt	eq
  402166:	f042 0201 	orreq.w	r2, r2, #1
  40216a:	81a2      	strheq	r2, [r4, #12]
  40216c:	b292      	uxth	r2, r2
  40216e:	f012 0308 	ands.w	r3, r2, #8
  402172:	6127      	str	r7, [r4, #16]
  402174:	6166      	str	r6, [r4, #20]
  402176:	d00e      	beq.n	402196 <setvbuf+0x13e>
  402178:	07d1      	lsls	r1, r2, #31
  40217a:	d51a      	bpl.n	4021b2 <setvbuf+0x15a>
  40217c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40217e:	4276      	negs	r6, r6
  402180:	2300      	movs	r3, #0
  402182:	f015 0501 	ands.w	r5, r5, #1
  402186:	61a6      	str	r6, [r4, #24]
  402188:	60a3      	str	r3, [r4, #8]
  40218a:	d009      	beq.n	4021a0 <setvbuf+0x148>
  40218c:	2500      	movs	r5, #0
  40218e:	4628      	mov	r0, r5
  402190:	b003      	add	sp, #12
  402192:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402196:	60a3      	str	r3, [r4, #8]
  402198:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40219a:	f015 0501 	ands.w	r5, r5, #1
  40219e:	d1f5      	bne.n	40218c <setvbuf+0x134>
  4021a0:	0593      	lsls	r3, r2, #22
  4021a2:	d4c0      	bmi.n	402126 <setvbuf+0xce>
  4021a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4021a6:	f002 ffef 	bl	405188 <__retarget_lock_release_recursive>
  4021aa:	4628      	mov	r0, r5
  4021ac:	b003      	add	sp, #12
  4021ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4021b2:	60a6      	str	r6, [r4, #8]
  4021b4:	e7f0      	b.n	402198 <setvbuf+0x140>
  4021b6:	4628      	mov	r0, r5
  4021b8:	f002 fca8 	bl	404b0c <__sinit>
  4021bc:	e7c7      	b.n	40214e <setvbuf+0xf6>
  4021be:	f04f 35ff 	mov.w	r5, #4294967295
  4021c2:	e7b0      	b.n	402126 <setvbuf+0xce>
  4021c4:	f8dd 9000 	ldr.w	r9, [sp]
  4021c8:	45b1      	cmp	r9, r6
  4021ca:	d004      	beq.n	4021d6 <setvbuf+0x17e>
  4021cc:	4648      	mov	r0, r9
  4021ce:	f003 f855 	bl	40527c <malloc>
  4021d2:	4607      	mov	r7, r0
  4021d4:	b920      	cbnz	r0, 4021e0 <setvbuf+0x188>
  4021d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4021da:	f04f 35ff 	mov.w	r5, #4294967295
  4021de:	e792      	b.n	402106 <setvbuf+0xae>
  4021e0:	464e      	mov	r6, r9
  4021e2:	e783      	b.n	4020ec <setvbuf+0x94>
  4021e4:	20400008 	.word	0x20400008
	...

00402200 <strlen>:
  402200:	f890 f000 	pld	[r0]
  402204:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402208:	f020 0107 	bic.w	r1, r0, #7
  40220c:	f06f 0c00 	mvn.w	ip, #0
  402210:	f010 0407 	ands.w	r4, r0, #7
  402214:	f891 f020 	pld	[r1, #32]
  402218:	f040 8049 	bne.w	4022ae <strlen+0xae>
  40221c:	f04f 0400 	mov.w	r4, #0
  402220:	f06f 0007 	mvn.w	r0, #7
  402224:	e9d1 2300 	ldrd	r2, r3, [r1]
  402228:	f891 f040 	pld	[r1, #64]	; 0x40
  40222c:	f100 0008 	add.w	r0, r0, #8
  402230:	fa82 f24c 	uadd8	r2, r2, ip
  402234:	faa4 f28c 	sel	r2, r4, ip
  402238:	fa83 f34c 	uadd8	r3, r3, ip
  40223c:	faa2 f38c 	sel	r3, r2, ip
  402240:	bb4b      	cbnz	r3, 402296 <strlen+0x96>
  402242:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402246:	fa82 f24c 	uadd8	r2, r2, ip
  40224a:	f100 0008 	add.w	r0, r0, #8
  40224e:	faa4 f28c 	sel	r2, r4, ip
  402252:	fa83 f34c 	uadd8	r3, r3, ip
  402256:	faa2 f38c 	sel	r3, r2, ip
  40225a:	b9e3      	cbnz	r3, 402296 <strlen+0x96>
  40225c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402260:	fa82 f24c 	uadd8	r2, r2, ip
  402264:	f100 0008 	add.w	r0, r0, #8
  402268:	faa4 f28c 	sel	r2, r4, ip
  40226c:	fa83 f34c 	uadd8	r3, r3, ip
  402270:	faa2 f38c 	sel	r3, r2, ip
  402274:	b97b      	cbnz	r3, 402296 <strlen+0x96>
  402276:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40227a:	f101 0120 	add.w	r1, r1, #32
  40227e:	fa82 f24c 	uadd8	r2, r2, ip
  402282:	f100 0008 	add.w	r0, r0, #8
  402286:	faa4 f28c 	sel	r2, r4, ip
  40228a:	fa83 f34c 	uadd8	r3, r3, ip
  40228e:	faa2 f38c 	sel	r3, r2, ip
  402292:	2b00      	cmp	r3, #0
  402294:	d0c6      	beq.n	402224 <strlen+0x24>
  402296:	2a00      	cmp	r2, #0
  402298:	bf04      	itt	eq
  40229a:	3004      	addeq	r0, #4
  40229c:	461a      	moveq	r2, r3
  40229e:	ba12      	rev	r2, r2
  4022a0:	fab2 f282 	clz	r2, r2
  4022a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4022a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4022ac:	4770      	bx	lr
  4022ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4022b2:	f004 0503 	and.w	r5, r4, #3
  4022b6:	f1c4 0000 	rsb	r0, r4, #0
  4022ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4022be:	f014 0f04 	tst.w	r4, #4
  4022c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4022c6:	fa0c f505 	lsl.w	r5, ip, r5
  4022ca:	ea62 0205 	orn	r2, r2, r5
  4022ce:	bf1c      	itt	ne
  4022d0:	ea63 0305 	ornne	r3, r3, r5
  4022d4:	4662      	movne	r2, ip
  4022d6:	f04f 0400 	mov.w	r4, #0
  4022da:	e7a9      	b.n	402230 <strlen+0x30>

004022dc <_vfprintf_r>:
  4022dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4022e0:	b0c1      	sub	sp, #260	; 0x104
  4022e2:	461d      	mov	r5, r3
  4022e4:	468a      	mov	sl, r1
  4022e6:	4691      	mov	r9, r2
  4022e8:	4604      	mov	r4, r0
  4022ea:	9008      	str	r0, [sp, #32]
  4022ec:	f002 ff38 	bl	405160 <_localeconv_r>
  4022f0:	6803      	ldr	r3, [r0, #0]
  4022f2:	9315      	str	r3, [sp, #84]	; 0x54
  4022f4:	4618      	mov	r0, r3
  4022f6:	f7ff ff83 	bl	402200 <strlen>
  4022fa:	950e      	str	r5, [sp, #56]	; 0x38
  4022fc:	9014      	str	r0, [sp, #80]	; 0x50
  4022fe:	b11c      	cbz	r4, 402308 <_vfprintf_r+0x2c>
  402300:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  402302:	2b00      	cmp	r3, #0
  402304:	f000 825f 	beq.w	4027c6 <_vfprintf_r+0x4ea>
  402308:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  40230c:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402310:	f013 0f01 	tst.w	r3, #1
  402314:	b293      	uxth	r3, r2
  402316:	d102      	bne.n	40231e <_vfprintf_r+0x42>
  402318:	0599      	lsls	r1, r3, #22
  40231a:	f140 8275 	bpl.w	402808 <_vfprintf_r+0x52c>
  40231e:	049f      	lsls	r7, r3, #18
  402320:	d40a      	bmi.n	402338 <_vfprintf_r+0x5c>
  402322:	f8da 1064 	ldr.w	r1, [sl, #100]	; 0x64
  402326:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
  40232a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40232e:	f8aa 300c 	strh.w	r3, [sl, #12]
  402332:	f8ca 1064 	str.w	r1, [sl, #100]	; 0x64
  402336:	b29b      	uxth	r3, r3
  402338:	071e      	lsls	r6, r3, #28
  40233a:	f140 8223 	bpl.w	402784 <_vfprintf_r+0x4a8>
  40233e:	f8da 2010 	ldr.w	r2, [sl, #16]
  402342:	2a00      	cmp	r2, #0
  402344:	f000 821e 	beq.w	402784 <_vfprintf_r+0x4a8>
  402348:	f003 021a 	and.w	r2, r3, #26
  40234c:	2a0a      	cmp	r2, #10
  40234e:	f000 823e 	beq.w	4027ce <_vfprintf_r+0x4f2>
  402352:	2300      	movs	r3, #0
  402354:	4618      	mov	r0, r3
  402356:	9311      	str	r3, [sp, #68]	; 0x44
  402358:	9313      	str	r3, [sp, #76]	; 0x4c
  40235a:	9312      	str	r3, [sp, #72]	; 0x48
  40235c:	9325      	str	r3, [sp, #148]	; 0x94
  40235e:	9324      	str	r3, [sp, #144]	; 0x90
  402360:	9318      	str	r3, [sp, #96]	; 0x60
  402362:	9319      	str	r3, [sp, #100]	; 0x64
  402364:	930b      	str	r3, [sp, #44]	; 0x2c
  402366:	ab30      	add	r3, sp, #192	; 0xc0
  402368:	9323      	str	r3, [sp, #140]	; 0x8c
  40236a:	4698      	mov	r8, r3
  40236c:	9016      	str	r0, [sp, #88]	; 0x58
  40236e:	9017      	str	r0, [sp, #92]	; 0x5c
  402370:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  402374:	f899 3000 	ldrb.w	r3, [r9]
  402378:	464c      	mov	r4, r9
  40237a:	b1eb      	cbz	r3, 4023b8 <_vfprintf_r+0xdc>
  40237c:	2b25      	cmp	r3, #37	; 0x25
  40237e:	d102      	bne.n	402386 <_vfprintf_r+0xaa>
  402380:	e01a      	b.n	4023b8 <_vfprintf_r+0xdc>
  402382:	2b25      	cmp	r3, #37	; 0x25
  402384:	d003      	beq.n	40238e <_vfprintf_r+0xb2>
  402386:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40238a:	2b00      	cmp	r3, #0
  40238c:	d1f9      	bne.n	402382 <_vfprintf_r+0xa6>
  40238e:	eba4 0509 	sub.w	r5, r4, r9
  402392:	b18d      	cbz	r5, 4023b8 <_vfprintf_r+0xdc>
  402394:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402396:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402398:	f8c8 9000 	str.w	r9, [r8]
  40239c:	3301      	adds	r3, #1
  40239e:	442a      	add	r2, r5
  4023a0:	2b07      	cmp	r3, #7
  4023a2:	f8c8 5004 	str.w	r5, [r8, #4]
  4023a6:	9225      	str	r2, [sp, #148]	; 0x94
  4023a8:	9324      	str	r3, [sp, #144]	; 0x90
  4023aa:	f300 8201 	bgt.w	4027b0 <_vfprintf_r+0x4d4>
  4023ae:	f108 0808 	add.w	r8, r8, #8
  4023b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4023b4:	442b      	add	r3, r5
  4023b6:	930b      	str	r3, [sp, #44]	; 0x2c
  4023b8:	7823      	ldrb	r3, [r4, #0]
  4023ba:	2b00      	cmp	r3, #0
  4023bc:	f000 83f0 	beq.w	402ba0 <_vfprintf_r+0x8c4>
  4023c0:	2300      	movs	r3, #0
  4023c2:	461a      	mov	r2, r3
  4023c4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4023c8:	4619      	mov	r1, r3
  4023ca:	930c      	str	r3, [sp, #48]	; 0x30
  4023cc:	469b      	mov	fp, r3
  4023ce:	7866      	ldrb	r6, [r4, #1]
  4023d0:	f04f 33ff 	mov.w	r3, #4294967295
  4023d4:	f104 0901 	add.w	r9, r4, #1
  4023d8:	9309      	str	r3, [sp, #36]	; 0x24
  4023da:	f109 0901 	add.w	r9, r9, #1
  4023de:	f1a6 0320 	sub.w	r3, r6, #32
  4023e2:	2b58      	cmp	r3, #88	; 0x58
  4023e4:	f200 83bf 	bhi.w	402b66 <_vfprintf_r+0x88a>
  4023e8:	e8df f013 	tbh	[pc, r3, lsl #1]
  4023ec:	03bd02e0 	.word	0x03bd02e0
  4023f0:	034f03bd 	.word	0x034f03bd
  4023f4:	03bd03bd 	.word	0x03bd03bd
  4023f8:	03bd03bd 	.word	0x03bd03bd
  4023fc:	03bd03bd 	.word	0x03bd03bd
  402400:	03080354 	.word	0x03080354
  402404:	021a03bd 	.word	0x021a03bd
  402408:	03bd02e8 	.word	0x03bd02e8
  40240c:	033a0303 	.word	0x033a0303
  402410:	033a033a 	.word	0x033a033a
  402414:	033a033a 	.word	0x033a033a
  402418:	033a033a 	.word	0x033a033a
  40241c:	033a033a 	.word	0x033a033a
  402420:	03bd03bd 	.word	0x03bd03bd
  402424:	03bd03bd 	.word	0x03bd03bd
  402428:	03bd03bd 	.word	0x03bd03bd
  40242c:	03bd03bd 	.word	0x03bd03bd
  402430:	03bd03bd 	.word	0x03bd03bd
  402434:	03620349 	.word	0x03620349
  402438:	036203bd 	.word	0x036203bd
  40243c:	03bd03bd 	.word	0x03bd03bd
  402440:	03bd03bd 	.word	0x03bd03bd
  402444:	03bd03a2 	.word	0x03bd03a2
  402448:	006f03bd 	.word	0x006f03bd
  40244c:	03bd03bd 	.word	0x03bd03bd
  402450:	03bd03bd 	.word	0x03bd03bd
  402454:	005903bd 	.word	0x005903bd
  402458:	03bd03bd 	.word	0x03bd03bd
  40245c:	03bd031e 	.word	0x03bd031e
  402460:	03bd03bd 	.word	0x03bd03bd
  402464:	03bd03bd 	.word	0x03bd03bd
  402468:	03bd03bd 	.word	0x03bd03bd
  40246c:	03bd03bd 	.word	0x03bd03bd
  402470:	032403bd 	.word	0x032403bd
  402474:	03620273 	.word	0x03620273
  402478:	03620362 	.word	0x03620362
  40247c:	027302b7 	.word	0x027302b7
  402480:	03bd03bd 	.word	0x03bd03bd
  402484:	03bd02bc 	.word	0x03bd02bc
  402488:	007102c9 	.word	0x007102c9
  40248c:	0247030d 	.word	0x0247030d
  402490:	025203bd 	.word	0x025203bd
  402494:	005b03bd 	.word	0x005b03bd
  402498:	03bd03bd 	.word	0x03bd03bd
  40249c:	021f      	.short	0x021f
  40249e:	f04b 0b10 	orr.w	fp, fp, #16
  4024a2:	f01b 0f20 	tst.w	fp, #32
  4024a6:	f040 8353 	bne.w	402b50 <_vfprintf_r+0x874>
  4024aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4024ac:	f01b 0f10 	tst.w	fp, #16
  4024b0:	4613      	mov	r3, r2
  4024b2:	f040 85b4 	bne.w	40301e <_vfprintf_r+0xd42>
  4024b6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024ba:	f000 85b0 	beq.w	40301e <_vfprintf_r+0xd42>
  4024be:	8814      	ldrh	r4, [r2, #0]
  4024c0:	3204      	adds	r2, #4
  4024c2:	2500      	movs	r5, #0
  4024c4:	2301      	movs	r3, #1
  4024c6:	920e      	str	r2, [sp, #56]	; 0x38
  4024c8:	e014      	b.n	4024f4 <_vfprintf_r+0x218>
  4024ca:	f04b 0b10 	orr.w	fp, fp, #16
  4024ce:	f01b 0320 	ands.w	r3, fp, #32
  4024d2:	f040 8332 	bne.w	402b3a <_vfprintf_r+0x85e>
  4024d6:	f01b 0210 	ands.w	r2, fp, #16
  4024da:	f040 8589 	bne.w	402ff0 <_vfprintf_r+0xd14>
  4024de:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4024e2:	f000 8585 	beq.w	402ff0 <_vfprintf_r+0xd14>
  4024e6:	990e      	ldr	r1, [sp, #56]	; 0x38
  4024e8:	4613      	mov	r3, r2
  4024ea:	460a      	mov	r2, r1
  4024ec:	3204      	adds	r2, #4
  4024ee:	880c      	ldrh	r4, [r1, #0]
  4024f0:	920e      	str	r2, [sp, #56]	; 0x38
  4024f2:	2500      	movs	r5, #0
  4024f4:	f04f 0a00 	mov.w	sl, #0
  4024f8:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4024fc:	9909      	ldr	r1, [sp, #36]	; 0x24
  4024fe:	1c4a      	adds	r2, r1, #1
  402500:	f000 820b 	beq.w	40291a <_vfprintf_r+0x63e>
  402504:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402508:	9206      	str	r2, [sp, #24]
  40250a:	ea54 0205 	orrs.w	r2, r4, r5
  40250e:	f040 820a 	bne.w	402926 <_vfprintf_r+0x64a>
  402512:	2900      	cmp	r1, #0
  402514:	f040 846f 	bne.w	402df6 <_vfprintf_r+0xb1a>
  402518:	2b00      	cmp	r3, #0
  40251a:	f040 852d 	bne.w	402f78 <_vfprintf_r+0xc9c>
  40251e:	f01b 0301 	ands.w	r3, fp, #1
  402522:	930d      	str	r3, [sp, #52]	; 0x34
  402524:	f000 8668 	beq.w	4031f8 <_vfprintf_r+0xf1c>
  402528:	af40      	add	r7, sp, #256	; 0x100
  40252a:	2330      	movs	r3, #48	; 0x30
  40252c:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402530:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402532:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402534:	4293      	cmp	r3, r2
  402536:	bfb8      	it	lt
  402538:	4613      	movlt	r3, r2
  40253a:	9307      	str	r3, [sp, #28]
  40253c:	2300      	movs	r3, #0
  40253e:	9310      	str	r3, [sp, #64]	; 0x40
  402540:	f1ba 0f00 	cmp.w	sl, #0
  402544:	d002      	beq.n	40254c <_vfprintf_r+0x270>
  402546:	9b07      	ldr	r3, [sp, #28]
  402548:	3301      	adds	r3, #1
  40254a:	9307      	str	r3, [sp, #28]
  40254c:	9b06      	ldr	r3, [sp, #24]
  40254e:	f013 0302 	ands.w	r3, r3, #2
  402552:	930f      	str	r3, [sp, #60]	; 0x3c
  402554:	d002      	beq.n	40255c <_vfprintf_r+0x280>
  402556:	9b07      	ldr	r3, [sp, #28]
  402558:	3302      	adds	r3, #2
  40255a:	9307      	str	r3, [sp, #28]
  40255c:	9b06      	ldr	r3, [sp, #24]
  40255e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402562:	f040 831b 	bne.w	402b9c <_vfprintf_r+0x8c0>
  402566:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402568:	9a07      	ldr	r2, [sp, #28]
  40256a:	eba3 0b02 	sub.w	fp, r3, r2
  40256e:	f1bb 0f00 	cmp.w	fp, #0
  402572:	f340 8313 	ble.w	402b9c <_vfprintf_r+0x8c0>
  402576:	f1bb 0f10 	cmp.w	fp, #16
  40257a:	9925      	ldr	r1, [sp, #148]	; 0x94
  40257c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40257e:	dd28      	ble.n	4025d2 <_vfprintf_r+0x2f6>
  402580:	4643      	mov	r3, r8
  402582:	2410      	movs	r4, #16
  402584:	46a8      	mov	r8, r5
  402586:	f8dd a020 	ldr.w	sl, [sp, #32]
  40258a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40258c:	e006      	b.n	40259c <_vfprintf_r+0x2c0>
  40258e:	f1ab 0b10 	sub.w	fp, fp, #16
  402592:	f1bb 0f10 	cmp.w	fp, #16
  402596:	f103 0308 	add.w	r3, r3, #8
  40259a:	dd18      	ble.n	4025ce <_vfprintf_r+0x2f2>
  40259c:	3201      	adds	r2, #1
  40259e:	48b9      	ldr	r0, [pc, #740]	; (402884 <_vfprintf_r+0x5a8>)
  4025a0:	9224      	str	r2, [sp, #144]	; 0x90
  4025a2:	3110      	adds	r1, #16
  4025a4:	2a07      	cmp	r2, #7
  4025a6:	9125      	str	r1, [sp, #148]	; 0x94
  4025a8:	e883 0011 	stmia.w	r3, {r0, r4}
  4025ac:	ddef      	ble.n	40258e <_vfprintf_r+0x2b2>
  4025ae:	aa23      	add	r2, sp, #140	; 0x8c
  4025b0:	4629      	mov	r1, r5
  4025b2:	4650      	mov	r0, sl
  4025b4:	f003 ffe4 	bl	406580 <__sprint_r>
  4025b8:	2800      	cmp	r0, #0
  4025ba:	f040 836a 	bne.w	402c92 <_vfprintf_r+0x9b6>
  4025be:	f1ab 0b10 	sub.w	fp, fp, #16
  4025c2:	f1bb 0f10 	cmp.w	fp, #16
  4025c6:	9925      	ldr	r1, [sp, #148]	; 0x94
  4025c8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4025ca:	ab30      	add	r3, sp, #192	; 0xc0
  4025cc:	dce6      	bgt.n	40259c <_vfprintf_r+0x2c0>
  4025ce:	4645      	mov	r5, r8
  4025d0:	4698      	mov	r8, r3
  4025d2:	3201      	adds	r2, #1
  4025d4:	4bab      	ldr	r3, [pc, #684]	; (402884 <_vfprintf_r+0x5a8>)
  4025d6:	9224      	str	r2, [sp, #144]	; 0x90
  4025d8:	eb0b 0401 	add.w	r4, fp, r1
  4025dc:	2a07      	cmp	r2, #7
  4025de:	9425      	str	r4, [sp, #148]	; 0x94
  4025e0:	e888 0808 	stmia.w	r8, {r3, fp}
  4025e4:	f300 84cd 	bgt.w	402f82 <_vfprintf_r+0xca6>
  4025e8:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  4025ec:	f108 0808 	add.w	r8, r8, #8
  4025f0:	f1ba 0f00 	cmp.w	sl, #0
  4025f4:	d00e      	beq.n	402614 <_vfprintf_r+0x338>
  4025f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4025f8:	3301      	adds	r3, #1
  4025fa:	3401      	adds	r4, #1
  4025fc:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  402600:	2201      	movs	r2, #1
  402602:	2b07      	cmp	r3, #7
  402604:	9425      	str	r4, [sp, #148]	; 0x94
  402606:	9324      	str	r3, [sp, #144]	; 0x90
  402608:	e888 0006 	stmia.w	r8, {r1, r2}
  40260c:	f300 840a 	bgt.w	402e24 <_vfprintf_r+0xb48>
  402610:	f108 0808 	add.w	r8, r8, #8
  402614:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402616:	b16b      	cbz	r3, 402634 <_vfprintf_r+0x358>
  402618:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40261a:	3301      	adds	r3, #1
  40261c:	3402      	adds	r4, #2
  40261e:	a91c      	add	r1, sp, #112	; 0x70
  402620:	2202      	movs	r2, #2
  402622:	2b07      	cmp	r3, #7
  402624:	9425      	str	r4, [sp, #148]	; 0x94
  402626:	9324      	str	r3, [sp, #144]	; 0x90
  402628:	e888 0006 	stmia.w	r8, {r1, r2}
  40262c:	f300 8406 	bgt.w	402e3c <_vfprintf_r+0xb60>
  402630:	f108 0808 	add.w	r8, r8, #8
  402634:	2d80      	cmp	r5, #128	; 0x80
  402636:	f000 832e 	beq.w	402c96 <_vfprintf_r+0x9ba>
  40263a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40263c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40263e:	eba3 0a02 	sub.w	sl, r3, r2
  402642:	f1ba 0f00 	cmp.w	sl, #0
  402646:	dd3b      	ble.n	4026c0 <_vfprintf_r+0x3e4>
  402648:	f1ba 0f10 	cmp.w	sl, #16
  40264c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40264e:	4d8e      	ldr	r5, [pc, #568]	; (402888 <_vfprintf_r+0x5ac>)
  402650:	dd2b      	ble.n	4026aa <_vfprintf_r+0x3ce>
  402652:	4642      	mov	r2, r8
  402654:	4621      	mov	r1, r4
  402656:	46b0      	mov	r8, r6
  402658:	f04f 0b10 	mov.w	fp, #16
  40265c:	462e      	mov	r6, r5
  40265e:	9c08      	ldr	r4, [sp, #32]
  402660:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402662:	e006      	b.n	402672 <_vfprintf_r+0x396>
  402664:	f1aa 0a10 	sub.w	sl, sl, #16
  402668:	f1ba 0f10 	cmp.w	sl, #16
  40266c:	f102 0208 	add.w	r2, r2, #8
  402670:	dd17      	ble.n	4026a2 <_vfprintf_r+0x3c6>
  402672:	3301      	adds	r3, #1
  402674:	3110      	adds	r1, #16
  402676:	2b07      	cmp	r3, #7
  402678:	9125      	str	r1, [sp, #148]	; 0x94
  40267a:	9324      	str	r3, [sp, #144]	; 0x90
  40267c:	e882 0840 	stmia.w	r2, {r6, fp}
  402680:	ddf0      	ble.n	402664 <_vfprintf_r+0x388>
  402682:	aa23      	add	r2, sp, #140	; 0x8c
  402684:	4629      	mov	r1, r5
  402686:	4620      	mov	r0, r4
  402688:	f003 ff7a 	bl	406580 <__sprint_r>
  40268c:	2800      	cmp	r0, #0
  40268e:	f040 8300 	bne.w	402c92 <_vfprintf_r+0x9b6>
  402692:	f1aa 0a10 	sub.w	sl, sl, #16
  402696:	f1ba 0f10 	cmp.w	sl, #16
  40269a:	9925      	ldr	r1, [sp, #148]	; 0x94
  40269c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40269e:	aa30      	add	r2, sp, #192	; 0xc0
  4026a0:	dce7      	bgt.n	402672 <_vfprintf_r+0x396>
  4026a2:	4635      	mov	r5, r6
  4026a4:	460c      	mov	r4, r1
  4026a6:	4646      	mov	r6, r8
  4026a8:	4690      	mov	r8, r2
  4026aa:	3301      	adds	r3, #1
  4026ac:	4454      	add	r4, sl
  4026ae:	2b07      	cmp	r3, #7
  4026b0:	9425      	str	r4, [sp, #148]	; 0x94
  4026b2:	9324      	str	r3, [sp, #144]	; 0x90
  4026b4:	e888 0420 	stmia.w	r8, {r5, sl}
  4026b8:	f300 83a9 	bgt.w	402e0e <_vfprintf_r+0xb32>
  4026bc:	f108 0808 	add.w	r8, r8, #8
  4026c0:	9b06      	ldr	r3, [sp, #24]
  4026c2:	05db      	lsls	r3, r3, #23
  4026c4:	f100 8285 	bmi.w	402bd2 <_vfprintf_r+0x8f6>
  4026c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4026ca:	990d      	ldr	r1, [sp, #52]	; 0x34
  4026cc:	f8c8 7000 	str.w	r7, [r8]
  4026d0:	3301      	adds	r3, #1
  4026d2:	440c      	add	r4, r1
  4026d4:	2b07      	cmp	r3, #7
  4026d6:	9425      	str	r4, [sp, #148]	; 0x94
  4026d8:	f8c8 1004 	str.w	r1, [r8, #4]
  4026dc:	9324      	str	r3, [sp, #144]	; 0x90
  4026de:	f300 8375 	bgt.w	402dcc <_vfprintf_r+0xaf0>
  4026e2:	f108 0808 	add.w	r8, r8, #8
  4026e6:	9b06      	ldr	r3, [sp, #24]
  4026e8:	0759      	lsls	r1, r3, #29
  4026ea:	d53b      	bpl.n	402764 <_vfprintf_r+0x488>
  4026ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4026ee:	9a07      	ldr	r2, [sp, #28]
  4026f0:	1a9d      	subs	r5, r3, r2
  4026f2:	2d00      	cmp	r5, #0
  4026f4:	dd36      	ble.n	402764 <_vfprintf_r+0x488>
  4026f6:	2d10      	cmp	r5, #16
  4026f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4026fa:	dd21      	ble.n	402740 <_vfprintf_r+0x464>
  4026fc:	2610      	movs	r6, #16
  4026fe:	9f08      	ldr	r7, [sp, #32]
  402700:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402704:	e004      	b.n	402710 <_vfprintf_r+0x434>
  402706:	3d10      	subs	r5, #16
  402708:	2d10      	cmp	r5, #16
  40270a:	f108 0808 	add.w	r8, r8, #8
  40270e:	dd17      	ble.n	402740 <_vfprintf_r+0x464>
  402710:	3301      	adds	r3, #1
  402712:	4a5c      	ldr	r2, [pc, #368]	; (402884 <_vfprintf_r+0x5a8>)
  402714:	9324      	str	r3, [sp, #144]	; 0x90
  402716:	3410      	adds	r4, #16
  402718:	2b07      	cmp	r3, #7
  40271a:	9425      	str	r4, [sp, #148]	; 0x94
  40271c:	e888 0044 	stmia.w	r8, {r2, r6}
  402720:	ddf1      	ble.n	402706 <_vfprintf_r+0x42a>
  402722:	aa23      	add	r2, sp, #140	; 0x8c
  402724:	4651      	mov	r1, sl
  402726:	4638      	mov	r0, r7
  402728:	f003 ff2a 	bl	406580 <__sprint_r>
  40272c:	2800      	cmp	r0, #0
  40272e:	f040 823f 	bne.w	402bb0 <_vfprintf_r+0x8d4>
  402732:	3d10      	subs	r5, #16
  402734:	2d10      	cmp	r5, #16
  402736:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402738:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40273a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40273e:	dce7      	bgt.n	402710 <_vfprintf_r+0x434>
  402740:	3301      	adds	r3, #1
  402742:	4a50      	ldr	r2, [pc, #320]	; (402884 <_vfprintf_r+0x5a8>)
  402744:	9324      	str	r3, [sp, #144]	; 0x90
  402746:	442c      	add	r4, r5
  402748:	2b07      	cmp	r3, #7
  40274a:	9425      	str	r4, [sp, #148]	; 0x94
  40274c:	e888 0024 	stmia.w	r8, {r2, r5}
  402750:	dd08      	ble.n	402764 <_vfprintf_r+0x488>
  402752:	aa23      	add	r2, sp, #140	; 0x8c
  402754:	990a      	ldr	r1, [sp, #40]	; 0x28
  402756:	9808      	ldr	r0, [sp, #32]
  402758:	f003 ff12 	bl	406580 <__sprint_r>
  40275c:	2800      	cmp	r0, #0
  40275e:	f040 8347 	bne.w	402df0 <_vfprintf_r+0xb14>
  402762:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402764:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402766:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402768:	9907      	ldr	r1, [sp, #28]
  40276a:	428a      	cmp	r2, r1
  40276c:	bfac      	ite	ge
  40276e:	189b      	addge	r3, r3, r2
  402770:	185b      	addlt	r3, r3, r1
  402772:	930b      	str	r3, [sp, #44]	; 0x2c
  402774:	2c00      	cmp	r4, #0
  402776:	f040 8333 	bne.w	402de0 <_vfprintf_r+0xb04>
  40277a:	2300      	movs	r3, #0
  40277c:	9324      	str	r3, [sp, #144]	; 0x90
  40277e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402782:	e5f7      	b.n	402374 <_vfprintf_r+0x98>
  402784:	4651      	mov	r1, sl
  402786:	9808      	ldr	r0, [sp, #32]
  402788:	f001 f896 	bl	4038b8 <__swsetup_r>
  40278c:	2800      	cmp	r0, #0
  40278e:	d038      	beq.n	402802 <_vfprintf_r+0x526>
  402790:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402794:	07dd      	lsls	r5, r3, #31
  402796:	d404      	bmi.n	4027a2 <_vfprintf_r+0x4c6>
  402798:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  40279c:	059c      	lsls	r4, r3, #22
  40279e:	f140 85ca 	bpl.w	403336 <_vfprintf_r+0x105a>
  4027a2:	f04f 33ff 	mov.w	r3, #4294967295
  4027a6:	930b      	str	r3, [sp, #44]	; 0x2c
  4027a8:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4027aa:	b041      	add	sp, #260	; 0x104
  4027ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4027b0:	aa23      	add	r2, sp, #140	; 0x8c
  4027b2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4027b4:	9808      	ldr	r0, [sp, #32]
  4027b6:	f003 fee3 	bl	406580 <__sprint_r>
  4027ba:	2800      	cmp	r0, #0
  4027bc:	f040 8318 	bne.w	402df0 <_vfprintf_r+0xb14>
  4027c0:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4027c4:	e5f5      	b.n	4023b2 <_vfprintf_r+0xd6>
  4027c6:	9808      	ldr	r0, [sp, #32]
  4027c8:	f002 f9a0 	bl	404b0c <__sinit>
  4027cc:	e59c      	b.n	402308 <_vfprintf_r+0x2c>
  4027ce:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
  4027d2:	2a00      	cmp	r2, #0
  4027d4:	f6ff adbd 	blt.w	402352 <_vfprintf_r+0x76>
  4027d8:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
  4027dc:	07d0      	lsls	r0, r2, #31
  4027de:	d405      	bmi.n	4027ec <_vfprintf_r+0x510>
  4027e0:	0599      	lsls	r1, r3, #22
  4027e2:	d403      	bmi.n	4027ec <_vfprintf_r+0x510>
  4027e4:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  4027e8:	f002 fcce 	bl	405188 <__retarget_lock_release_recursive>
  4027ec:	462b      	mov	r3, r5
  4027ee:	464a      	mov	r2, r9
  4027f0:	4651      	mov	r1, sl
  4027f2:	9808      	ldr	r0, [sp, #32]
  4027f4:	f001 f81e 	bl	403834 <__sbprintf>
  4027f8:	900b      	str	r0, [sp, #44]	; 0x2c
  4027fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4027fc:	b041      	add	sp, #260	; 0x104
  4027fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402802:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402806:	e59f      	b.n	402348 <_vfprintf_r+0x6c>
  402808:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40280c:	f002 fcba 	bl	405184 <__retarget_lock_acquire_recursive>
  402810:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402814:	b293      	uxth	r3, r2
  402816:	e582      	b.n	40231e <_vfprintf_r+0x42>
  402818:	980c      	ldr	r0, [sp, #48]	; 0x30
  40281a:	930e      	str	r3, [sp, #56]	; 0x38
  40281c:	4240      	negs	r0, r0
  40281e:	900c      	str	r0, [sp, #48]	; 0x30
  402820:	f04b 0b04 	orr.w	fp, fp, #4
  402824:	f899 6000 	ldrb.w	r6, [r9]
  402828:	e5d7      	b.n	4023da <_vfprintf_r+0xfe>
  40282a:	2a00      	cmp	r2, #0
  40282c:	f040 87df 	bne.w	4037ee <_vfprintf_r+0x1512>
  402830:	4b16      	ldr	r3, [pc, #88]	; (40288c <_vfprintf_r+0x5b0>)
  402832:	9318      	str	r3, [sp, #96]	; 0x60
  402834:	f01b 0f20 	tst.w	fp, #32
  402838:	f040 84b9 	bne.w	4031ae <_vfprintf_r+0xed2>
  40283c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40283e:	f01b 0f10 	tst.w	fp, #16
  402842:	4613      	mov	r3, r2
  402844:	f040 83dc 	bne.w	403000 <_vfprintf_r+0xd24>
  402848:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40284c:	f000 83d8 	beq.w	403000 <_vfprintf_r+0xd24>
  402850:	3304      	adds	r3, #4
  402852:	8814      	ldrh	r4, [r2, #0]
  402854:	930e      	str	r3, [sp, #56]	; 0x38
  402856:	2500      	movs	r5, #0
  402858:	f01b 0f01 	tst.w	fp, #1
  40285c:	f000 8322 	beq.w	402ea4 <_vfprintf_r+0xbc8>
  402860:	ea54 0305 	orrs.w	r3, r4, r5
  402864:	f000 831e 	beq.w	402ea4 <_vfprintf_r+0xbc8>
  402868:	2330      	movs	r3, #48	; 0x30
  40286a:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  40286e:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402872:	f04b 0b02 	orr.w	fp, fp, #2
  402876:	2302      	movs	r3, #2
  402878:	e63c      	b.n	4024f4 <_vfprintf_r+0x218>
  40287a:	f04b 0b20 	orr.w	fp, fp, #32
  40287e:	f899 6000 	ldrb.w	r6, [r9]
  402882:	e5aa      	b.n	4023da <_vfprintf_r+0xfe>
  402884:	00407150 	.word	0x00407150
  402888:	00407160 	.word	0x00407160
  40288c:	00407130 	.word	0x00407130
  402890:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402892:	6817      	ldr	r7, [r2, #0]
  402894:	2400      	movs	r4, #0
  402896:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  40289a:	1d15      	adds	r5, r2, #4
  40289c:	2f00      	cmp	r7, #0
  40289e:	f000 864e 	beq.w	40353e <_vfprintf_r+0x1262>
  4028a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4028a4:	1c53      	adds	r3, r2, #1
  4028a6:	f000 85cc 	beq.w	403442 <_vfprintf_r+0x1166>
  4028aa:	4621      	mov	r1, r4
  4028ac:	4638      	mov	r0, r7
  4028ae:	f002 ff9f 	bl	4057f0 <memchr>
  4028b2:	2800      	cmp	r0, #0
  4028b4:	f000 8697 	beq.w	4035e6 <_vfprintf_r+0x130a>
  4028b8:	1bc3      	subs	r3, r0, r7
  4028ba:	930d      	str	r3, [sp, #52]	; 0x34
  4028bc:	9409      	str	r4, [sp, #36]	; 0x24
  4028be:	950e      	str	r5, [sp, #56]	; 0x38
  4028c0:	f8cd b018 	str.w	fp, [sp, #24]
  4028c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4028c8:	9307      	str	r3, [sp, #28]
  4028ca:	9410      	str	r4, [sp, #64]	; 0x40
  4028cc:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  4028d0:	e636      	b.n	402540 <_vfprintf_r+0x264>
  4028d2:	2a00      	cmp	r2, #0
  4028d4:	f040 8796 	bne.w	403804 <_vfprintf_r+0x1528>
  4028d8:	f01b 0f20 	tst.w	fp, #32
  4028dc:	f040 845a 	bne.w	403194 <_vfprintf_r+0xeb8>
  4028e0:	f01b 0f10 	tst.w	fp, #16
  4028e4:	f040 83a2 	bne.w	40302c <_vfprintf_r+0xd50>
  4028e8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4028ec:	f000 839e 	beq.w	40302c <_vfprintf_r+0xd50>
  4028f0:	990e      	ldr	r1, [sp, #56]	; 0x38
  4028f2:	f9b1 4000 	ldrsh.w	r4, [r1]
  4028f6:	3104      	adds	r1, #4
  4028f8:	17e5      	asrs	r5, r4, #31
  4028fa:	4622      	mov	r2, r4
  4028fc:	462b      	mov	r3, r5
  4028fe:	910e      	str	r1, [sp, #56]	; 0x38
  402900:	2a00      	cmp	r2, #0
  402902:	f173 0300 	sbcs.w	r3, r3, #0
  402906:	f2c0 8487 	blt.w	403218 <_vfprintf_r+0xf3c>
  40290a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40290c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402910:	1c4a      	adds	r2, r1, #1
  402912:	f04f 0301 	mov.w	r3, #1
  402916:	f47f adf5 	bne.w	402504 <_vfprintf_r+0x228>
  40291a:	ea54 0205 	orrs.w	r2, r4, r5
  40291e:	f000 826c 	beq.w	402dfa <_vfprintf_r+0xb1e>
  402922:	f8cd b018 	str.w	fp, [sp, #24]
  402926:	2b01      	cmp	r3, #1
  402928:	f000 8308 	beq.w	402f3c <_vfprintf_r+0xc60>
  40292c:	2b02      	cmp	r3, #2
  40292e:	f040 8295 	bne.w	402e5c <_vfprintf_r+0xb80>
  402932:	9818      	ldr	r0, [sp, #96]	; 0x60
  402934:	af30      	add	r7, sp, #192	; 0xc0
  402936:	0923      	lsrs	r3, r4, #4
  402938:	f004 010f 	and.w	r1, r4, #15
  40293c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402940:	092a      	lsrs	r2, r5, #4
  402942:	461c      	mov	r4, r3
  402944:	4615      	mov	r5, r2
  402946:	5c43      	ldrb	r3, [r0, r1]
  402948:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40294c:	ea54 0305 	orrs.w	r3, r4, r5
  402950:	d1f1      	bne.n	402936 <_vfprintf_r+0x65a>
  402952:	ab30      	add	r3, sp, #192	; 0xc0
  402954:	1bdb      	subs	r3, r3, r7
  402956:	930d      	str	r3, [sp, #52]	; 0x34
  402958:	e5ea      	b.n	402530 <_vfprintf_r+0x254>
  40295a:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40295e:	f899 6000 	ldrb.w	r6, [r9]
  402962:	e53a      	b.n	4023da <_vfprintf_r+0xfe>
  402964:	f899 6000 	ldrb.w	r6, [r9]
  402968:	2e6c      	cmp	r6, #108	; 0x6c
  40296a:	bf03      	ittte	eq
  40296c:	f899 6001 	ldrbeq.w	r6, [r9, #1]
  402970:	f04b 0b20 	orreq.w	fp, fp, #32
  402974:	f109 0901 	addeq.w	r9, r9, #1
  402978:	f04b 0b10 	orrne.w	fp, fp, #16
  40297c:	e52d      	b.n	4023da <_vfprintf_r+0xfe>
  40297e:	2a00      	cmp	r2, #0
  402980:	f040 874c 	bne.w	40381c <_vfprintf_r+0x1540>
  402984:	f01b 0f20 	tst.w	fp, #32
  402988:	f040 853f 	bne.w	40340a <_vfprintf_r+0x112e>
  40298c:	f01b 0f10 	tst.w	fp, #16
  402990:	f040 80fc 	bne.w	402b8c <_vfprintf_r+0x8b0>
  402994:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402998:	f000 80f8 	beq.w	402b8c <_vfprintf_r+0x8b0>
  40299c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40299e:	6813      	ldr	r3, [r2, #0]
  4029a0:	3204      	adds	r2, #4
  4029a2:	920e      	str	r2, [sp, #56]	; 0x38
  4029a4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  4029a8:	801a      	strh	r2, [r3, #0]
  4029aa:	e4e3      	b.n	402374 <_vfprintf_r+0x98>
  4029ac:	f899 6000 	ldrb.w	r6, [r9]
  4029b0:	2900      	cmp	r1, #0
  4029b2:	f47f ad12 	bne.w	4023da <_vfprintf_r+0xfe>
  4029b6:	2201      	movs	r2, #1
  4029b8:	2120      	movs	r1, #32
  4029ba:	e50e      	b.n	4023da <_vfprintf_r+0xfe>
  4029bc:	f899 6000 	ldrb.w	r6, [r9]
  4029c0:	2e2a      	cmp	r6, #42	; 0x2a
  4029c2:	f109 0001 	add.w	r0, r9, #1
  4029c6:	f000 86f1 	beq.w	4037ac <_vfprintf_r+0x14d0>
  4029ca:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  4029ce:	2b09      	cmp	r3, #9
  4029d0:	4681      	mov	r9, r0
  4029d2:	bf98      	it	ls
  4029d4:	2000      	movls	r0, #0
  4029d6:	f200 863d 	bhi.w	403654 <_vfprintf_r+0x1378>
  4029da:	f819 6b01 	ldrb.w	r6, [r9], #1
  4029de:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4029e2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  4029e6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  4029ea:	2b09      	cmp	r3, #9
  4029ec:	d9f5      	bls.n	4029da <_vfprintf_r+0x6fe>
  4029ee:	9009      	str	r0, [sp, #36]	; 0x24
  4029f0:	e4f5      	b.n	4023de <_vfprintf_r+0x102>
  4029f2:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4029f6:	f899 6000 	ldrb.w	r6, [r9]
  4029fa:	e4ee      	b.n	4023da <_vfprintf_r+0xfe>
  4029fc:	f899 6000 	ldrb.w	r6, [r9]
  402a00:	2201      	movs	r2, #1
  402a02:	212b      	movs	r1, #43	; 0x2b
  402a04:	e4e9      	b.n	4023da <_vfprintf_r+0xfe>
  402a06:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402a08:	4bae      	ldr	r3, [pc, #696]	; (402cc4 <_vfprintf_r+0x9e8>)
  402a0a:	6814      	ldr	r4, [r2, #0]
  402a0c:	9318      	str	r3, [sp, #96]	; 0x60
  402a0e:	2678      	movs	r6, #120	; 0x78
  402a10:	2330      	movs	r3, #48	; 0x30
  402a12:	3204      	adds	r2, #4
  402a14:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402a18:	f04b 0b02 	orr.w	fp, fp, #2
  402a1c:	920e      	str	r2, [sp, #56]	; 0x38
  402a1e:	2500      	movs	r5, #0
  402a20:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402a24:	2302      	movs	r3, #2
  402a26:	e565      	b.n	4024f4 <_vfprintf_r+0x218>
  402a28:	2a00      	cmp	r2, #0
  402a2a:	f040 86e4 	bne.w	4037f6 <_vfprintf_r+0x151a>
  402a2e:	4ba6      	ldr	r3, [pc, #664]	; (402cc8 <_vfprintf_r+0x9ec>)
  402a30:	9318      	str	r3, [sp, #96]	; 0x60
  402a32:	e6ff      	b.n	402834 <_vfprintf_r+0x558>
  402a34:	990e      	ldr	r1, [sp, #56]	; 0x38
  402a36:	f8cd b018 	str.w	fp, [sp, #24]
  402a3a:	680a      	ldr	r2, [r1, #0]
  402a3c:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402a40:	2300      	movs	r3, #0
  402a42:	460a      	mov	r2, r1
  402a44:	469a      	mov	sl, r3
  402a46:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402a4a:	3204      	adds	r2, #4
  402a4c:	2301      	movs	r3, #1
  402a4e:	9307      	str	r3, [sp, #28]
  402a50:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  402a54:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  402a58:	920e      	str	r2, [sp, #56]	; 0x38
  402a5a:	930d      	str	r3, [sp, #52]	; 0x34
  402a5c:	af26      	add	r7, sp, #152	; 0x98
  402a5e:	e575      	b.n	40254c <_vfprintf_r+0x270>
  402a60:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402a64:	2000      	movs	r0, #0
  402a66:	f819 6b01 	ldrb.w	r6, [r9], #1
  402a6a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402a6e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402a72:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  402a76:	2b09      	cmp	r3, #9
  402a78:	d9f5      	bls.n	402a66 <_vfprintf_r+0x78a>
  402a7a:	900c      	str	r0, [sp, #48]	; 0x30
  402a7c:	e4af      	b.n	4023de <_vfprintf_r+0x102>
  402a7e:	2a00      	cmp	r2, #0
  402a80:	f040 86c8 	bne.w	403814 <_vfprintf_r+0x1538>
  402a84:	f04b 0b10 	orr.w	fp, fp, #16
  402a88:	e726      	b.n	4028d8 <_vfprintf_r+0x5fc>
  402a8a:	f04b 0b01 	orr.w	fp, fp, #1
  402a8e:	f899 6000 	ldrb.w	r6, [r9]
  402a92:	e4a2      	b.n	4023da <_vfprintf_r+0xfe>
  402a94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402a96:	6823      	ldr	r3, [r4, #0]
  402a98:	930c      	str	r3, [sp, #48]	; 0x30
  402a9a:	4618      	mov	r0, r3
  402a9c:	2800      	cmp	r0, #0
  402a9e:	4623      	mov	r3, r4
  402aa0:	f103 0304 	add.w	r3, r3, #4
  402aa4:	f6ff aeb8 	blt.w	402818 <_vfprintf_r+0x53c>
  402aa8:	930e      	str	r3, [sp, #56]	; 0x38
  402aaa:	f899 6000 	ldrb.w	r6, [r9]
  402aae:	e494      	b.n	4023da <_vfprintf_r+0xfe>
  402ab0:	2a00      	cmp	r2, #0
  402ab2:	f040 86b7 	bne.w	403824 <_vfprintf_r+0x1548>
  402ab6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402ab8:	3507      	adds	r5, #7
  402aba:	f025 0307 	bic.w	r3, r5, #7
  402abe:	f103 0208 	add.w	r2, r3, #8
  402ac2:	920e      	str	r2, [sp, #56]	; 0x38
  402ac4:	681a      	ldr	r2, [r3, #0]
  402ac6:	9213      	str	r2, [sp, #76]	; 0x4c
  402ac8:	685b      	ldr	r3, [r3, #4]
  402aca:	9312      	str	r3, [sp, #72]	; 0x48
  402acc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ace:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  402ad0:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402ad4:	4628      	mov	r0, r5
  402ad6:	4621      	mov	r1, r4
  402ad8:	f04f 32ff 	mov.w	r2, #4294967295
  402adc:	4b7b      	ldr	r3, [pc, #492]	; (402ccc <_vfprintf_r+0x9f0>)
  402ade:	f004 f887 	bl	406bf0 <__aeabi_dcmpun>
  402ae2:	2800      	cmp	r0, #0
  402ae4:	f040 83a2 	bne.w	40322c <_vfprintf_r+0xf50>
  402ae8:	4628      	mov	r0, r5
  402aea:	4621      	mov	r1, r4
  402aec:	f04f 32ff 	mov.w	r2, #4294967295
  402af0:	4b76      	ldr	r3, [pc, #472]	; (402ccc <_vfprintf_r+0x9f0>)
  402af2:	f004 f85f 	bl	406bb4 <__aeabi_dcmple>
  402af6:	2800      	cmp	r0, #0
  402af8:	f040 8398 	bne.w	40322c <_vfprintf_r+0xf50>
  402afc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402afe:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402b00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402b02:	9912      	ldr	r1, [sp, #72]	; 0x48
  402b04:	f004 f84c 	bl	406ba0 <__aeabi_dcmplt>
  402b08:	2800      	cmp	r0, #0
  402b0a:	f040 8435 	bne.w	403378 <_vfprintf_r+0x109c>
  402b0e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402b12:	4f6f      	ldr	r7, [pc, #444]	; (402cd0 <_vfprintf_r+0x9f4>)
  402b14:	4b6f      	ldr	r3, [pc, #444]	; (402cd4 <_vfprintf_r+0x9f8>)
  402b16:	2203      	movs	r2, #3
  402b18:	2100      	movs	r1, #0
  402b1a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402b1e:	9207      	str	r2, [sp, #28]
  402b20:	9109      	str	r1, [sp, #36]	; 0x24
  402b22:	9006      	str	r0, [sp, #24]
  402b24:	2e47      	cmp	r6, #71	; 0x47
  402b26:	bfd8      	it	le
  402b28:	461f      	movle	r7, r3
  402b2a:	920d      	str	r2, [sp, #52]	; 0x34
  402b2c:	9110      	str	r1, [sp, #64]	; 0x40
  402b2e:	e507      	b.n	402540 <_vfprintf_r+0x264>
  402b30:	f04b 0b08 	orr.w	fp, fp, #8
  402b34:	f899 6000 	ldrb.w	r6, [r9]
  402b38:	e44f      	b.n	4023da <_vfprintf_r+0xfe>
  402b3a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402b3c:	3507      	adds	r5, #7
  402b3e:	f025 0307 	bic.w	r3, r5, #7
  402b42:	f103 0208 	add.w	r2, r3, #8
  402b46:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b4a:	920e      	str	r2, [sp, #56]	; 0x38
  402b4c:	2300      	movs	r3, #0
  402b4e:	e4d1      	b.n	4024f4 <_vfprintf_r+0x218>
  402b50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402b52:	3507      	adds	r5, #7
  402b54:	f025 0307 	bic.w	r3, r5, #7
  402b58:	f103 0208 	add.w	r2, r3, #8
  402b5c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b60:	920e      	str	r2, [sp, #56]	; 0x38
  402b62:	2301      	movs	r3, #1
  402b64:	e4c6      	b.n	4024f4 <_vfprintf_r+0x218>
  402b66:	2a00      	cmp	r2, #0
  402b68:	f040 8650 	bne.w	40380c <_vfprintf_r+0x1530>
  402b6c:	b1c6      	cbz	r6, 402ba0 <_vfprintf_r+0x8c4>
  402b6e:	2300      	movs	r3, #0
  402b70:	2201      	movs	r2, #1
  402b72:	469a      	mov	sl, r3
  402b74:	9207      	str	r2, [sp, #28]
  402b76:	f88d 6098 	strb.w	r6, [sp, #152]	; 0x98
  402b7a:	f8cd b018 	str.w	fp, [sp, #24]
  402b7e:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402b82:	9309      	str	r3, [sp, #36]	; 0x24
  402b84:	9310      	str	r3, [sp, #64]	; 0x40
  402b86:	920d      	str	r2, [sp, #52]	; 0x34
  402b88:	af26      	add	r7, sp, #152	; 0x98
  402b8a:	e4df      	b.n	40254c <_vfprintf_r+0x270>
  402b8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402b8e:	6813      	ldr	r3, [r2, #0]
  402b90:	3204      	adds	r2, #4
  402b92:	920e      	str	r2, [sp, #56]	; 0x38
  402b94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402b96:	601a      	str	r2, [r3, #0]
  402b98:	f7ff bbec 	b.w	402374 <_vfprintf_r+0x98>
  402b9c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402b9e:	e527      	b.n	4025f0 <_vfprintf_r+0x314>
  402ba0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  402ba2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402ba6:	2b00      	cmp	r3, #0
  402ba8:	f040 8594 	bne.w	4036d4 <_vfprintf_r+0x13f8>
  402bac:	2300      	movs	r3, #0
  402bae:	9324      	str	r3, [sp, #144]	; 0x90
  402bb0:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402bb4:	f013 0f01 	tst.w	r3, #1
  402bb8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402bbc:	d102      	bne.n	402bc4 <_vfprintf_r+0x8e8>
  402bbe:	059a      	lsls	r2, r3, #22
  402bc0:	f140 8249 	bpl.w	403056 <_vfprintf_r+0xd7a>
  402bc4:	065b      	lsls	r3, r3, #25
  402bc6:	f53f adec 	bmi.w	4027a2 <_vfprintf_r+0x4c6>
  402bca:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402bcc:	b041      	add	sp, #260	; 0x104
  402bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402bd2:	2e65      	cmp	r6, #101	; 0x65
  402bd4:	f340 80b2 	ble.w	402d3c <_vfprintf_r+0xa60>
  402bd8:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402bda:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402bdc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402bde:	9912      	ldr	r1, [sp, #72]	; 0x48
  402be0:	f003 ffd4 	bl	406b8c <__aeabi_dcmpeq>
  402be4:	2800      	cmp	r0, #0
  402be6:	f000 8160 	beq.w	402eaa <_vfprintf_r+0xbce>
  402bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402bec:	4a3a      	ldr	r2, [pc, #232]	; (402cd8 <_vfprintf_r+0x9fc>)
  402bee:	f8c8 2000 	str.w	r2, [r8]
  402bf2:	3301      	adds	r3, #1
  402bf4:	3401      	adds	r4, #1
  402bf6:	2201      	movs	r2, #1
  402bf8:	2b07      	cmp	r3, #7
  402bfa:	9425      	str	r4, [sp, #148]	; 0x94
  402bfc:	9324      	str	r3, [sp, #144]	; 0x90
  402bfe:	f8c8 2004 	str.w	r2, [r8, #4]
  402c02:	f300 83bf 	bgt.w	403384 <_vfprintf_r+0x10a8>
  402c06:	f108 0808 	add.w	r8, r8, #8
  402c0a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402c0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c0e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402c10:	4293      	cmp	r3, r2
  402c12:	db03      	blt.n	402c1c <_vfprintf_r+0x940>
  402c14:	9b06      	ldr	r3, [sp, #24]
  402c16:	07df      	lsls	r7, r3, #31
  402c18:	f57f ad65 	bpl.w	4026e6 <_vfprintf_r+0x40a>
  402c1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c1e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c20:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402c22:	f8c8 2000 	str.w	r2, [r8]
  402c26:	3301      	adds	r3, #1
  402c28:	440c      	add	r4, r1
  402c2a:	2b07      	cmp	r3, #7
  402c2c:	f8c8 1004 	str.w	r1, [r8, #4]
  402c30:	9425      	str	r4, [sp, #148]	; 0x94
  402c32:	9324      	str	r3, [sp, #144]	; 0x90
  402c34:	f300 83f8 	bgt.w	403428 <_vfprintf_r+0x114c>
  402c38:	f108 0808 	add.w	r8, r8, #8
  402c3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c3e:	1e5e      	subs	r6, r3, #1
  402c40:	2e00      	cmp	r6, #0
  402c42:	f77f ad50 	ble.w	4026e6 <_vfprintf_r+0x40a>
  402c46:	2e10      	cmp	r6, #16
  402c48:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c4a:	4d24      	ldr	r5, [pc, #144]	; (402cdc <_vfprintf_r+0xa00>)
  402c4c:	f340 81dd 	ble.w	40300a <_vfprintf_r+0xd2e>
  402c50:	2710      	movs	r7, #16
  402c52:	f8dd a020 	ldr.w	sl, [sp, #32]
  402c56:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402c5a:	e005      	b.n	402c68 <_vfprintf_r+0x98c>
  402c5c:	f108 0808 	add.w	r8, r8, #8
  402c60:	3e10      	subs	r6, #16
  402c62:	2e10      	cmp	r6, #16
  402c64:	f340 81d1 	ble.w	40300a <_vfprintf_r+0xd2e>
  402c68:	3301      	adds	r3, #1
  402c6a:	3410      	adds	r4, #16
  402c6c:	2b07      	cmp	r3, #7
  402c6e:	9425      	str	r4, [sp, #148]	; 0x94
  402c70:	9324      	str	r3, [sp, #144]	; 0x90
  402c72:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c76:	ddf1      	ble.n	402c5c <_vfprintf_r+0x980>
  402c78:	aa23      	add	r2, sp, #140	; 0x8c
  402c7a:	4659      	mov	r1, fp
  402c7c:	4650      	mov	r0, sl
  402c7e:	f003 fc7f 	bl	406580 <__sprint_r>
  402c82:	2800      	cmp	r0, #0
  402c84:	f040 83cd 	bne.w	403422 <_vfprintf_r+0x1146>
  402c88:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402c8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c8c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402c90:	e7e6      	b.n	402c60 <_vfprintf_r+0x984>
  402c92:	46aa      	mov	sl, r5
  402c94:	e78c      	b.n	402bb0 <_vfprintf_r+0x8d4>
  402c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402c98:	9a07      	ldr	r2, [sp, #28]
  402c9a:	eba3 0a02 	sub.w	sl, r3, r2
  402c9e:	f1ba 0f00 	cmp.w	sl, #0
  402ca2:	f77f acca 	ble.w	40263a <_vfprintf_r+0x35e>
  402ca6:	f1ba 0f10 	cmp.w	sl, #16
  402caa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cac:	4d0b      	ldr	r5, [pc, #44]	; (402cdc <_vfprintf_r+0xa00>)
  402cae:	dd39      	ble.n	402d24 <_vfprintf_r+0xa48>
  402cb0:	4642      	mov	r2, r8
  402cb2:	4621      	mov	r1, r4
  402cb4:	46b0      	mov	r8, r6
  402cb6:	f04f 0b10 	mov.w	fp, #16
  402cba:	462e      	mov	r6, r5
  402cbc:	9c08      	ldr	r4, [sp, #32]
  402cbe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402cc0:	e015      	b.n	402cee <_vfprintf_r+0xa12>
  402cc2:	bf00      	nop
  402cc4:	00407130 	.word	0x00407130
  402cc8:	0040711c 	.word	0x0040711c
  402ccc:	7fefffff 	.word	0x7fefffff
  402cd0:	00407110 	.word	0x00407110
  402cd4:	0040710c 	.word	0x0040710c
  402cd8:	0040714c 	.word	0x0040714c
  402cdc:	00407160 	.word	0x00407160
  402ce0:	f1aa 0a10 	sub.w	sl, sl, #16
  402ce4:	f1ba 0f10 	cmp.w	sl, #16
  402ce8:	f102 0208 	add.w	r2, r2, #8
  402cec:	dd16      	ble.n	402d1c <_vfprintf_r+0xa40>
  402cee:	3301      	adds	r3, #1
  402cf0:	3110      	adds	r1, #16
  402cf2:	2b07      	cmp	r3, #7
  402cf4:	9125      	str	r1, [sp, #148]	; 0x94
  402cf6:	9324      	str	r3, [sp, #144]	; 0x90
  402cf8:	e882 0840 	stmia.w	r2, {r6, fp}
  402cfc:	ddf0      	ble.n	402ce0 <_vfprintf_r+0xa04>
  402cfe:	aa23      	add	r2, sp, #140	; 0x8c
  402d00:	4629      	mov	r1, r5
  402d02:	4620      	mov	r0, r4
  402d04:	f003 fc3c 	bl	406580 <__sprint_r>
  402d08:	2800      	cmp	r0, #0
  402d0a:	d1c2      	bne.n	402c92 <_vfprintf_r+0x9b6>
  402d0c:	f1aa 0a10 	sub.w	sl, sl, #16
  402d10:	f1ba 0f10 	cmp.w	sl, #16
  402d14:	9925      	ldr	r1, [sp, #148]	; 0x94
  402d16:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d18:	aa30      	add	r2, sp, #192	; 0xc0
  402d1a:	dce8      	bgt.n	402cee <_vfprintf_r+0xa12>
  402d1c:	4635      	mov	r5, r6
  402d1e:	460c      	mov	r4, r1
  402d20:	4646      	mov	r6, r8
  402d22:	4690      	mov	r8, r2
  402d24:	3301      	adds	r3, #1
  402d26:	4454      	add	r4, sl
  402d28:	2b07      	cmp	r3, #7
  402d2a:	9425      	str	r4, [sp, #148]	; 0x94
  402d2c:	9324      	str	r3, [sp, #144]	; 0x90
  402d2e:	e888 0420 	stmia.w	r8, {r5, sl}
  402d32:	f300 8264 	bgt.w	4031fe <_vfprintf_r+0xf22>
  402d36:	f108 0808 	add.w	r8, r8, #8
  402d3a:	e47e      	b.n	40263a <_vfprintf_r+0x35e>
  402d3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d3e:	9e24      	ldr	r6, [sp, #144]	; 0x90
  402d40:	2b01      	cmp	r3, #1
  402d42:	f340 81fd 	ble.w	403140 <_vfprintf_r+0xe64>
  402d46:	3601      	adds	r6, #1
  402d48:	3401      	adds	r4, #1
  402d4a:	2301      	movs	r3, #1
  402d4c:	2e07      	cmp	r6, #7
  402d4e:	9425      	str	r4, [sp, #148]	; 0x94
  402d50:	9624      	str	r6, [sp, #144]	; 0x90
  402d52:	f8c8 7000 	str.w	r7, [r8]
  402d56:	f8c8 3004 	str.w	r3, [r8, #4]
  402d5a:	f300 820e 	bgt.w	40317a <_vfprintf_r+0xe9e>
  402d5e:	f108 0808 	add.w	r8, r8, #8
  402d62:	9a14      	ldr	r2, [sp, #80]	; 0x50
  402d64:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402d66:	f8c8 3000 	str.w	r3, [r8]
  402d6a:	3601      	adds	r6, #1
  402d6c:	4414      	add	r4, r2
  402d6e:	2e07      	cmp	r6, #7
  402d70:	9425      	str	r4, [sp, #148]	; 0x94
  402d72:	9624      	str	r6, [sp, #144]	; 0x90
  402d74:	f8c8 2004 	str.w	r2, [r8, #4]
  402d78:	f300 822e 	bgt.w	4031d8 <_vfprintf_r+0xefc>
  402d7c:	f108 0808 	add.w	r8, r8, #8
  402d80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402d82:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402d84:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402d86:	9912      	ldr	r1, [sp, #72]	; 0x48
  402d88:	f003 ff00 	bl	406b8c <__aeabi_dcmpeq>
  402d8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d8e:	2800      	cmp	r0, #0
  402d90:	f040 8106 	bne.w	402fa0 <_vfprintf_r+0xcc4>
  402d94:	3b01      	subs	r3, #1
  402d96:	3601      	adds	r6, #1
  402d98:	3701      	adds	r7, #1
  402d9a:	441c      	add	r4, r3
  402d9c:	2e07      	cmp	r6, #7
  402d9e:	9624      	str	r6, [sp, #144]	; 0x90
  402da0:	9425      	str	r4, [sp, #148]	; 0x94
  402da2:	f8c8 7000 	str.w	r7, [r8]
  402da6:	f8c8 3004 	str.w	r3, [r8, #4]
  402daa:	f300 81d9 	bgt.w	403160 <_vfprintf_r+0xe84>
  402dae:	f108 0808 	add.w	r8, r8, #8
  402db2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402db4:	f8c8 2004 	str.w	r2, [r8, #4]
  402db8:	3601      	adds	r6, #1
  402dba:	4414      	add	r4, r2
  402dbc:	ab1f      	add	r3, sp, #124	; 0x7c
  402dbe:	2e07      	cmp	r6, #7
  402dc0:	9425      	str	r4, [sp, #148]	; 0x94
  402dc2:	9624      	str	r6, [sp, #144]	; 0x90
  402dc4:	f8c8 3000 	str.w	r3, [r8]
  402dc8:	f77f ac8b 	ble.w	4026e2 <_vfprintf_r+0x406>
  402dcc:	aa23      	add	r2, sp, #140	; 0x8c
  402dce:	990a      	ldr	r1, [sp, #40]	; 0x28
  402dd0:	9808      	ldr	r0, [sp, #32]
  402dd2:	f003 fbd5 	bl	406580 <__sprint_r>
  402dd6:	b958      	cbnz	r0, 402df0 <_vfprintf_r+0xb14>
  402dd8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402dda:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402dde:	e482      	b.n	4026e6 <_vfprintf_r+0x40a>
  402de0:	aa23      	add	r2, sp, #140	; 0x8c
  402de2:	990a      	ldr	r1, [sp, #40]	; 0x28
  402de4:	9808      	ldr	r0, [sp, #32]
  402de6:	f003 fbcb 	bl	406580 <__sprint_r>
  402dea:	2800      	cmp	r0, #0
  402dec:	f43f acc5 	beq.w	40277a <_vfprintf_r+0x49e>
  402df0:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402df4:	e6dc      	b.n	402bb0 <_vfprintf_r+0x8d4>
  402df6:	f8dd b018 	ldr.w	fp, [sp, #24]
  402dfa:	2b01      	cmp	r3, #1
  402dfc:	f000 8121 	beq.w	403042 <_vfprintf_r+0xd66>
  402e00:	2b02      	cmp	r3, #2
  402e02:	d127      	bne.n	402e54 <_vfprintf_r+0xb78>
  402e04:	f8cd b018 	str.w	fp, [sp, #24]
  402e08:	2400      	movs	r4, #0
  402e0a:	2500      	movs	r5, #0
  402e0c:	e591      	b.n	402932 <_vfprintf_r+0x656>
  402e0e:	aa23      	add	r2, sp, #140	; 0x8c
  402e10:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e12:	9808      	ldr	r0, [sp, #32]
  402e14:	f003 fbb4 	bl	406580 <__sprint_r>
  402e18:	2800      	cmp	r0, #0
  402e1a:	d1e9      	bne.n	402df0 <_vfprintf_r+0xb14>
  402e1c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e1e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e22:	e44d      	b.n	4026c0 <_vfprintf_r+0x3e4>
  402e24:	aa23      	add	r2, sp, #140	; 0x8c
  402e26:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e28:	9808      	ldr	r0, [sp, #32]
  402e2a:	f003 fba9 	bl	406580 <__sprint_r>
  402e2e:	2800      	cmp	r0, #0
  402e30:	d1de      	bne.n	402df0 <_vfprintf_r+0xb14>
  402e32:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e34:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e38:	f7ff bbec 	b.w	402614 <_vfprintf_r+0x338>
  402e3c:	aa23      	add	r2, sp, #140	; 0x8c
  402e3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402e40:	9808      	ldr	r0, [sp, #32]
  402e42:	f003 fb9d 	bl	406580 <__sprint_r>
  402e46:	2800      	cmp	r0, #0
  402e48:	d1d2      	bne.n	402df0 <_vfprintf_r+0xb14>
  402e4a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402e4c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e50:	f7ff bbf0 	b.w	402634 <_vfprintf_r+0x358>
  402e54:	f8cd b018 	str.w	fp, [sp, #24]
  402e58:	2400      	movs	r4, #0
  402e5a:	2500      	movs	r5, #0
  402e5c:	a930      	add	r1, sp, #192	; 0xc0
  402e5e:	e000      	b.n	402e62 <_vfprintf_r+0xb86>
  402e60:	4639      	mov	r1, r7
  402e62:	08e2      	lsrs	r2, r4, #3
  402e64:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402e68:	08e8      	lsrs	r0, r5, #3
  402e6a:	f004 0307 	and.w	r3, r4, #7
  402e6e:	4605      	mov	r5, r0
  402e70:	4614      	mov	r4, r2
  402e72:	3330      	adds	r3, #48	; 0x30
  402e74:	ea54 0205 	orrs.w	r2, r4, r5
  402e78:	f801 3c01 	strb.w	r3, [r1, #-1]
  402e7c:	f101 37ff 	add.w	r7, r1, #4294967295
  402e80:	d1ee      	bne.n	402e60 <_vfprintf_r+0xb84>
  402e82:	9a06      	ldr	r2, [sp, #24]
  402e84:	07d2      	lsls	r2, r2, #31
  402e86:	f57f ad64 	bpl.w	402952 <_vfprintf_r+0x676>
  402e8a:	2b30      	cmp	r3, #48	; 0x30
  402e8c:	f43f ad61 	beq.w	402952 <_vfprintf_r+0x676>
  402e90:	2330      	movs	r3, #48	; 0x30
  402e92:	3902      	subs	r1, #2
  402e94:	f807 3c01 	strb.w	r3, [r7, #-1]
  402e98:	ab30      	add	r3, sp, #192	; 0xc0
  402e9a:	1a5b      	subs	r3, r3, r1
  402e9c:	930d      	str	r3, [sp, #52]	; 0x34
  402e9e:	460f      	mov	r7, r1
  402ea0:	f7ff bb46 	b.w	402530 <_vfprintf_r+0x254>
  402ea4:	2302      	movs	r3, #2
  402ea6:	f7ff bb25 	b.w	4024f4 <_vfprintf_r+0x218>
  402eaa:	991d      	ldr	r1, [sp, #116]	; 0x74
  402eac:	2900      	cmp	r1, #0
  402eae:	f340 8274 	ble.w	40339a <_vfprintf_r+0x10be>
  402eb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402eb4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402eb6:	4293      	cmp	r3, r2
  402eb8:	bfa8      	it	ge
  402eba:	4613      	movge	r3, r2
  402ebc:	2b00      	cmp	r3, #0
  402ebe:	461e      	mov	r6, r3
  402ec0:	dd0d      	ble.n	402ede <_vfprintf_r+0xc02>
  402ec2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402ec4:	f8c8 7000 	str.w	r7, [r8]
  402ec8:	3301      	adds	r3, #1
  402eca:	4434      	add	r4, r6
  402ecc:	2b07      	cmp	r3, #7
  402ece:	9425      	str	r4, [sp, #148]	; 0x94
  402ed0:	f8c8 6004 	str.w	r6, [r8, #4]
  402ed4:	9324      	str	r3, [sp, #144]	; 0x90
  402ed6:	f300 8324 	bgt.w	403522 <_vfprintf_r+0x1246>
  402eda:	f108 0808 	add.w	r8, r8, #8
  402ede:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402ee0:	2e00      	cmp	r6, #0
  402ee2:	bfa8      	it	ge
  402ee4:	1b9b      	subge	r3, r3, r6
  402ee6:	2b00      	cmp	r3, #0
  402ee8:	461e      	mov	r6, r3
  402eea:	f340 80d0 	ble.w	40308e <_vfprintf_r+0xdb2>
  402eee:	2e10      	cmp	r6, #16
  402ef0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402ef2:	4dc0      	ldr	r5, [pc, #768]	; (4031f4 <_vfprintf_r+0xf18>)
  402ef4:	f340 80b7 	ble.w	403066 <_vfprintf_r+0xd8a>
  402ef8:	4622      	mov	r2, r4
  402efa:	f04f 0a10 	mov.w	sl, #16
  402efe:	f8dd b020 	ldr.w	fp, [sp, #32]
  402f02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402f04:	e005      	b.n	402f12 <_vfprintf_r+0xc36>
  402f06:	f108 0808 	add.w	r8, r8, #8
  402f0a:	3e10      	subs	r6, #16
  402f0c:	2e10      	cmp	r6, #16
  402f0e:	f340 80a9 	ble.w	403064 <_vfprintf_r+0xd88>
  402f12:	3301      	adds	r3, #1
  402f14:	3210      	adds	r2, #16
  402f16:	2b07      	cmp	r3, #7
  402f18:	9225      	str	r2, [sp, #148]	; 0x94
  402f1a:	9324      	str	r3, [sp, #144]	; 0x90
  402f1c:	e888 0420 	stmia.w	r8, {r5, sl}
  402f20:	ddf1      	ble.n	402f06 <_vfprintf_r+0xc2a>
  402f22:	aa23      	add	r2, sp, #140	; 0x8c
  402f24:	4621      	mov	r1, r4
  402f26:	4658      	mov	r0, fp
  402f28:	f003 fb2a 	bl	406580 <__sprint_r>
  402f2c:	2800      	cmp	r0, #0
  402f2e:	f040 8324 	bne.w	40357a <_vfprintf_r+0x129e>
  402f32:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402f34:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f36:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402f3a:	e7e6      	b.n	402f0a <_vfprintf_r+0xc2e>
  402f3c:	2d00      	cmp	r5, #0
  402f3e:	bf08      	it	eq
  402f40:	2c0a      	cmpeq	r4, #10
  402f42:	d37c      	bcc.n	40303e <_vfprintf_r+0xd62>
  402f44:	af30      	add	r7, sp, #192	; 0xc0
  402f46:	4620      	mov	r0, r4
  402f48:	4629      	mov	r1, r5
  402f4a:	220a      	movs	r2, #10
  402f4c:	2300      	movs	r3, #0
  402f4e:	f003 fe8d 	bl	406c6c <__aeabi_uldivmod>
  402f52:	3230      	adds	r2, #48	; 0x30
  402f54:	f807 2d01 	strb.w	r2, [r7, #-1]!
  402f58:	4620      	mov	r0, r4
  402f5a:	4629      	mov	r1, r5
  402f5c:	2300      	movs	r3, #0
  402f5e:	220a      	movs	r2, #10
  402f60:	f003 fe84 	bl	406c6c <__aeabi_uldivmod>
  402f64:	4604      	mov	r4, r0
  402f66:	460d      	mov	r5, r1
  402f68:	ea54 0305 	orrs.w	r3, r4, r5
  402f6c:	d1eb      	bne.n	402f46 <_vfprintf_r+0xc6a>
  402f6e:	ab30      	add	r3, sp, #192	; 0xc0
  402f70:	1bdb      	subs	r3, r3, r7
  402f72:	930d      	str	r3, [sp, #52]	; 0x34
  402f74:	f7ff badc 	b.w	402530 <_vfprintf_r+0x254>
  402f78:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402f7a:	930d      	str	r3, [sp, #52]	; 0x34
  402f7c:	af30      	add	r7, sp, #192	; 0xc0
  402f7e:	f7ff bad7 	b.w	402530 <_vfprintf_r+0x254>
  402f82:	aa23      	add	r2, sp, #140	; 0x8c
  402f84:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f86:	9808      	ldr	r0, [sp, #32]
  402f88:	f003 fafa 	bl	406580 <__sprint_r>
  402f8c:	2800      	cmp	r0, #0
  402f8e:	f47f af2f 	bne.w	402df0 <_vfprintf_r+0xb14>
  402f92:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402f96:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402f98:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402f9c:	f7ff bb28 	b.w	4025f0 <_vfprintf_r+0x314>
  402fa0:	1e5f      	subs	r7, r3, #1
  402fa2:	2f00      	cmp	r7, #0
  402fa4:	f77f af05 	ble.w	402db2 <_vfprintf_r+0xad6>
  402fa8:	2f10      	cmp	r7, #16
  402faa:	4d92      	ldr	r5, [pc, #584]	; (4031f4 <_vfprintf_r+0xf18>)
  402fac:	f340 810a 	ble.w	4031c4 <_vfprintf_r+0xee8>
  402fb0:	f04f 0a10 	mov.w	sl, #16
  402fb4:	f8dd b020 	ldr.w	fp, [sp, #32]
  402fb8:	e005      	b.n	402fc6 <_vfprintf_r+0xcea>
  402fba:	f108 0808 	add.w	r8, r8, #8
  402fbe:	3f10      	subs	r7, #16
  402fc0:	2f10      	cmp	r7, #16
  402fc2:	f340 80ff 	ble.w	4031c4 <_vfprintf_r+0xee8>
  402fc6:	3601      	adds	r6, #1
  402fc8:	3410      	adds	r4, #16
  402fca:	2e07      	cmp	r6, #7
  402fcc:	9425      	str	r4, [sp, #148]	; 0x94
  402fce:	9624      	str	r6, [sp, #144]	; 0x90
  402fd0:	e888 0420 	stmia.w	r8, {r5, sl}
  402fd4:	ddf1      	ble.n	402fba <_vfprintf_r+0xcde>
  402fd6:	aa23      	add	r2, sp, #140	; 0x8c
  402fd8:	990a      	ldr	r1, [sp, #40]	; 0x28
  402fda:	4658      	mov	r0, fp
  402fdc:	f003 fad0 	bl	406580 <__sprint_r>
  402fe0:	2800      	cmp	r0, #0
  402fe2:	f47f af05 	bne.w	402df0 <_vfprintf_r+0xb14>
  402fe6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402fe8:	9e24      	ldr	r6, [sp, #144]	; 0x90
  402fea:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402fee:	e7e6      	b.n	402fbe <_vfprintf_r+0xce2>
  402ff0:	990e      	ldr	r1, [sp, #56]	; 0x38
  402ff2:	460a      	mov	r2, r1
  402ff4:	3204      	adds	r2, #4
  402ff6:	680c      	ldr	r4, [r1, #0]
  402ff8:	920e      	str	r2, [sp, #56]	; 0x38
  402ffa:	2500      	movs	r5, #0
  402ffc:	f7ff ba7a 	b.w	4024f4 <_vfprintf_r+0x218>
  403000:	681c      	ldr	r4, [r3, #0]
  403002:	3304      	adds	r3, #4
  403004:	930e      	str	r3, [sp, #56]	; 0x38
  403006:	2500      	movs	r5, #0
  403008:	e426      	b.n	402858 <_vfprintf_r+0x57c>
  40300a:	3301      	adds	r3, #1
  40300c:	4434      	add	r4, r6
  40300e:	2b07      	cmp	r3, #7
  403010:	9425      	str	r4, [sp, #148]	; 0x94
  403012:	9324      	str	r3, [sp, #144]	; 0x90
  403014:	e888 0060 	stmia.w	r8, {r5, r6}
  403018:	f77f ab63 	ble.w	4026e2 <_vfprintf_r+0x406>
  40301c:	e6d6      	b.n	402dcc <_vfprintf_r+0xaf0>
  40301e:	3204      	adds	r2, #4
  403020:	681c      	ldr	r4, [r3, #0]
  403022:	920e      	str	r2, [sp, #56]	; 0x38
  403024:	2301      	movs	r3, #1
  403026:	2500      	movs	r5, #0
  403028:	f7ff ba64 	b.w	4024f4 <_vfprintf_r+0x218>
  40302c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40302e:	6814      	ldr	r4, [r2, #0]
  403030:	4613      	mov	r3, r2
  403032:	3304      	adds	r3, #4
  403034:	17e5      	asrs	r5, r4, #31
  403036:	930e      	str	r3, [sp, #56]	; 0x38
  403038:	4622      	mov	r2, r4
  40303a:	462b      	mov	r3, r5
  40303c:	e460      	b.n	402900 <_vfprintf_r+0x624>
  40303e:	f8dd b018 	ldr.w	fp, [sp, #24]
  403042:	f8cd b018 	str.w	fp, [sp, #24]
  403046:	af40      	add	r7, sp, #256	; 0x100
  403048:	3430      	adds	r4, #48	; 0x30
  40304a:	2301      	movs	r3, #1
  40304c:	f807 4d41 	strb.w	r4, [r7, #-65]!
  403050:	930d      	str	r3, [sp, #52]	; 0x34
  403052:	f7ff ba6d 	b.w	402530 <_vfprintf_r+0x254>
  403056:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40305a:	f002 f895 	bl	405188 <__retarget_lock_release_recursive>
  40305e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  403062:	e5af      	b.n	402bc4 <_vfprintf_r+0x8e8>
  403064:	4614      	mov	r4, r2
  403066:	3301      	adds	r3, #1
  403068:	4434      	add	r4, r6
  40306a:	2b07      	cmp	r3, #7
  40306c:	9425      	str	r4, [sp, #148]	; 0x94
  40306e:	9324      	str	r3, [sp, #144]	; 0x90
  403070:	e888 0060 	stmia.w	r8, {r5, r6}
  403074:	f340 816d 	ble.w	403352 <_vfprintf_r+0x1076>
  403078:	aa23      	add	r2, sp, #140	; 0x8c
  40307a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40307c:	9808      	ldr	r0, [sp, #32]
  40307e:	f003 fa7f 	bl	406580 <__sprint_r>
  403082:	2800      	cmp	r0, #0
  403084:	f47f aeb4 	bne.w	402df0 <_vfprintf_r+0xb14>
  403088:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40308a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40308e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403090:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403092:	4293      	cmp	r3, r2
  403094:	f280 8158 	bge.w	403348 <_vfprintf_r+0x106c>
  403098:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40309a:	9814      	ldr	r0, [sp, #80]	; 0x50
  40309c:	9915      	ldr	r1, [sp, #84]	; 0x54
  40309e:	f8c8 1000 	str.w	r1, [r8]
  4030a2:	3201      	adds	r2, #1
  4030a4:	4404      	add	r4, r0
  4030a6:	2a07      	cmp	r2, #7
  4030a8:	9425      	str	r4, [sp, #148]	; 0x94
  4030aa:	f8c8 0004 	str.w	r0, [r8, #4]
  4030ae:	9224      	str	r2, [sp, #144]	; 0x90
  4030b0:	f300 8152 	bgt.w	403358 <_vfprintf_r+0x107c>
  4030b4:	f108 0808 	add.w	r8, r8, #8
  4030b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4030ba:	9910      	ldr	r1, [sp, #64]	; 0x40
  4030bc:	1ad3      	subs	r3, r2, r3
  4030be:	1a56      	subs	r6, r2, r1
  4030c0:	429e      	cmp	r6, r3
  4030c2:	bfa8      	it	ge
  4030c4:	461e      	movge	r6, r3
  4030c6:	2e00      	cmp	r6, #0
  4030c8:	dd0e      	ble.n	4030e8 <_vfprintf_r+0xe0c>
  4030ca:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4030cc:	f8c8 6004 	str.w	r6, [r8, #4]
  4030d0:	3201      	adds	r2, #1
  4030d2:	440f      	add	r7, r1
  4030d4:	4434      	add	r4, r6
  4030d6:	2a07      	cmp	r2, #7
  4030d8:	f8c8 7000 	str.w	r7, [r8]
  4030dc:	9425      	str	r4, [sp, #148]	; 0x94
  4030de:	9224      	str	r2, [sp, #144]	; 0x90
  4030e0:	f300 823c 	bgt.w	40355c <_vfprintf_r+0x1280>
  4030e4:	f108 0808 	add.w	r8, r8, #8
  4030e8:	2e00      	cmp	r6, #0
  4030ea:	bfac      	ite	ge
  4030ec:	1b9e      	subge	r6, r3, r6
  4030ee:	461e      	movlt	r6, r3
  4030f0:	2e00      	cmp	r6, #0
  4030f2:	f77f aaf8 	ble.w	4026e6 <_vfprintf_r+0x40a>
  4030f6:	2e10      	cmp	r6, #16
  4030f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030fa:	4d3e      	ldr	r5, [pc, #248]	; (4031f4 <_vfprintf_r+0xf18>)
  4030fc:	dd85      	ble.n	40300a <_vfprintf_r+0xd2e>
  4030fe:	2710      	movs	r7, #16
  403100:	f8dd a020 	ldr.w	sl, [sp, #32]
  403104:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403108:	e005      	b.n	403116 <_vfprintf_r+0xe3a>
  40310a:	f108 0808 	add.w	r8, r8, #8
  40310e:	3e10      	subs	r6, #16
  403110:	2e10      	cmp	r6, #16
  403112:	f77f af7a 	ble.w	40300a <_vfprintf_r+0xd2e>
  403116:	3301      	adds	r3, #1
  403118:	3410      	adds	r4, #16
  40311a:	2b07      	cmp	r3, #7
  40311c:	9425      	str	r4, [sp, #148]	; 0x94
  40311e:	9324      	str	r3, [sp, #144]	; 0x90
  403120:	e888 00a0 	stmia.w	r8, {r5, r7}
  403124:	ddf1      	ble.n	40310a <_vfprintf_r+0xe2e>
  403126:	aa23      	add	r2, sp, #140	; 0x8c
  403128:	4659      	mov	r1, fp
  40312a:	4650      	mov	r0, sl
  40312c:	f003 fa28 	bl	406580 <__sprint_r>
  403130:	2800      	cmp	r0, #0
  403132:	f040 8176 	bne.w	403422 <_vfprintf_r+0x1146>
  403136:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403138:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40313a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40313e:	e7e6      	b.n	40310e <_vfprintf_r+0xe32>
  403140:	9b06      	ldr	r3, [sp, #24]
  403142:	07d8      	lsls	r0, r3, #31
  403144:	f53f adff 	bmi.w	402d46 <_vfprintf_r+0xa6a>
  403148:	3601      	adds	r6, #1
  40314a:	3401      	adds	r4, #1
  40314c:	2301      	movs	r3, #1
  40314e:	2e07      	cmp	r6, #7
  403150:	9425      	str	r4, [sp, #148]	; 0x94
  403152:	9624      	str	r6, [sp, #144]	; 0x90
  403154:	f8c8 7000 	str.w	r7, [r8]
  403158:	f8c8 3004 	str.w	r3, [r8, #4]
  40315c:	f77f ae27 	ble.w	402dae <_vfprintf_r+0xad2>
  403160:	aa23      	add	r2, sp, #140	; 0x8c
  403162:	990a      	ldr	r1, [sp, #40]	; 0x28
  403164:	9808      	ldr	r0, [sp, #32]
  403166:	f003 fa0b 	bl	406580 <__sprint_r>
  40316a:	2800      	cmp	r0, #0
  40316c:	f47f ae40 	bne.w	402df0 <_vfprintf_r+0xb14>
  403170:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403172:	9e24      	ldr	r6, [sp, #144]	; 0x90
  403174:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403178:	e61b      	b.n	402db2 <_vfprintf_r+0xad6>
  40317a:	aa23      	add	r2, sp, #140	; 0x8c
  40317c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40317e:	9808      	ldr	r0, [sp, #32]
  403180:	f003 f9fe 	bl	406580 <__sprint_r>
  403184:	2800      	cmp	r0, #0
  403186:	f47f ae33 	bne.w	402df0 <_vfprintf_r+0xb14>
  40318a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40318c:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40318e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403192:	e5e6      	b.n	402d62 <_vfprintf_r+0xa86>
  403194:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  403196:	3507      	adds	r5, #7
  403198:	f025 0507 	bic.w	r5, r5, #7
  40319c:	e9d5 2300 	ldrd	r2, r3, [r5]
  4031a0:	f105 0108 	add.w	r1, r5, #8
  4031a4:	910e      	str	r1, [sp, #56]	; 0x38
  4031a6:	4614      	mov	r4, r2
  4031a8:	461d      	mov	r5, r3
  4031aa:	f7ff bba9 	b.w	402900 <_vfprintf_r+0x624>
  4031ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4031b0:	3507      	adds	r5, #7
  4031b2:	f025 0307 	bic.w	r3, r5, #7
  4031b6:	f103 0208 	add.w	r2, r3, #8
  4031ba:	920e      	str	r2, [sp, #56]	; 0x38
  4031bc:	e9d3 4500 	ldrd	r4, r5, [r3]
  4031c0:	f7ff bb4a 	b.w	402858 <_vfprintf_r+0x57c>
  4031c4:	3601      	adds	r6, #1
  4031c6:	443c      	add	r4, r7
  4031c8:	2e07      	cmp	r6, #7
  4031ca:	9425      	str	r4, [sp, #148]	; 0x94
  4031cc:	9624      	str	r6, [sp, #144]	; 0x90
  4031ce:	e888 00a0 	stmia.w	r8, {r5, r7}
  4031d2:	f77f adec 	ble.w	402dae <_vfprintf_r+0xad2>
  4031d6:	e7c3      	b.n	403160 <_vfprintf_r+0xe84>
  4031d8:	aa23      	add	r2, sp, #140	; 0x8c
  4031da:	990a      	ldr	r1, [sp, #40]	; 0x28
  4031dc:	9808      	ldr	r0, [sp, #32]
  4031de:	f003 f9cf 	bl	406580 <__sprint_r>
  4031e2:	2800      	cmp	r0, #0
  4031e4:	f47f ae04 	bne.w	402df0 <_vfprintf_r+0xb14>
  4031e8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4031ea:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4031ec:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4031f0:	e5c6      	b.n	402d80 <_vfprintf_r+0xaa4>
  4031f2:	bf00      	nop
  4031f4:	00407160 	.word	0x00407160
  4031f8:	af30      	add	r7, sp, #192	; 0xc0
  4031fa:	f7ff b999 	b.w	402530 <_vfprintf_r+0x254>
  4031fe:	aa23      	add	r2, sp, #140	; 0x8c
  403200:	990a      	ldr	r1, [sp, #40]	; 0x28
  403202:	9808      	ldr	r0, [sp, #32]
  403204:	f003 f9bc 	bl	406580 <__sprint_r>
  403208:	2800      	cmp	r0, #0
  40320a:	f47f adf1 	bne.w	402df0 <_vfprintf_r+0xb14>
  40320e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403210:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403214:	f7ff ba11 	b.w	40263a <_vfprintf_r+0x35e>
  403218:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40321c:	4264      	negs	r4, r4
  40321e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403222:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  403226:	2301      	movs	r3, #1
  403228:	f7ff b968 	b.w	4024fc <_vfprintf_r+0x220>
  40322c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  40322e:	4622      	mov	r2, r4
  403230:	4620      	mov	r0, r4
  403232:	9c12      	ldr	r4, [sp, #72]	; 0x48
  403234:	4623      	mov	r3, r4
  403236:	4621      	mov	r1, r4
  403238:	f003 fcda 	bl	406bf0 <__aeabi_dcmpun>
  40323c:	2800      	cmp	r0, #0
  40323e:	f040 828c 	bne.w	40375a <_vfprintf_r+0x147e>
  403242:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403244:	3301      	adds	r3, #1
  403246:	f026 0320 	bic.w	r3, r6, #32
  40324a:	930d      	str	r3, [sp, #52]	; 0x34
  40324c:	f000 8091 	beq.w	403372 <_vfprintf_r+0x1096>
  403250:	2b47      	cmp	r3, #71	; 0x47
  403252:	d104      	bne.n	40325e <_vfprintf_r+0xf82>
  403254:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403256:	2b00      	cmp	r3, #0
  403258:	bf08      	it	eq
  40325a:	2301      	moveq	r3, #1
  40325c:	9309      	str	r3, [sp, #36]	; 0x24
  40325e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403262:	9306      	str	r3, [sp, #24]
  403264:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403266:	f1b3 0a00 	subs.w	sl, r3, #0
  40326a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40326c:	9307      	str	r3, [sp, #28]
  40326e:	bfbb      	ittet	lt
  403270:	4653      	movlt	r3, sl
  403272:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  403276:	2300      	movge	r3, #0
  403278:	232d      	movlt	r3, #45	; 0x2d
  40327a:	2e66      	cmp	r6, #102	; 0x66
  40327c:	930f      	str	r3, [sp, #60]	; 0x3c
  40327e:	f000 817f 	beq.w	403580 <_vfprintf_r+0x12a4>
  403282:	2e46      	cmp	r6, #70	; 0x46
  403284:	f000 81d4 	beq.w	403630 <_vfprintf_r+0x1354>
  403288:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40328a:	9a07      	ldr	r2, [sp, #28]
  40328c:	2b45      	cmp	r3, #69	; 0x45
  40328e:	bf0c      	ite	eq
  403290:	9b09      	ldreq	r3, [sp, #36]	; 0x24
  403292:	9d09      	ldrne	r5, [sp, #36]	; 0x24
  403294:	a821      	add	r0, sp, #132	; 0x84
  403296:	a91e      	add	r1, sp, #120	; 0x78
  403298:	bf08      	it	eq
  40329a:	1c5d      	addeq	r5, r3, #1
  40329c:	9004      	str	r0, [sp, #16]
  40329e:	9103      	str	r1, [sp, #12]
  4032a0:	a81d      	add	r0, sp, #116	; 0x74
  4032a2:	2102      	movs	r1, #2
  4032a4:	9002      	str	r0, [sp, #8]
  4032a6:	4653      	mov	r3, sl
  4032a8:	9501      	str	r5, [sp, #4]
  4032aa:	9100      	str	r1, [sp, #0]
  4032ac:	9808      	ldr	r0, [sp, #32]
  4032ae:	f000 fc0b 	bl	403ac8 <_dtoa_r>
  4032b2:	2e67      	cmp	r6, #103	; 0x67
  4032b4:	4607      	mov	r7, r0
  4032b6:	f040 81af 	bne.w	403618 <_vfprintf_r+0x133c>
  4032ba:	f01b 0f01 	tst.w	fp, #1
  4032be:	f000 8213 	beq.w	4036e8 <_vfprintf_r+0x140c>
  4032c2:	197c      	adds	r4, r7, r5
  4032c4:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4032c6:	9807      	ldr	r0, [sp, #28]
  4032c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4032ca:	4651      	mov	r1, sl
  4032cc:	f003 fc5e 	bl	406b8c <__aeabi_dcmpeq>
  4032d0:	2800      	cmp	r0, #0
  4032d2:	f040 8132 	bne.w	40353a <_vfprintf_r+0x125e>
  4032d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4032d8:	42a3      	cmp	r3, r4
  4032da:	d206      	bcs.n	4032ea <_vfprintf_r+0x100e>
  4032dc:	2130      	movs	r1, #48	; 0x30
  4032de:	1c5a      	adds	r2, r3, #1
  4032e0:	9221      	str	r2, [sp, #132]	; 0x84
  4032e2:	7019      	strb	r1, [r3, #0]
  4032e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4032e6:	429c      	cmp	r4, r3
  4032e8:	d8f9      	bhi.n	4032de <_vfprintf_r+0x1002>
  4032ea:	1bdb      	subs	r3, r3, r7
  4032ec:	9311      	str	r3, [sp, #68]	; 0x44
  4032ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4032f0:	2b47      	cmp	r3, #71	; 0x47
  4032f2:	f000 80b9 	beq.w	403468 <_vfprintf_r+0x118c>
  4032f6:	2e65      	cmp	r6, #101	; 0x65
  4032f8:	f340 8276 	ble.w	4037e8 <_vfprintf_r+0x150c>
  4032fc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4032fe:	9310      	str	r3, [sp, #64]	; 0x40
  403300:	2e66      	cmp	r6, #102	; 0x66
  403302:	f000 8162 	beq.w	4035ca <_vfprintf_r+0x12ee>
  403306:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403308:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40330a:	4619      	mov	r1, r3
  40330c:	4291      	cmp	r1, r2
  40330e:	f300 814f 	bgt.w	4035b0 <_vfprintf_r+0x12d4>
  403312:	f01b 0f01 	tst.w	fp, #1
  403316:	f040 8209 	bne.w	40372c <_vfprintf_r+0x1450>
  40331a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40331e:	9307      	str	r3, [sp, #28]
  403320:	920d      	str	r2, [sp, #52]	; 0x34
  403322:	2667      	movs	r6, #103	; 0x67
  403324:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403326:	2b00      	cmp	r3, #0
  403328:	f040 8096 	bne.w	403458 <_vfprintf_r+0x117c>
  40332c:	9309      	str	r3, [sp, #36]	; 0x24
  40332e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  403332:	f7ff b905 	b.w	402540 <_vfprintf_r+0x264>
  403336:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40333a:	f001 ff25 	bl	405188 <__retarget_lock_release_recursive>
  40333e:	f04f 33ff 	mov.w	r3, #4294967295
  403342:	930b      	str	r3, [sp, #44]	; 0x2c
  403344:	f7ff ba30 	b.w	4027a8 <_vfprintf_r+0x4cc>
  403348:	9a06      	ldr	r2, [sp, #24]
  40334a:	07d5      	lsls	r5, r2, #31
  40334c:	f57f aeb4 	bpl.w	4030b8 <_vfprintf_r+0xddc>
  403350:	e6a2      	b.n	403098 <_vfprintf_r+0xdbc>
  403352:	f108 0808 	add.w	r8, r8, #8
  403356:	e69a      	b.n	40308e <_vfprintf_r+0xdb2>
  403358:	aa23      	add	r2, sp, #140	; 0x8c
  40335a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40335c:	9808      	ldr	r0, [sp, #32]
  40335e:	f003 f90f 	bl	406580 <__sprint_r>
  403362:	2800      	cmp	r0, #0
  403364:	f47f ad44 	bne.w	402df0 <_vfprintf_r+0xb14>
  403368:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40336a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40336c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403370:	e6a2      	b.n	4030b8 <_vfprintf_r+0xddc>
  403372:	2306      	movs	r3, #6
  403374:	9309      	str	r3, [sp, #36]	; 0x24
  403376:	e772      	b.n	40325e <_vfprintf_r+0xf82>
  403378:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40337c:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  403380:	f7ff bbc7 	b.w	402b12 <_vfprintf_r+0x836>
  403384:	aa23      	add	r2, sp, #140	; 0x8c
  403386:	990a      	ldr	r1, [sp, #40]	; 0x28
  403388:	9808      	ldr	r0, [sp, #32]
  40338a:	f003 f8f9 	bl	406580 <__sprint_r>
  40338e:	2800      	cmp	r0, #0
  403390:	f47f ad2e 	bne.w	402df0 <_vfprintf_r+0xb14>
  403394:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403398:	e437      	b.n	402c0a <_vfprintf_r+0x92e>
  40339a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40339c:	4ab4      	ldr	r2, [pc, #720]	; (403670 <_vfprintf_r+0x1394>)
  40339e:	f8c8 2000 	str.w	r2, [r8]
  4033a2:	3301      	adds	r3, #1
  4033a4:	3401      	adds	r4, #1
  4033a6:	2201      	movs	r2, #1
  4033a8:	2b07      	cmp	r3, #7
  4033aa:	9425      	str	r4, [sp, #148]	; 0x94
  4033ac:	9324      	str	r3, [sp, #144]	; 0x90
  4033ae:	f8c8 2004 	str.w	r2, [r8, #4]
  4033b2:	f300 8124 	bgt.w	4035fe <_vfprintf_r+0x1322>
  4033b6:	f108 0808 	add.w	r8, r8, #8
  4033ba:	b929      	cbnz	r1, 4033c8 <_vfprintf_r+0x10ec>
  4033bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033be:	b91b      	cbnz	r3, 4033c8 <_vfprintf_r+0x10ec>
  4033c0:	9b06      	ldr	r3, [sp, #24]
  4033c2:	07de      	lsls	r6, r3, #31
  4033c4:	f57f a98f 	bpl.w	4026e6 <_vfprintf_r+0x40a>
  4033c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033ca:	9814      	ldr	r0, [sp, #80]	; 0x50
  4033cc:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4033ce:	f8c8 2000 	str.w	r2, [r8]
  4033d2:	3301      	adds	r3, #1
  4033d4:	4602      	mov	r2, r0
  4033d6:	4422      	add	r2, r4
  4033d8:	2b07      	cmp	r3, #7
  4033da:	9225      	str	r2, [sp, #148]	; 0x94
  4033dc:	f8c8 0004 	str.w	r0, [r8, #4]
  4033e0:	9324      	str	r3, [sp, #144]	; 0x90
  4033e2:	f300 8169 	bgt.w	4036b8 <_vfprintf_r+0x13dc>
  4033e6:	f108 0808 	add.w	r8, r8, #8
  4033ea:	2900      	cmp	r1, #0
  4033ec:	f2c0 8136 	blt.w	40365c <_vfprintf_r+0x1380>
  4033f0:	9911      	ldr	r1, [sp, #68]	; 0x44
  4033f2:	f8c8 7000 	str.w	r7, [r8]
  4033f6:	3301      	adds	r3, #1
  4033f8:	188c      	adds	r4, r1, r2
  4033fa:	2b07      	cmp	r3, #7
  4033fc:	9425      	str	r4, [sp, #148]	; 0x94
  4033fe:	9324      	str	r3, [sp, #144]	; 0x90
  403400:	f8c8 1004 	str.w	r1, [r8, #4]
  403404:	f77f a96d 	ble.w	4026e2 <_vfprintf_r+0x406>
  403408:	e4e0      	b.n	402dcc <_vfprintf_r+0xaf0>
  40340a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40340c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40340e:	6813      	ldr	r3, [r2, #0]
  403410:	17cd      	asrs	r5, r1, #31
  403412:	4608      	mov	r0, r1
  403414:	3204      	adds	r2, #4
  403416:	4629      	mov	r1, r5
  403418:	920e      	str	r2, [sp, #56]	; 0x38
  40341a:	e9c3 0100 	strd	r0, r1, [r3]
  40341e:	f7fe bfa9 	b.w	402374 <_vfprintf_r+0x98>
  403422:	46da      	mov	sl, fp
  403424:	f7ff bbc4 	b.w	402bb0 <_vfprintf_r+0x8d4>
  403428:	aa23      	add	r2, sp, #140	; 0x8c
  40342a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40342c:	9808      	ldr	r0, [sp, #32]
  40342e:	f003 f8a7 	bl	406580 <__sprint_r>
  403432:	2800      	cmp	r0, #0
  403434:	f47f acdc 	bne.w	402df0 <_vfprintf_r+0xb14>
  403438:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40343a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40343e:	f7ff bbfd 	b.w	402c3c <_vfprintf_r+0x960>
  403442:	4638      	mov	r0, r7
  403444:	9409      	str	r4, [sp, #36]	; 0x24
  403446:	f7fe fedb 	bl	402200 <strlen>
  40344a:	950e      	str	r5, [sp, #56]	; 0x38
  40344c:	900d      	str	r0, [sp, #52]	; 0x34
  40344e:	f8cd b018 	str.w	fp, [sp, #24]
  403452:	4603      	mov	r3, r0
  403454:	f7ff ba36 	b.w	4028c4 <_vfprintf_r+0x5e8>
  403458:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40345c:	2300      	movs	r3, #0
  40345e:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  403462:	9309      	str	r3, [sp, #36]	; 0x24
  403464:	f7ff b86f 	b.w	402546 <_vfprintf_r+0x26a>
  403468:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40346a:	9310      	str	r3, [sp, #64]	; 0x40
  40346c:	461a      	mov	r2, r3
  40346e:	3303      	adds	r3, #3
  403470:	db04      	blt.n	40347c <_vfprintf_r+0x11a0>
  403472:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403474:	4619      	mov	r1, r3
  403476:	4291      	cmp	r1, r2
  403478:	f6bf af45 	bge.w	403306 <_vfprintf_r+0x102a>
  40347c:	3e02      	subs	r6, #2
  40347e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403480:	f88d 607c 	strb.w	r6, [sp, #124]	; 0x7c
  403484:	3b01      	subs	r3, #1
  403486:	2b00      	cmp	r3, #0
  403488:	931d      	str	r3, [sp, #116]	; 0x74
  40348a:	bfbd      	ittte	lt
  40348c:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
  40348e:	f1c3 0301 	rsblt	r3, r3, #1
  403492:	222d      	movlt	r2, #45	; 0x2d
  403494:	222b      	movge	r2, #43	; 0x2b
  403496:	2b09      	cmp	r3, #9
  403498:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  40349c:	f340 813e 	ble.w	40371c <_vfprintf_r+0x1440>
  4034a0:	f10d 048b 	add.w	r4, sp, #139	; 0x8b
  4034a4:	4620      	mov	r0, r4
  4034a6:	4d73      	ldr	r5, [pc, #460]	; (403674 <_vfprintf_r+0x1398>)
  4034a8:	e000      	b.n	4034ac <_vfprintf_r+0x11d0>
  4034aa:	4610      	mov	r0, r2
  4034ac:	fb85 1203 	smull	r1, r2, r5, r3
  4034b0:	17d9      	asrs	r1, r3, #31
  4034b2:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4034b6:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4034ba:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4034be:	3230      	adds	r2, #48	; 0x30
  4034c0:	2909      	cmp	r1, #9
  4034c2:	f800 2c01 	strb.w	r2, [r0, #-1]
  4034c6:	460b      	mov	r3, r1
  4034c8:	f100 32ff 	add.w	r2, r0, #4294967295
  4034cc:	dced      	bgt.n	4034aa <_vfprintf_r+0x11ce>
  4034ce:	3330      	adds	r3, #48	; 0x30
  4034d0:	3802      	subs	r0, #2
  4034d2:	b2d9      	uxtb	r1, r3
  4034d4:	4284      	cmp	r4, r0
  4034d6:	f802 1c01 	strb.w	r1, [r2, #-1]
  4034da:	f240 8190 	bls.w	4037fe <_vfprintf_r+0x1522>
  4034de:	f10d 007e 	add.w	r0, sp, #126	; 0x7e
  4034e2:	4613      	mov	r3, r2
  4034e4:	e001      	b.n	4034ea <_vfprintf_r+0x120e>
  4034e6:	f813 1b01 	ldrb.w	r1, [r3], #1
  4034ea:	f800 1b01 	strb.w	r1, [r0], #1
  4034ee:	42a3      	cmp	r3, r4
  4034f0:	d1f9      	bne.n	4034e6 <_vfprintf_r+0x120a>
  4034f2:	3301      	adds	r3, #1
  4034f4:	1a9b      	subs	r3, r3, r2
  4034f6:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  4034fa:	4413      	add	r3, r2
  4034fc:	aa1f      	add	r2, sp, #124	; 0x7c
  4034fe:	1a9b      	subs	r3, r3, r2
  403500:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403502:	9319      	str	r3, [sp, #100]	; 0x64
  403504:	2a01      	cmp	r2, #1
  403506:	4413      	add	r3, r2
  403508:	930d      	str	r3, [sp, #52]	; 0x34
  40350a:	f340 8145 	ble.w	403798 <_vfprintf_r+0x14bc>
  40350e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403510:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403512:	4413      	add	r3, r2
  403514:	930d      	str	r3, [sp, #52]	; 0x34
  403516:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40351a:	9307      	str	r3, [sp, #28]
  40351c:	2300      	movs	r3, #0
  40351e:	9310      	str	r3, [sp, #64]	; 0x40
  403520:	e700      	b.n	403324 <_vfprintf_r+0x1048>
  403522:	aa23      	add	r2, sp, #140	; 0x8c
  403524:	990a      	ldr	r1, [sp, #40]	; 0x28
  403526:	9808      	ldr	r0, [sp, #32]
  403528:	f003 f82a 	bl	406580 <__sprint_r>
  40352c:	2800      	cmp	r0, #0
  40352e:	f47f ac5f 	bne.w	402df0 <_vfprintf_r+0xb14>
  403532:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403534:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403538:	e4d1      	b.n	402ede <_vfprintf_r+0xc02>
  40353a:	4623      	mov	r3, r4
  40353c:	e6d5      	b.n	4032ea <_vfprintf_r+0x100e>
  40353e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403540:	9710      	str	r7, [sp, #64]	; 0x40
  403542:	2b06      	cmp	r3, #6
  403544:	bf28      	it	cs
  403546:	2306      	movcs	r3, #6
  403548:	9709      	str	r7, [sp, #36]	; 0x24
  40354a:	46ba      	mov	sl, r7
  40354c:	9307      	str	r3, [sp, #28]
  40354e:	950e      	str	r5, [sp, #56]	; 0x38
  403550:	f8cd b018 	str.w	fp, [sp, #24]
  403554:	930d      	str	r3, [sp, #52]	; 0x34
  403556:	4f48      	ldr	r7, [pc, #288]	; (403678 <_vfprintf_r+0x139c>)
  403558:	f7fe bff2 	b.w	402540 <_vfprintf_r+0x264>
  40355c:	aa23      	add	r2, sp, #140	; 0x8c
  40355e:	990a      	ldr	r1, [sp, #40]	; 0x28
  403560:	9808      	ldr	r0, [sp, #32]
  403562:	f003 f80d 	bl	406580 <__sprint_r>
  403566:	2800      	cmp	r0, #0
  403568:	f47f ac42 	bne.w	402df0 <_vfprintf_r+0xb14>
  40356c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40356e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403570:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403572:	1ad3      	subs	r3, r2, r3
  403574:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403578:	e5b6      	b.n	4030e8 <_vfprintf_r+0xe0c>
  40357a:	46a2      	mov	sl, r4
  40357c:	f7ff bb18 	b.w	402bb0 <_vfprintf_r+0x8d4>
  403580:	a821      	add	r0, sp, #132	; 0x84
  403582:	a91e      	add	r1, sp, #120	; 0x78
  403584:	9d09      	ldr	r5, [sp, #36]	; 0x24
  403586:	9004      	str	r0, [sp, #16]
  403588:	9103      	str	r1, [sp, #12]
  40358a:	a81d      	add	r0, sp, #116	; 0x74
  40358c:	2103      	movs	r1, #3
  40358e:	9002      	str	r0, [sp, #8]
  403590:	9a07      	ldr	r2, [sp, #28]
  403592:	9501      	str	r5, [sp, #4]
  403594:	4653      	mov	r3, sl
  403596:	9100      	str	r1, [sp, #0]
  403598:	9808      	ldr	r0, [sp, #32]
  40359a:	f000 fa95 	bl	403ac8 <_dtoa_r>
  40359e:	4607      	mov	r7, r0
  4035a0:	1944      	adds	r4, r0, r5
  4035a2:	783b      	ldrb	r3, [r7, #0]
  4035a4:	2b30      	cmp	r3, #48	; 0x30
  4035a6:	f000 80ca 	beq.w	40373e <_vfprintf_r+0x1462>
  4035aa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4035ac:	442c      	add	r4, r5
  4035ae:	e689      	b.n	4032c4 <_vfprintf_r+0xfe8>
  4035b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4035b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035b4:	4413      	add	r3, r2
  4035b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4035b8:	930d      	str	r3, [sp, #52]	; 0x34
  4035ba:	2a00      	cmp	r2, #0
  4035bc:	f340 80e4 	ble.w	403788 <_vfprintf_r+0x14ac>
  4035c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4035c4:	9307      	str	r3, [sp, #28]
  4035c6:	2667      	movs	r6, #103	; 0x67
  4035c8:	e6ac      	b.n	403324 <_vfprintf_r+0x1048>
  4035ca:	2b00      	cmp	r3, #0
  4035cc:	f340 80fb 	ble.w	4037c6 <_vfprintf_r+0x14ea>
  4035d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4035d2:	2a00      	cmp	r2, #0
  4035d4:	f040 80ce 	bne.w	403774 <_vfprintf_r+0x1498>
  4035d8:	f01b 0f01 	tst.w	fp, #1
  4035dc:	f040 80ca 	bne.w	403774 <_vfprintf_r+0x1498>
  4035e0:	9307      	str	r3, [sp, #28]
  4035e2:	930d      	str	r3, [sp, #52]	; 0x34
  4035e4:	e69e      	b.n	403324 <_vfprintf_r+0x1048>
  4035e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4035e8:	9307      	str	r3, [sp, #28]
  4035ea:	930d      	str	r3, [sp, #52]	; 0x34
  4035ec:	9009      	str	r0, [sp, #36]	; 0x24
  4035ee:	950e      	str	r5, [sp, #56]	; 0x38
  4035f0:	f8cd b018 	str.w	fp, [sp, #24]
  4035f4:	9010      	str	r0, [sp, #64]	; 0x40
  4035f6:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  4035fa:	f7fe bfa1 	b.w	402540 <_vfprintf_r+0x264>
  4035fe:	aa23      	add	r2, sp, #140	; 0x8c
  403600:	990a      	ldr	r1, [sp, #40]	; 0x28
  403602:	9808      	ldr	r0, [sp, #32]
  403604:	f002 ffbc 	bl	406580 <__sprint_r>
  403608:	2800      	cmp	r0, #0
  40360a:	f47f abf1 	bne.w	402df0 <_vfprintf_r+0xb14>
  40360e:	991d      	ldr	r1, [sp, #116]	; 0x74
  403610:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403612:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403616:	e6d0      	b.n	4033ba <_vfprintf_r+0x10de>
  403618:	2e47      	cmp	r6, #71	; 0x47
  40361a:	f47f ae52 	bne.w	4032c2 <_vfprintf_r+0xfe6>
  40361e:	f01b 0f01 	tst.w	fp, #1
  403622:	f000 80da 	beq.w	4037da <_vfprintf_r+0x14fe>
  403626:	2e46      	cmp	r6, #70	; 0x46
  403628:	eb07 0405 	add.w	r4, r7, r5
  40362c:	d0b9      	beq.n	4035a2 <_vfprintf_r+0x12c6>
  40362e:	e649      	b.n	4032c4 <_vfprintf_r+0xfe8>
  403630:	a821      	add	r0, sp, #132	; 0x84
  403632:	a91e      	add	r1, sp, #120	; 0x78
  403634:	9c09      	ldr	r4, [sp, #36]	; 0x24
  403636:	9004      	str	r0, [sp, #16]
  403638:	9103      	str	r1, [sp, #12]
  40363a:	a81d      	add	r0, sp, #116	; 0x74
  40363c:	2103      	movs	r1, #3
  40363e:	9002      	str	r0, [sp, #8]
  403640:	9a07      	ldr	r2, [sp, #28]
  403642:	9401      	str	r4, [sp, #4]
  403644:	4653      	mov	r3, sl
  403646:	9100      	str	r1, [sp, #0]
  403648:	9808      	ldr	r0, [sp, #32]
  40364a:	f000 fa3d 	bl	403ac8 <_dtoa_r>
  40364e:	4625      	mov	r5, r4
  403650:	4607      	mov	r7, r0
  403652:	e7e8      	b.n	403626 <_vfprintf_r+0x134a>
  403654:	2300      	movs	r3, #0
  403656:	9309      	str	r3, [sp, #36]	; 0x24
  403658:	f7fe bec1 	b.w	4023de <_vfprintf_r+0x102>
  40365c:	424e      	negs	r6, r1
  40365e:	3110      	adds	r1, #16
  403660:	4d06      	ldr	r5, [pc, #24]	; (40367c <_vfprintf_r+0x13a0>)
  403662:	da43      	bge.n	4036ec <_vfprintf_r+0x1410>
  403664:	2410      	movs	r4, #16
  403666:	f8dd a020 	ldr.w	sl, [sp, #32]
  40366a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40366e:	e00c      	b.n	40368a <_vfprintf_r+0x13ae>
  403670:	0040714c 	.word	0x0040714c
  403674:	66666667 	.word	0x66666667
  403678:	00407144 	.word	0x00407144
  40367c:	00407160 	.word	0x00407160
  403680:	f108 0808 	add.w	r8, r8, #8
  403684:	3e10      	subs	r6, #16
  403686:	2e10      	cmp	r6, #16
  403688:	dd30      	ble.n	4036ec <_vfprintf_r+0x1410>
  40368a:	3301      	adds	r3, #1
  40368c:	3210      	adds	r2, #16
  40368e:	2b07      	cmp	r3, #7
  403690:	9225      	str	r2, [sp, #148]	; 0x94
  403692:	9324      	str	r3, [sp, #144]	; 0x90
  403694:	f8c8 5000 	str.w	r5, [r8]
  403698:	f8c8 4004 	str.w	r4, [r8, #4]
  40369c:	ddf0      	ble.n	403680 <_vfprintf_r+0x13a4>
  40369e:	aa23      	add	r2, sp, #140	; 0x8c
  4036a0:	4659      	mov	r1, fp
  4036a2:	4650      	mov	r0, sl
  4036a4:	f002 ff6c 	bl	406580 <__sprint_r>
  4036a8:	2800      	cmp	r0, #0
  4036aa:	f47f aeba 	bne.w	403422 <_vfprintf_r+0x1146>
  4036ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4036b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036b2:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4036b6:	e7e5      	b.n	403684 <_vfprintf_r+0x13a8>
  4036b8:	aa23      	add	r2, sp, #140	; 0x8c
  4036ba:	990a      	ldr	r1, [sp, #40]	; 0x28
  4036bc:	9808      	ldr	r0, [sp, #32]
  4036be:	f002 ff5f 	bl	406580 <__sprint_r>
  4036c2:	2800      	cmp	r0, #0
  4036c4:	f47f ab94 	bne.w	402df0 <_vfprintf_r+0xb14>
  4036c8:	991d      	ldr	r1, [sp, #116]	; 0x74
  4036ca:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4036cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036ce:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4036d2:	e68a      	b.n	4033ea <_vfprintf_r+0x110e>
  4036d4:	9808      	ldr	r0, [sp, #32]
  4036d6:	aa23      	add	r2, sp, #140	; 0x8c
  4036d8:	4651      	mov	r1, sl
  4036da:	f002 ff51 	bl	406580 <__sprint_r>
  4036de:	2800      	cmp	r0, #0
  4036e0:	f43f aa64 	beq.w	402bac <_vfprintf_r+0x8d0>
  4036e4:	f7ff ba64 	b.w	402bb0 <_vfprintf_r+0x8d4>
  4036e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4036ea:	e5fe      	b.n	4032ea <_vfprintf_r+0x100e>
  4036ec:	3301      	adds	r3, #1
  4036ee:	4432      	add	r2, r6
  4036f0:	2b07      	cmp	r3, #7
  4036f2:	e888 0060 	stmia.w	r8, {r5, r6}
  4036f6:	9225      	str	r2, [sp, #148]	; 0x94
  4036f8:	9324      	str	r3, [sp, #144]	; 0x90
  4036fa:	f108 0808 	add.w	r8, r8, #8
  4036fe:	f77f ae77 	ble.w	4033f0 <_vfprintf_r+0x1114>
  403702:	aa23      	add	r2, sp, #140	; 0x8c
  403704:	990a      	ldr	r1, [sp, #40]	; 0x28
  403706:	9808      	ldr	r0, [sp, #32]
  403708:	f002 ff3a 	bl	406580 <__sprint_r>
  40370c:	2800      	cmp	r0, #0
  40370e:	f47f ab6f 	bne.w	402df0 <_vfprintf_r+0xb14>
  403712:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403714:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403716:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40371a:	e669      	b.n	4033f0 <_vfprintf_r+0x1114>
  40371c:	3330      	adds	r3, #48	; 0x30
  40371e:	2230      	movs	r2, #48	; 0x30
  403720:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  403724:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  403728:	ab20      	add	r3, sp, #128	; 0x80
  40372a:	e6e7      	b.n	4034fc <_vfprintf_r+0x1220>
  40372c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40372e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403730:	4413      	add	r3, r2
  403732:	930d      	str	r3, [sp, #52]	; 0x34
  403734:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403738:	9307      	str	r3, [sp, #28]
  40373a:	2667      	movs	r6, #103	; 0x67
  40373c:	e5f2      	b.n	403324 <_vfprintf_r+0x1048>
  40373e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403740:	9807      	ldr	r0, [sp, #28]
  403742:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403744:	4651      	mov	r1, sl
  403746:	f003 fa21 	bl	406b8c <__aeabi_dcmpeq>
  40374a:	2800      	cmp	r0, #0
  40374c:	f47f af2d 	bne.w	4035aa <_vfprintf_r+0x12ce>
  403750:	f1c5 0501 	rsb	r5, r5, #1
  403754:	951d      	str	r5, [sp, #116]	; 0x74
  403756:	442c      	add	r4, r5
  403758:	e5b4      	b.n	4032c4 <_vfprintf_r+0xfe8>
  40375a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40375c:	4f33      	ldr	r7, [pc, #204]	; (40382c <_vfprintf_r+0x1550>)
  40375e:	2b00      	cmp	r3, #0
  403760:	bfb6      	itet	lt
  403762:	f04f 0a2d 	movlt.w	sl, #45	; 0x2d
  403766:	f89d a06f 	ldrbge.w	sl, [sp, #111]	; 0x6f
  40376a:	f88d a06f 	strblt.w	sl, [sp, #111]	; 0x6f
  40376e:	4b30      	ldr	r3, [pc, #192]	; (403830 <_vfprintf_r+0x1554>)
  403770:	f7ff b9d1 	b.w	402b16 <_vfprintf_r+0x83a>
  403774:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403776:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403778:	4413      	add	r3, r2
  40377a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40377c:	441a      	add	r2, r3
  40377e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403782:	920d      	str	r2, [sp, #52]	; 0x34
  403784:	9307      	str	r3, [sp, #28]
  403786:	e5cd      	b.n	403324 <_vfprintf_r+0x1048>
  403788:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40378a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40378c:	f1c3 0301 	rsb	r3, r3, #1
  403790:	441a      	add	r2, r3
  403792:	4613      	mov	r3, r2
  403794:	920d      	str	r2, [sp, #52]	; 0x34
  403796:	e713      	b.n	4035c0 <_vfprintf_r+0x12e4>
  403798:	f01b 0301 	ands.w	r3, fp, #1
  40379c:	9310      	str	r3, [sp, #64]	; 0x40
  40379e:	f47f aeb6 	bne.w	40350e <_vfprintf_r+0x1232>
  4037a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4037a8:	9307      	str	r3, [sp, #28]
  4037aa:	e5bb      	b.n	403324 <_vfprintf_r+0x1048>
  4037ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4037ae:	f899 6001 	ldrb.w	r6, [r9, #1]
  4037b2:	6823      	ldr	r3, [r4, #0]
  4037b4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
  4037b8:	9309      	str	r3, [sp, #36]	; 0x24
  4037ba:	4623      	mov	r3, r4
  4037bc:	3304      	adds	r3, #4
  4037be:	4681      	mov	r9, r0
  4037c0:	930e      	str	r3, [sp, #56]	; 0x38
  4037c2:	f7fe be0a 	b.w	4023da <_vfprintf_r+0xfe>
  4037c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4037c8:	b913      	cbnz	r3, 4037d0 <_vfprintf_r+0x14f4>
  4037ca:	f01b 0f01 	tst.w	fp, #1
  4037ce:	d002      	beq.n	4037d6 <_vfprintf_r+0x14fa>
  4037d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4037d2:	3301      	adds	r3, #1
  4037d4:	e7d1      	b.n	40377a <_vfprintf_r+0x149e>
  4037d6:	2301      	movs	r3, #1
  4037d8:	e702      	b.n	4035e0 <_vfprintf_r+0x1304>
  4037da:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4037dc:	1bdb      	subs	r3, r3, r7
  4037de:	9311      	str	r3, [sp, #68]	; 0x44
  4037e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037e2:	2b47      	cmp	r3, #71	; 0x47
  4037e4:	f43f ae40 	beq.w	403468 <_vfprintf_r+0x118c>
  4037e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4037ea:	9310      	str	r3, [sp, #64]	; 0x40
  4037ec:	e647      	b.n	40347e <_vfprintf_r+0x11a2>
  4037ee:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4037f2:	f7ff b81d 	b.w	402830 <_vfprintf_r+0x554>
  4037f6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4037fa:	f7ff b918 	b.w	402a2e <_vfprintf_r+0x752>
  4037fe:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  403802:	e67b      	b.n	4034fc <_vfprintf_r+0x1220>
  403804:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403808:	f7ff b866 	b.w	4028d8 <_vfprintf_r+0x5fc>
  40380c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403810:	f7ff b9ac 	b.w	402b6c <_vfprintf_r+0x890>
  403814:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403818:	f7ff b934 	b.w	402a84 <_vfprintf_r+0x7a8>
  40381c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403820:	f7ff b8b0 	b.w	402984 <_vfprintf_r+0x6a8>
  403824:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403828:	f7ff b945 	b.w	402ab6 <_vfprintf_r+0x7da>
  40382c:	00407118 	.word	0x00407118
  403830:	00407114 	.word	0x00407114

00403834 <__sbprintf>:
  403834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403838:	460c      	mov	r4, r1
  40383a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  40383e:	8989      	ldrh	r1, [r1, #12]
  403840:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403842:	89e5      	ldrh	r5, [r4, #14]
  403844:	9619      	str	r6, [sp, #100]	; 0x64
  403846:	f021 0102 	bic.w	r1, r1, #2
  40384a:	4606      	mov	r6, r0
  40384c:	69e0      	ldr	r0, [r4, #28]
  40384e:	f8ad 100c 	strh.w	r1, [sp, #12]
  403852:	4617      	mov	r7, r2
  403854:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403858:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40385a:	f8ad 500e 	strh.w	r5, [sp, #14]
  40385e:	4698      	mov	r8, r3
  403860:	ad1a      	add	r5, sp, #104	; 0x68
  403862:	2300      	movs	r3, #0
  403864:	9007      	str	r0, [sp, #28]
  403866:	a816      	add	r0, sp, #88	; 0x58
  403868:	9209      	str	r2, [sp, #36]	; 0x24
  40386a:	9306      	str	r3, [sp, #24]
  40386c:	9500      	str	r5, [sp, #0]
  40386e:	9504      	str	r5, [sp, #16]
  403870:	9102      	str	r1, [sp, #8]
  403872:	9105      	str	r1, [sp, #20]
  403874:	f001 fc82 	bl	40517c <__retarget_lock_init_recursive>
  403878:	4643      	mov	r3, r8
  40387a:	463a      	mov	r2, r7
  40387c:	4669      	mov	r1, sp
  40387e:	4630      	mov	r0, r6
  403880:	f7fe fd2c 	bl	4022dc <_vfprintf_r>
  403884:	1e05      	subs	r5, r0, #0
  403886:	db07      	blt.n	403898 <__sbprintf+0x64>
  403888:	4630      	mov	r0, r6
  40388a:	4669      	mov	r1, sp
  40388c:	f001 f8e6 	bl	404a5c <_fflush_r>
  403890:	2800      	cmp	r0, #0
  403892:	bf18      	it	ne
  403894:	f04f 35ff 	movne.w	r5, #4294967295
  403898:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  40389c:	065b      	lsls	r3, r3, #25
  40389e:	d503      	bpl.n	4038a8 <__sbprintf+0x74>
  4038a0:	89a3      	ldrh	r3, [r4, #12]
  4038a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4038a6:	81a3      	strh	r3, [r4, #12]
  4038a8:	9816      	ldr	r0, [sp, #88]	; 0x58
  4038aa:	f001 fc69 	bl	405180 <__retarget_lock_close_recursive>
  4038ae:	4628      	mov	r0, r5
  4038b0:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4038b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004038b8 <__swsetup_r>:
  4038b8:	b538      	push	{r3, r4, r5, lr}
  4038ba:	4b30      	ldr	r3, [pc, #192]	; (40397c <__swsetup_r+0xc4>)
  4038bc:	681b      	ldr	r3, [r3, #0]
  4038be:	4605      	mov	r5, r0
  4038c0:	460c      	mov	r4, r1
  4038c2:	b113      	cbz	r3, 4038ca <__swsetup_r+0x12>
  4038c4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4038c6:	2a00      	cmp	r2, #0
  4038c8:	d038      	beq.n	40393c <__swsetup_r+0x84>
  4038ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4038ce:	b293      	uxth	r3, r2
  4038d0:	0718      	lsls	r0, r3, #28
  4038d2:	d50c      	bpl.n	4038ee <__swsetup_r+0x36>
  4038d4:	6920      	ldr	r0, [r4, #16]
  4038d6:	b1a8      	cbz	r0, 403904 <__swsetup_r+0x4c>
  4038d8:	f013 0201 	ands.w	r2, r3, #1
  4038dc:	d01e      	beq.n	40391c <__swsetup_r+0x64>
  4038de:	6963      	ldr	r3, [r4, #20]
  4038e0:	2200      	movs	r2, #0
  4038e2:	425b      	negs	r3, r3
  4038e4:	61a3      	str	r3, [r4, #24]
  4038e6:	60a2      	str	r2, [r4, #8]
  4038e8:	b1f0      	cbz	r0, 403928 <__swsetup_r+0x70>
  4038ea:	2000      	movs	r0, #0
  4038ec:	bd38      	pop	{r3, r4, r5, pc}
  4038ee:	06d9      	lsls	r1, r3, #27
  4038f0:	d53c      	bpl.n	40396c <__swsetup_r+0xb4>
  4038f2:	0758      	lsls	r0, r3, #29
  4038f4:	d426      	bmi.n	403944 <__swsetup_r+0x8c>
  4038f6:	6920      	ldr	r0, [r4, #16]
  4038f8:	f042 0308 	orr.w	r3, r2, #8
  4038fc:	81a3      	strh	r3, [r4, #12]
  4038fe:	b29b      	uxth	r3, r3
  403900:	2800      	cmp	r0, #0
  403902:	d1e9      	bne.n	4038d8 <__swsetup_r+0x20>
  403904:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403908:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40390c:	d0e4      	beq.n	4038d8 <__swsetup_r+0x20>
  40390e:	4628      	mov	r0, r5
  403910:	4621      	mov	r1, r4
  403912:	f001 fc69 	bl	4051e8 <__smakebuf_r>
  403916:	89a3      	ldrh	r3, [r4, #12]
  403918:	6920      	ldr	r0, [r4, #16]
  40391a:	e7dd      	b.n	4038d8 <__swsetup_r+0x20>
  40391c:	0799      	lsls	r1, r3, #30
  40391e:	bf58      	it	pl
  403920:	6962      	ldrpl	r2, [r4, #20]
  403922:	60a2      	str	r2, [r4, #8]
  403924:	2800      	cmp	r0, #0
  403926:	d1e0      	bne.n	4038ea <__swsetup_r+0x32>
  403928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40392c:	061a      	lsls	r2, r3, #24
  40392e:	d5dd      	bpl.n	4038ec <__swsetup_r+0x34>
  403930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403934:	81a3      	strh	r3, [r4, #12]
  403936:	f04f 30ff 	mov.w	r0, #4294967295
  40393a:	bd38      	pop	{r3, r4, r5, pc}
  40393c:	4618      	mov	r0, r3
  40393e:	f001 f8e5 	bl	404b0c <__sinit>
  403942:	e7c2      	b.n	4038ca <__swsetup_r+0x12>
  403944:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403946:	b151      	cbz	r1, 40395e <__swsetup_r+0xa6>
  403948:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40394c:	4299      	cmp	r1, r3
  40394e:	d004      	beq.n	40395a <__swsetup_r+0xa2>
  403950:	4628      	mov	r0, r5
  403952:	f001 f97d 	bl	404c50 <_free_r>
  403956:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40395a:	2300      	movs	r3, #0
  40395c:	6323      	str	r3, [r4, #48]	; 0x30
  40395e:	2300      	movs	r3, #0
  403960:	6920      	ldr	r0, [r4, #16]
  403962:	6063      	str	r3, [r4, #4]
  403964:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  403968:	6020      	str	r0, [r4, #0]
  40396a:	e7c5      	b.n	4038f8 <__swsetup_r+0x40>
  40396c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  403970:	2309      	movs	r3, #9
  403972:	602b      	str	r3, [r5, #0]
  403974:	f04f 30ff 	mov.w	r0, #4294967295
  403978:	81a2      	strh	r2, [r4, #12]
  40397a:	bd38      	pop	{r3, r4, r5, pc}
  40397c:	20400008 	.word	0x20400008

00403980 <register_fini>:
  403980:	4b02      	ldr	r3, [pc, #8]	; (40398c <register_fini+0xc>)
  403982:	b113      	cbz	r3, 40398a <register_fini+0xa>
  403984:	4802      	ldr	r0, [pc, #8]	; (403990 <register_fini+0x10>)
  403986:	f000 b805 	b.w	403994 <atexit>
  40398a:	4770      	bx	lr
  40398c:	00000000 	.word	0x00000000
  403990:	00404b7d 	.word	0x00404b7d

00403994 <atexit>:
  403994:	2300      	movs	r3, #0
  403996:	4601      	mov	r1, r0
  403998:	461a      	mov	r2, r3
  40399a:	4618      	mov	r0, r3
  40399c:	f002 be68 	b.w	406670 <__register_exitproc>

004039a0 <quorem>:
  4039a0:	6902      	ldr	r2, [r0, #16]
  4039a2:	690b      	ldr	r3, [r1, #16]
  4039a4:	4293      	cmp	r3, r2
  4039a6:	f300 808d 	bgt.w	403ac4 <quorem+0x124>
  4039aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4039ae:	f103 38ff 	add.w	r8, r3, #4294967295
  4039b2:	f101 0714 	add.w	r7, r1, #20
  4039b6:	f100 0b14 	add.w	fp, r0, #20
  4039ba:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4039be:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4039c2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4039c6:	b083      	sub	sp, #12
  4039c8:	3201      	adds	r2, #1
  4039ca:	fbb3 f9f2 	udiv	r9, r3, r2
  4039ce:	eb0b 0304 	add.w	r3, fp, r4
  4039d2:	9400      	str	r4, [sp, #0]
  4039d4:	eb07 0a04 	add.w	sl, r7, r4
  4039d8:	9301      	str	r3, [sp, #4]
  4039da:	f1b9 0f00 	cmp.w	r9, #0
  4039de:	d039      	beq.n	403a54 <quorem+0xb4>
  4039e0:	2500      	movs	r5, #0
  4039e2:	462e      	mov	r6, r5
  4039e4:	46bc      	mov	ip, r7
  4039e6:	46de      	mov	lr, fp
  4039e8:	f85c 4b04 	ldr.w	r4, [ip], #4
  4039ec:	f8de 3000 	ldr.w	r3, [lr]
  4039f0:	b2a2      	uxth	r2, r4
  4039f2:	fb09 5502 	mla	r5, r9, r2, r5
  4039f6:	0c22      	lsrs	r2, r4, #16
  4039f8:	0c2c      	lsrs	r4, r5, #16
  4039fa:	fb09 4202 	mla	r2, r9, r2, r4
  4039fe:	b2ad      	uxth	r5, r5
  403a00:	1b75      	subs	r5, r6, r5
  403a02:	b296      	uxth	r6, r2
  403a04:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403a08:	fa15 f383 	uxtah	r3, r5, r3
  403a0c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403a10:	b29b      	uxth	r3, r3
  403a12:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403a16:	45e2      	cmp	sl, ip
  403a18:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403a1c:	f84e 3b04 	str.w	r3, [lr], #4
  403a20:	ea4f 4626 	mov.w	r6, r6, asr #16
  403a24:	d2e0      	bcs.n	4039e8 <quorem+0x48>
  403a26:	9b00      	ldr	r3, [sp, #0]
  403a28:	f85b 3003 	ldr.w	r3, [fp, r3]
  403a2c:	b993      	cbnz	r3, 403a54 <quorem+0xb4>
  403a2e:	9c01      	ldr	r4, [sp, #4]
  403a30:	1f23      	subs	r3, r4, #4
  403a32:	459b      	cmp	fp, r3
  403a34:	d20c      	bcs.n	403a50 <quorem+0xb0>
  403a36:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403a3a:	b94b      	cbnz	r3, 403a50 <quorem+0xb0>
  403a3c:	f1a4 0308 	sub.w	r3, r4, #8
  403a40:	e002      	b.n	403a48 <quorem+0xa8>
  403a42:	681a      	ldr	r2, [r3, #0]
  403a44:	3b04      	subs	r3, #4
  403a46:	b91a      	cbnz	r2, 403a50 <quorem+0xb0>
  403a48:	459b      	cmp	fp, r3
  403a4a:	f108 38ff 	add.w	r8, r8, #4294967295
  403a4e:	d3f8      	bcc.n	403a42 <quorem+0xa2>
  403a50:	f8c0 8010 	str.w	r8, [r0, #16]
  403a54:	4604      	mov	r4, r0
  403a56:	f002 fa23 	bl	405ea0 <__mcmp>
  403a5a:	2800      	cmp	r0, #0
  403a5c:	db2e      	blt.n	403abc <quorem+0x11c>
  403a5e:	f109 0901 	add.w	r9, r9, #1
  403a62:	465d      	mov	r5, fp
  403a64:	2300      	movs	r3, #0
  403a66:	f857 1b04 	ldr.w	r1, [r7], #4
  403a6a:	6828      	ldr	r0, [r5, #0]
  403a6c:	b28a      	uxth	r2, r1
  403a6e:	1a9a      	subs	r2, r3, r2
  403a70:	0c0b      	lsrs	r3, r1, #16
  403a72:	fa12 f280 	uxtah	r2, r2, r0
  403a76:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403a7a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403a7e:	b292      	uxth	r2, r2
  403a80:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403a84:	45ba      	cmp	sl, r7
  403a86:	f845 2b04 	str.w	r2, [r5], #4
  403a8a:	ea4f 4323 	mov.w	r3, r3, asr #16
  403a8e:	d2ea      	bcs.n	403a66 <quorem+0xc6>
  403a90:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403a94:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403a98:	b982      	cbnz	r2, 403abc <quorem+0x11c>
  403a9a:	1f1a      	subs	r2, r3, #4
  403a9c:	4593      	cmp	fp, r2
  403a9e:	d20b      	bcs.n	403ab8 <quorem+0x118>
  403aa0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403aa4:	b942      	cbnz	r2, 403ab8 <quorem+0x118>
  403aa6:	3b08      	subs	r3, #8
  403aa8:	e002      	b.n	403ab0 <quorem+0x110>
  403aaa:	681a      	ldr	r2, [r3, #0]
  403aac:	3b04      	subs	r3, #4
  403aae:	b91a      	cbnz	r2, 403ab8 <quorem+0x118>
  403ab0:	459b      	cmp	fp, r3
  403ab2:	f108 38ff 	add.w	r8, r8, #4294967295
  403ab6:	d3f8      	bcc.n	403aaa <quorem+0x10a>
  403ab8:	f8c4 8010 	str.w	r8, [r4, #16]
  403abc:	4648      	mov	r0, r9
  403abe:	b003      	add	sp, #12
  403ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ac4:	2000      	movs	r0, #0
  403ac6:	4770      	bx	lr

00403ac8 <_dtoa_r>:
  403ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403acc:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403ace:	b09b      	sub	sp, #108	; 0x6c
  403ad0:	4604      	mov	r4, r0
  403ad2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403ad4:	4692      	mov	sl, r2
  403ad6:	469b      	mov	fp, r3
  403ad8:	b141      	cbz	r1, 403aec <_dtoa_r+0x24>
  403ada:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403adc:	604a      	str	r2, [r1, #4]
  403ade:	2301      	movs	r3, #1
  403ae0:	4093      	lsls	r3, r2
  403ae2:	608b      	str	r3, [r1, #8]
  403ae4:	f002 f804 	bl	405af0 <_Bfree>
  403ae8:	2300      	movs	r3, #0
  403aea:	6423      	str	r3, [r4, #64]	; 0x40
  403aec:	f1bb 0f00 	cmp.w	fp, #0
  403af0:	465d      	mov	r5, fp
  403af2:	db35      	blt.n	403b60 <_dtoa_r+0x98>
  403af4:	2300      	movs	r3, #0
  403af6:	6033      	str	r3, [r6, #0]
  403af8:	4b9d      	ldr	r3, [pc, #628]	; (403d70 <_dtoa_r+0x2a8>)
  403afa:	43ab      	bics	r3, r5
  403afc:	d015      	beq.n	403b2a <_dtoa_r+0x62>
  403afe:	4650      	mov	r0, sl
  403b00:	4659      	mov	r1, fp
  403b02:	2200      	movs	r2, #0
  403b04:	2300      	movs	r3, #0
  403b06:	f003 f841 	bl	406b8c <__aeabi_dcmpeq>
  403b0a:	4680      	mov	r8, r0
  403b0c:	2800      	cmp	r0, #0
  403b0e:	d02d      	beq.n	403b6c <_dtoa_r+0xa4>
  403b10:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403b12:	2301      	movs	r3, #1
  403b14:	6013      	str	r3, [r2, #0]
  403b16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b18:	2b00      	cmp	r3, #0
  403b1a:	f000 80bd 	beq.w	403c98 <_dtoa_r+0x1d0>
  403b1e:	4895      	ldr	r0, [pc, #596]	; (403d74 <_dtoa_r+0x2ac>)
  403b20:	6018      	str	r0, [r3, #0]
  403b22:	3801      	subs	r0, #1
  403b24:	b01b      	add	sp, #108	; 0x6c
  403b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b2a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403b2c:	f242 730f 	movw	r3, #9999	; 0x270f
  403b30:	6013      	str	r3, [r2, #0]
  403b32:	f1ba 0f00 	cmp.w	sl, #0
  403b36:	d10d      	bne.n	403b54 <_dtoa_r+0x8c>
  403b38:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403b3c:	b955      	cbnz	r5, 403b54 <_dtoa_r+0x8c>
  403b3e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b40:	488d      	ldr	r0, [pc, #564]	; (403d78 <_dtoa_r+0x2b0>)
  403b42:	2b00      	cmp	r3, #0
  403b44:	d0ee      	beq.n	403b24 <_dtoa_r+0x5c>
  403b46:	f100 0308 	add.w	r3, r0, #8
  403b4a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403b4c:	6013      	str	r3, [r2, #0]
  403b4e:	b01b      	add	sp, #108	; 0x6c
  403b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403b56:	4889      	ldr	r0, [pc, #548]	; (403d7c <_dtoa_r+0x2b4>)
  403b58:	2b00      	cmp	r3, #0
  403b5a:	d0e3      	beq.n	403b24 <_dtoa_r+0x5c>
  403b5c:	1cc3      	adds	r3, r0, #3
  403b5e:	e7f4      	b.n	403b4a <_dtoa_r+0x82>
  403b60:	2301      	movs	r3, #1
  403b62:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403b66:	6033      	str	r3, [r6, #0]
  403b68:	46ab      	mov	fp, r5
  403b6a:	e7c5      	b.n	403af8 <_dtoa_r+0x30>
  403b6c:	aa18      	add	r2, sp, #96	; 0x60
  403b6e:	ab19      	add	r3, sp, #100	; 0x64
  403b70:	9201      	str	r2, [sp, #4]
  403b72:	9300      	str	r3, [sp, #0]
  403b74:	4652      	mov	r2, sl
  403b76:	465b      	mov	r3, fp
  403b78:	4620      	mov	r0, r4
  403b7a:	f002 fa31 	bl	405fe0 <__d2b>
  403b7e:	0d2b      	lsrs	r3, r5, #20
  403b80:	4681      	mov	r9, r0
  403b82:	d071      	beq.n	403c68 <_dtoa_r+0x1a0>
  403b84:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403b88:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403b8c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403b8e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403b92:	4650      	mov	r0, sl
  403b94:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403b98:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403b9c:	2200      	movs	r2, #0
  403b9e:	4b78      	ldr	r3, [pc, #480]	; (403d80 <_dtoa_r+0x2b8>)
  403ba0:	f7fd fda2 	bl	4016e8 <__aeabi_dsub>
  403ba4:	a36c      	add	r3, pc, #432	; (adr r3, 403d58 <_dtoa_r+0x290>)
  403ba6:	e9d3 2300 	ldrd	r2, r3, [r3]
  403baa:	f7fd ff51 	bl	401a50 <__aeabi_dmul>
  403bae:	a36c      	add	r3, pc, #432	; (adr r3, 403d60 <_dtoa_r+0x298>)
  403bb0:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bb4:	f7fd fd9a 	bl	4016ec <__adddf3>
  403bb8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403bbc:	4630      	mov	r0, r6
  403bbe:	f7fd fee1 	bl	401984 <__aeabi_i2d>
  403bc2:	a369      	add	r3, pc, #420	; (adr r3, 403d68 <_dtoa_r+0x2a0>)
  403bc4:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bc8:	f7fd ff42 	bl	401a50 <__aeabi_dmul>
  403bcc:	4602      	mov	r2, r0
  403bce:	460b      	mov	r3, r1
  403bd0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403bd4:	f7fd fd8a 	bl	4016ec <__adddf3>
  403bd8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403bdc:	f003 f81e 	bl	406c1c <__aeabi_d2iz>
  403be0:	2200      	movs	r2, #0
  403be2:	9002      	str	r0, [sp, #8]
  403be4:	2300      	movs	r3, #0
  403be6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403bea:	f002 ffd9 	bl	406ba0 <__aeabi_dcmplt>
  403bee:	2800      	cmp	r0, #0
  403bf0:	f040 8173 	bne.w	403eda <_dtoa_r+0x412>
  403bf4:	9d02      	ldr	r5, [sp, #8]
  403bf6:	2d16      	cmp	r5, #22
  403bf8:	f200 815d 	bhi.w	403eb6 <_dtoa_r+0x3ee>
  403bfc:	4b61      	ldr	r3, [pc, #388]	; (403d84 <_dtoa_r+0x2bc>)
  403bfe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403c02:	e9d3 0100 	ldrd	r0, r1, [r3]
  403c06:	4652      	mov	r2, sl
  403c08:	465b      	mov	r3, fp
  403c0a:	f002 ffe7 	bl	406bdc <__aeabi_dcmpgt>
  403c0e:	2800      	cmp	r0, #0
  403c10:	f000 81c5 	beq.w	403f9e <_dtoa_r+0x4d6>
  403c14:	1e6b      	subs	r3, r5, #1
  403c16:	9302      	str	r3, [sp, #8]
  403c18:	2300      	movs	r3, #0
  403c1a:	930e      	str	r3, [sp, #56]	; 0x38
  403c1c:	1bbf      	subs	r7, r7, r6
  403c1e:	1e7b      	subs	r3, r7, #1
  403c20:	9306      	str	r3, [sp, #24]
  403c22:	f100 8154 	bmi.w	403ece <_dtoa_r+0x406>
  403c26:	2300      	movs	r3, #0
  403c28:	9308      	str	r3, [sp, #32]
  403c2a:	9b02      	ldr	r3, [sp, #8]
  403c2c:	2b00      	cmp	r3, #0
  403c2e:	f2c0 8145 	blt.w	403ebc <_dtoa_r+0x3f4>
  403c32:	9a06      	ldr	r2, [sp, #24]
  403c34:	930d      	str	r3, [sp, #52]	; 0x34
  403c36:	4611      	mov	r1, r2
  403c38:	4419      	add	r1, r3
  403c3a:	2300      	movs	r3, #0
  403c3c:	9106      	str	r1, [sp, #24]
  403c3e:	930c      	str	r3, [sp, #48]	; 0x30
  403c40:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403c42:	2b09      	cmp	r3, #9
  403c44:	d82a      	bhi.n	403c9c <_dtoa_r+0x1d4>
  403c46:	2b05      	cmp	r3, #5
  403c48:	f340 865b 	ble.w	404902 <_dtoa_r+0xe3a>
  403c4c:	3b04      	subs	r3, #4
  403c4e:	9324      	str	r3, [sp, #144]	; 0x90
  403c50:	2500      	movs	r5, #0
  403c52:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403c54:	3b02      	subs	r3, #2
  403c56:	2b03      	cmp	r3, #3
  403c58:	f200 8642 	bhi.w	4048e0 <_dtoa_r+0xe18>
  403c5c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403c60:	02c903d4 	.word	0x02c903d4
  403c64:	046103df 	.word	0x046103df
  403c68:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403c6a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403c6c:	443e      	add	r6, r7
  403c6e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403c72:	2b20      	cmp	r3, #32
  403c74:	f340 818e 	ble.w	403f94 <_dtoa_r+0x4cc>
  403c78:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403c7c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403c80:	409d      	lsls	r5, r3
  403c82:	fa2a f000 	lsr.w	r0, sl, r0
  403c86:	4328      	orrs	r0, r5
  403c88:	f7fd fe6c 	bl	401964 <__aeabi_ui2d>
  403c8c:	2301      	movs	r3, #1
  403c8e:	3e01      	subs	r6, #1
  403c90:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403c94:	9314      	str	r3, [sp, #80]	; 0x50
  403c96:	e781      	b.n	403b9c <_dtoa_r+0xd4>
  403c98:	483b      	ldr	r0, [pc, #236]	; (403d88 <_dtoa_r+0x2c0>)
  403c9a:	e743      	b.n	403b24 <_dtoa_r+0x5c>
  403c9c:	2100      	movs	r1, #0
  403c9e:	6461      	str	r1, [r4, #68]	; 0x44
  403ca0:	4620      	mov	r0, r4
  403ca2:	9125      	str	r1, [sp, #148]	; 0x94
  403ca4:	f001 fefe 	bl	405aa4 <_Balloc>
  403ca8:	f04f 33ff 	mov.w	r3, #4294967295
  403cac:	930a      	str	r3, [sp, #40]	; 0x28
  403cae:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403cb0:	930f      	str	r3, [sp, #60]	; 0x3c
  403cb2:	2301      	movs	r3, #1
  403cb4:	9004      	str	r0, [sp, #16]
  403cb6:	6420      	str	r0, [r4, #64]	; 0x40
  403cb8:	9224      	str	r2, [sp, #144]	; 0x90
  403cba:	930b      	str	r3, [sp, #44]	; 0x2c
  403cbc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403cbe:	2b00      	cmp	r3, #0
  403cc0:	f2c0 80d9 	blt.w	403e76 <_dtoa_r+0x3ae>
  403cc4:	9a02      	ldr	r2, [sp, #8]
  403cc6:	2a0e      	cmp	r2, #14
  403cc8:	f300 80d5 	bgt.w	403e76 <_dtoa_r+0x3ae>
  403ccc:	4b2d      	ldr	r3, [pc, #180]	; (403d84 <_dtoa_r+0x2bc>)
  403cce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403cd2:	e9d3 2300 	ldrd	r2, r3, [r3]
  403cd6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403cda:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cdc:	2b00      	cmp	r3, #0
  403cde:	f2c0 83ba 	blt.w	404456 <_dtoa_r+0x98e>
  403ce2:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403ce6:	4650      	mov	r0, sl
  403ce8:	462a      	mov	r2, r5
  403cea:	4633      	mov	r3, r6
  403cec:	4659      	mov	r1, fp
  403cee:	f7fd ffd9 	bl	401ca4 <__aeabi_ddiv>
  403cf2:	f002 ff93 	bl	406c1c <__aeabi_d2iz>
  403cf6:	4680      	mov	r8, r0
  403cf8:	f7fd fe44 	bl	401984 <__aeabi_i2d>
  403cfc:	462a      	mov	r2, r5
  403cfe:	4633      	mov	r3, r6
  403d00:	f7fd fea6 	bl	401a50 <__aeabi_dmul>
  403d04:	460b      	mov	r3, r1
  403d06:	4602      	mov	r2, r0
  403d08:	4659      	mov	r1, fp
  403d0a:	4650      	mov	r0, sl
  403d0c:	f7fd fcec 	bl	4016e8 <__aeabi_dsub>
  403d10:	9d04      	ldr	r5, [sp, #16]
  403d12:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403d16:	702b      	strb	r3, [r5, #0]
  403d18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d1a:	2b01      	cmp	r3, #1
  403d1c:	4606      	mov	r6, r0
  403d1e:	460f      	mov	r7, r1
  403d20:	f105 0501 	add.w	r5, r5, #1
  403d24:	d068      	beq.n	403df8 <_dtoa_r+0x330>
  403d26:	2200      	movs	r2, #0
  403d28:	4b18      	ldr	r3, [pc, #96]	; (403d8c <_dtoa_r+0x2c4>)
  403d2a:	f7fd fe91 	bl	401a50 <__aeabi_dmul>
  403d2e:	2200      	movs	r2, #0
  403d30:	2300      	movs	r3, #0
  403d32:	4606      	mov	r6, r0
  403d34:	460f      	mov	r7, r1
  403d36:	f002 ff29 	bl	406b8c <__aeabi_dcmpeq>
  403d3a:	2800      	cmp	r0, #0
  403d3c:	f040 8088 	bne.w	403e50 <_dtoa_r+0x388>
  403d40:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403d44:	f04f 0a00 	mov.w	sl, #0
  403d48:	f8df b040 	ldr.w	fp, [pc, #64]	; 403d8c <_dtoa_r+0x2c4>
  403d4c:	940c      	str	r4, [sp, #48]	; 0x30
  403d4e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403d52:	e028      	b.n	403da6 <_dtoa_r+0x2de>
  403d54:	f3af 8000 	nop.w
  403d58:	636f4361 	.word	0x636f4361
  403d5c:	3fd287a7 	.word	0x3fd287a7
  403d60:	8b60c8b3 	.word	0x8b60c8b3
  403d64:	3fc68a28 	.word	0x3fc68a28
  403d68:	509f79fb 	.word	0x509f79fb
  403d6c:	3fd34413 	.word	0x3fd34413
  403d70:	7ff00000 	.word	0x7ff00000
  403d74:	0040714d 	.word	0x0040714d
  403d78:	00407170 	.word	0x00407170
  403d7c:	0040717c 	.word	0x0040717c
  403d80:	3ff80000 	.word	0x3ff80000
  403d84:	004071a8 	.word	0x004071a8
  403d88:	0040714c 	.word	0x0040714c
  403d8c:	40240000 	.word	0x40240000
  403d90:	f7fd fe5e 	bl	401a50 <__aeabi_dmul>
  403d94:	2200      	movs	r2, #0
  403d96:	2300      	movs	r3, #0
  403d98:	4606      	mov	r6, r0
  403d9a:	460f      	mov	r7, r1
  403d9c:	f002 fef6 	bl	406b8c <__aeabi_dcmpeq>
  403da0:	2800      	cmp	r0, #0
  403da2:	f040 83c1 	bne.w	404528 <_dtoa_r+0xa60>
  403da6:	4642      	mov	r2, r8
  403da8:	464b      	mov	r3, r9
  403daa:	4630      	mov	r0, r6
  403dac:	4639      	mov	r1, r7
  403dae:	f7fd ff79 	bl	401ca4 <__aeabi_ddiv>
  403db2:	f002 ff33 	bl	406c1c <__aeabi_d2iz>
  403db6:	4604      	mov	r4, r0
  403db8:	f7fd fde4 	bl	401984 <__aeabi_i2d>
  403dbc:	4642      	mov	r2, r8
  403dbe:	464b      	mov	r3, r9
  403dc0:	f7fd fe46 	bl	401a50 <__aeabi_dmul>
  403dc4:	4602      	mov	r2, r0
  403dc6:	460b      	mov	r3, r1
  403dc8:	4630      	mov	r0, r6
  403dca:	4639      	mov	r1, r7
  403dcc:	f7fd fc8c 	bl	4016e8 <__aeabi_dsub>
  403dd0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403dd4:	9e04      	ldr	r6, [sp, #16]
  403dd6:	f805 eb01 	strb.w	lr, [r5], #1
  403dda:	eba5 0e06 	sub.w	lr, r5, r6
  403dde:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403de0:	45b6      	cmp	lr, r6
  403de2:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403de6:	4652      	mov	r2, sl
  403de8:	465b      	mov	r3, fp
  403dea:	d1d1      	bne.n	403d90 <_dtoa_r+0x2c8>
  403dec:	46a0      	mov	r8, r4
  403dee:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403df2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403df4:	4606      	mov	r6, r0
  403df6:	460f      	mov	r7, r1
  403df8:	4632      	mov	r2, r6
  403dfa:	463b      	mov	r3, r7
  403dfc:	4630      	mov	r0, r6
  403dfe:	4639      	mov	r1, r7
  403e00:	f7fd fc74 	bl	4016ec <__adddf3>
  403e04:	4606      	mov	r6, r0
  403e06:	460f      	mov	r7, r1
  403e08:	4602      	mov	r2, r0
  403e0a:	460b      	mov	r3, r1
  403e0c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403e10:	f002 fec6 	bl	406ba0 <__aeabi_dcmplt>
  403e14:	b948      	cbnz	r0, 403e2a <_dtoa_r+0x362>
  403e16:	4632      	mov	r2, r6
  403e18:	463b      	mov	r3, r7
  403e1a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403e1e:	f002 feb5 	bl	406b8c <__aeabi_dcmpeq>
  403e22:	b1a8      	cbz	r0, 403e50 <_dtoa_r+0x388>
  403e24:	f018 0f01 	tst.w	r8, #1
  403e28:	d012      	beq.n	403e50 <_dtoa_r+0x388>
  403e2a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403e2e:	9a04      	ldr	r2, [sp, #16]
  403e30:	1e6b      	subs	r3, r5, #1
  403e32:	e004      	b.n	403e3e <_dtoa_r+0x376>
  403e34:	429a      	cmp	r2, r3
  403e36:	f000 8401 	beq.w	40463c <_dtoa_r+0xb74>
  403e3a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403e3e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403e42:	f103 0501 	add.w	r5, r3, #1
  403e46:	d0f5      	beq.n	403e34 <_dtoa_r+0x36c>
  403e48:	f108 0801 	add.w	r8, r8, #1
  403e4c:	f883 8000 	strb.w	r8, [r3]
  403e50:	4649      	mov	r1, r9
  403e52:	4620      	mov	r0, r4
  403e54:	f001 fe4c 	bl	405af0 <_Bfree>
  403e58:	2200      	movs	r2, #0
  403e5a:	9b02      	ldr	r3, [sp, #8]
  403e5c:	702a      	strb	r2, [r5, #0]
  403e5e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403e60:	3301      	adds	r3, #1
  403e62:	6013      	str	r3, [r2, #0]
  403e64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403e66:	2b00      	cmp	r3, #0
  403e68:	f000 839e 	beq.w	4045a8 <_dtoa_r+0xae0>
  403e6c:	9804      	ldr	r0, [sp, #16]
  403e6e:	601d      	str	r5, [r3, #0]
  403e70:	b01b      	add	sp, #108	; 0x6c
  403e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403e76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403e78:	2a00      	cmp	r2, #0
  403e7a:	d03e      	beq.n	403efa <_dtoa_r+0x432>
  403e7c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403e7e:	2a01      	cmp	r2, #1
  403e80:	f340 8311 	ble.w	4044a6 <_dtoa_r+0x9de>
  403e84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403e88:	1e5f      	subs	r7, r3, #1
  403e8a:	42ba      	cmp	r2, r7
  403e8c:	f2c0 838f 	blt.w	4045ae <_dtoa_r+0xae6>
  403e90:	1bd7      	subs	r7, r2, r7
  403e92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e94:	2b00      	cmp	r3, #0
  403e96:	f2c0 848b 	blt.w	4047b0 <_dtoa_r+0xce8>
  403e9a:	9d08      	ldr	r5, [sp, #32]
  403e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e9e:	9a08      	ldr	r2, [sp, #32]
  403ea0:	441a      	add	r2, r3
  403ea2:	9208      	str	r2, [sp, #32]
  403ea4:	9a06      	ldr	r2, [sp, #24]
  403ea6:	2101      	movs	r1, #1
  403ea8:	441a      	add	r2, r3
  403eaa:	4620      	mov	r0, r4
  403eac:	9206      	str	r2, [sp, #24]
  403eae:	f001 feb9 	bl	405c24 <__i2b>
  403eb2:	4606      	mov	r6, r0
  403eb4:	e024      	b.n	403f00 <_dtoa_r+0x438>
  403eb6:	2301      	movs	r3, #1
  403eb8:	930e      	str	r3, [sp, #56]	; 0x38
  403eba:	e6af      	b.n	403c1c <_dtoa_r+0x154>
  403ebc:	9a08      	ldr	r2, [sp, #32]
  403ebe:	9b02      	ldr	r3, [sp, #8]
  403ec0:	1ad2      	subs	r2, r2, r3
  403ec2:	425b      	negs	r3, r3
  403ec4:	930c      	str	r3, [sp, #48]	; 0x30
  403ec6:	2300      	movs	r3, #0
  403ec8:	9208      	str	r2, [sp, #32]
  403eca:	930d      	str	r3, [sp, #52]	; 0x34
  403ecc:	e6b8      	b.n	403c40 <_dtoa_r+0x178>
  403ece:	f1c7 0301 	rsb	r3, r7, #1
  403ed2:	9308      	str	r3, [sp, #32]
  403ed4:	2300      	movs	r3, #0
  403ed6:	9306      	str	r3, [sp, #24]
  403ed8:	e6a7      	b.n	403c2a <_dtoa_r+0x162>
  403eda:	9d02      	ldr	r5, [sp, #8]
  403edc:	4628      	mov	r0, r5
  403ede:	f7fd fd51 	bl	401984 <__aeabi_i2d>
  403ee2:	4602      	mov	r2, r0
  403ee4:	460b      	mov	r3, r1
  403ee6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403eea:	f002 fe4f 	bl	406b8c <__aeabi_dcmpeq>
  403eee:	2800      	cmp	r0, #0
  403ef0:	f47f ae80 	bne.w	403bf4 <_dtoa_r+0x12c>
  403ef4:	1e6b      	subs	r3, r5, #1
  403ef6:	9302      	str	r3, [sp, #8]
  403ef8:	e67c      	b.n	403bf4 <_dtoa_r+0x12c>
  403efa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403efc:	9d08      	ldr	r5, [sp, #32]
  403efe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403f00:	2d00      	cmp	r5, #0
  403f02:	dd0c      	ble.n	403f1e <_dtoa_r+0x456>
  403f04:	9906      	ldr	r1, [sp, #24]
  403f06:	2900      	cmp	r1, #0
  403f08:	460b      	mov	r3, r1
  403f0a:	dd08      	ble.n	403f1e <_dtoa_r+0x456>
  403f0c:	42a9      	cmp	r1, r5
  403f0e:	9a08      	ldr	r2, [sp, #32]
  403f10:	bfa8      	it	ge
  403f12:	462b      	movge	r3, r5
  403f14:	1ad2      	subs	r2, r2, r3
  403f16:	1aed      	subs	r5, r5, r3
  403f18:	1acb      	subs	r3, r1, r3
  403f1a:	9208      	str	r2, [sp, #32]
  403f1c:	9306      	str	r3, [sp, #24]
  403f1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f20:	b1d3      	cbz	r3, 403f58 <_dtoa_r+0x490>
  403f22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f24:	2b00      	cmp	r3, #0
  403f26:	f000 82b7 	beq.w	404498 <_dtoa_r+0x9d0>
  403f2a:	2f00      	cmp	r7, #0
  403f2c:	dd10      	ble.n	403f50 <_dtoa_r+0x488>
  403f2e:	4631      	mov	r1, r6
  403f30:	463a      	mov	r2, r7
  403f32:	4620      	mov	r0, r4
  403f34:	f001 ff12 	bl	405d5c <__pow5mult>
  403f38:	464a      	mov	r2, r9
  403f3a:	4601      	mov	r1, r0
  403f3c:	4606      	mov	r6, r0
  403f3e:	4620      	mov	r0, r4
  403f40:	f001 fe7a 	bl	405c38 <__multiply>
  403f44:	4649      	mov	r1, r9
  403f46:	4680      	mov	r8, r0
  403f48:	4620      	mov	r0, r4
  403f4a:	f001 fdd1 	bl	405af0 <_Bfree>
  403f4e:	46c1      	mov	r9, r8
  403f50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f52:	1bda      	subs	r2, r3, r7
  403f54:	f040 82a1 	bne.w	40449a <_dtoa_r+0x9d2>
  403f58:	2101      	movs	r1, #1
  403f5a:	4620      	mov	r0, r4
  403f5c:	f001 fe62 	bl	405c24 <__i2b>
  403f60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403f62:	2b00      	cmp	r3, #0
  403f64:	4680      	mov	r8, r0
  403f66:	dd1c      	ble.n	403fa2 <_dtoa_r+0x4da>
  403f68:	4601      	mov	r1, r0
  403f6a:	461a      	mov	r2, r3
  403f6c:	4620      	mov	r0, r4
  403f6e:	f001 fef5 	bl	405d5c <__pow5mult>
  403f72:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f74:	2b01      	cmp	r3, #1
  403f76:	4680      	mov	r8, r0
  403f78:	f340 8254 	ble.w	404424 <_dtoa_r+0x95c>
  403f7c:	2300      	movs	r3, #0
  403f7e:	930c      	str	r3, [sp, #48]	; 0x30
  403f80:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403f84:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403f88:	6918      	ldr	r0, [r3, #16]
  403f8a:	f001 fdfb 	bl	405b84 <__hi0bits>
  403f8e:	f1c0 0020 	rsb	r0, r0, #32
  403f92:	e010      	b.n	403fb6 <_dtoa_r+0x4ee>
  403f94:	f1c3 0520 	rsb	r5, r3, #32
  403f98:	fa0a f005 	lsl.w	r0, sl, r5
  403f9c:	e674      	b.n	403c88 <_dtoa_r+0x1c0>
  403f9e:	900e      	str	r0, [sp, #56]	; 0x38
  403fa0:	e63c      	b.n	403c1c <_dtoa_r+0x154>
  403fa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fa4:	2b01      	cmp	r3, #1
  403fa6:	f340 8287 	ble.w	4044b8 <_dtoa_r+0x9f0>
  403faa:	2300      	movs	r3, #0
  403fac:	930c      	str	r3, [sp, #48]	; 0x30
  403fae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403fb0:	2001      	movs	r0, #1
  403fb2:	2b00      	cmp	r3, #0
  403fb4:	d1e4      	bne.n	403f80 <_dtoa_r+0x4b8>
  403fb6:	9a06      	ldr	r2, [sp, #24]
  403fb8:	4410      	add	r0, r2
  403fba:	f010 001f 	ands.w	r0, r0, #31
  403fbe:	f000 80a1 	beq.w	404104 <_dtoa_r+0x63c>
  403fc2:	f1c0 0320 	rsb	r3, r0, #32
  403fc6:	2b04      	cmp	r3, #4
  403fc8:	f340 849e 	ble.w	404908 <_dtoa_r+0xe40>
  403fcc:	9b08      	ldr	r3, [sp, #32]
  403fce:	f1c0 001c 	rsb	r0, r0, #28
  403fd2:	4403      	add	r3, r0
  403fd4:	9308      	str	r3, [sp, #32]
  403fd6:	4613      	mov	r3, r2
  403fd8:	4403      	add	r3, r0
  403fda:	4405      	add	r5, r0
  403fdc:	9306      	str	r3, [sp, #24]
  403fde:	9b08      	ldr	r3, [sp, #32]
  403fe0:	2b00      	cmp	r3, #0
  403fe2:	dd05      	ble.n	403ff0 <_dtoa_r+0x528>
  403fe4:	4649      	mov	r1, r9
  403fe6:	461a      	mov	r2, r3
  403fe8:	4620      	mov	r0, r4
  403fea:	f001 ff07 	bl	405dfc <__lshift>
  403fee:	4681      	mov	r9, r0
  403ff0:	9b06      	ldr	r3, [sp, #24]
  403ff2:	2b00      	cmp	r3, #0
  403ff4:	dd05      	ble.n	404002 <_dtoa_r+0x53a>
  403ff6:	4641      	mov	r1, r8
  403ff8:	461a      	mov	r2, r3
  403ffa:	4620      	mov	r0, r4
  403ffc:	f001 fefe 	bl	405dfc <__lshift>
  404000:	4680      	mov	r8, r0
  404002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404004:	2b00      	cmp	r3, #0
  404006:	f040 8086 	bne.w	404116 <_dtoa_r+0x64e>
  40400a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40400c:	2b00      	cmp	r3, #0
  40400e:	f340 8266 	ble.w	4044de <_dtoa_r+0xa16>
  404012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404014:	2b00      	cmp	r3, #0
  404016:	f000 8098 	beq.w	40414a <_dtoa_r+0x682>
  40401a:	2d00      	cmp	r5, #0
  40401c:	dd05      	ble.n	40402a <_dtoa_r+0x562>
  40401e:	4631      	mov	r1, r6
  404020:	462a      	mov	r2, r5
  404022:	4620      	mov	r0, r4
  404024:	f001 feea 	bl	405dfc <__lshift>
  404028:	4606      	mov	r6, r0
  40402a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40402c:	2b00      	cmp	r3, #0
  40402e:	f040 8337 	bne.w	4046a0 <_dtoa_r+0xbd8>
  404032:	9606      	str	r6, [sp, #24]
  404034:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404036:	9a04      	ldr	r2, [sp, #16]
  404038:	f8dd b018 	ldr.w	fp, [sp, #24]
  40403c:	3b01      	subs	r3, #1
  40403e:	18d3      	adds	r3, r2, r3
  404040:	930b      	str	r3, [sp, #44]	; 0x2c
  404042:	f00a 0301 	and.w	r3, sl, #1
  404046:	930c      	str	r3, [sp, #48]	; 0x30
  404048:	4617      	mov	r7, r2
  40404a:	46c2      	mov	sl, r8
  40404c:	4651      	mov	r1, sl
  40404e:	4648      	mov	r0, r9
  404050:	f7ff fca6 	bl	4039a0 <quorem>
  404054:	4631      	mov	r1, r6
  404056:	4605      	mov	r5, r0
  404058:	4648      	mov	r0, r9
  40405a:	f001 ff21 	bl	405ea0 <__mcmp>
  40405e:	465a      	mov	r2, fp
  404060:	900a      	str	r0, [sp, #40]	; 0x28
  404062:	4651      	mov	r1, sl
  404064:	4620      	mov	r0, r4
  404066:	f001 ff37 	bl	405ed8 <__mdiff>
  40406a:	68c2      	ldr	r2, [r0, #12]
  40406c:	4680      	mov	r8, r0
  40406e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  404072:	2a00      	cmp	r2, #0
  404074:	f040 822b 	bne.w	4044ce <_dtoa_r+0xa06>
  404078:	4601      	mov	r1, r0
  40407a:	4648      	mov	r0, r9
  40407c:	9308      	str	r3, [sp, #32]
  40407e:	f001 ff0f 	bl	405ea0 <__mcmp>
  404082:	4641      	mov	r1, r8
  404084:	9006      	str	r0, [sp, #24]
  404086:	4620      	mov	r0, r4
  404088:	f001 fd32 	bl	405af0 <_Bfree>
  40408c:	9a06      	ldr	r2, [sp, #24]
  40408e:	9b08      	ldr	r3, [sp, #32]
  404090:	b932      	cbnz	r2, 4040a0 <_dtoa_r+0x5d8>
  404092:	9924      	ldr	r1, [sp, #144]	; 0x90
  404094:	b921      	cbnz	r1, 4040a0 <_dtoa_r+0x5d8>
  404096:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404098:	2a00      	cmp	r2, #0
  40409a:	f000 83ef 	beq.w	40487c <_dtoa_r+0xdb4>
  40409e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4040a0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4040a2:	2900      	cmp	r1, #0
  4040a4:	f2c0 829f 	blt.w	4045e6 <_dtoa_r+0xb1e>
  4040a8:	d105      	bne.n	4040b6 <_dtoa_r+0x5ee>
  4040aa:	9924      	ldr	r1, [sp, #144]	; 0x90
  4040ac:	b919      	cbnz	r1, 4040b6 <_dtoa_r+0x5ee>
  4040ae:	990c      	ldr	r1, [sp, #48]	; 0x30
  4040b0:	2900      	cmp	r1, #0
  4040b2:	f000 8298 	beq.w	4045e6 <_dtoa_r+0xb1e>
  4040b6:	2a00      	cmp	r2, #0
  4040b8:	f300 8306 	bgt.w	4046c8 <_dtoa_r+0xc00>
  4040bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4040be:	703b      	strb	r3, [r7, #0]
  4040c0:	f107 0801 	add.w	r8, r7, #1
  4040c4:	4297      	cmp	r7, r2
  4040c6:	4645      	mov	r5, r8
  4040c8:	f000 830c 	beq.w	4046e4 <_dtoa_r+0xc1c>
  4040cc:	4649      	mov	r1, r9
  4040ce:	2300      	movs	r3, #0
  4040d0:	220a      	movs	r2, #10
  4040d2:	4620      	mov	r0, r4
  4040d4:	f001 fd16 	bl	405b04 <__multadd>
  4040d8:	455e      	cmp	r6, fp
  4040da:	4681      	mov	r9, r0
  4040dc:	4631      	mov	r1, r6
  4040de:	f04f 0300 	mov.w	r3, #0
  4040e2:	f04f 020a 	mov.w	r2, #10
  4040e6:	4620      	mov	r0, r4
  4040e8:	f000 81eb 	beq.w	4044c2 <_dtoa_r+0x9fa>
  4040ec:	f001 fd0a 	bl	405b04 <__multadd>
  4040f0:	4659      	mov	r1, fp
  4040f2:	4606      	mov	r6, r0
  4040f4:	2300      	movs	r3, #0
  4040f6:	220a      	movs	r2, #10
  4040f8:	4620      	mov	r0, r4
  4040fa:	f001 fd03 	bl	405b04 <__multadd>
  4040fe:	4647      	mov	r7, r8
  404100:	4683      	mov	fp, r0
  404102:	e7a3      	b.n	40404c <_dtoa_r+0x584>
  404104:	201c      	movs	r0, #28
  404106:	9b08      	ldr	r3, [sp, #32]
  404108:	4403      	add	r3, r0
  40410a:	9308      	str	r3, [sp, #32]
  40410c:	9b06      	ldr	r3, [sp, #24]
  40410e:	4403      	add	r3, r0
  404110:	4405      	add	r5, r0
  404112:	9306      	str	r3, [sp, #24]
  404114:	e763      	b.n	403fde <_dtoa_r+0x516>
  404116:	4641      	mov	r1, r8
  404118:	4648      	mov	r0, r9
  40411a:	f001 fec1 	bl	405ea0 <__mcmp>
  40411e:	2800      	cmp	r0, #0
  404120:	f6bf af73 	bge.w	40400a <_dtoa_r+0x542>
  404124:	9f02      	ldr	r7, [sp, #8]
  404126:	4649      	mov	r1, r9
  404128:	2300      	movs	r3, #0
  40412a:	220a      	movs	r2, #10
  40412c:	4620      	mov	r0, r4
  40412e:	3f01      	subs	r7, #1
  404130:	9702      	str	r7, [sp, #8]
  404132:	f001 fce7 	bl	405b04 <__multadd>
  404136:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404138:	4681      	mov	r9, r0
  40413a:	2b00      	cmp	r3, #0
  40413c:	f040 83b6 	bne.w	4048ac <_dtoa_r+0xde4>
  404140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404142:	2b00      	cmp	r3, #0
  404144:	f340 83bf 	ble.w	4048c6 <_dtoa_r+0xdfe>
  404148:	930a      	str	r3, [sp, #40]	; 0x28
  40414a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40414e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404150:	465d      	mov	r5, fp
  404152:	e002      	b.n	40415a <_dtoa_r+0x692>
  404154:	f001 fcd6 	bl	405b04 <__multadd>
  404158:	4681      	mov	r9, r0
  40415a:	4641      	mov	r1, r8
  40415c:	4648      	mov	r0, r9
  40415e:	f7ff fc1f 	bl	4039a0 <quorem>
  404162:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  404166:	f805 ab01 	strb.w	sl, [r5], #1
  40416a:	eba5 030b 	sub.w	r3, r5, fp
  40416e:	42bb      	cmp	r3, r7
  404170:	f04f 020a 	mov.w	r2, #10
  404174:	f04f 0300 	mov.w	r3, #0
  404178:	4649      	mov	r1, r9
  40417a:	4620      	mov	r0, r4
  40417c:	dbea      	blt.n	404154 <_dtoa_r+0x68c>
  40417e:	9b04      	ldr	r3, [sp, #16]
  404180:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404182:	2a01      	cmp	r2, #1
  404184:	bfac      	ite	ge
  404186:	189b      	addge	r3, r3, r2
  404188:	3301      	addlt	r3, #1
  40418a:	461d      	mov	r5, r3
  40418c:	f04f 0b00 	mov.w	fp, #0
  404190:	4649      	mov	r1, r9
  404192:	2201      	movs	r2, #1
  404194:	4620      	mov	r0, r4
  404196:	f001 fe31 	bl	405dfc <__lshift>
  40419a:	4641      	mov	r1, r8
  40419c:	4681      	mov	r9, r0
  40419e:	f001 fe7f 	bl	405ea0 <__mcmp>
  4041a2:	2800      	cmp	r0, #0
  4041a4:	f340 823d 	ble.w	404622 <_dtoa_r+0xb5a>
  4041a8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4041ac:	9904      	ldr	r1, [sp, #16]
  4041ae:	1e6b      	subs	r3, r5, #1
  4041b0:	e004      	b.n	4041bc <_dtoa_r+0x6f4>
  4041b2:	428b      	cmp	r3, r1
  4041b4:	f000 81ae 	beq.w	404514 <_dtoa_r+0xa4c>
  4041b8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4041bc:	2a39      	cmp	r2, #57	; 0x39
  4041be:	f103 0501 	add.w	r5, r3, #1
  4041c2:	d0f6      	beq.n	4041b2 <_dtoa_r+0x6ea>
  4041c4:	3201      	adds	r2, #1
  4041c6:	701a      	strb	r2, [r3, #0]
  4041c8:	4641      	mov	r1, r8
  4041ca:	4620      	mov	r0, r4
  4041cc:	f001 fc90 	bl	405af0 <_Bfree>
  4041d0:	2e00      	cmp	r6, #0
  4041d2:	f43f ae3d 	beq.w	403e50 <_dtoa_r+0x388>
  4041d6:	f1bb 0f00 	cmp.w	fp, #0
  4041da:	d005      	beq.n	4041e8 <_dtoa_r+0x720>
  4041dc:	45b3      	cmp	fp, r6
  4041de:	d003      	beq.n	4041e8 <_dtoa_r+0x720>
  4041e0:	4659      	mov	r1, fp
  4041e2:	4620      	mov	r0, r4
  4041e4:	f001 fc84 	bl	405af0 <_Bfree>
  4041e8:	4631      	mov	r1, r6
  4041ea:	4620      	mov	r0, r4
  4041ec:	f001 fc80 	bl	405af0 <_Bfree>
  4041f0:	e62e      	b.n	403e50 <_dtoa_r+0x388>
  4041f2:	2300      	movs	r3, #0
  4041f4:	930b      	str	r3, [sp, #44]	; 0x2c
  4041f6:	9b02      	ldr	r3, [sp, #8]
  4041f8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4041fa:	4413      	add	r3, r2
  4041fc:	930f      	str	r3, [sp, #60]	; 0x3c
  4041fe:	3301      	adds	r3, #1
  404200:	2b01      	cmp	r3, #1
  404202:	461f      	mov	r7, r3
  404204:	461e      	mov	r6, r3
  404206:	930a      	str	r3, [sp, #40]	; 0x28
  404208:	bfb8      	it	lt
  40420a:	2701      	movlt	r7, #1
  40420c:	2100      	movs	r1, #0
  40420e:	2f17      	cmp	r7, #23
  404210:	6461      	str	r1, [r4, #68]	; 0x44
  404212:	d90a      	bls.n	40422a <_dtoa_r+0x762>
  404214:	2201      	movs	r2, #1
  404216:	2304      	movs	r3, #4
  404218:	005b      	lsls	r3, r3, #1
  40421a:	f103 0014 	add.w	r0, r3, #20
  40421e:	4287      	cmp	r7, r0
  404220:	4611      	mov	r1, r2
  404222:	f102 0201 	add.w	r2, r2, #1
  404226:	d2f7      	bcs.n	404218 <_dtoa_r+0x750>
  404228:	6461      	str	r1, [r4, #68]	; 0x44
  40422a:	4620      	mov	r0, r4
  40422c:	f001 fc3a 	bl	405aa4 <_Balloc>
  404230:	2e0e      	cmp	r6, #14
  404232:	9004      	str	r0, [sp, #16]
  404234:	6420      	str	r0, [r4, #64]	; 0x40
  404236:	f63f ad41 	bhi.w	403cbc <_dtoa_r+0x1f4>
  40423a:	2d00      	cmp	r5, #0
  40423c:	f43f ad3e 	beq.w	403cbc <_dtoa_r+0x1f4>
  404240:	9902      	ldr	r1, [sp, #8]
  404242:	2900      	cmp	r1, #0
  404244:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404248:	f340 8202 	ble.w	404650 <_dtoa_r+0xb88>
  40424c:	4bb8      	ldr	r3, [pc, #736]	; (404530 <_dtoa_r+0xa68>)
  40424e:	f001 020f 	and.w	r2, r1, #15
  404252:	110d      	asrs	r5, r1, #4
  404254:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404258:	06e9      	lsls	r1, r5, #27
  40425a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40425e:	f140 81ae 	bpl.w	4045be <_dtoa_r+0xaf6>
  404262:	4bb4      	ldr	r3, [pc, #720]	; (404534 <_dtoa_r+0xa6c>)
  404264:	4650      	mov	r0, sl
  404266:	4659      	mov	r1, fp
  404268:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40426c:	f7fd fd1a 	bl	401ca4 <__aeabi_ddiv>
  404270:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  404274:	f005 050f 	and.w	r5, r5, #15
  404278:	f04f 0a03 	mov.w	sl, #3
  40427c:	b18d      	cbz	r5, 4042a2 <_dtoa_r+0x7da>
  40427e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404534 <_dtoa_r+0xa6c>
  404282:	07ea      	lsls	r2, r5, #31
  404284:	d509      	bpl.n	40429a <_dtoa_r+0x7d2>
  404286:	4630      	mov	r0, r6
  404288:	4639      	mov	r1, r7
  40428a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40428e:	f7fd fbdf 	bl	401a50 <__aeabi_dmul>
  404292:	f10a 0a01 	add.w	sl, sl, #1
  404296:	4606      	mov	r6, r0
  404298:	460f      	mov	r7, r1
  40429a:	106d      	asrs	r5, r5, #1
  40429c:	f108 0808 	add.w	r8, r8, #8
  4042a0:	d1ef      	bne.n	404282 <_dtoa_r+0x7ba>
  4042a2:	463b      	mov	r3, r7
  4042a4:	4632      	mov	r2, r6
  4042a6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4042aa:	f7fd fcfb 	bl	401ca4 <__aeabi_ddiv>
  4042ae:	4607      	mov	r7, r0
  4042b0:	4688      	mov	r8, r1
  4042b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4042b4:	b143      	cbz	r3, 4042c8 <_dtoa_r+0x800>
  4042b6:	2200      	movs	r2, #0
  4042b8:	4b9f      	ldr	r3, [pc, #636]	; (404538 <_dtoa_r+0xa70>)
  4042ba:	4638      	mov	r0, r7
  4042bc:	4641      	mov	r1, r8
  4042be:	f002 fc6f 	bl	406ba0 <__aeabi_dcmplt>
  4042c2:	2800      	cmp	r0, #0
  4042c4:	f040 8286 	bne.w	4047d4 <_dtoa_r+0xd0c>
  4042c8:	4650      	mov	r0, sl
  4042ca:	f7fd fb5b 	bl	401984 <__aeabi_i2d>
  4042ce:	463a      	mov	r2, r7
  4042d0:	4643      	mov	r3, r8
  4042d2:	f7fd fbbd 	bl	401a50 <__aeabi_dmul>
  4042d6:	4b99      	ldr	r3, [pc, #612]	; (40453c <_dtoa_r+0xa74>)
  4042d8:	2200      	movs	r2, #0
  4042da:	f7fd fa07 	bl	4016ec <__adddf3>
  4042de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042e0:	4605      	mov	r5, r0
  4042e2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4042e6:	2b00      	cmp	r3, #0
  4042e8:	f000 813e 	beq.w	404568 <_dtoa_r+0xaa0>
  4042ec:	9b02      	ldr	r3, [sp, #8]
  4042ee:	9315      	str	r3, [sp, #84]	; 0x54
  4042f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042f2:	9312      	str	r3, [sp, #72]	; 0x48
  4042f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4042f6:	2b00      	cmp	r3, #0
  4042f8:	f000 81fa 	beq.w	4046f0 <_dtoa_r+0xc28>
  4042fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4042fe:	4b8c      	ldr	r3, [pc, #560]	; (404530 <_dtoa_r+0xa68>)
  404300:	498f      	ldr	r1, [pc, #572]	; (404540 <_dtoa_r+0xa78>)
  404302:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404306:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40430a:	2000      	movs	r0, #0
  40430c:	f7fd fcca 	bl	401ca4 <__aeabi_ddiv>
  404310:	462a      	mov	r2, r5
  404312:	4633      	mov	r3, r6
  404314:	f7fd f9e8 	bl	4016e8 <__aeabi_dsub>
  404318:	4682      	mov	sl, r0
  40431a:	468b      	mov	fp, r1
  40431c:	4638      	mov	r0, r7
  40431e:	4641      	mov	r1, r8
  404320:	f002 fc7c 	bl	406c1c <__aeabi_d2iz>
  404324:	4605      	mov	r5, r0
  404326:	f7fd fb2d 	bl	401984 <__aeabi_i2d>
  40432a:	4602      	mov	r2, r0
  40432c:	460b      	mov	r3, r1
  40432e:	4638      	mov	r0, r7
  404330:	4641      	mov	r1, r8
  404332:	f7fd f9d9 	bl	4016e8 <__aeabi_dsub>
  404336:	3530      	adds	r5, #48	; 0x30
  404338:	fa5f f885 	uxtb.w	r8, r5
  40433c:	9d04      	ldr	r5, [sp, #16]
  40433e:	4606      	mov	r6, r0
  404340:	460f      	mov	r7, r1
  404342:	f885 8000 	strb.w	r8, [r5]
  404346:	4602      	mov	r2, r0
  404348:	460b      	mov	r3, r1
  40434a:	4650      	mov	r0, sl
  40434c:	4659      	mov	r1, fp
  40434e:	3501      	adds	r5, #1
  404350:	f002 fc44 	bl	406bdc <__aeabi_dcmpgt>
  404354:	2800      	cmp	r0, #0
  404356:	d154      	bne.n	404402 <_dtoa_r+0x93a>
  404358:	4632      	mov	r2, r6
  40435a:	463b      	mov	r3, r7
  40435c:	2000      	movs	r0, #0
  40435e:	4976      	ldr	r1, [pc, #472]	; (404538 <_dtoa_r+0xa70>)
  404360:	f7fd f9c2 	bl	4016e8 <__aeabi_dsub>
  404364:	4602      	mov	r2, r0
  404366:	460b      	mov	r3, r1
  404368:	4650      	mov	r0, sl
  40436a:	4659      	mov	r1, fp
  40436c:	f002 fc36 	bl	406bdc <__aeabi_dcmpgt>
  404370:	2800      	cmp	r0, #0
  404372:	f040 8270 	bne.w	404856 <_dtoa_r+0xd8e>
  404376:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404378:	2a01      	cmp	r2, #1
  40437a:	f000 8111 	beq.w	4045a0 <_dtoa_r+0xad8>
  40437e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404380:	9a04      	ldr	r2, [sp, #16]
  404382:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404386:	4413      	add	r3, r2
  404388:	4699      	mov	r9, r3
  40438a:	e00d      	b.n	4043a8 <_dtoa_r+0x8e0>
  40438c:	2000      	movs	r0, #0
  40438e:	496a      	ldr	r1, [pc, #424]	; (404538 <_dtoa_r+0xa70>)
  404390:	f7fd f9aa 	bl	4016e8 <__aeabi_dsub>
  404394:	4652      	mov	r2, sl
  404396:	465b      	mov	r3, fp
  404398:	f002 fc02 	bl	406ba0 <__aeabi_dcmplt>
  40439c:	2800      	cmp	r0, #0
  40439e:	f040 8258 	bne.w	404852 <_dtoa_r+0xd8a>
  4043a2:	454d      	cmp	r5, r9
  4043a4:	f000 80fa 	beq.w	40459c <_dtoa_r+0xad4>
  4043a8:	4650      	mov	r0, sl
  4043aa:	4659      	mov	r1, fp
  4043ac:	2200      	movs	r2, #0
  4043ae:	4b65      	ldr	r3, [pc, #404]	; (404544 <_dtoa_r+0xa7c>)
  4043b0:	f7fd fb4e 	bl	401a50 <__aeabi_dmul>
  4043b4:	2200      	movs	r2, #0
  4043b6:	4b63      	ldr	r3, [pc, #396]	; (404544 <_dtoa_r+0xa7c>)
  4043b8:	4682      	mov	sl, r0
  4043ba:	468b      	mov	fp, r1
  4043bc:	4630      	mov	r0, r6
  4043be:	4639      	mov	r1, r7
  4043c0:	f7fd fb46 	bl	401a50 <__aeabi_dmul>
  4043c4:	460f      	mov	r7, r1
  4043c6:	4606      	mov	r6, r0
  4043c8:	f002 fc28 	bl	406c1c <__aeabi_d2iz>
  4043cc:	4680      	mov	r8, r0
  4043ce:	f7fd fad9 	bl	401984 <__aeabi_i2d>
  4043d2:	4602      	mov	r2, r0
  4043d4:	460b      	mov	r3, r1
  4043d6:	4630      	mov	r0, r6
  4043d8:	4639      	mov	r1, r7
  4043da:	f7fd f985 	bl	4016e8 <__aeabi_dsub>
  4043de:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4043e2:	fa5f f888 	uxtb.w	r8, r8
  4043e6:	4652      	mov	r2, sl
  4043e8:	465b      	mov	r3, fp
  4043ea:	f805 8b01 	strb.w	r8, [r5], #1
  4043ee:	4606      	mov	r6, r0
  4043f0:	460f      	mov	r7, r1
  4043f2:	f002 fbd5 	bl	406ba0 <__aeabi_dcmplt>
  4043f6:	4632      	mov	r2, r6
  4043f8:	463b      	mov	r3, r7
  4043fa:	2800      	cmp	r0, #0
  4043fc:	d0c6      	beq.n	40438c <_dtoa_r+0x8c4>
  4043fe:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404402:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404404:	9302      	str	r3, [sp, #8]
  404406:	e523      	b.n	403e50 <_dtoa_r+0x388>
  404408:	2300      	movs	r3, #0
  40440a:	930b      	str	r3, [sp, #44]	; 0x2c
  40440c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40440e:	2b00      	cmp	r3, #0
  404410:	f340 80dc 	ble.w	4045cc <_dtoa_r+0xb04>
  404414:	461f      	mov	r7, r3
  404416:	461e      	mov	r6, r3
  404418:	930f      	str	r3, [sp, #60]	; 0x3c
  40441a:	930a      	str	r3, [sp, #40]	; 0x28
  40441c:	e6f6      	b.n	40420c <_dtoa_r+0x744>
  40441e:	2301      	movs	r3, #1
  404420:	930b      	str	r3, [sp, #44]	; 0x2c
  404422:	e7f3      	b.n	40440c <_dtoa_r+0x944>
  404424:	f1ba 0f00 	cmp.w	sl, #0
  404428:	f47f ada8 	bne.w	403f7c <_dtoa_r+0x4b4>
  40442c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404430:	2b00      	cmp	r3, #0
  404432:	f47f adba 	bne.w	403faa <_dtoa_r+0x4e2>
  404436:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40443a:	0d3f      	lsrs	r7, r7, #20
  40443c:	053f      	lsls	r7, r7, #20
  40443e:	2f00      	cmp	r7, #0
  404440:	f000 820d 	beq.w	40485e <_dtoa_r+0xd96>
  404444:	9b08      	ldr	r3, [sp, #32]
  404446:	3301      	adds	r3, #1
  404448:	9308      	str	r3, [sp, #32]
  40444a:	9b06      	ldr	r3, [sp, #24]
  40444c:	3301      	adds	r3, #1
  40444e:	9306      	str	r3, [sp, #24]
  404450:	2301      	movs	r3, #1
  404452:	930c      	str	r3, [sp, #48]	; 0x30
  404454:	e5ab      	b.n	403fae <_dtoa_r+0x4e6>
  404456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404458:	2b00      	cmp	r3, #0
  40445a:	f73f ac42 	bgt.w	403ce2 <_dtoa_r+0x21a>
  40445e:	f040 8221 	bne.w	4048a4 <_dtoa_r+0xddc>
  404462:	2200      	movs	r2, #0
  404464:	4b38      	ldr	r3, [pc, #224]	; (404548 <_dtoa_r+0xa80>)
  404466:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40446a:	f7fd faf1 	bl	401a50 <__aeabi_dmul>
  40446e:	4652      	mov	r2, sl
  404470:	465b      	mov	r3, fp
  404472:	f002 fba9 	bl	406bc8 <__aeabi_dcmpge>
  404476:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  40447a:	4646      	mov	r6, r8
  40447c:	2800      	cmp	r0, #0
  40447e:	d041      	beq.n	404504 <_dtoa_r+0xa3c>
  404480:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404482:	9d04      	ldr	r5, [sp, #16]
  404484:	43db      	mvns	r3, r3
  404486:	9302      	str	r3, [sp, #8]
  404488:	4641      	mov	r1, r8
  40448a:	4620      	mov	r0, r4
  40448c:	f001 fb30 	bl	405af0 <_Bfree>
  404490:	2e00      	cmp	r6, #0
  404492:	f43f acdd 	beq.w	403e50 <_dtoa_r+0x388>
  404496:	e6a7      	b.n	4041e8 <_dtoa_r+0x720>
  404498:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40449a:	4649      	mov	r1, r9
  40449c:	4620      	mov	r0, r4
  40449e:	f001 fc5d 	bl	405d5c <__pow5mult>
  4044a2:	4681      	mov	r9, r0
  4044a4:	e558      	b.n	403f58 <_dtoa_r+0x490>
  4044a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4044a8:	2a00      	cmp	r2, #0
  4044aa:	f000 8187 	beq.w	4047bc <_dtoa_r+0xcf4>
  4044ae:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4044b2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4044b4:	9d08      	ldr	r5, [sp, #32]
  4044b6:	e4f2      	b.n	403e9e <_dtoa_r+0x3d6>
  4044b8:	f1ba 0f00 	cmp.w	sl, #0
  4044bc:	f47f ad75 	bne.w	403faa <_dtoa_r+0x4e2>
  4044c0:	e7b4      	b.n	40442c <_dtoa_r+0x964>
  4044c2:	f001 fb1f 	bl	405b04 <__multadd>
  4044c6:	4647      	mov	r7, r8
  4044c8:	4606      	mov	r6, r0
  4044ca:	4683      	mov	fp, r0
  4044cc:	e5be      	b.n	40404c <_dtoa_r+0x584>
  4044ce:	4601      	mov	r1, r0
  4044d0:	4620      	mov	r0, r4
  4044d2:	9306      	str	r3, [sp, #24]
  4044d4:	f001 fb0c 	bl	405af0 <_Bfree>
  4044d8:	2201      	movs	r2, #1
  4044da:	9b06      	ldr	r3, [sp, #24]
  4044dc:	e5e0      	b.n	4040a0 <_dtoa_r+0x5d8>
  4044de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4044e0:	2b02      	cmp	r3, #2
  4044e2:	f77f ad96 	ble.w	404012 <_dtoa_r+0x54a>
  4044e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4044e8:	2b00      	cmp	r3, #0
  4044ea:	d1c9      	bne.n	404480 <_dtoa_r+0x9b8>
  4044ec:	4641      	mov	r1, r8
  4044ee:	2205      	movs	r2, #5
  4044f0:	4620      	mov	r0, r4
  4044f2:	f001 fb07 	bl	405b04 <__multadd>
  4044f6:	4601      	mov	r1, r0
  4044f8:	4680      	mov	r8, r0
  4044fa:	4648      	mov	r0, r9
  4044fc:	f001 fcd0 	bl	405ea0 <__mcmp>
  404500:	2800      	cmp	r0, #0
  404502:	ddbd      	ble.n	404480 <_dtoa_r+0x9b8>
  404504:	9a02      	ldr	r2, [sp, #8]
  404506:	9904      	ldr	r1, [sp, #16]
  404508:	2331      	movs	r3, #49	; 0x31
  40450a:	3201      	adds	r2, #1
  40450c:	9202      	str	r2, [sp, #8]
  40450e:	700b      	strb	r3, [r1, #0]
  404510:	1c4d      	adds	r5, r1, #1
  404512:	e7b9      	b.n	404488 <_dtoa_r+0x9c0>
  404514:	9a02      	ldr	r2, [sp, #8]
  404516:	3201      	adds	r2, #1
  404518:	9202      	str	r2, [sp, #8]
  40451a:	9a04      	ldr	r2, [sp, #16]
  40451c:	2331      	movs	r3, #49	; 0x31
  40451e:	7013      	strb	r3, [r2, #0]
  404520:	e652      	b.n	4041c8 <_dtoa_r+0x700>
  404522:	2301      	movs	r3, #1
  404524:	930b      	str	r3, [sp, #44]	; 0x2c
  404526:	e666      	b.n	4041f6 <_dtoa_r+0x72e>
  404528:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40452c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40452e:	e48f      	b.n	403e50 <_dtoa_r+0x388>
  404530:	004071a8 	.word	0x004071a8
  404534:	00407180 	.word	0x00407180
  404538:	3ff00000 	.word	0x3ff00000
  40453c:	401c0000 	.word	0x401c0000
  404540:	3fe00000 	.word	0x3fe00000
  404544:	40240000 	.word	0x40240000
  404548:	40140000 	.word	0x40140000
  40454c:	4650      	mov	r0, sl
  40454e:	f7fd fa19 	bl	401984 <__aeabi_i2d>
  404552:	463a      	mov	r2, r7
  404554:	4643      	mov	r3, r8
  404556:	f7fd fa7b 	bl	401a50 <__aeabi_dmul>
  40455a:	2200      	movs	r2, #0
  40455c:	4bc1      	ldr	r3, [pc, #772]	; (404864 <_dtoa_r+0xd9c>)
  40455e:	f7fd f8c5 	bl	4016ec <__adddf3>
  404562:	4605      	mov	r5, r0
  404564:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404568:	4641      	mov	r1, r8
  40456a:	2200      	movs	r2, #0
  40456c:	4bbe      	ldr	r3, [pc, #760]	; (404868 <_dtoa_r+0xda0>)
  40456e:	4638      	mov	r0, r7
  404570:	f7fd f8ba 	bl	4016e8 <__aeabi_dsub>
  404574:	462a      	mov	r2, r5
  404576:	4633      	mov	r3, r6
  404578:	4682      	mov	sl, r0
  40457a:	468b      	mov	fp, r1
  40457c:	f002 fb2e 	bl	406bdc <__aeabi_dcmpgt>
  404580:	4680      	mov	r8, r0
  404582:	2800      	cmp	r0, #0
  404584:	f040 8110 	bne.w	4047a8 <_dtoa_r+0xce0>
  404588:	462a      	mov	r2, r5
  40458a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  40458e:	4650      	mov	r0, sl
  404590:	4659      	mov	r1, fp
  404592:	f002 fb05 	bl	406ba0 <__aeabi_dcmplt>
  404596:	b118      	cbz	r0, 4045a0 <_dtoa_r+0xad8>
  404598:	4646      	mov	r6, r8
  40459a:	e771      	b.n	404480 <_dtoa_r+0x9b8>
  40459c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4045a0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4045a4:	f7ff bb8a 	b.w	403cbc <_dtoa_r+0x1f4>
  4045a8:	9804      	ldr	r0, [sp, #16]
  4045aa:	f7ff babb 	b.w	403b24 <_dtoa_r+0x5c>
  4045ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4045b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4045b2:	970c      	str	r7, [sp, #48]	; 0x30
  4045b4:	1afb      	subs	r3, r7, r3
  4045b6:	441a      	add	r2, r3
  4045b8:	920d      	str	r2, [sp, #52]	; 0x34
  4045ba:	2700      	movs	r7, #0
  4045bc:	e469      	b.n	403e92 <_dtoa_r+0x3ca>
  4045be:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  4045c2:	f04f 0a02 	mov.w	sl, #2
  4045c6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  4045ca:	e657      	b.n	40427c <_dtoa_r+0x7b4>
  4045cc:	2100      	movs	r1, #0
  4045ce:	2301      	movs	r3, #1
  4045d0:	6461      	str	r1, [r4, #68]	; 0x44
  4045d2:	4620      	mov	r0, r4
  4045d4:	9325      	str	r3, [sp, #148]	; 0x94
  4045d6:	f001 fa65 	bl	405aa4 <_Balloc>
  4045da:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4045dc:	9004      	str	r0, [sp, #16]
  4045de:	6420      	str	r0, [r4, #64]	; 0x40
  4045e0:	930a      	str	r3, [sp, #40]	; 0x28
  4045e2:	930f      	str	r3, [sp, #60]	; 0x3c
  4045e4:	e629      	b.n	40423a <_dtoa_r+0x772>
  4045e6:	2a00      	cmp	r2, #0
  4045e8:	46d0      	mov	r8, sl
  4045ea:	f8cd b018 	str.w	fp, [sp, #24]
  4045ee:	469a      	mov	sl, r3
  4045f0:	dd11      	ble.n	404616 <_dtoa_r+0xb4e>
  4045f2:	4649      	mov	r1, r9
  4045f4:	2201      	movs	r2, #1
  4045f6:	4620      	mov	r0, r4
  4045f8:	f001 fc00 	bl	405dfc <__lshift>
  4045fc:	4641      	mov	r1, r8
  4045fe:	4681      	mov	r9, r0
  404600:	f001 fc4e 	bl	405ea0 <__mcmp>
  404604:	2800      	cmp	r0, #0
  404606:	f340 8146 	ble.w	404896 <_dtoa_r+0xdce>
  40460a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40460e:	f000 8106 	beq.w	40481e <_dtoa_r+0xd56>
  404612:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404616:	46b3      	mov	fp, r6
  404618:	f887 a000 	strb.w	sl, [r7]
  40461c:	1c7d      	adds	r5, r7, #1
  40461e:	9e06      	ldr	r6, [sp, #24]
  404620:	e5d2      	b.n	4041c8 <_dtoa_r+0x700>
  404622:	d104      	bne.n	40462e <_dtoa_r+0xb66>
  404624:	f01a 0f01 	tst.w	sl, #1
  404628:	d001      	beq.n	40462e <_dtoa_r+0xb66>
  40462a:	e5bd      	b.n	4041a8 <_dtoa_r+0x6e0>
  40462c:	4615      	mov	r5, r2
  40462e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404632:	2b30      	cmp	r3, #48	; 0x30
  404634:	f105 32ff 	add.w	r2, r5, #4294967295
  404638:	d0f8      	beq.n	40462c <_dtoa_r+0xb64>
  40463a:	e5c5      	b.n	4041c8 <_dtoa_r+0x700>
  40463c:	9904      	ldr	r1, [sp, #16]
  40463e:	2230      	movs	r2, #48	; 0x30
  404640:	700a      	strb	r2, [r1, #0]
  404642:	9a02      	ldr	r2, [sp, #8]
  404644:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404648:	3201      	adds	r2, #1
  40464a:	9202      	str	r2, [sp, #8]
  40464c:	f7ff bbfc 	b.w	403e48 <_dtoa_r+0x380>
  404650:	f000 80bb 	beq.w	4047ca <_dtoa_r+0xd02>
  404654:	9b02      	ldr	r3, [sp, #8]
  404656:	425d      	negs	r5, r3
  404658:	4b84      	ldr	r3, [pc, #528]	; (40486c <_dtoa_r+0xda4>)
  40465a:	f005 020f 	and.w	r2, r5, #15
  40465e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404662:	e9d3 2300 	ldrd	r2, r3, [r3]
  404666:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40466a:	f7fd f9f1 	bl	401a50 <__aeabi_dmul>
  40466e:	112d      	asrs	r5, r5, #4
  404670:	4607      	mov	r7, r0
  404672:	4688      	mov	r8, r1
  404674:	f000 812c 	beq.w	4048d0 <_dtoa_r+0xe08>
  404678:	4e7d      	ldr	r6, [pc, #500]	; (404870 <_dtoa_r+0xda8>)
  40467a:	f04f 0a02 	mov.w	sl, #2
  40467e:	07eb      	lsls	r3, r5, #31
  404680:	d509      	bpl.n	404696 <_dtoa_r+0xbce>
  404682:	4638      	mov	r0, r7
  404684:	4641      	mov	r1, r8
  404686:	e9d6 2300 	ldrd	r2, r3, [r6]
  40468a:	f7fd f9e1 	bl	401a50 <__aeabi_dmul>
  40468e:	f10a 0a01 	add.w	sl, sl, #1
  404692:	4607      	mov	r7, r0
  404694:	4688      	mov	r8, r1
  404696:	106d      	asrs	r5, r5, #1
  404698:	f106 0608 	add.w	r6, r6, #8
  40469c:	d1ef      	bne.n	40467e <_dtoa_r+0xbb6>
  40469e:	e608      	b.n	4042b2 <_dtoa_r+0x7ea>
  4046a0:	6871      	ldr	r1, [r6, #4]
  4046a2:	4620      	mov	r0, r4
  4046a4:	f001 f9fe 	bl	405aa4 <_Balloc>
  4046a8:	6933      	ldr	r3, [r6, #16]
  4046aa:	3302      	adds	r3, #2
  4046ac:	009a      	lsls	r2, r3, #2
  4046ae:	4605      	mov	r5, r0
  4046b0:	f106 010c 	add.w	r1, r6, #12
  4046b4:	300c      	adds	r0, #12
  4046b6:	f001 f8eb 	bl	405890 <memcpy>
  4046ba:	4629      	mov	r1, r5
  4046bc:	2201      	movs	r2, #1
  4046be:	4620      	mov	r0, r4
  4046c0:	f001 fb9c 	bl	405dfc <__lshift>
  4046c4:	9006      	str	r0, [sp, #24]
  4046c6:	e4b5      	b.n	404034 <_dtoa_r+0x56c>
  4046c8:	2b39      	cmp	r3, #57	; 0x39
  4046ca:	f8cd b018 	str.w	fp, [sp, #24]
  4046ce:	46d0      	mov	r8, sl
  4046d0:	f000 80a5 	beq.w	40481e <_dtoa_r+0xd56>
  4046d4:	f103 0a01 	add.w	sl, r3, #1
  4046d8:	46b3      	mov	fp, r6
  4046da:	f887 a000 	strb.w	sl, [r7]
  4046de:	1c7d      	adds	r5, r7, #1
  4046e0:	9e06      	ldr	r6, [sp, #24]
  4046e2:	e571      	b.n	4041c8 <_dtoa_r+0x700>
  4046e4:	465a      	mov	r2, fp
  4046e6:	46d0      	mov	r8, sl
  4046e8:	46b3      	mov	fp, r6
  4046ea:	469a      	mov	sl, r3
  4046ec:	4616      	mov	r6, r2
  4046ee:	e54f      	b.n	404190 <_dtoa_r+0x6c8>
  4046f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4046f2:	495e      	ldr	r1, [pc, #376]	; (40486c <_dtoa_r+0xda4>)
  4046f4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4046f8:	462a      	mov	r2, r5
  4046fa:	4633      	mov	r3, r6
  4046fc:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404700:	f7fd f9a6 	bl	401a50 <__aeabi_dmul>
  404704:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404708:	4638      	mov	r0, r7
  40470a:	4641      	mov	r1, r8
  40470c:	f002 fa86 	bl	406c1c <__aeabi_d2iz>
  404710:	4605      	mov	r5, r0
  404712:	f7fd f937 	bl	401984 <__aeabi_i2d>
  404716:	460b      	mov	r3, r1
  404718:	4602      	mov	r2, r0
  40471a:	4641      	mov	r1, r8
  40471c:	4638      	mov	r0, r7
  40471e:	f7fc ffe3 	bl	4016e8 <__aeabi_dsub>
  404722:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404724:	460f      	mov	r7, r1
  404726:	9904      	ldr	r1, [sp, #16]
  404728:	3530      	adds	r5, #48	; 0x30
  40472a:	2b01      	cmp	r3, #1
  40472c:	700d      	strb	r5, [r1, #0]
  40472e:	4606      	mov	r6, r0
  404730:	f101 0501 	add.w	r5, r1, #1
  404734:	d026      	beq.n	404784 <_dtoa_r+0xcbc>
  404736:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404738:	9a04      	ldr	r2, [sp, #16]
  40473a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404878 <_dtoa_r+0xdb0>
  40473e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404742:	4413      	add	r3, r2
  404744:	f04f 0a00 	mov.w	sl, #0
  404748:	4699      	mov	r9, r3
  40474a:	4652      	mov	r2, sl
  40474c:	465b      	mov	r3, fp
  40474e:	4630      	mov	r0, r6
  404750:	4639      	mov	r1, r7
  404752:	f7fd f97d 	bl	401a50 <__aeabi_dmul>
  404756:	460f      	mov	r7, r1
  404758:	4606      	mov	r6, r0
  40475a:	f002 fa5f 	bl	406c1c <__aeabi_d2iz>
  40475e:	4680      	mov	r8, r0
  404760:	f7fd f910 	bl	401984 <__aeabi_i2d>
  404764:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404768:	4602      	mov	r2, r0
  40476a:	460b      	mov	r3, r1
  40476c:	4630      	mov	r0, r6
  40476e:	4639      	mov	r1, r7
  404770:	f7fc ffba 	bl	4016e8 <__aeabi_dsub>
  404774:	f805 8b01 	strb.w	r8, [r5], #1
  404778:	454d      	cmp	r5, r9
  40477a:	4606      	mov	r6, r0
  40477c:	460f      	mov	r7, r1
  40477e:	d1e4      	bne.n	40474a <_dtoa_r+0xc82>
  404780:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404784:	4b3b      	ldr	r3, [pc, #236]	; (404874 <_dtoa_r+0xdac>)
  404786:	2200      	movs	r2, #0
  404788:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40478c:	f7fc ffae 	bl	4016ec <__adddf3>
  404790:	4632      	mov	r2, r6
  404792:	463b      	mov	r3, r7
  404794:	f002 fa04 	bl	406ba0 <__aeabi_dcmplt>
  404798:	2800      	cmp	r0, #0
  40479a:	d046      	beq.n	40482a <_dtoa_r+0xd62>
  40479c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40479e:	9302      	str	r3, [sp, #8]
  4047a0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4047a4:	f7ff bb43 	b.w	403e2e <_dtoa_r+0x366>
  4047a8:	f04f 0800 	mov.w	r8, #0
  4047ac:	4646      	mov	r6, r8
  4047ae:	e6a9      	b.n	404504 <_dtoa_r+0xa3c>
  4047b0:	9b08      	ldr	r3, [sp, #32]
  4047b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4047b4:	1a9d      	subs	r5, r3, r2
  4047b6:	2300      	movs	r3, #0
  4047b8:	f7ff bb71 	b.w	403e9e <_dtoa_r+0x3d6>
  4047bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4047be:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4047c0:	9d08      	ldr	r5, [sp, #32]
  4047c2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4047c6:	f7ff bb6a 	b.w	403e9e <_dtoa_r+0x3d6>
  4047ca:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4047ce:	f04f 0a02 	mov.w	sl, #2
  4047d2:	e56e      	b.n	4042b2 <_dtoa_r+0x7ea>
  4047d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4047d6:	2b00      	cmp	r3, #0
  4047d8:	f43f aeb8 	beq.w	40454c <_dtoa_r+0xa84>
  4047dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047de:	2b00      	cmp	r3, #0
  4047e0:	f77f aede 	ble.w	4045a0 <_dtoa_r+0xad8>
  4047e4:	2200      	movs	r2, #0
  4047e6:	4b24      	ldr	r3, [pc, #144]	; (404878 <_dtoa_r+0xdb0>)
  4047e8:	4638      	mov	r0, r7
  4047ea:	4641      	mov	r1, r8
  4047ec:	f7fd f930 	bl	401a50 <__aeabi_dmul>
  4047f0:	4607      	mov	r7, r0
  4047f2:	4688      	mov	r8, r1
  4047f4:	f10a 0001 	add.w	r0, sl, #1
  4047f8:	f7fd f8c4 	bl	401984 <__aeabi_i2d>
  4047fc:	463a      	mov	r2, r7
  4047fe:	4643      	mov	r3, r8
  404800:	f7fd f926 	bl	401a50 <__aeabi_dmul>
  404804:	2200      	movs	r2, #0
  404806:	4b17      	ldr	r3, [pc, #92]	; (404864 <_dtoa_r+0xd9c>)
  404808:	f7fc ff70 	bl	4016ec <__adddf3>
  40480c:	9a02      	ldr	r2, [sp, #8]
  40480e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404810:	9312      	str	r3, [sp, #72]	; 0x48
  404812:	3a01      	subs	r2, #1
  404814:	4605      	mov	r5, r0
  404816:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40481a:	9215      	str	r2, [sp, #84]	; 0x54
  40481c:	e56a      	b.n	4042f4 <_dtoa_r+0x82c>
  40481e:	2239      	movs	r2, #57	; 0x39
  404820:	46b3      	mov	fp, r6
  404822:	703a      	strb	r2, [r7, #0]
  404824:	9e06      	ldr	r6, [sp, #24]
  404826:	1c7d      	adds	r5, r7, #1
  404828:	e4c0      	b.n	4041ac <_dtoa_r+0x6e4>
  40482a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40482e:	2000      	movs	r0, #0
  404830:	4910      	ldr	r1, [pc, #64]	; (404874 <_dtoa_r+0xdac>)
  404832:	f7fc ff59 	bl	4016e8 <__aeabi_dsub>
  404836:	4632      	mov	r2, r6
  404838:	463b      	mov	r3, r7
  40483a:	f002 f9cf 	bl	406bdc <__aeabi_dcmpgt>
  40483e:	b908      	cbnz	r0, 404844 <_dtoa_r+0xd7c>
  404840:	e6ae      	b.n	4045a0 <_dtoa_r+0xad8>
  404842:	4615      	mov	r5, r2
  404844:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404848:	2b30      	cmp	r3, #48	; 0x30
  40484a:	f105 32ff 	add.w	r2, r5, #4294967295
  40484e:	d0f8      	beq.n	404842 <_dtoa_r+0xd7a>
  404850:	e5d7      	b.n	404402 <_dtoa_r+0x93a>
  404852:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404856:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404858:	9302      	str	r3, [sp, #8]
  40485a:	f7ff bae8 	b.w	403e2e <_dtoa_r+0x366>
  40485e:	970c      	str	r7, [sp, #48]	; 0x30
  404860:	f7ff bba5 	b.w	403fae <_dtoa_r+0x4e6>
  404864:	401c0000 	.word	0x401c0000
  404868:	40140000 	.word	0x40140000
  40486c:	004071a8 	.word	0x004071a8
  404870:	00407180 	.word	0x00407180
  404874:	3fe00000 	.word	0x3fe00000
  404878:	40240000 	.word	0x40240000
  40487c:	2b39      	cmp	r3, #57	; 0x39
  40487e:	f8cd b018 	str.w	fp, [sp, #24]
  404882:	46d0      	mov	r8, sl
  404884:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404888:	469a      	mov	sl, r3
  40488a:	d0c8      	beq.n	40481e <_dtoa_r+0xd56>
  40488c:	f1bb 0f00 	cmp.w	fp, #0
  404890:	f73f aebf 	bgt.w	404612 <_dtoa_r+0xb4a>
  404894:	e6bf      	b.n	404616 <_dtoa_r+0xb4e>
  404896:	f47f aebe 	bne.w	404616 <_dtoa_r+0xb4e>
  40489a:	f01a 0f01 	tst.w	sl, #1
  40489e:	f43f aeba 	beq.w	404616 <_dtoa_r+0xb4e>
  4048a2:	e6b2      	b.n	40460a <_dtoa_r+0xb42>
  4048a4:	f04f 0800 	mov.w	r8, #0
  4048a8:	4646      	mov	r6, r8
  4048aa:	e5e9      	b.n	404480 <_dtoa_r+0x9b8>
  4048ac:	4631      	mov	r1, r6
  4048ae:	2300      	movs	r3, #0
  4048b0:	220a      	movs	r2, #10
  4048b2:	4620      	mov	r0, r4
  4048b4:	f001 f926 	bl	405b04 <__multadd>
  4048b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4048ba:	2b00      	cmp	r3, #0
  4048bc:	4606      	mov	r6, r0
  4048be:	dd0a      	ble.n	4048d6 <_dtoa_r+0xe0e>
  4048c0:	930a      	str	r3, [sp, #40]	; 0x28
  4048c2:	f7ff bbaa 	b.w	40401a <_dtoa_r+0x552>
  4048c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4048c8:	2b02      	cmp	r3, #2
  4048ca:	dc23      	bgt.n	404914 <_dtoa_r+0xe4c>
  4048cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4048ce:	e43b      	b.n	404148 <_dtoa_r+0x680>
  4048d0:	f04f 0a02 	mov.w	sl, #2
  4048d4:	e4ed      	b.n	4042b2 <_dtoa_r+0x7ea>
  4048d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4048d8:	2b02      	cmp	r3, #2
  4048da:	dc1b      	bgt.n	404914 <_dtoa_r+0xe4c>
  4048dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4048de:	e7ef      	b.n	4048c0 <_dtoa_r+0xdf8>
  4048e0:	2500      	movs	r5, #0
  4048e2:	6465      	str	r5, [r4, #68]	; 0x44
  4048e4:	4629      	mov	r1, r5
  4048e6:	4620      	mov	r0, r4
  4048e8:	f001 f8dc 	bl	405aa4 <_Balloc>
  4048ec:	f04f 33ff 	mov.w	r3, #4294967295
  4048f0:	930a      	str	r3, [sp, #40]	; 0x28
  4048f2:	930f      	str	r3, [sp, #60]	; 0x3c
  4048f4:	2301      	movs	r3, #1
  4048f6:	9004      	str	r0, [sp, #16]
  4048f8:	9525      	str	r5, [sp, #148]	; 0x94
  4048fa:	6420      	str	r0, [r4, #64]	; 0x40
  4048fc:	930b      	str	r3, [sp, #44]	; 0x2c
  4048fe:	f7ff b9dd 	b.w	403cbc <_dtoa_r+0x1f4>
  404902:	2501      	movs	r5, #1
  404904:	f7ff b9a5 	b.w	403c52 <_dtoa_r+0x18a>
  404908:	f43f ab69 	beq.w	403fde <_dtoa_r+0x516>
  40490c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404910:	f7ff bbf9 	b.w	404106 <_dtoa_r+0x63e>
  404914:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404916:	930a      	str	r3, [sp, #40]	; 0x28
  404918:	e5e5      	b.n	4044e6 <_dtoa_r+0xa1e>
  40491a:	bf00      	nop

0040491c <__sflush_r>:
  40491c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404920:	b29a      	uxth	r2, r3
  404922:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404926:	460d      	mov	r5, r1
  404928:	0711      	lsls	r1, r2, #28
  40492a:	4680      	mov	r8, r0
  40492c:	d43a      	bmi.n	4049a4 <__sflush_r+0x88>
  40492e:	686a      	ldr	r2, [r5, #4]
  404930:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404934:	2a00      	cmp	r2, #0
  404936:	81ab      	strh	r3, [r5, #12]
  404938:	dd6f      	ble.n	404a1a <__sflush_r+0xfe>
  40493a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40493c:	2c00      	cmp	r4, #0
  40493e:	d049      	beq.n	4049d4 <__sflush_r+0xb8>
  404940:	2200      	movs	r2, #0
  404942:	b29b      	uxth	r3, r3
  404944:	f8d8 6000 	ldr.w	r6, [r8]
  404948:	f8c8 2000 	str.w	r2, [r8]
  40494c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404950:	d067      	beq.n	404a22 <__sflush_r+0x106>
  404952:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404954:	075f      	lsls	r7, r3, #29
  404956:	d505      	bpl.n	404964 <__sflush_r+0x48>
  404958:	6869      	ldr	r1, [r5, #4]
  40495a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40495c:	1a52      	subs	r2, r2, r1
  40495e:	b10b      	cbz	r3, 404964 <__sflush_r+0x48>
  404960:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  404962:	1ad2      	subs	r2, r2, r3
  404964:	2300      	movs	r3, #0
  404966:	69e9      	ldr	r1, [r5, #28]
  404968:	4640      	mov	r0, r8
  40496a:	47a0      	blx	r4
  40496c:	1c44      	adds	r4, r0, #1
  40496e:	d03c      	beq.n	4049ea <__sflush_r+0xce>
  404970:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  404974:	692a      	ldr	r2, [r5, #16]
  404976:	602a      	str	r2, [r5, #0]
  404978:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40497c:	2200      	movs	r2, #0
  40497e:	81ab      	strh	r3, [r5, #12]
  404980:	04db      	lsls	r3, r3, #19
  404982:	606a      	str	r2, [r5, #4]
  404984:	d447      	bmi.n	404a16 <__sflush_r+0xfa>
  404986:	6b29      	ldr	r1, [r5, #48]	; 0x30
  404988:	f8c8 6000 	str.w	r6, [r8]
  40498c:	b311      	cbz	r1, 4049d4 <__sflush_r+0xb8>
  40498e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  404992:	4299      	cmp	r1, r3
  404994:	d002      	beq.n	40499c <__sflush_r+0x80>
  404996:	4640      	mov	r0, r8
  404998:	f000 f95a 	bl	404c50 <_free_r>
  40499c:	2000      	movs	r0, #0
  40499e:	6328      	str	r0, [r5, #48]	; 0x30
  4049a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4049a4:	692e      	ldr	r6, [r5, #16]
  4049a6:	b1ae      	cbz	r6, 4049d4 <__sflush_r+0xb8>
  4049a8:	682c      	ldr	r4, [r5, #0]
  4049aa:	602e      	str	r6, [r5, #0]
  4049ac:	0791      	lsls	r1, r2, #30
  4049ae:	bf0c      	ite	eq
  4049b0:	696b      	ldreq	r3, [r5, #20]
  4049b2:	2300      	movne	r3, #0
  4049b4:	1ba4      	subs	r4, r4, r6
  4049b6:	60ab      	str	r3, [r5, #8]
  4049b8:	e00a      	b.n	4049d0 <__sflush_r+0xb4>
  4049ba:	4623      	mov	r3, r4
  4049bc:	4632      	mov	r2, r6
  4049be:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4049c0:	69e9      	ldr	r1, [r5, #28]
  4049c2:	4640      	mov	r0, r8
  4049c4:	47b8      	blx	r7
  4049c6:	2800      	cmp	r0, #0
  4049c8:	eba4 0400 	sub.w	r4, r4, r0
  4049cc:	4406      	add	r6, r0
  4049ce:	dd04      	ble.n	4049da <__sflush_r+0xbe>
  4049d0:	2c00      	cmp	r4, #0
  4049d2:	dcf2      	bgt.n	4049ba <__sflush_r+0x9e>
  4049d4:	2000      	movs	r0, #0
  4049d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4049da:	89ab      	ldrh	r3, [r5, #12]
  4049dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4049e0:	81ab      	strh	r3, [r5, #12]
  4049e2:	f04f 30ff 	mov.w	r0, #4294967295
  4049e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4049ea:	f8d8 4000 	ldr.w	r4, [r8]
  4049ee:	2c1d      	cmp	r4, #29
  4049f0:	d8f3      	bhi.n	4049da <__sflush_r+0xbe>
  4049f2:	4b19      	ldr	r3, [pc, #100]	; (404a58 <__sflush_r+0x13c>)
  4049f4:	40e3      	lsrs	r3, r4
  4049f6:	43db      	mvns	r3, r3
  4049f8:	f013 0301 	ands.w	r3, r3, #1
  4049fc:	d1ed      	bne.n	4049da <__sflush_r+0xbe>
  4049fe:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404a02:	606b      	str	r3, [r5, #4]
  404a04:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404a08:	6929      	ldr	r1, [r5, #16]
  404a0a:	81ab      	strh	r3, [r5, #12]
  404a0c:	04da      	lsls	r2, r3, #19
  404a0e:	6029      	str	r1, [r5, #0]
  404a10:	d5b9      	bpl.n	404986 <__sflush_r+0x6a>
  404a12:	2c00      	cmp	r4, #0
  404a14:	d1b7      	bne.n	404986 <__sflush_r+0x6a>
  404a16:	6528      	str	r0, [r5, #80]	; 0x50
  404a18:	e7b5      	b.n	404986 <__sflush_r+0x6a>
  404a1a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404a1c:	2a00      	cmp	r2, #0
  404a1e:	dc8c      	bgt.n	40493a <__sflush_r+0x1e>
  404a20:	e7d8      	b.n	4049d4 <__sflush_r+0xb8>
  404a22:	2301      	movs	r3, #1
  404a24:	69e9      	ldr	r1, [r5, #28]
  404a26:	4640      	mov	r0, r8
  404a28:	47a0      	blx	r4
  404a2a:	1c43      	adds	r3, r0, #1
  404a2c:	4602      	mov	r2, r0
  404a2e:	d002      	beq.n	404a36 <__sflush_r+0x11a>
  404a30:	89ab      	ldrh	r3, [r5, #12]
  404a32:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404a34:	e78e      	b.n	404954 <__sflush_r+0x38>
  404a36:	f8d8 3000 	ldr.w	r3, [r8]
  404a3a:	2b00      	cmp	r3, #0
  404a3c:	d0f8      	beq.n	404a30 <__sflush_r+0x114>
  404a3e:	2b1d      	cmp	r3, #29
  404a40:	d001      	beq.n	404a46 <__sflush_r+0x12a>
  404a42:	2b16      	cmp	r3, #22
  404a44:	d102      	bne.n	404a4c <__sflush_r+0x130>
  404a46:	f8c8 6000 	str.w	r6, [r8]
  404a4a:	e7c3      	b.n	4049d4 <__sflush_r+0xb8>
  404a4c:	89ab      	ldrh	r3, [r5, #12]
  404a4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a52:	81ab      	strh	r3, [r5, #12]
  404a54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a58:	20400001 	.word	0x20400001

00404a5c <_fflush_r>:
  404a5c:	b538      	push	{r3, r4, r5, lr}
  404a5e:	460d      	mov	r5, r1
  404a60:	4604      	mov	r4, r0
  404a62:	b108      	cbz	r0, 404a68 <_fflush_r+0xc>
  404a64:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404a66:	b1bb      	cbz	r3, 404a98 <_fflush_r+0x3c>
  404a68:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404a6c:	b188      	cbz	r0, 404a92 <_fflush_r+0x36>
  404a6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404a70:	07db      	lsls	r3, r3, #31
  404a72:	d401      	bmi.n	404a78 <_fflush_r+0x1c>
  404a74:	0581      	lsls	r1, r0, #22
  404a76:	d517      	bpl.n	404aa8 <_fflush_r+0x4c>
  404a78:	4620      	mov	r0, r4
  404a7a:	4629      	mov	r1, r5
  404a7c:	f7ff ff4e 	bl	40491c <__sflush_r>
  404a80:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404a82:	07da      	lsls	r2, r3, #31
  404a84:	4604      	mov	r4, r0
  404a86:	d402      	bmi.n	404a8e <_fflush_r+0x32>
  404a88:	89ab      	ldrh	r3, [r5, #12]
  404a8a:	059b      	lsls	r3, r3, #22
  404a8c:	d507      	bpl.n	404a9e <_fflush_r+0x42>
  404a8e:	4620      	mov	r0, r4
  404a90:	bd38      	pop	{r3, r4, r5, pc}
  404a92:	4604      	mov	r4, r0
  404a94:	4620      	mov	r0, r4
  404a96:	bd38      	pop	{r3, r4, r5, pc}
  404a98:	f000 f838 	bl	404b0c <__sinit>
  404a9c:	e7e4      	b.n	404a68 <_fflush_r+0xc>
  404a9e:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404aa0:	f000 fb72 	bl	405188 <__retarget_lock_release_recursive>
  404aa4:	4620      	mov	r0, r4
  404aa6:	bd38      	pop	{r3, r4, r5, pc}
  404aa8:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404aaa:	f000 fb6b 	bl	405184 <__retarget_lock_acquire_recursive>
  404aae:	e7e3      	b.n	404a78 <_fflush_r+0x1c>

00404ab0 <_cleanup_r>:
  404ab0:	4901      	ldr	r1, [pc, #4]	; (404ab8 <_cleanup_r+0x8>)
  404ab2:	f000 bb2b 	b.w	40510c <_fwalk_reent>
  404ab6:	bf00      	nop
  404ab8:	004067b9 	.word	0x004067b9

00404abc <std.isra.0>:
  404abc:	b510      	push	{r4, lr}
  404abe:	2300      	movs	r3, #0
  404ac0:	4604      	mov	r4, r0
  404ac2:	8181      	strh	r1, [r0, #12]
  404ac4:	81c2      	strh	r2, [r0, #14]
  404ac6:	6003      	str	r3, [r0, #0]
  404ac8:	6043      	str	r3, [r0, #4]
  404aca:	6083      	str	r3, [r0, #8]
  404acc:	6643      	str	r3, [r0, #100]	; 0x64
  404ace:	6103      	str	r3, [r0, #16]
  404ad0:	6143      	str	r3, [r0, #20]
  404ad2:	6183      	str	r3, [r0, #24]
  404ad4:	4619      	mov	r1, r3
  404ad6:	2208      	movs	r2, #8
  404ad8:	305c      	adds	r0, #92	; 0x5c
  404ada:	f7fd f9f3 	bl	401ec4 <memset>
  404ade:	4807      	ldr	r0, [pc, #28]	; (404afc <std.isra.0+0x40>)
  404ae0:	4907      	ldr	r1, [pc, #28]	; (404b00 <std.isra.0+0x44>)
  404ae2:	4a08      	ldr	r2, [pc, #32]	; (404b04 <std.isra.0+0x48>)
  404ae4:	4b08      	ldr	r3, [pc, #32]	; (404b08 <std.isra.0+0x4c>)
  404ae6:	6220      	str	r0, [r4, #32]
  404ae8:	61e4      	str	r4, [r4, #28]
  404aea:	6261      	str	r1, [r4, #36]	; 0x24
  404aec:	62a2      	str	r2, [r4, #40]	; 0x28
  404aee:	62e3      	str	r3, [r4, #44]	; 0x2c
  404af0:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404af8:	f000 bb40 	b.w	40517c <__retarget_lock_init_recursive>
  404afc:	00406479 	.word	0x00406479
  404b00:	0040649d 	.word	0x0040649d
  404b04:	004064d9 	.word	0x004064d9
  404b08:	004064f9 	.word	0x004064f9

00404b0c <__sinit>:
  404b0c:	b510      	push	{r4, lr}
  404b0e:	4604      	mov	r4, r0
  404b10:	4812      	ldr	r0, [pc, #72]	; (404b5c <__sinit+0x50>)
  404b12:	f000 fb37 	bl	405184 <__retarget_lock_acquire_recursive>
  404b16:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404b18:	b9d2      	cbnz	r2, 404b50 <__sinit+0x44>
  404b1a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404b1e:	4810      	ldr	r0, [pc, #64]	; (404b60 <__sinit+0x54>)
  404b20:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404b24:	2103      	movs	r1, #3
  404b26:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404b2a:	63e0      	str	r0, [r4, #60]	; 0x3c
  404b2c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404b30:	6860      	ldr	r0, [r4, #4]
  404b32:	2104      	movs	r1, #4
  404b34:	f7ff ffc2 	bl	404abc <std.isra.0>
  404b38:	2201      	movs	r2, #1
  404b3a:	2109      	movs	r1, #9
  404b3c:	68a0      	ldr	r0, [r4, #8]
  404b3e:	f7ff ffbd 	bl	404abc <std.isra.0>
  404b42:	2202      	movs	r2, #2
  404b44:	2112      	movs	r1, #18
  404b46:	68e0      	ldr	r0, [r4, #12]
  404b48:	f7ff ffb8 	bl	404abc <std.isra.0>
  404b4c:	2301      	movs	r3, #1
  404b4e:	63a3      	str	r3, [r4, #56]	; 0x38
  404b50:	4802      	ldr	r0, [pc, #8]	; (404b5c <__sinit+0x50>)
  404b52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404b56:	f000 bb17 	b.w	405188 <__retarget_lock_release_recursive>
  404b5a:	bf00      	nop
  404b5c:	20400a9c 	.word	0x20400a9c
  404b60:	00404ab1 	.word	0x00404ab1

00404b64 <__sfp_lock_acquire>:
  404b64:	4801      	ldr	r0, [pc, #4]	; (404b6c <__sfp_lock_acquire+0x8>)
  404b66:	f000 bb0d 	b.w	405184 <__retarget_lock_acquire_recursive>
  404b6a:	bf00      	nop
  404b6c:	20400ab0 	.word	0x20400ab0

00404b70 <__sfp_lock_release>:
  404b70:	4801      	ldr	r0, [pc, #4]	; (404b78 <__sfp_lock_release+0x8>)
  404b72:	f000 bb09 	b.w	405188 <__retarget_lock_release_recursive>
  404b76:	bf00      	nop
  404b78:	20400ab0 	.word	0x20400ab0

00404b7c <__libc_fini_array>:
  404b7c:	b538      	push	{r3, r4, r5, lr}
  404b7e:	4c0a      	ldr	r4, [pc, #40]	; (404ba8 <__libc_fini_array+0x2c>)
  404b80:	4d0a      	ldr	r5, [pc, #40]	; (404bac <__libc_fini_array+0x30>)
  404b82:	1b64      	subs	r4, r4, r5
  404b84:	10a4      	asrs	r4, r4, #2
  404b86:	d00a      	beq.n	404b9e <__libc_fini_array+0x22>
  404b88:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404b8c:	3b01      	subs	r3, #1
  404b8e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404b92:	3c01      	subs	r4, #1
  404b94:	f855 3904 	ldr.w	r3, [r5], #-4
  404b98:	4798      	blx	r3
  404b9a:	2c00      	cmp	r4, #0
  404b9c:	d1f9      	bne.n	404b92 <__libc_fini_array+0x16>
  404b9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404ba2:	f002 bbff 	b.w	4073a4 <_fini>
  404ba6:	bf00      	nop
  404ba8:	004073b4 	.word	0x004073b4
  404bac:	004073b0 	.word	0x004073b0

00404bb0 <_malloc_trim_r>:
  404bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404bb2:	4f24      	ldr	r7, [pc, #144]	; (404c44 <_malloc_trim_r+0x94>)
  404bb4:	460c      	mov	r4, r1
  404bb6:	4606      	mov	r6, r0
  404bb8:	f000 ff68 	bl	405a8c <__malloc_lock>
  404bbc:	68bb      	ldr	r3, [r7, #8]
  404bbe:	685d      	ldr	r5, [r3, #4]
  404bc0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404bc4:	310f      	adds	r1, #15
  404bc6:	f025 0503 	bic.w	r5, r5, #3
  404bca:	4429      	add	r1, r5
  404bcc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404bd0:	f021 010f 	bic.w	r1, r1, #15
  404bd4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404bd8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404bdc:	db07      	blt.n	404bee <_malloc_trim_r+0x3e>
  404bde:	2100      	movs	r1, #0
  404be0:	4630      	mov	r0, r6
  404be2:	f001 fc37 	bl	406454 <_sbrk_r>
  404be6:	68bb      	ldr	r3, [r7, #8]
  404be8:	442b      	add	r3, r5
  404bea:	4298      	cmp	r0, r3
  404bec:	d004      	beq.n	404bf8 <_malloc_trim_r+0x48>
  404bee:	4630      	mov	r0, r6
  404bf0:	f000 ff52 	bl	405a98 <__malloc_unlock>
  404bf4:	2000      	movs	r0, #0
  404bf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404bf8:	4261      	negs	r1, r4
  404bfa:	4630      	mov	r0, r6
  404bfc:	f001 fc2a 	bl	406454 <_sbrk_r>
  404c00:	3001      	adds	r0, #1
  404c02:	d00d      	beq.n	404c20 <_malloc_trim_r+0x70>
  404c04:	4b10      	ldr	r3, [pc, #64]	; (404c48 <_malloc_trim_r+0x98>)
  404c06:	68ba      	ldr	r2, [r7, #8]
  404c08:	6819      	ldr	r1, [r3, #0]
  404c0a:	1b2d      	subs	r5, r5, r4
  404c0c:	f045 0501 	orr.w	r5, r5, #1
  404c10:	4630      	mov	r0, r6
  404c12:	1b09      	subs	r1, r1, r4
  404c14:	6055      	str	r5, [r2, #4]
  404c16:	6019      	str	r1, [r3, #0]
  404c18:	f000 ff3e 	bl	405a98 <__malloc_unlock>
  404c1c:	2001      	movs	r0, #1
  404c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404c20:	2100      	movs	r1, #0
  404c22:	4630      	mov	r0, r6
  404c24:	f001 fc16 	bl	406454 <_sbrk_r>
  404c28:	68ba      	ldr	r2, [r7, #8]
  404c2a:	1a83      	subs	r3, r0, r2
  404c2c:	2b0f      	cmp	r3, #15
  404c2e:	ddde      	ble.n	404bee <_malloc_trim_r+0x3e>
  404c30:	4c06      	ldr	r4, [pc, #24]	; (404c4c <_malloc_trim_r+0x9c>)
  404c32:	4905      	ldr	r1, [pc, #20]	; (404c48 <_malloc_trim_r+0x98>)
  404c34:	6824      	ldr	r4, [r4, #0]
  404c36:	f043 0301 	orr.w	r3, r3, #1
  404c3a:	1b00      	subs	r0, r0, r4
  404c3c:	6053      	str	r3, [r2, #4]
  404c3e:	6008      	str	r0, [r1, #0]
  404c40:	e7d5      	b.n	404bee <_malloc_trim_r+0x3e>
  404c42:	bf00      	nop
  404c44:	2040043c 	.word	0x2040043c
  404c48:	20400a50 	.word	0x20400a50
  404c4c:	20400844 	.word	0x20400844

00404c50 <_free_r>:
  404c50:	2900      	cmp	r1, #0
  404c52:	d044      	beq.n	404cde <_free_r+0x8e>
  404c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c58:	460d      	mov	r5, r1
  404c5a:	4680      	mov	r8, r0
  404c5c:	f000 ff16 	bl	405a8c <__malloc_lock>
  404c60:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404c64:	4969      	ldr	r1, [pc, #420]	; (404e0c <_free_r+0x1bc>)
  404c66:	f027 0301 	bic.w	r3, r7, #1
  404c6a:	f1a5 0408 	sub.w	r4, r5, #8
  404c6e:	18e2      	adds	r2, r4, r3
  404c70:	688e      	ldr	r6, [r1, #8]
  404c72:	6850      	ldr	r0, [r2, #4]
  404c74:	42b2      	cmp	r2, r6
  404c76:	f020 0003 	bic.w	r0, r0, #3
  404c7a:	d05e      	beq.n	404d3a <_free_r+0xea>
  404c7c:	07fe      	lsls	r6, r7, #31
  404c7e:	6050      	str	r0, [r2, #4]
  404c80:	d40b      	bmi.n	404c9a <_free_r+0x4a>
  404c82:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404c86:	1be4      	subs	r4, r4, r7
  404c88:	f101 0e08 	add.w	lr, r1, #8
  404c8c:	68a5      	ldr	r5, [r4, #8]
  404c8e:	4575      	cmp	r5, lr
  404c90:	443b      	add	r3, r7
  404c92:	d06d      	beq.n	404d70 <_free_r+0x120>
  404c94:	68e7      	ldr	r7, [r4, #12]
  404c96:	60ef      	str	r7, [r5, #12]
  404c98:	60bd      	str	r5, [r7, #8]
  404c9a:	1815      	adds	r5, r2, r0
  404c9c:	686d      	ldr	r5, [r5, #4]
  404c9e:	07ed      	lsls	r5, r5, #31
  404ca0:	d53e      	bpl.n	404d20 <_free_r+0xd0>
  404ca2:	f043 0201 	orr.w	r2, r3, #1
  404ca6:	6062      	str	r2, [r4, #4]
  404ca8:	50e3      	str	r3, [r4, r3]
  404caa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404cae:	d217      	bcs.n	404ce0 <_free_r+0x90>
  404cb0:	08db      	lsrs	r3, r3, #3
  404cb2:	1c58      	adds	r0, r3, #1
  404cb4:	109a      	asrs	r2, r3, #2
  404cb6:	684d      	ldr	r5, [r1, #4]
  404cb8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404cbc:	60a7      	str	r7, [r4, #8]
  404cbe:	2301      	movs	r3, #1
  404cc0:	4093      	lsls	r3, r2
  404cc2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404cc6:	432b      	orrs	r3, r5
  404cc8:	3a08      	subs	r2, #8
  404cca:	60e2      	str	r2, [r4, #12]
  404ccc:	604b      	str	r3, [r1, #4]
  404cce:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404cd2:	60fc      	str	r4, [r7, #12]
  404cd4:	4640      	mov	r0, r8
  404cd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404cda:	f000 bedd 	b.w	405a98 <__malloc_unlock>
  404cde:	4770      	bx	lr
  404ce0:	0a5a      	lsrs	r2, r3, #9
  404ce2:	2a04      	cmp	r2, #4
  404ce4:	d852      	bhi.n	404d8c <_free_r+0x13c>
  404ce6:	099a      	lsrs	r2, r3, #6
  404ce8:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404cec:	00ff      	lsls	r7, r7, #3
  404cee:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404cf2:	19c8      	adds	r0, r1, r7
  404cf4:	59ca      	ldr	r2, [r1, r7]
  404cf6:	3808      	subs	r0, #8
  404cf8:	4290      	cmp	r0, r2
  404cfa:	d04f      	beq.n	404d9c <_free_r+0x14c>
  404cfc:	6851      	ldr	r1, [r2, #4]
  404cfe:	f021 0103 	bic.w	r1, r1, #3
  404d02:	428b      	cmp	r3, r1
  404d04:	d232      	bcs.n	404d6c <_free_r+0x11c>
  404d06:	6892      	ldr	r2, [r2, #8]
  404d08:	4290      	cmp	r0, r2
  404d0a:	d1f7      	bne.n	404cfc <_free_r+0xac>
  404d0c:	68c3      	ldr	r3, [r0, #12]
  404d0e:	60a0      	str	r0, [r4, #8]
  404d10:	60e3      	str	r3, [r4, #12]
  404d12:	609c      	str	r4, [r3, #8]
  404d14:	60c4      	str	r4, [r0, #12]
  404d16:	4640      	mov	r0, r8
  404d18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404d1c:	f000 bebc 	b.w	405a98 <__malloc_unlock>
  404d20:	6895      	ldr	r5, [r2, #8]
  404d22:	4f3b      	ldr	r7, [pc, #236]	; (404e10 <_free_r+0x1c0>)
  404d24:	42bd      	cmp	r5, r7
  404d26:	4403      	add	r3, r0
  404d28:	d040      	beq.n	404dac <_free_r+0x15c>
  404d2a:	68d0      	ldr	r0, [r2, #12]
  404d2c:	60e8      	str	r0, [r5, #12]
  404d2e:	f043 0201 	orr.w	r2, r3, #1
  404d32:	6085      	str	r5, [r0, #8]
  404d34:	6062      	str	r2, [r4, #4]
  404d36:	50e3      	str	r3, [r4, r3]
  404d38:	e7b7      	b.n	404caa <_free_r+0x5a>
  404d3a:	07ff      	lsls	r7, r7, #31
  404d3c:	4403      	add	r3, r0
  404d3e:	d407      	bmi.n	404d50 <_free_r+0x100>
  404d40:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404d44:	1aa4      	subs	r4, r4, r2
  404d46:	4413      	add	r3, r2
  404d48:	68a0      	ldr	r0, [r4, #8]
  404d4a:	68e2      	ldr	r2, [r4, #12]
  404d4c:	60c2      	str	r2, [r0, #12]
  404d4e:	6090      	str	r0, [r2, #8]
  404d50:	4a30      	ldr	r2, [pc, #192]	; (404e14 <_free_r+0x1c4>)
  404d52:	6812      	ldr	r2, [r2, #0]
  404d54:	f043 0001 	orr.w	r0, r3, #1
  404d58:	4293      	cmp	r3, r2
  404d5a:	6060      	str	r0, [r4, #4]
  404d5c:	608c      	str	r4, [r1, #8]
  404d5e:	d3b9      	bcc.n	404cd4 <_free_r+0x84>
  404d60:	4b2d      	ldr	r3, [pc, #180]	; (404e18 <_free_r+0x1c8>)
  404d62:	4640      	mov	r0, r8
  404d64:	6819      	ldr	r1, [r3, #0]
  404d66:	f7ff ff23 	bl	404bb0 <_malloc_trim_r>
  404d6a:	e7b3      	b.n	404cd4 <_free_r+0x84>
  404d6c:	4610      	mov	r0, r2
  404d6e:	e7cd      	b.n	404d0c <_free_r+0xbc>
  404d70:	1811      	adds	r1, r2, r0
  404d72:	6849      	ldr	r1, [r1, #4]
  404d74:	07c9      	lsls	r1, r1, #31
  404d76:	d444      	bmi.n	404e02 <_free_r+0x1b2>
  404d78:	6891      	ldr	r1, [r2, #8]
  404d7a:	68d2      	ldr	r2, [r2, #12]
  404d7c:	60ca      	str	r2, [r1, #12]
  404d7e:	4403      	add	r3, r0
  404d80:	f043 0001 	orr.w	r0, r3, #1
  404d84:	6091      	str	r1, [r2, #8]
  404d86:	6060      	str	r0, [r4, #4]
  404d88:	50e3      	str	r3, [r4, r3]
  404d8a:	e7a3      	b.n	404cd4 <_free_r+0x84>
  404d8c:	2a14      	cmp	r2, #20
  404d8e:	d816      	bhi.n	404dbe <_free_r+0x16e>
  404d90:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404d94:	00ff      	lsls	r7, r7, #3
  404d96:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404d9a:	e7aa      	b.n	404cf2 <_free_r+0xa2>
  404d9c:	10aa      	asrs	r2, r5, #2
  404d9e:	2301      	movs	r3, #1
  404da0:	684d      	ldr	r5, [r1, #4]
  404da2:	4093      	lsls	r3, r2
  404da4:	432b      	orrs	r3, r5
  404da6:	604b      	str	r3, [r1, #4]
  404da8:	4603      	mov	r3, r0
  404daa:	e7b0      	b.n	404d0e <_free_r+0xbe>
  404dac:	f043 0201 	orr.w	r2, r3, #1
  404db0:	614c      	str	r4, [r1, #20]
  404db2:	610c      	str	r4, [r1, #16]
  404db4:	60e5      	str	r5, [r4, #12]
  404db6:	60a5      	str	r5, [r4, #8]
  404db8:	6062      	str	r2, [r4, #4]
  404dba:	50e3      	str	r3, [r4, r3]
  404dbc:	e78a      	b.n	404cd4 <_free_r+0x84>
  404dbe:	2a54      	cmp	r2, #84	; 0x54
  404dc0:	d806      	bhi.n	404dd0 <_free_r+0x180>
  404dc2:	0b1a      	lsrs	r2, r3, #12
  404dc4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404dc8:	00ff      	lsls	r7, r7, #3
  404dca:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404dce:	e790      	b.n	404cf2 <_free_r+0xa2>
  404dd0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404dd4:	d806      	bhi.n	404de4 <_free_r+0x194>
  404dd6:	0bda      	lsrs	r2, r3, #15
  404dd8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404ddc:	00ff      	lsls	r7, r7, #3
  404dde:	f102 0577 	add.w	r5, r2, #119	; 0x77
  404de2:	e786      	b.n	404cf2 <_free_r+0xa2>
  404de4:	f240 5054 	movw	r0, #1364	; 0x554
  404de8:	4282      	cmp	r2, r0
  404dea:	d806      	bhi.n	404dfa <_free_r+0x1aa>
  404dec:	0c9a      	lsrs	r2, r3, #18
  404dee:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  404df2:	00ff      	lsls	r7, r7, #3
  404df4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404df8:	e77b      	b.n	404cf2 <_free_r+0xa2>
  404dfa:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404dfe:	257e      	movs	r5, #126	; 0x7e
  404e00:	e777      	b.n	404cf2 <_free_r+0xa2>
  404e02:	f043 0101 	orr.w	r1, r3, #1
  404e06:	6061      	str	r1, [r4, #4]
  404e08:	6013      	str	r3, [r2, #0]
  404e0a:	e763      	b.n	404cd4 <_free_r+0x84>
  404e0c:	2040043c 	.word	0x2040043c
  404e10:	20400444 	.word	0x20400444
  404e14:	20400848 	.word	0x20400848
  404e18:	20400a80 	.word	0x20400a80

00404e1c <__sfvwrite_r>:
  404e1c:	6893      	ldr	r3, [r2, #8]
  404e1e:	2b00      	cmp	r3, #0
  404e20:	d073      	beq.n	404f0a <__sfvwrite_r+0xee>
  404e22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e26:	898b      	ldrh	r3, [r1, #12]
  404e28:	b083      	sub	sp, #12
  404e2a:	460c      	mov	r4, r1
  404e2c:	0719      	lsls	r1, r3, #28
  404e2e:	9000      	str	r0, [sp, #0]
  404e30:	4616      	mov	r6, r2
  404e32:	d526      	bpl.n	404e82 <__sfvwrite_r+0x66>
  404e34:	6922      	ldr	r2, [r4, #16]
  404e36:	b322      	cbz	r2, 404e82 <__sfvwrite_r+0x66>
  404e38:	f013 0002 	ands.w	r0, r3, #2
  404e3c:	6835      	ldr	r5, [r6, #0]
  404e3e:	d02c      	beq.n	404e9a <__sfvwrite_r+0x7e>
  404e40:	f04f 0900 	mov.w	r9, #0
  404e44:	4fb0      	ldr	r7, [pc, #704]	; (405108 <__sfvwrite_r+0x2ec>)
  404e46:	46c8      	mov	r8, r9
  404e48:	46b2      	mov	sl, r6
  404e4a:	45b8      	cmp	r8, r7
  404e4c:	4643      	mov	r3, r8
  404e4e:	464a      	mov	r2, r9
  404e50:	bf28      	it	cs
  404e52:	463b      	movcs	r3, r7
  404e54:	9800      	ldr	r0, [sp, #0]
  404e56:	f1b8 0f00 	cmp.w	r8, #0
  404e5a:	d050      	beq.n	404efe <__sfvwrite_r+0xe2>
  404e5c:	69e1      	ldr	r1, [r4, #28]
  404e5e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404e60:	47b0      	blx	r6
  404e62:	2800      	cmp	r0, #0
  404e64:	dd58      	ble.n	404f18 <__sfvwrite_r+0xfc>
  404e66:	f8da 3008 	ldr.w	r3, [sl, #8]
  404e6a:	1a1b      	subs	r3, r3, r0
  404e6c:	4481      	add	r9, r0
  404e6e:	eba8 0800 	sub.w	r8, r8, r0
  404e72:	f8ca 3008 	str.w	r3, [sl, #8]
  404e76:	2b00      	cmp	r3, #0
  404e78:	d1e7      	bne.n	404e4a <__sfvwrite_r+0x2e>
  404e7a:	2000      	movs	r0, #0
  404e7c:	b003      	add	sp, #12
  404e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e82:	4621      	mov	r1, r4
  404e84:	9800      	ldr	r0, [sp, #0]
  404e86:	f7fe fd17 	bl	4038b8 <__swsetup_r>
  404e8a:	2800      	cmp	r0, #0
  404e8c:	f040 8133 	bne.w	4050f6 <__sfvwrite_r+0x2da>
  404e90:	89a3      	ldrh	r3, [r4, #12]
  404e92:	6835      	ldr	r5, [r6, #0]
  404e94:	f013 0002 	ands.w	r0, r3, #2
  404e98:	d1d2      	bne.n	404e40 <__sfvwrite_r+0x24>
  404e9a:	f013 0901 	ands.w	r9, r3, #1
  404e9e:	d145      	bne.n	404f2c <__sfvwrite_r+0x110>
  404ea0:	464f      	mov	r7, r9
  404ea2:	9601      	str	r6, [sp, #4]
  404ea4:	b337      	cbz	r7, 404ef4 <__sfvwrite_r+0xd8>
  404ea6:	059a      	lsls	r2, r3, #22
  404ea8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  404eac:	f140 8083 	bpl.w	404fb6 <__sfvwrite_r+0x19a>
  404eb0:	4547      	cmp	r7, r8
  404eb2:	46c3      	mov	fp, r8
  404eb4:	f0c0 80ab 	bcc.w	40500e <__sfvwrite_r+0x1f2>
  404eb8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404ebc:	f040 80ac 	bne.w	405018 <__sfvwrite_r+0x1fc>
  404ec0:	6820      	ldr	r0, [r4, #0]
  404ec2:	46ba      	mov	sl, r7
  404ec4:	465a      	mov	r2, fp
  404ec6:	4649      	mov	r1, r9
  404ec8:	f000 fd7c 	bl	4059c4 <memmove>
  404ecc:	68a2      	ldr	r2, [r4, #8]
  404ece:	6823      	ldr	r3, [r4, #0]
  404ed0:	eba2 0208 	sub.w	r2, r2, r8
  404ed4:	445b      	add	r3, fp
  404ed6:	60a2      	str	r2, [r4, #8]
  404ed8:	6023      	str	r3, [r4, #0]
  404eda:	9a01      	ldr	r2, [sp, #4]
  404edc:	6893      	ldr	r3, [r2, #8]
  404ede:	eba3 030a 	sub.w	r3, r3, sl
  404ee2:	44d1      	add	r9, sl
  404ee4:	eba7 070a 	sub.w	r7, r7, sl
  404ee8:	6093      	str	r3, [r2, #8]
  404eea:	2b00      	cmp	r3, #0
  404eec:	d0c5      	beq.n	404e7a <__sfvwrite_r+0x5e>
  404eee:	89a3      	ldrh	r3, [r4, #12]
  404ef0:	2f00      	cmp	r7, #0
  404ef2:	d1d8      	bne.n	404ea6 <__sfvwrite_r+0x8a>
  404ef4:	f8d5 9000 	ldr.w	r9, [r5]
  404ef8:	686f      	ldr	r7, [r5, #4]
  404efa:	3508      	adds	r5, #8
  404efc:	e7d2      	b.n	404ea4 <__sfvwrite_r+0x88>
  404efe:	f8d5 9000 	ldr.w	r9, [r5]
  404f02:	f8d5 8004 	ldr.w	r8, [r5, #4]
  404f06:	3508      	adds	r5, #8
  404f08:	e79f      	b.n	404e4a <__sfvwrite_r+0x2e>
  404f0a:	2000      	movs	r0, #0
  404f0c:	4770      	bx	lr
  404f0e:	4621      	mov	r1, r4
  404f10:	9800      	ldr	r0, [sp, #0]
  404f12:	f7ff fda3 	bl	404a5c <_fflush_r>
  404f16:	b370      	cbz	r0, 404f76 <__sfvwrite_r+0x15a>
  404f18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404f1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404f20:	f04f 30ff 	mov.w	r0, #4294967295
  404f24:	81a3      	strh	r3, [r4, #12]
  404f26:	b003      	add	sp, #12
  404f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f2c:	4681      	mov	r9, r0
  404f2e:	4633      	mov	r3, r6
  404f30:	464e      	mov	r6, r9
  404f32:	46a8      	mov	r8, r5
  404f34:	469a      	mov	sl, r3
  404f36:	464d      	mov	r5, r9
  404f38:	b34e      	cbz	r6, 404f8e <__sfvwrite_r+0x172>
  404f3a:	b380      	cbz	r0, 404f9e <__sfvwrite_r+0x182>
  404f3c:	6820      	ldr	r0, [r4, #0]
  404f3e:	6923      	ldr	r3, [r4, #16]
  404f40:	6962      	ldr	r2, [r4, #20]
  404f42:	45b1      	cmp	r9, r6
  404f44:	46cb      	mov	fp, r9
  404f46:	bf28      	it	cs
  404f48:	46b3      	movcs	fp, r6
  404f4a:	4298      	cmp	r0, r3
  404f4c:	465f      	mov	r7, fp
  404f4e:	d904      	bls.n	404f5a <__sfvwrite_r+0x13e>
  404f50:	68a3      	ldr	r3, [r4, #8]
  404f52:	4413      	add	r3, r2
  404f54:	459b      	cmp	fp, r3
  404f56:	f300 80a6 	bgt.w	4050a6 <__sfvwrite_r+0x28a>
  404f5a:	4593      	cmp	fp, r2
  404f5c:	db4b      	blt.n	404ff6 <__sfvwrite_r+0x1da>
  404f5e:	4613      	mov	r3, r2
  404f60:	6a67      	ldr	r7, [r4, #36]	; 0x24
  404f62:	69e1      	ldr	r1, [r4, #28]
  404f64:	9800      	ldr	r0, [sp, #0]
  404f66:	462a      	mov	r2, r5
  404f68:	47b8      	blx	r7
  404f6a:	1e07      	subs	r7, r0, #0
  404f6c:	ddd4      	ble.n	404f18 <__sfvwrite_r+0xfc>
  404f6e:	ebb9 0907 	subs.w	r9, r9, r7
  404f72:	d0cc      	beq.n	404f0e <__sfvwrite_r+0xf2>
  404f74:	2001      	movs	r0, #1
  404f76:	f8da 3008 	ldr.w	r3, [sl, #8]
  404f7a:	1bdb      	subs	r3, r3, r7
  404f7c:	443d      	add	r5, r7
  404f7e:	1bf6      	subs	r6, r6, r7
  404f80:	f8ca 3008 	str.w	r3, [sl, #8]
  404f84:	2b00      	cmp	r3, #0
  404f86:	f43f af78 	beq.w	404e7a <__sfvwrite_r+0x5e>
  404f8a:	2e00      	cmp	r6, #0
  404f8c:	d1d5      	bne.n	404f3a <__sfvwrite_r+0x11e>
  404f8e:	f108 0308 	add.w	r3, r8, #8
  404f92:	e913 0060 	ldmdb	r3, {r5, r6}
  404f96:	4698      	mov	r8, r3
  404f98:	3308      	adds	r3, #8
  404f9a:	2e00      	cmp	r6, #0
  404f9c:	d0f9      	beq.n	404f92 <__sfvwrite_r+0x176>
  404f9e:	4632      	mov	r2, r6
  404fa0:	210a      	movs	r1, #10
  404fa2:	4628      	mov	r0, r5
  404fa4:	f000 fc24 	bl	4057f0 <memchr>
  404fa8:	2800      	cmp	r0, #0
  404faa:	f000 80a1 	beq.w	4050f0 <__sfvwrite_r+0x2d4>
  404fae:	3001      	adds	r0, #1
  404fb0:	eba0 0905 	sub.w	r9, r0, r5
  404fb4:	e7c2      	b.n	404f3c <__sfvwrite_r+0x120>
  404fb6:	6820      	ldr	r0, [r4, #0]
  404fb8:	6923      	ldr	r3, [r4, #16]
  404fba:	4298      	cmp	r0, r3
  404fbc:	d802      	bhi.n	404fc4 <__sfvwrite_r+0x1a8>
  404fbe:	6963      	ldr	r3, [r4, #20]
  404fc0:	429f      	cmp	r7, r3
  404fc2:	d25d      	bcs.n	405080 <__sfvwrite_r+0x264>
  404fc4:	45b8      	cmp	r8, r7
  404fc6:	bf28      	it	cs
  404fc8:	46b8      	movcs	r8, r7
  404fca:	4642      	mov	r2, r8
  404fcc:	4649      	mov	r1, r9
  404fce:	f000 fcf9 	bl	4059c4 <memmove>
  404fd2:	68a3      	ldr	r3, [r4, #8]
  404fd4:	6822      	ldr	r2, [r4, #0]
  404fd6:	eba3 0308 	sub.w	r3, r3, r8
  404fda:	4442      	add	r2, r8
  404fdc:	60a3      	str	r3, [r4, #8]
  404fde:	6022      	str	r2, [r4, #0]
  404fe0:	b10b      	cbz	r3, 404fe6 <__sfvwrite_r+0x1ca>
  404fe2:	46c2      	mov	sl, r8
  404fe4:	e779      	b.n	404eda <__sfvwrite_r+0xbe>
  404fe6:	4621      	mov	r1, r4
  404fe8:	9800      	ldr	r0, [sp, #0]
  404fea:	f7ff fd37 	bl	404a5c <_fflush_r>
  404fee:	2800      	cmp	r0, #0
  404ff0:	d192      	bne.n	404f18 <__sfvwrite_r+0xfc>
  404ff2:	46c2      	mov	sl, r8
  404ff4:	e771      	b.n	404eda <__sfvwrite_r+0xbe>
  404ff6:	465a      	mov	r2, fp
  404ff8:	4629      	mov	r1, r5
  404ffa:	f000 fce3 	bl	4059c4 <memmove>
  404ffe:	68a2      	ldr	r2, [r4, #8]
  405000:	6823      	ldr	r3, [r4, #0]
  405002:	eba2 020b 	sub.w	r2, r2, fp
  405006:	445b      	add	r3, fp
  405008:	60a2      	str	r2, [r4, #8]
  40500a:	6023      	str	r3, [r4, #0]
  40500c:	e7af      	b.n	404f6e <__sfvwrite_r+0x152>
  40500e:	6820      	ldr	r0, [r4, #0]
  405010:	46b8      	mov	r8, r7
  405012:	46ba      	mov	sl, r7
  405014:	46bb      	mov	fp, r7
  405016:	e755      	b.n	404ec4 <__sfvwrite_r+0xa8>
  405018:	6962      	ldr	r2, [r4, #20]
  40501a:	6820      	ldr	r0, [r4, #0]
  40501c:	6921      	ldr	r1, [r4, #16]
  40501e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  405022:	eba0 0a01 	sub.w	sl, r0, r1
  405026:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40502a:	f10a 0001 	add.w	r0, sl, #1
  40502e:	ea4f 0868 	mov.w	r8, r8, asr #1
  405032:	4438      	add	r0, r7
  405034:	4540      	cmp	r0, r8
  405036:	4642      	mov	r2, r8
  405038:	bf84      	itt	hi
  40503a:	4680      	movhi	r8, r0
  40503c:	4642      	movhi	r2, r8
  40503e:	055b      	lsls	r3, r3, #21
  405040:	d544      	bpl.n	4050cc <__sfvwrite_r+0x2b0>
  405042:	4611      	mov	r1, r2
  405044:	9800      	ldr	r0, [sp, #0]
  405046:	f000 f921 	bl	40528c <_malloc_r>
  40504a:	4683      	mov	fp, r0
  40504c:	2800      	cmp	r0, #0
  40504e:	d055      	beq.n	4050fc <__sfvwrite_r+0x2e0>
  405050:	4652      	mov	r2, sl
  405052:	6921      	ldr	r1, [r4, #16]
  405054:	f000 fc1c 	bl	405890 <memcpy>
  405058:	89a3      	ldrh	r3, [r4, #12]
  40505a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40505e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  405062:	81a3      	strh	r3, [r4, #12]
  405064:	eb0b 000a 	add.w	r0, fp, sl
  405068:	eba8 030a 	sub.w	r3, r8, sl
  40506c:	f8c4 b010 	str.w	fp, [r4, #16]
  405070:	f8c4 8014 	str.w	r8, [r4, #20]
  405074:	6020      	str	r0, [r4, #0]
  405076:	60a3      	str	r3, [r4, #8]
  405078:	46b8      	mov	r8, r7
  40507a:	46ba      	mov	sl, r7
  40507c:	46bb      	mov	fp, r7
  40507e:	e721      	b.n	404ec4 <__sfvwrite_r+0xa8>
  405080:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  405084:	42b9      	cmp	r1, r7
  405086:	bf28      	it	cs
  405088:	4639      	movcs	r1, r7
  40508a:	464a      	mov	r2, r9
  40508c:	fb91 f1f3 	sdiv	r1, r1, r3
  405090:	9800      	ldr	r0, [sp, #0]
  405092:	6a66      	ldr	r6, [r4, #36]	; 0x24
  405094:	fb03 f301 	mul.w	r3, r3, r1
  405098:	69e1      	ldr	r1, [r4, #28]
  40509a:	47b0      	blx	r6
  40509c:	f1b0 0a00 	subs.w	sl, r0, #0
  4050a0:	f73f af1b 	bgt.w	404eda <__sfvwrite_r+0xbe>
  4050a4:	e738      	b.n	404f18 <__sfvwrite_r+0xfc>
  4050a6:	461a      	mov	r2, r3
  4050a8:	4629      	mov	r1, r5
  4050aa:	9301      	str	r3, [sp, #4]
  4050ac:	f000 fc8a 	bl	4059c4 <memmove>
  4050b0:	6822      	ldr	r2, [r4, #0]
  4050b2:	9b01      	ldr	r3, [sp, #4]
  4050b4:	9800      	ldr	r0, [sp, #0]
  4050b6:	441a      	add	r2, r3
  4050b8:	6022      	str	r2, [r4, #0]
  4050ba:	4621      	mov	r1, r4
  4050bc:	f7ff fcce 	bl	404a5c <_fflush_r>
  4050c0:	9b01      	ldr	r3, [sp, #4]
  4050c2:	2800      	cmp	r0, #0
  4050c4:	f47f af28 	bne.w	404f18 <__sfvwrite_r+0xfc>
  4050c8:	461f      	mov	r7, r3
  4050ca:	e750      	b.n	404f6e <__sfvwrite_r+0x152>
  4050cc:	9800      	ldr	r0, [sp, #0]
  4050ce:	f001 f81b 	bl	406108 <_realloc_r>
  4050d2:	4683      	mov	fp, r0
  4050d4:	2800      	cmp	r0, #0
  4050d6:	d1c5      	bne.n	405064 <__sfvwrite_r+0x248>
  4050d8:	9d00      	ldr	r5, [sp, #0]
  4050da:	6921      	ldr	r1, [r4, #16]
  4050dc:	4628      	mov	r0, r5
  4050de:	f7ff fdb7 	bl	404c50 <_free_r>
  4050e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4050e6:	220c      	movs	r2, #12
  4050e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4050ec:	602a      	str	r2, [r5, #0]
  4050ee:	e715      	b.n	404f1c <__sfvwrite_r+0x100>
  4050f0:	f106 0901 	add.w	r9, r6, #1
  4050f4:	e722      	b.n	404f3c <__sfvwrite_r+0x120>
  4050f6:	f04f 30ff 	mov.w	r0, #4294967295
  4050fa:	e6bf      	b.n	404e7c <__sfvwrite_r+0x60>
  4050fc:	9a00      	ldr	r2, [sp, #0]
  4050fe:	230c      	movs	r3, #12
  405100:	6013      	str	r3, [r2, #0]
  405102:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405106:	e709      	b.n	404f1c <__sfvwrite_r+0x100>
  405108:	7ffffc00 	.word	0x7ffffc00

0040510c <_fwalk_reent>:
  40510c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405110:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405114:	d01f      	beq.n	405156 <_fwalk_reent+0x4a>
  405116:	4688      	mov	r8, r1
  405118:	4606      	mov	r6, r0
  40511a:	f04f 0900 	mov.w	r9, #0
  40511e:	687d      	ldr	r5, [r7, #4]
  405120:	68bc      	ldr	r4, [r7, #8]
  405122:	3d01      	subs	r5, #1
  405124:	d411      	bmi.n	40514a <_fwalk_reent+0x3e>
  405126:	89a3      	ldrh	r3, [r4, #12]
  405128:	2b01      	cmp	r3, #1
  40512a:	f105 35ff 	add.w	r5, r5, #4294967295
  40512e:	d908      	bls.n	405142 <_fwalk_reent+0x36>
  405130:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  405134:	3301      	adds	r3, #1
  405136:	4621      	mov	r1, r4
  405138:	4630      	mov	r0, r6
  40513a:	d002      	beq.n	405142 <_fwalk_reent+0x36>
  40513c:	47c0      	blx	r8
  40513e:	ea49 0900 	orr.w	r9, r9, r0
  405142:	1c6b      	adds	r3, r5, #1
  405144:	f104 0468 	add.w	r4, r4, #104	; 0x68
  405148:	d1ed      	bne.n	405126 <_fwalk_reent+0x1a>
  40514a:	683f      	ldr	r7, [r7, #0]
  40514c:	2f00      	cmp	r7, #0
  40514e:	d1e6      	bne.n	40511e <_fwalk_reent+0x12>
  405150:	4648      	mov	r0, r9
  405152:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405156:	46b9      	mov	r9, r7
  405158:	4648      	mov	r0, r9
  40515a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40515e:	bf00      	nop

00405160 <_localeconv_r>:
  405160:	4a04      	ldr	r2, [pc, #16]	; (405174 <_localeconv_r+0x14>)
  405162:	4b05      	ldr	r3, [pc, #20]	; (405178 <_localeconv_r+0x18>)
  405164:	6812      	ldr	r2, [r2, #0]
  405166:	6b50      	ldr	r0, [r2, #52]	; 0x34
  405168:	2800      	cmp	r0, #0
  40516a:	bf08      	it	eq
  40516c:	4618      	moveq	r0, r3
  40516e:	30f0      	adds	r0, #240	; 0xf0
  405170:	4770      	bx	lr
  405172:	bf00      	nop
  405174:	20400008 	.word	0x20400008
  405178:	2040084c 	.word	0x2040084c

0040517c <__retarget_lock_init_recursive>:
  40517c:	4770      	bx	lr
  40517e:	bf00      	nop

00405180 <__retarget_lock_close_recursive>:
  405180:	4770      	bx	lr
  405182:	bf00      	nop

00405184 <__retarget_lock_acquire_recursive>:
  405184:	4770      	bx	lr
  405186:	bf00      	nop

00405188 <__retarget_lock_release_recursive>:
  405188:	4770      	bx	lr
  40518a:	bf00      	nop

0040518c <__swhatbuf_r>:
  40518c:	b570      	push	{r4, r5, r6, lr}
  40518e:	460c      	mov	r4, r1
  405190:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405194:	2900      	cmp	r1, #0
  405196:	b090      	sub	sp, #64	; 0x40
  405198:	4615      	mov	r5, r2
  40519a:	461e      	mov	r6, r3
  40519c:	db14      	blt.n	4051c8 <__swhatbuf_r+0x3c>
  40519e:	aa01      	add	r2, sp, #4
  4051a0:	f001 fbf0 	bl	406984 <_fstat_r>
  4051a4:	2800      	cmp	r0, #0
  4051a6:	db0f      	blt.n	4051c8 <__swhatbuf_r+0x3c>
  4051a8:	9a02      	ldr	r2, [sp, #8]
  4051aa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4051ae:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4051b2:	fab2 f282 	clz	r2, r2
  4051b6:	0952      	lsrs	r2, r2, #5
  4051b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4051bc:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4051c0:	6032      	str	r2, [r6, #0]
  4051c2:	602b      	str	r3, [r5, #0]
  4051c4:	b010      	add	sp, #64	; 0x40
  4051c6:	bd70      	pop	{r4, r5, r6, pc}
  4051c8:	89a2      	ldrh	r2, [r4, #12]
  4051ca:	2300      	movs	r3, #0
  4051cc:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  4051d0:	6033      	str	r3, [r6, #0]
  4051d2:	d004      	beq.n	4051de <__swhatbuf_r+0x52>
  4051d4:	2240      	movs	r2, #64	; 0x40
  4051d6:	4618      	mov	r0, r3
  4051d8:	602a      	str	r2, [r5, #0]
  4051da:	b010      	add	sp, #64	; 0x40
  4051dc:	bd70      	pop	{r4, r5, r6, pc}
  4051de:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4051e2:	602b      	str	r3, [r5, #0]
  4051e4:	b010      	add	sp, #64	; 0x40
  4051e6:	bd70      	pop	{r4, r5, r6, pc}

004051e8 <__smakebuf_r>:
  4051e8:	898a      	ldrh	r2, [r1, #12]
  4051ea:	0792      	lsls	r2, r2, #30
  4051ec:	460b      	mov	r3, r1
  4051ee:	d506      	bpl.n	4051fe <__smakebuf_r+0x16>
  4051f0:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4051f4:	2101      	movs	r1, #1
  4051f6:	601a      	str	r2, [r3, #0]
  4051f8:	611a      	str	r2, [r3, #16]
  4051fa:	6159      	str	r1, [r3, #20]
  4051fc:	4770      	bx	lr
  4051fe:	b5f0      	push	{r4, r5, r6, r7, lr}
  405200:	b083      	sub	sp, #12
  405202:	ab01      	add	r3, sp, #4
  405204:	466a      	mov	r2, sp
  405206:	460c      	mov	r4, r1
  405208:	4606      	mov	r6, r0
  40520a:	f7ff ffbf 	bl	40518c <__swhatbuf_r>
  40520e:	9900      	ldr	r1, [sp, #0]
  405210:	4605      	mov	r5, r0
  405212:	4630      	mov	r0, r6
  405214:	f000 f83a 	bl	40528c <_malloc_r>
  405218:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40521c:	b1d8      	cbz	r0, 405256 <__smakebuf_r+0x6e>
  40521e:	9a01      	ldr	r2, [sp, #4]
  405220:	4f15      	ldr	r7, [pc, #84]	; (405278 <__smakebuf_r+0x90>)
  405222:	9900      	ldr	r1, [sp, #0]
  405224:	63f7      	str	r7, [r6, #60]	; 0x3c
  405226:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40522a:	81a3      	strh	r3, [r4, #12]
  40522c:	6020      	str	r0, [r4, #0]
  40522e:	6120      	str	r0, [r4, #16]
  405230:	6161      	str	r1, [r4, #20]
  405232:	b91a      	cbnz	r2, 40523c <__smakebuf_r+0x54>
  405234:	432b      	orrs	r3, r5
  405236:	81a3      	strh	r3, [r4, #12]
  405238:	b003      	add	sp, #12
  40523a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40523c:	4630      	mov	r0, r6
  40523e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405242:	f001 fbb3 	bl	4069ac <_isatty_r>
  405246:	b1a0      	cbz	r0, 405272 <__smakebuf_r+0x8a>
  405248:	89a3      	ldrh	r3, [r4, #12]
  40524a:	f023 0303 	bic.w	r3, r3, #3
  40524e:	f043 0301 	orr.w	r3, r3, #1
  405252:	b21b      	sxth	r3, r3
  405254:	e7ee      	b.n	405234 <__smakebuf_r+0x4c>
  405256:	059a      	lsls	r2, r3, #22
  405258:	d4ee      	bmi.n	405238 <__smakebuf_r+0x50>
  40525a:	f023 0303 	bic.w	r3, r3, #3
  40525e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  405262:	f043 0302 	orr.w	r3, r3, #2
  405266:	2101      	movs	r1, #1
  405268:	81a3      	strh	r3, [r4, #12]
  40526a:	6022      	str	r2, [r4, #0]
  40526c:	6122      	str	r2, [r4, #16]
  40526e:	6161      	str	r1, [r4, #20]
  405270:	e7e2      	b.n	405238 <__smakebuf_r+0x50>
  405272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405276:	e7dd      	b.n	405234 <__smakebuf_r+0x4c>
  405278:	00404ab1 	.word	0x00404ab1

0040527c <malloc>:
  40527c:	4b02      	ldr	r3, [pc, #8]	; (405288 <malloc+0xc>)
  40527e:	4601      	mov	r1, r0
  405280:	6818      	ldr	r0, [r3, #0]
  405282:	f000 b803 	b.w	40528c <_malloc_r>
  405286:	bf00      	nop
  405288:	20400008 	.word	0x20400008

0040528c <_malloc_r>:
  40528c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405290:	f101 060b 	add.w	r6, r1, #11
  405294:	2e16      	cmp	r6, #22
  405296:	b083      	sub	sp, #12
  405298:	4605      	mov	r5, r0
  40529a:	f240 809e 	bls.w	4053da <_malloc_r+0x14e>
  40529e:	f036 0607 	bics.w	r6, r6, #7
  4052a2:	f100 80bd 	bmi.w	405420 <_malloc_r+0x194>
  4052a6:	42b1      	cmp	r1, r6
  4052a8:	f200 80ba 	bhi.w	405420 <_malloc_r+0x194>
  4052ac:	f000 fbee 	bl	405a8c <__malloc_lock>
  4052b0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4052b4:	f0c0 8293 	bcc.w	4057de <_malloc_r+0x552>
  4052b8:	0a73      	lsrs	r3, r6, #9
  4052ba:	f000 80b8 	beq.w	40542e <_malloc_r+0x1a2>
  4052be:	2b04      	cmp	r3, #4
  4052c0:	f200 8179 	bhi.w	4055b6 <_malloc_r+0x32a>
  4052c4:	09b3      	lsrs	r3, r6, #6
  4052c6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4052ca:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4052ce:	00c3      	lsls	r3, r0, #3
  4052d0:	4fbf      	ldr	r7, [pc, #764]	; (4055d0 <_malloc_r+0x344>)
  4052d2:	443b      	add	r3, r7
  4052d4:	f1a3 0108 	sub.w	r1, r3, #8
  4052d8:	685c      	ldr	r4, [r3, #4]
  4052da:	42a1      	cmp	r1, r4
  4052dc:	d106      	bne.n	4052ec <_malloc_r+0x60>
  4052de:	e00c      	b.n	4052fa <_malloc_r+0x6e>
  4052e0:	2a00      	cmp	r2, #0
  4052e2:	f280 80aa 	bge.w	40543a <_malloc_r+0x1ae>
  4052e6:	68e4      	ldr	r4, [r4, #12]
  4052e8:	42a1      	cmp	r1, r4
  4052ea:	d006      	beq.n	4052fa <_malloc_r+0x6e>
  4052ec:	6863      	ldr	r3, [r4, #4]
  4052ee:	f023 0303 	bic.w	r3, r3, #3
  4052f2:	1b9a      	subs	r2, r3, r6
  4052f4:	2a0f      	cmp	r2, #15
  4052f6:	ddf3      	ble.n	4052e0 <_malloc_r+0x54>
  4052f8:	4670      	mov	r0, lr
  4052fa:	693c      	ldr	r4, [r7, #16]
  4052fc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4055e4 <_malloc_r+0x358>
  405300:	4574      	cmp	r4, lr
  405302:	f000 81ab 	beq.w	40565c <_malloc_r+0x3d0>
  405306:	6863      	ldr	r3, [r4, #4]
  405308:	f023 0303 	bic.w	r3, r3, #3
  40530c:	1b9a      	subs	r2, r3, r6
  40530e:	2a0f      	cmp	r2, #15
  405310:	f300 8190 	bgt.w	405634 <_malloc_r+0x3a8>
  405314:	2a00      	cmp	r2, #0
  405316:	f8c7 e014 	str.w	lr, [r7, #20]
  40531a:	f8c7 e010 	str.w	lr, [r7, #16]
  40531e:	f280 809d 	bge.w	40545c <_malloc_r+0x1d0>
  405322:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405326:	f080 8161 	bcs.w	4055ec <_malloc_r+0x360>
  40532a:	08db      	lsrs	r3, r3, #3
  40532c:	f103 0c01 	add.w	ip, r3, #1
  405330:	1099      	asrs	r1, r3, #2
  405332:	687a      	ldr	r2, [r7, #4]
  405334:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405338:	f8c4 8008 	str.w	r8, [r4, #8]
  40533c:	2301      	movs	r3, #1
  40533e:	408b      	lsls	r3, r1
  405340:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  405344:	4313      	orrs	r3, r2
  405346:	3908      	subs	r1, #8
  405348:	60e1      	str	r1, [r4, #12]
  40534a:	607b      	str	r3, [r7, #4]
  40534c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  405350:	f8c8 400c 	str.w	r4, [r8, #12]
  405354:	1082      	asrs	r2, r0, #2
  405356:	2401      	movs	r4, #1
  405358:	4094      	lsls	r4, r2
  40535a:	429c      	cmp	r4, r3
  40535c:	f200 808b 	bhi.w	405476 <_malloc_r+0x1ea>
  405360:	421c      	tst	r4, r3
  405362:	d106      	bne.n	405372 <_malloc_r+0xe6>
  405364:	f020 0003 	bic.w	r0, r0, #3
  405368:	0064      	lsls	r4, r4, #1
  40536a:	421c      	tst	r4, r3
  40536c:	f100 0004 	add.w	r0, r0, #4
  405370:	d0fa      	beq.n	405368 <_malloc_r+0xdc>
  405372:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  405376:	46cc      	mov	ip, r9
  405378:	4680      	mov	r8, r0
  40537a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40537e:	459c      	cmp	ip, r3
  405380:	d107      	bne.n	405392 <_malloc_r+0x106>
  405382:	e16d      	b.n	405660 <_malloc_r+0x3d4>
  405384:	2a00      	cmp	r2, #0
  405386:	f280 817b 	bge.w	405680 <_malloc_r+0x3f4>
  40538a:	68db      	ldr	r3, [r3, #12]
  40538c:	459c      	cmp	ip, r3
  40538e:	f000 8167 	beq.w	405660 <_malloc_r+0x3d4>
  405392:	6859      	ldr	r1, [r3, #4]
  405394:	f021 0103 	bic.w	r1, r1, #3
  405398:	1b8a      	subs	r2, r1, r6
  40539a:	2a0f      	cmp	r2, #15
  40539c:	ddf2      	ble.n	405384 <_malloc_r+0xf8>
  40539e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4053a2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4053a6:	9300      	str	r3, [sp, #0]
  4053a8:	199c      	adds	r4, r3, r6
  4053aa:	4628      	mov	r0, r5
  4053ac:	f046 0601 	orr.w	r6, r6, #1
  4053b0:	f042 0501 	orr.w	r5, r2, #1
  4053b4:	605e      	str	r6, [r3, #4]
  4053b6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4053ba:	f8cc 8008 	str.w	r8, [ip, #8]
  4053be:	617c      	str	r4, [r7, #20]
  4053c0:	613c      	str	r4, [r7, #16]
  4053c2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4053c6:	f8c4 e008 	str.w	lr, [r4, #8]
  4053ca:	6065      	str	r5, [r4, #4]
  4053cc:	505a      	str	r2, [r3, r1]
  4053ce:	f000 fb63 	bl	405a98 <__malloc_unlock>
  4053d2:	9b00      	ldr	r3, [sp, #0]
  4053d4:	f103 0408 	add.w	r4, r3, #8
  4053d8:	e01e      	b.n	405418 <_malloc_r+0x18c>
  4053da:	2910      	cmp	r1, #16
  4053dc:	d820      	bhi.n	405420 <_malloc_r+0x194>
  4053de:	f000 fb55 	bl	405a8c <__malloc_lock>
  4053e2:	2610      	movs	r6, #16
  4053e4:	2318      	movs	r3, #24
  4053e6:	2002      	movs	r0, #2
  4053e8:	4f79      	ldr	r7, [pc, #484]	; (4055d0 <_malloc_r+0x344>)
  4053ea:	443b      	add	r3, r7
  4053ec:	f1a3 0208 	sub.w	r2, r3, #8
  4053f0:	685c      	ldr	r4, [r3, #4]
  4053f2:	4294      	cmp	r4, r2
  4053f4:	f000 813d 	beq.w	405672 <_malloc_r+0x3e6>
  4053f8:	6863      	ldr	r3, [r4, #4]
  4053fa:	68e1      	ldr	r1, [r4, #12]
  4053fc:	68a6      	ldr	r6, [r4, #8]
  4053fe:	f023 0303 	bic.w	r3, r3, #3
  405402:	4423      	add	r3, r4
  405404:	4628      	mov	r0, r5
  405406:	685a      	ldr	r2, [r3, #4]
  405408:	60f1      	str	r1, [r6, #12]
  40540a:	f042 0201 	orr.w	r2, r2, #1
  40540e:	608e      	str	r6, [r1, #8]
  405410:	605a      	str	r2, [r3, #4]
  405412:	f000 fb41 	bl	405a98 <__malloc_unlock>
  405416:	3408      	adds	r4, #8
  405418:	4620      	mov	r0, r4
  40541a:	b003      	add	sp, #12
  40541c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405420:	2400      	movs	r4, #0
  405422:	230c      	movs	r3, #12
  405424:	4620      	mov	r0, r4
  405426:	602b      	str	r3, [r5, #0]
  405428:	b003      	add	sp, #12
  40542a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40542e:	2040      	movs	r0, #64	; 0x40
  405430:	f44f 7300 	mov.w	r3, #512	; 0x200
  405434:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405438:	e74a      	b.n	4052d0 <_malloc_r+0x44>
  40543a:	4423      	add	r3, r4
  40543c:	68e1      	ldr	r1, [r4, #12]
  40543e:	685a      	ldr	r2, [r3, #4]
  405440:	68a6      	ldr	r6, [r4, #8]
  405442:	f042 0201 	orr.w	r2, r2, #1
  405446:	60f1      	str	r1, [r6, #12]
  405448:	4628      	mov	r0, r5
  40544a:	608e      	str	r6, [r1, #8]
  40544c:	605a      	str	r2, [r3, #4]
  40544e:	f000 fb23 	bl	405a98 <__malloc_unlock>
  405452:	3408      	adds	r4, #8
  405454:	4620      	mov	r0, r4
  405456:	b003      	add	sp, #12
  405458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40545c:	4423      	add	r3, r4
  40545e:	4628      	mov	r0, r5
  405460:	685a      	ldr	r2, [r3, #4]
  405462:	f042 0201 	orr.w	r2, r2, #1
  405466:	605a      	str	r2, [r3, #4]
  405468:	f000 fb16 	bl	405a98 <__malloc_unlock>
  40546c:	3408      	adds	r4, #8
  40546e:	4620      	mov	r0, r4
  405470:	b003      	add	sp, #12
  405472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405476:	68bc      	ldr	r4, [r7, #8]
  405478:	6863      	ldr	r3, [r4, #4]
  40547a:	f023 0803 	bic.w	r8, r3, #3
  40547e:	45b0      	cmp	r8, r6
  405480:	d304      	bcc.n	40548c <_malloc_r+0x200>
  405482:	eba8 0306 	sub.w	r3, r8, r6
  405486:	2b0f      	cmp	r3, #15
  405488:	f300 8085 	bgt.w	405596 <_malloc_r+0x30a>
  40548c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4055e8 <_malloc_r+0x35c>
  405490:	4b50      	ldr	r3, [pc, #320]	; (4055d4 <_malloc_r+0x348>)
  405492:	f8d9 2000 	ldr.w	r2, [r9]
  405496:	681b      	ldr	r3, [r3, #0]
  405498:	3201      	adds	r2, #1
  40549a:	4433      	add	r3, r6
  40549c:	eb04 0a08 	add.w	sl, r4, r8
  4054a0:	f000 8155 	beq.w	40574e <_malloc_r+0x4c2>
  4054a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4054a8:	330f      	adds	r3, #15
  4054aa:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4054ae:	f02b 0b0f 	bic.w	fp, fp, #15
  4054b2:	4659      	mov	r1, fp
  4054b4:	4628      	mov	r0, r5
  4054b6:	f000 ffcd 	bl	406454 <_sbrk_r>
  4054ba:	1c41      	adds	r1, r0, #1
  4054bc:	4602      	mov	r2, r0
  4054be:	f000 80fc 	beq.w	4056ba <_malloc_r+0x42e>
  4054c2:	4582      	cmp	sl, r0
  4054c4:	f200 80f7 	bhi.w	4056b6 <_malloc_r+0x42a>
  4054c8:	4b43      	ldr	r3, [pc, #268]	; (4055d8 <_malloc_r+0x34c>)
  4054ca:	6819      	ldr	r1, [r3, #0]
  4054cc:	4459      	add	r1, fp
  4054ce:	6019      	str	r1, [r3, #0]
  4054d0:	f000 814d 	beq.w	40576e <_malloc_r+0x4e2>
  4054d4:	f8d9 0000 	ldr.w	r0, [r9]
  4054d8:	3001      	adds	r0, #1
  4054da:	bf1b      	ittet	ne
  4054dc:	eba2 0a0a 	subne.w	sl, r2, sl
  4054e0:	4451      	addne	r1, sl
  4054e2:	f8c9 2000 	streq.w	r2, [r9]
  4054e6:	6019      	strne	r1, [r3, #0]
  4054e8:	f012 0107 	ands.w	r1, r2, #7
  4054ec:	f000 8115 	beq.w	40571a <_malloc_r+0x48e>
  4054f0:	f1c1 0008 	rsb	r0, r1, #8
  4054f4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4054f8:	4402      	add	r2, r0
  4054fa:	3108      	adds	r1, #8
  4054fc:	eb02 090b 	add.w	r9, r2, fp
  405500:	f3c9 090b 	ubfx	r9, r9, #0, #12
  405504:	eba1 0909 	sub.w	r9, r1, r9
  405508:	4649      	mov	r1, r9
  40550a:	4628      	mov	r0, r5
  40550c:	9301      	str	r3, [sp, #4]
  40550e:	9200      	str	r2, [sp, #0]
  405510:	f000 ffa0 	bl	406454 <_sbrk_r>
  405514:	1c43      	adds	r3, r0, #1
  405516:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40551a:	f000 8143 	beq.w	4057a4 <_malloc_r+0x518>
  40551e:	1a80      	subs	r0, r0, r2
  405520:	4448      	add	r0, r9
  405522:	f040 0001 	orr.w	r0, r0, #1
  405526:	6819      	ldr	r1, [r3, #0]
  405528:	60ba      	str	r2, [r7, #8]
  40552a:	4449      	add	r1, r9
  40552c:	42bc      	cmp	r4, r7
  40552e:	6050      	str	r0, [r2, #4]
  405530:	6019      	str	r1, [r3, #0]
  405532:	d017      	beq.n	405564 <_malloc_r+0x2d8>
  405534:	f1b8 0f0f 	cmp.w	r8, #15
  405538:	f240 80fb 	bls.w	405732 <_malloc_r+0x4a6>
  40553c:	6860      	ldr	r0, [r4, #4]
  40553e:	f1a8 020c 	sub.w	r2, r8, #12
  405542:	f022 0207 	bic.w	r2, r2, #7
  405546:	eb04 0e02 	add.w	lr, r4, r2
  40554a:	f000 0001 	and.w	r0, r0, #1
  40554e:	f04f 0c05 	mov.w	ip, #5
  405552:	4310      	orrs	r0, r2
  405554:	2a0f      	cmp	r2, #15
  405556:	6060      	str	r0, [r4, #4]
  405558:	f8ce c004 	str.w	ip, [lr, #4]
  40555c:	f8ce c008 	str.w	ip, [lr, #8]
  405560:	f200 8117 	bhi.w	405792 <_malloc_r+0x506>
  405564:	4b1d      	ldr	r3, [pc, #116]	; (4055dc <_malloc_r+0x350>)
  405566:	68bc      	ldr	r4, [r7, #8]
  405568:	681a      	ldr	r2, [r3, #0]
  40556a:	4291      	cmp	r1, r2
  40556c:	bf88      	it	hi
  40556e:	6019      	strhi	r1, [r3, #0]
  405570:	4b1b      	ldr	r3, [pc, #108]	; (4055e0 <_malloc_r+0x354>)
  405572:	681a      	ldr	r2, [r3, #0]
  405574:	4291      	cmp	r1, r2
  405576:	6862      	ldr	r2, [r4, #4]
  405578:	bf88      	it	hi
  40557a:	6019      	strhi	r1, [r3, #0]
  40557c:	f022 0203 	bic.w	r2, r2, #3
  405580:	4296      	cmp	r6, r2
  405582:	eba2 0306 	sub.w	r3, r2, r6
  405586:	d801      	bhi.n	40558c <_malloc_r+0x300>
  405588:	2b0f      	cmp	r3, #15
  40558a:	dc04      	bgt.n	405596 <_malloc_r+0x30a>
  40558c:	4628      	mov	r0, r5
  40558e:	f000 fa83 	bl	405a98 <__malloc_unlock>
  405592:	2400      	movs	r4, #0
  405594:	e740      	b.n	405418 <_malloc_r+0x18c>
  405596:	19a2      	adds	r2, r4, r6
  405598:	f043 0301 	orr.w	r3, r3, #1
  40559c:	f046 0601 	orr.w	r6, r6, #1
  4055a0:	6066      	str	r6, [r4, #4]
  4055a2:	4628      	mov	r0, r5
  4055a4:	60ba      	str	r2, [r7, #8]
  4055a6:	6053      	str	r3, [r2, #4]
  4055a8:	f000 fa76 	bl	405a98 <__malloc_unlock>
  4055ac:	3408      	adds	r4, #8
  4055ae:	4620      	mov	r0, r4
  4055b0:	b003      	add	sp, #12
  4055b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4055b6:	2b14      	cmp	r3, #20
  4055b8:	d971      	bls.n	40569e <_malloc_r+0x412>
  4055ba:	2b54      	cmp	r3, #84	; 0x54
  4055bc:	f200 80a3 	bhi.w	405706 <_malloc_r+0x47a>
  4055c0:	0b33      	lsrs	r3, r6, #12
  4055c2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4055c6:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4055ca:	00c3      	lsls	r3, r0, #3
  4055cc:	e680      	b.n	4052d0 <_malloc_r+0x44>
  4055ce:	bf00      	nop
  4055d0:	2040043c 	.word	0x2040043c
  4055d4:	20400a80 	.word	0x20400a80
  4055d8:	20400a50 	.word	0x20400a50
  4055dc:	20400a78 	.word	0x20400a78
  4055e0:	20400a7c 	.word	0x20400a7c
  4055e4:	20400444 	.word	0x20400444
  4055e8:	20400844 	.word	0x20400844
  4055ec:	0a5a      	lsrs	r2, r3, #9
  4055ee:	2a04      	cmp	r2, #4
  4055f0:	d95b      	bls.n	4056aa <_malloc_r+0x41e>
  4055f2:	2a14      	cmp	r2, #20
  4055f4:	f200 80ae 	bhi.w	405754 <_malloc_r+0x4c8>
  4055f8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4055fc:	00c9      	lsls	r1, r1, #3
  4055fe:	325b      	adds	r2, #91	; 0x5b
  405600:	eb07 0c01 	add.w	ip, r7, r1
  405604:	5879      	ldr	r1, [r7, r1]
  405606:	f1ac 0c08 	sub.w	ip, ip, #8
  40560a:	458c      	cmp	ip, r1
  40560c:	f000 8088 	beq.w	405720 <_malloc_r+0x494>
  405610:	684a      	ldr	r2, [r1, #4]
  405612:	f022 0203 	bic.w	r2, r2, #3
  405616:	4293      	cmp	r3, r2
  405618:	d273      	bcs.n	405702 <_malloc_r+0x476>
  40561a:	6889      	ldr	r1, [r1, #8]
  40561c:	458c      	cmp	ip, r1
  40561e:	d1f7      	bne.n	405610 <_malloc_r+0x384>
  405620:	f8dc 200c 	ldr.w	r2, [ip, #12]
  405624:	687b      	ldr	r3, [r7, #4]
  405626:	60e2      	str	r2, [r4, #12]
  405628:	f8c4 c008 	str.w	ip, [r4, #8]
  40562c:	6094      	str	r4, [r2, #8]
  40562e:	f8cc 400c 	str.w	r4, [ip, #12]
  405632:	e68f      	b.n	405354 <_malloc_r+0xc8>
  405634:	19a1      	adds	r1, r4, r6
  405636:	f046 0c01 	orr.w	ip, r6, #1
  40563a:	f042 0601 	orr.w	r6, r2, #1
  40563e:	f8c4 c004 	str.w	ip, [r4, #4]
  405642:	4628      	mov	r0, r5
  405644:	6179      	str	r1, [r7, #20]
  405646:	6139      	str	r1, [r7, #16]
  405648:	f8c1 e00c 	str.w	lr, [r1, #12]
  40564c:	f8c1 e008 	str.w	lr, [r1, #8]
  405650:	604e      	str	r6, [r1, #4]
  405652:	50e2      	str	r2, [r4, r3]
  405654:	f000 fa20 	bl	405a98 <__malloc_unlock>
  405658:	3408      	adds	r4, #8
  40565a:	e6dd      	b.n	405418 <_malloc_r+0x18c>
  40565c:	687b      	ldr	r3, [r7, #4]
  40565e:	e679      	b.n	405354 <_malloc_r+0xc8>
  405660:	f108 0801 	add.w	r8, r8, #1
  405664:	f018 0f03 	tst.w	r8, #3
  405668:	f10c 0c08 	add.w	ip, ip, #8
  40566c:	f47f ae85 	bne.w	40537a <_malloc_r+0xee>
  405670:	e02d      	b.n	4056ce <_malloc_r+0x442>
  405672:	68dc      	ldr	r4, [r3, #12]
  405674:	42a3      	cmp	r3, r4
  405676:	bf08      	it	eq
  405678:	3002      	addeq	r0, #2
  40567a:	f43f ae3e 	beq.w	4052fa <_malloc_r+0x6e>
  40567e:	e6bb      	b.n	4053f8 <_malloc_r+0x16c>
  405680:	4419      	add	r1, r3
  405682:	461c      	mov	r4, r3
  405684:	684a      	ldr	r2, [r1, #4]
  405686:	68db      	ldr	r3, [r3, #12]
  405688:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40568c:	f042 0201 	orr.w	r2, r2, #1
  405690:	604a      	str	r2, [r1, #4]
  405692:	4628      	mov	r0, r5
  405694:	60f3      	str	r3, [r6, #12]
  405696:	609e      	str	r6, [r3, #8]
  405698:	f000 f9fe 	bl	405a98 <__malloc_unlock>
  40569c:	e6bc      	b.n	405418 <_malloc_r+0x18c>
  40569e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4056a2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4056a6:	00c3      	lsls	r3, r0, #3
  4056a8:	e612      	b.n	4052d0 <_malloc_r+0x44>
  4056aa:	099a      	lsrs	r2, r3, #6
  4056ac:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4056b0:	00c9      	lsls	r1, r1, #3
  4056b2:	3238      	adds	r2, #56	; 0x38
  4056b4:	e7a4      	b.n	405600 <_malloc_r+0x374>
  4056b6:	42bc      	cmp	r4, r7
  4056b8:	d054      	beq.n	405764 <_malloc_r+0x4d8>
  4056ba:	68bc      	ldr	r4, [r7, #8]
  4056bc:	6862      	ldr	r2, [r4, #4]
  4056be:	f022 0203 	bic.w	r2, r2, #3
  4056c2:	e75d      	b.n	405580 <_malloc_r+0x2f4>
  4056c4:	f859 3908 	ldr.w	r3, [r9], #-8
  4056c8:	4599      	cmp	r9, r3
  4056ca:	f040 8086 	bne.w	4057da <_malloc_r+0x54e>
  4056ce:	f010 0f03 	tst.w	r0, #3
  4056d2:	f100 30ff 	add.w	r0, r0, #4294967295
  4056d6:	d1f5      	bne.n	4056c4 <_malloc_r+0x438>
  4056d8:	687b      	ldr	r3, [r7, #4]
  4056da:	ea23 0304 	bic.w	r3, r3, r4
  4056de:	607b      	str	r3, [r7, #4]
  4056e0:	0064      	lsls	r4, r4, #1
  4056e2:	429c      	cmp	r4, r3
  4056e4:	f63f aec7 	bhi.w	405476 <_malloc_r+0x1ea>
  4056e8:	2c00      	cmp	r4, #0
  4056ea:	f43f aec4 	beq.w	405476 <_malloc_r+0x1ea>
  4056ee:	421c      	tst	r4, r3
  4056f0:	4640      	mov	r0, r8
  4056f2:	f47f ae3e 	bne.w	405372 <_malloc_r+0xe6>
  4056f6:	0064      	lsls	r4, r4, #1
  4056f8:	421c      	tst	r4, r3
  4056fa:	f100 0004 	add.w	r0, r0, #4
  4056fe:	d0fa      	beq.n	4056f6 <_malloc_r+0x46a>
  405700:	e637      	b.n	405372 <_malloc_r+0xe6>
  405702:	468c      	mov	ip, r1
  405704:	e78c      	b.n	405620 <_malloc_r+0x394>
  405706:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40570a:	d815      	bhi.n	405738 <_malloc_r+0x4ac>
  40570c:	0bf3      	lsrs	r3, r6, #15
  40570e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  405712:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405716:	00c3      	lsls	r3, r0, #3
  405718:	e5da      	b.n	4052d0 <_malloc_r+0x44>
  40571a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40571e:	e6ed      	b.n	4054fc <_malloc_r+0x270>
  405720:	687b      	ldr	r3, [r7, #4]
  405722:	1092      	asrs	r2, r2, #2
  405724:	2101      	movs	r1, #1
  405726:	fa01 f202 	lsl.w	r2, r1, r2
  40572a:	4313      	orrs	r3, r2
  40572c:	607b      	str	r3, [r7, #4]
  40572e:	4662      	mov	r2, ip
  405730:	e779      	b.n	405626 <_malloc_r+0x39a>
  405732:	2301      	movs	r3, #1
  405734:	6053      	str	r3, [r2, #4]
  405736:	e729      	b.n	40558c <_malloc_r+0x300>
  405738:	f240 5254 	movw	r2, #1364	; 0x554
  40573c:	4293      	cmp	r3, r2
  40573e:	d822      	bhi.n	405786 <_malloc_r+0x4fa>
  405740:	0cb3      	lsrs	r3, r6, #18
  405742:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405746:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40574a:	00c3      	lsls	r3, r0, #3
  40574c:	e5c0      	b.n	4052d0 <_malloc_r+0x44>
  40574e:	f103 0b10 	add.w	fp, r3, #16
  405752:	e6ae      	b.n	4054b2 <_malloc_r+0x226>
  405754:	2a54      	cmp	r2, #84	; 0x54
  405756:	d829      	bhi.n	4057ac <_malloc_r+0x520>
  405758:	0b1a      	lsrs	r2, r3, #12
  40575a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40575e:	00c9      	lsls	r1, r1, #3
  405760:	326e      	adds	r2, #110	; 0x6e
  405762:	e74d      	b.n	405600 <_malloc_r+0x374>
  405764:	4b20      	ldr	r3, [pc, #128]	; (4057e8 <_malloc_r+0x55c>)
  405766:	6819      	ldr	r1, [r3, #0]
  405768:	4459      	add	r1, fp
  40576a:	6019      	str	r1, [r3, #0]
  40576c:	e6b2      	b.n	4054d4 <_malloc_r+0x248>
  40576e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  405772:	2800      	cmp	r0, #0
  405774:	f47f aeae 	bne.w	4054d4 <_malloc_r+0x248>
  405778:	eb08 030b 	add.w	r3, r8, fp
  40577c:	68ba      	ldr	r2, [r7, #8]
  40577e:	f043 0301 	orr.w	r3, r3, #1
  405782:	6053      	str	r3, [r2, #4]
  405784:	e6ee      	b.n	405564 <_malloc_r+0x2d8>
  405786:	207f      	movs	r0, #127	; 0x7f
  405788:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40578c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  405790:	e59e      	b.n	4052d0 <_malloc_r+0x44>
  405792:	f104 0108 	add.w	r1, r4, #8
  405796:	4628      	mov	r0, r5
  405798:	9300      	str	r3, [sp, #0]
  40579a:	f7ff fa59 	bl	404c50 <_free_r>
  40579e:	9b00      	ldr	r3, [sp, #0]
  4057a0:	6819      	ldr	r1, [r3, #0]
  4057a2:	e6df      	b.n	405564 <_malloc_r+0x2d8>
  4057a4:	2001      	movs	r0, #1
  4057a6:	f04f 0900 	mov.w	r9, #0
  4057aa:	e6bc      	b.n	405526 <_malloc_r+0x29a>
  4057ac:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4057b0:	d805      	bhi.n	4057be <_malloc_r+0x532>
  4057b2:	0bda      	lsrs	r2, r3, #15
  4057b4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4057b8:	00c9      	lsls	r1, r1, #3
  4057ba:	3277      	adds	r2, #119	; 0x77
  4057bc:	e720      	b.n	405600 <_malloc_r+0x374>
  4057be:	f240 5154 	movw	r1, #1364	; 0x554
  4057c2:	428a      	cmp	r2, r1
  4057c4:	d805      	bhi.n	4057d2 <_malloc_r+0x546>
  4057c6:	0c9a      	lsrs	r2, r3, #18
  4057c8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4057cc:	00c9      	lsls	r1, r1, #3
  4057ce:	327c      	adds	r2, #124	; 0x7c
  4057d0:	e716      	b.n	405600 <_malloc_r+0x374>
  4057d2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4057d6:	227e      	movs	r2, #126	; 0x7e
  4057d8:	e712      	b.n	405600 <_malloc_r+0x374>
  4057da:	687b      	ldr	r3, [r7, #4]
  4057dc:	e780      	b.n	4056e0 <_malloc_r+0x454>
  4057de:	08f0      	lsrs	r0, r6, #3
  4057e0:	f106 0308 	add.w	r3, r6, #8
  4057e4:	e600      	b.n	4053e8 <_malloc_r+0x15c>
  4057e6:	bf00      	nop
  4057e8:	20400a50 	.word	0x20400a50
  4057ec:	00000000 	.word	0x00000000

004057f0 <memchr>:
  4057f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4057f4:	2a10      	cmp	r2, #16
  4057f6:	db2b      	blt.n	405850 <memchr+0x60>
  4057f8:	f010 0f07 	tst.w	r0, #7
  4057fc:	d008      	beq.n	405810 <memchr+0x20>
  4057fe:	f810 3b01 	ldrb.w	r3, [r0], #1
  405802:	3a01      	subs	r2, #1
  405804:	428b      	cmp	r3, r1
  405806:	d02d      	beq.n	405864 <memchr+0x74>
  405808:	f010 0f07 	tst.w	r0, #7
  40580c:	b342      	cbz	r2, 405860 <memchr+0x70>
  40580e:	d1f6      	bne.n	4057fe <memchr+0xe>
  405810:	b4f0      	push	{r4, r5, r6, r7}
  405812:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405816:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40581a:	f022 0407 	bic.w	r4, r2, #7
  40581e:	f07f 0700 	mvns.w	r7, #0
  405822:	2300      	movs	r3, #0
  405824:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405828:	3c08      	subs	r4, #8
  40582a:	ea85 0501 	eor.w	r5, r5, r1
  40582e:	ea86 0601 	eor.w	r6, r6, r1
  405832:	fa85 f547 	uadd8	r5, r5, r7
  405836:	faa3 f587 	sel	r5, r3, r7
  40583a:	fa86 f647 	uadd8	r6, r6, r7
  40583e:	faa5 f687 	sel	r6, r5, r7
  405842:	b98e      	cbnz	r6, 405868 <memchr+0x78>
  405844:	d1ee      	bne.n	405824 <memchr+0x34>
  405846:	bcf0      	pop	{r4, r5, r6, r7}
  405848:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40584c:	f002 0207 	and.w	r2, r2, #7
  405850:	b132      	cbz	r2, 405860 <memchr+0x70>
  405852:	f810 3b01 	ldrb.w	r3, [r0], #1
  405856:	3a01      	subs	r2, #1
  405858:	ea83 0301 	eor.w	r3, r3, r1
  40585c:	b113      	cbz	r3, 405864 <memchr+0x74>
  40585e:	d1f8      	bne.n	405852 <memchr+0x62>
  405860:	2000      	movs	r0, #0
  405862:	4770      	bx	lr
  405864:	3801      	subs	r0, #1
  405866:	4770      	bx	lr
  405868:	2d00      	cmp	r5, #0
  40586a:	bf06      	itte	eq
  40586c:	4635      	moveq	r5, r6
  40586e:	3803      	subeq	r0, #3
  405870:	3807      	subne	r0, #7
  405872:	f015 0f01 	tst.w	r5, #1
  405876:	d107      	bne.n	405888 <memchr+0x98>
  405878:	3001      	adds	r0, #1
  40587a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40587e:	bf02      	ittt	eq
  405880:	3001      	addeq	r0, #1
  405882:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405886:	3001      	addeq	r0, #1
  405888:	bcf0      	pop	{r4, r5, r6, r7}
  40588a:	3801      	subs	r0, #1
  40588c:	4770      	bx	lr
  40588e:	bf00      	nop

00405890 <memcpy>:
  405890:	4684      	mov	ip, r0
  405892:	ea41 0300 	orr.w	r3, r1, r0
  405896:	f013 0303 	ands.w	r3, r3, #3
  40589a:	d16d      	bne.n	405978 <memcpy+0xe8>
  40589c:	3a40      	subs	r2, #64	; 0x40
  40589e:	d341      	bcc.n	405924 <memcpy+0x94>
  4058a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058a4:	f840 3b04 	str.w	r3, [r0], #4
  4058a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058ac:	f840 3b04 	str.w	r3, [r0], #4
  4058b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058b4:	f840 3b04 	str.w	r3, [r0], #4
  4058b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058bc:	f840 3b04 	str.w	r3, [r0], #4
  4058c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058c4:	f840 3b04 	str.w	r3, [r0], #4
  4058c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058cc:	f840 3b04 	str.w	r3, [r0], #4
  4058d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058d4:	f840 3b04 	str.w	r3, [r0], #4
  4058d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058dc:	f840 3b04 	str.w	r3, [r0], #4
  4058e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058e4:	f840 3b04 	str.w	r3, [r0], #4
  4058e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058ec:	f840 3b04 	str.w	r3, [r0], #4
  4058f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058f4:	f840 3b04 	str.w	r3, [r0], #4
  4058f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4058fc:	f840 3b04 	str.w	r3, [r0], #4
  405900:	f851 3b04 	ldr.w	r3, [r1], #4
  405904:	f840 3b04 	str.w	r3, [r0], #4
  405908:	f851 3b04 	ldr.w	r3, [r1], #4
  40590c:	f840 3b04 	str.w	r3, [r0], #4
  405910:	f851 3b04 	ldr.w	r3, [r1], #4
  405914:	f840 3b04 	str.w	r3, [r0], #4
  405918:	f851 3b04 	ldr.w	r3, [r1], #4
  40591c:	f840 3b04 	str.w	r3, [r0], #4
  405920:	3a40      	subs	r2, #64	; 0x40
  405922:	d2bd      	bcs.n	4058a0 <memcpy+0x10>
  405924:	3230      	adds	r2, #48	; 0x30
  405926:	d311      	bcc.n	40594c <memcpy+0xbc>
  405928:	f851 3b04 	ldr.w	r3, [r1], #4
  40592c:	f840 3b04 	str.w	r3, [r0], #4
  405930:	f851 3b04 	ldr.w	r3, [r1], #4
  405934:	f840 3b04 	str.w	r3, [r0], #4
  405938:	f851 3b04 	ldr.w	r3, [r1], #4
  40593c:	f840 3b04 	str.w	r3, [r0], #4
  405940:	f851 3b04 	ldr.w	r3, [r1], #4
  405944:	f840 3b04 	str.w	r3, [r0], #4
  405948:	3a10      	subs	r2, #16
  40594a:	d2ed      	bcs.n	405928 <memcpy+0x98>
  40594c:	320c      	adds	r2, #12
  40594e:	d305      	bcc.n	40595c <memcpy+0xcc>
  405950:	f851 3b04 	ldr.w	r3, [r1], #4
  405954:	f840 3b04 	str.w	r3, [r0], #4
  405958:	3a04      	subs	r2, #4
  40595a:	d2f9      	bcs.n	405950 <memcpy+0xc0>
  40595c:	3204      	adds	r2, #4
  40595e:	d008      	beq.n	405972 <memcpy+0xe2>
  405960:	07d2      	lsls	r2, r2, #31
  405962:	bf1c      	itt	ne
  405964:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405968:	f800 3b01 	strbne.w	r3, [r0], #1
  40596c:	d301      	bcc.n	405972 <memcpy+0xe2>
  40596e:	880b      	ldrh	r3, [r1, #0]
  405970:	8003      	strh	r3, [r0, #0]
  405972:	4660      	mov	r0, ip
  405974:	4770      	bx	lr
  405976:	bf00      	nop
  405978:	2a08      	cmp	r2, #8
  40597a:	d313      	bcc.n	4059a4 <memcpy+0x114>
  40597c:	078b      	lsls	r3, r1, #30
  40597e:	d08d      	beq.n	40589c <memcpy+0xc>
  405980:	f010 0303 	ands.w	r3, r0, #3
  405984:	d08a      	beq.n	40589c <memcpy+0xc>
  405986:	f1c3 0304 	rsb	r3, r3, #4
  40598a:	1ad2      	subs	r2, r2, r3
  40598c:	07db      	lsls	r3, r3, #31
  40598e:	bf1c      	itt	ne
  405990:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405994:	f800 3b01 	strbne.w	r3, [r0], #1
  405998:	d380      	bcc.n	40589c <memcpy+0xc>
  40599a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40599e:	f820 3b02 	strh.w	r3, [r0], #2
  4059a2:	e77b      	b.n	40589c <memcpy+0xc>
  4059a4:	3a04      	subs	r2, #4
  4059a6:	d3d9      	bcc.n	40595c <memcpy+0xcc>
  4059a8:	3a01      	subs	r2, #1
  4059aa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4059ae:	f800 3b01 	strb.w	r3, [r0], #1
  4059b2:	d2f9      	bcs.n	4059a8 <memcpy+0x118>
  4059b4:	780b      	ldrb	r3, [r1, #0]
  4059b6:	7003      	strb	r3, [r0, #0]
  4059b8:	784b      	ldrb	r3, [r1, #1]
  4059ba:	7043      	strb	r3, [r0, #1]
  4059bc:	788b      	ldrb	r3, [r1, #2]
  4059be:	7083      	strb	r3, [r0, #2]
  4059c0:	4660      	mov	r0, ip
  4059c2:	4770      	bx	lr

004059c4 <memmove>:
  4059c4:	4288      	cmp	r0, r1
  4059c6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4059c8:	d90d      	bls.n	4059e6 <memmove+0x22>
  4059ca:	188b      	adds	r3, r1, r2
  4059cc:	4298      	cmp	r0, r3
  4059ce:	d20a      	bcs.n	4059e6 <memmove+0x22>
  4059d0:	1884      	adds	r4, r0, r2
  4059d2:	2a00      	cmp	r2, #0
  4059d4:	d051      	beq.n	405a7a <memmove+0xb6>
  4059d6:	4622      	mov	r2, r4
  4059d8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4059dc:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4059e0:	4299      	cmp	r1, r3
  4059e2:	d1f9      	bne.n	4059d8 <memmove+0x14>
  4059e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4059e6:	2a0f      	cmp	r2, #15
  4059e8:	d948      	bls.n	405a7c <memmove+0xb8>
  4059ea:	ea41 0300 	orr.w	r3, r1, r0
  4059ee:	079b      	lsls	r3, r3, #30
  4059f0:	d146      	bne.n	405a80 <memmove+0xbc>
  4059f2:	f100 0410 	add.w	r4, r0, #16
  4059f6:	f101 0310 	add.w	r3, r1, #16
  4059fa:	4615      	mov	r5, r2
  4059fc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405a00:	f844 6c10 	str.w	r6, [r4, #-16]
  405a04:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405a08:	f844 6c0c 	str.w	r6, [r4, #-12]
  405a0c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405a10:	f844 6c08 	str.w	r6, [r4, #-8]
  405a14:	3d10      	subs	r5, #16
  405a16:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405a1a:	f844 6c04 	str.w	r6, [r4, #-4]
  405a1e:	2d0f      	cmp	r5, #15
  405a20:	f103 0310 	add.w	r3, r3, #16
  405a24:	f104 0410 	add.w	r4, r4, #16
  405a28:	d8e8      	bhi.n	4059fc <memmove+0x38>
  405a2a:	f1a2 0310 	sub.w	r3, r2, #16
  405a2e:	f023 030f 	bic.w	r3, r3, #15
  405a32:	f002 0e0f 	and.w	lr, r2, #15
  405a36:	3310      	adds	r3, #16
  405a38:	f1be 0f03 	cmp.w	lr, #3
  405a3c:	4419      	add	r1, r3
  405a3e:	4403      	add	r3, r0
  405a40:	d921      	bls.n	405a86 <memmove+0xc2>
  405a42:	1f1e      	subs	r6, r3, #4
  405a44:	460d      	mov	r5, r1
  405a46:	4674      	mov	r4, lr
  405a48:	3c04      	subs	r4, #4
  405a4a:	f855 7b04 	ldr.w	r7, [r5], #4
  405a4e:	f846 7f04 	str.w	r7, [r6, #4]!
  405a52:	2c03      	cmp	r4, #3
  405a54:	d8f8      	bhi.n	405a48 <memmove+0x84>
  405a56:	f1ae 0404 	sub.w	r4, lr, #4
  405a5a:	f024 0403 	bic.w	r4, r4, #3
  405a5e:	3404      	adds	r4, #4
  405a60:	4421      	add	r1, r4
  405a62:	4423      	add	r3, r4
  405a64:	f002 0203 	and.w	r2, r2, #3
  405a68:	b162      	cbz	r2, 405a84 <memmove+0xc0>
  405a6a:	3b01      	subs	r3, #1
  405a6c:	440a      	add	r2, r1
  405a6e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405a72:	f803 4f01 	strb.w	r4, [r3, #1]!
  405a76:	428a      	cmp	r2, r1
  405a78:	d1f9      	bne.n	405a6e <memmove+0xaa>
  405a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405a7c:	4603      	mov	r3, r0
  405a7e:	e7f3      	b.n	405a68 <memmove+0xa4>
  405a80:	4603      	mov	r3, r0
  405a82:	e7f2      	b.n	405a6a <memmove+0xa6>
  405a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405a86:	4672      	mov	r2, lr
  405a88:	e7ee      	b.n	405a68 <memmove+0xa4>
  405a8a:	bf00      	nop

00405a8c <__malloc_lock>:
  405a8c:	4801      	ldr	r0, [pc, #4]	; (405a94 <__malloc_lock+0x8>)
  405a8e:	f7ff bb79 	b.w	405184 <__retarget_lock_acquire_recursive>
  405a92:	bf00      	nop
  405a94:	20400aa0 	.word	0x20400aa0

00405a98 <__malloc_unlock>:
  405a98:	4801      	ldr	r0, [pc, #4]	; (405aa0 <__malloc_unlock+0x8>)
  405a9a:	f7ff bb75 	b.w	405188 <__retarget_lock_release_recursive>
  405a9e:	bf00      	nop
  405aa0:	20400aa0 	.word	0x20400aa0

00405aa4 <_Balloc>:
  405aa4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405aa6:	b570      	push	{r4, r5, r6, lr}
  405aa8:	4605      	mov	r5, r0
  405aaa:	460c      	mov	r4, r1
  405aac:	b14b      	cbz	r3, 405ac2 <_Balloc+0x1e>
  405aae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  405ab2:	b180      	cbz	r0, 405ad6 <_Balloc+0x32>
  405ab4:	6802      	ldr	r2, [r0, #0]
  405ab6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405aba:	2300      	movs	r3, #0
  405abc:	6103      	str	r3, [r0, #16]
  405abe:	60c3      	str	r3, [r0, #12]
  405ac0:	bd70      	pop	{r4, r5, r6, pc}
  405ac2:	2221      	movs	r2, #33	; 0x21
  405ac4:	2104      	movs	r1, #4
  405ac6:	f000 fe35 	bl	406734 <_calloc_r>
  405aca:	64e8      	str	r0, [r5, #76]	; 0x4c
  405acc:	4603      	mov	r3, r0
  405ace:	2800      	cmp	r0, #0
  405ad0:	d1ed      	bne.n	405aae <_Balloc+0xa>
  405ad2:	2000      	movs	r0, #0
  405ad4:	bd70      	pop	{r4, r5, r6, pc}
  405ad6:	2101      	movs	r1, #1
  405ad8:	fa01 f604 	lsl.w	r6, r1, r4
  405adc:	1d72      	adds	r2, r6, #5
  405ade:	4628      	mov	r0, r5
  405ae0:	0092      	lsls	r2, r2, #2
  405ae2:	f000 fe27 	bl	406734 <_calloc_r>
  405ae6:	2800      	cmp	r0, #0
  405ae8:	d0f3      	beq.n	405ad2 <_Balloc+0x2e>
  405aea:	6044      	str	r4, [r0, #4]
  405aec:	6086      	str	r6, [r0, #8]
  405aee:	e7e4      	b.n	405aba <_Balloc+0x16>

00405af0 <_Bfree>:
  405af0:	b131      	cbz	r1, 405b00 <_Bfree+0x10>
  405af2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405af4:	684a      	ldr	r2, [r1, #4]
  405af6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405afa:	6008      	str	r0, [r1, #0]
  405afc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405b00:	4770      	bx	lr
  405b02:	bf00      	nop

00405b04 <__multadd>:
  405b04:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b06:	690c      	ldr	r4, [r1, #16]
  405b08:	b083      	sub	sp, #12
  405b0a:	460d      	mov	r5, r1
  405b0c:	4606      	mov	r6, r0
  405b0e:	f101 0e14 	add.w	lr, r1, #20
  405b12:	2700      	movs	r7, #0
  405b14:	f8de 0000 	ldr.w	r0, [lr]
  405b18:	b281      	uxth	r1, r0
  405b1a:	fb02 3301 	mla	r3, r2, r1, r3
  405b1e:	0c01      	lsrs	r1, r0, #16
  405b20:	0c18      	lsrs	r0, r3, #16
  405b22:	fb02 0101 	mla	r1, r2, r1, r0
  405b26:	b29b      	uxth	r3, r3
  405b28:	3701      	adds	r7, #1
  405b2a:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405b2e:	42bc      	cmp	r4, r7
  405b30:	f84e 3b04 	str.w	r3, [lr], #4
  405b34:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405b38:	dcec      	bgt.n	405b14 <__multadd+0x10>
  405b3a:	b13b      	cbz	r3, 405b4c <__multadd+0x48>
  405b3c:	68aa      	ldr	r2, [r5, #8]
  405b3e:	4294      	cmp	r4, r2
  405b40:	da07      	bge.n	405b52 <__multadd+0x4e>
  405b42:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  405b46:	3401      	adds	r4, #1
  405b48:	6153      	str	r3, [r2, #20]
  405b4a:	612c      	str	r4, [r5, #16]
  405b4c:	4628      	mov	r0, r5
  405b4e:	b003      	add	sp, #12
  405b50:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b52:	6869      	ldr	r1, [r5, #4]
  405b54:	9301      	str	r3, [sp, #4]
  405b56:	3101      	adds	r1, #1
  405b58:	4630      	mov	r0, r6
  405b5a:	f7ff ffa3 	bl	405aa4 <_Balloc>
  405b5e:	692a      	ldr	r2, [r5, #16]
  405b60:	3202      	adds	r2, #2
  405b62:	f105 010c 	add.w	r1, r5, #12
  405b66:	4607      	mov	r7, r0
  405b68:	0092      	lsls	r2, r2, #2
  405b6a:	300c      	adds	r0, #12
  405b6c:	f7ff fe90 	bl	405890 <memcpy>
  405b70:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  405b72:	6869      	ldr	r1, [r5, #4]
  405b74:	9b01      	ldr	r3, [sp, #4]
  405b76:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405b7a:	6028      	str	r0, [r5, #0]
  405b7c:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405b80:	463d      	mov	r5, r7
  405b82:	e7de      	b.n	405b42 <__multadd+0x3e>

00405b84 <__hi0bits>:
  405b84:	0c02      	lsrs	r2, r0, #16
  405b86:	0412      	lsls	r2, r2, #16
  405b88:	4603      	mov	r3, r0
  405b8a:	b9b2      	cbnz	r2, 405bba <__hi0bits+0x36>
  405b8c:	0403      	lsls	r3, r0, #16
  405b8e:	2010      	movs	r0, #16
  405b90:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  405b94:	bf04      	itt	eq
  405b96:	021b      	lsleq	r3, r3, #8
  405b98:	3008      	addeq	r0, #8
  405b9a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405b9e:	bf04      	itt	eq
  405ba0:	011b      	lsleq	r3, r3, #4
  405ba2:	3004      	addeq	r0, #4
  405ba4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405ba8:	bf04      	itt	eq
  405baa:	009b      	lsleq	r3, r3, #2
  405bac:	3002      	addeq	r0, #2
  405bae:	2b00      	cmp	r3, #0
  405bb0:	db02      	blt.n	405bb8 <__hi0bits+0x34>
  405bb2:	005b      	lsls	r3, r3, #1
  405bb4:	d403      	bmi.n	405bbe <__hi0bits+0x3a>
  405bb6:	2020      	movs	r0, #32
  405bb8:	4770      	bx	lr
  405bba:	2000      	movs	r0, #0
  405bbc:	e7e8      	b.n	405b90 <__hi0bits+0xc>
  405bbe:	3001      	adds	r0, #1
  405bc0:	4770      	bx	lr
  405bc2:	bf00      	nop

00405bc4 <__lo0bits>:
  405bc4:	6803      	ldr	r3, [r0, #0]
  405bc6:	f013 0207 	ands.w	r2, r3, #7
  405bca:	4601      	mov	r1, r0
  405bcc:	d007      	beq.n	405bde <__lo0bits+0x1a>
  405bce:	07da      	lsls	r2, r3, #31
  405bd0:	d421      	bmi.n	405c16 <__lo0bits+0x52>
  405bd2:	0798      	lsls	r0, r3, #30
  405bd4:	d421      	bmi.n	405c1a <__lo0bits+0x56>
  405bd6:	089b      	lsrs	r3, r3, #2
  405bd8:	600b      	str	r3, [r1, #0]
  405bda:	2002      	movs	r0, #2
  405bdc:	4770      	bx	lr
  405bde:	b298      	uxth	r0, r3
  405be0:	b198      	cbz	r0, 405c0a <__lo0bits+0x46>
  405be2:	4610      	mov	r0, r2
  405be4:	f013 0fff 	tst.w	r3, #255	; 0xff
  405be8:	bf04      	itt	eq
  405bea:	0a1b      	lsreq	r3, r3, #8
  405bec:	3008      	addeq	r0, #8
  405bee:	071a      	lsls	r2, r3, #28
  405bf0:	bf04      	itt	eq
  405bf2:	091b      	lsreq	r3, r3, #4
  405bf4:	3004      	addeq	r0, #4
  405bf6:	079a      	lsls	r2, r3, #30
  405bf8:	bf04      	itt	eq
  405bfa:	089b      	lsreq	r3, r3, #2
  405bfc:	3002      	addeq	r0, #2
  405bfe:	07da      	lsls	r2, r3, #31
  405c00:	d407      	bmi.n	405c12 <__lo0bits+0x4e>
  405c02:	085b      	lsrs	r3, r3, #1
  405c04:	d104      	bne.n	405c10 <__lo0bits+0x4c>
  405c06:	2020      	movs	r0, #32
  405c08:	4770      	bx	lr
  405c0a:	0c1b      	lsrs	r3, r3, #16
  405c0c:	2010      	movs	r0, #16
  405c0e:	e7e9      	b.n	405be4 <__lo0bits+0x20>
  405c10:	3001      	adds	r0, #1
  405c12:	600b      	str	r3, [r1, #0]
  405c14:	4770      	bx	lr
  405c16:	2000      	movs	r0, #0
  405c18:	4770      	bx	lr
  405c1a:	085b      	lsrs	r3, r3, #1
  405c1c:	600b      	str	r3, [r1, #0]
  405c1e:	2001      	movs	r0, #1
  405c20:	4770      	bx	lr
  405c22:	bf00      	nop

00405c24 <__i2b>:
  405c24:	b510      	push	{r4, lr}
  405c26:	460c      	mov	r4, r1
  405c28:	2101      	movs	r1, #1
  405c2a:	f7ff ff3b 	bl	405aa4 <_Balloc>
  405c2e:	2201      	movs	r2, #1
  405c30:	6144      	str	r4, [r0, #20]
  405c32:	6102      	str	r2, [r0, #16]
  405c34:	bd10      	pop	{r4, pc}
  405c36:	bf00      	nop

00405c38 <__multiply>:
  405c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405c3c:	690c      	ldr	r4, [r1, #16]
  405c3e:	6915      	ldr	r5, [r2, #16]
  405c40:	42ac      	cmp	r4, r5
  405c42:	b083      	sub	sp, #12
  405c44:	468b      	mov	fp, r1
  405c46:	4616      	mov	r6, r2
  405c48:	da04      	bge.n	405c54 <__multiply+0x1c>
  405c4a:	4622      	mov	r2, r4
  405c4c:	46b3      	mov	fp, r6
  405c4e:	462c      	mov	r4, r5
  405c50:	460e      	mov	r6, r1
  405c52:	4615      	mov	r5, r2
  405c54:	f8db 3008 	ldr.w	r3, [fp, #8]
  405c58:	f8db 1004 	ldr.w	r1, [fp, #4]
  405c5c:	eb04 0805 	add.w	r8, r4, r5
  405c60:	4598      	cmp	r8, r3
  405c62:	bfc8      	it	gt
  405c64:	3101      	addgt	r1, #1
  405c66:	f7ff ff1d 	bl	405aa4 <_Balloc>
  405c6a:	f100 0914 	add.w	r9, r0, #20
  405c6e:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  405c72:	45d1      	cmp	r9, sl
  405c74:	9000      	str	r0, [sp, #0]
  405c76:	d205      	bcs.n	405c84 <__multiply+0x4c>
  405c78:	464b      	mov	r3, r9
  405c7a:	2100      	movs	r1, #0
  405c7c:	f843 1b04 	str.w	r1, [r3], #4
  405c80:	459a      	cmp	sl, r3
  405c82:	d8fb      	bhi.n	405c7c <__multiply+0x44>
  405c84:	f106 0c14 	add.w	ip, r6, #20
  405c88:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405c8c:	f10b 0b14 	add.w	fp, fp, #20
  405c90:	459c      	cmp	ip, r3
  405c92:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  405c96:	d24c      	bcs.n	405d32 <__multiply+0xfa>
  405c98:	f8cd a004 	str.w	sl, [sp, #4]
  405c9c:	469a      	mov	sl, r3
  405c9e:	f8dc 5000 	ldr.w	r5, [ip]
  405ca2:	b2af      	uxth	r7, r5
  405ca4:	b1ef      	cbz	r7, 405ce2 <__multiply+0xaa>
  405ca6:	2100      	movs	r1, #0
  405ca8:	464d      	mov	r5, r9
  405caa:	465e      	mov	r6, fp
  405cac:	460c      	mov	r4, r1
  405cae:	f856 2b04 	ldr.w	r2, [r6], #4
  405cb2:	6828      	ldr	r0, [r5, #0]
  405cb4:	b293      	uxth	r3, r2
  405cb6:	b281      	uxth	r1, r0
  405cb8:	fb07 1303 	mla	r3, r7, r3, r1
  405cbc:	0c12      	lsrs	r2, r2, #16
  405cbe:	0c01      	lsrs	r1, r0, #16
  405cc0:	4423      	add	r3, r4
  405cc2:	fb07 1102 	mla	r1, r7, r2, r1
  405cc6:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405cca:	b29b      	uxth	r3, r3
  405ccc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405cd0:	45b6      	cmp	lr, r6
  405cd2:	f845 3b04 	str.w	r3, [r5], #4
  405cd6:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405cda:	d8e8      	bhi.n	405cae <__multiply+0x76>
  405cdc:	602c      	str	r4, [r5, #0]
  405cde:	f8dc 5000 	ldr.w	r5, [ip]
  405ce2:	0c2d      	lsrs	r5, r5, #16
  405ce4:	d01d      	beq.n	405d22 <__multiply+0xea>
  405ce6:	f8d9 3000 	ldr.w	r3, [r9]
  405cea:	4648      	mov	r0, r9
  405cec:	461c      	mov	r4, r3
  405cee:	4659      	mov	r1, fp
  405cf0:	2200      	movs	r2, #0
  405cf2:	880e      	ldrh	r6, [r1, #0]
  405cf4:	0c24      	lsrs	r4, r4, #16
  405cf6:	fb05 4406 	mla	r4, r5, r6, r4
  405cfa:	4422      	add	r2, r4
  405cfc:	b29b      	uxth	r3, r3
  405cfe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405d02:	f840 3b04 	str.w	r3, [r0], #4
  405d06:	f851 3b04 	ldr.w	r3, [r1], #4
  405d0a:	6804      	ldr	r4, [r0, #0]
  405d0c:	0c1b      	lsrs	r3, r3, #16
  405d0e:	b2a6      	uxth	r6, r4
  405d10:	fb05 6303 	mla	r3, r5, r3, r6
  405d14:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405d18:	458e      	cmp	lr, r1
  405d1a:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405d1e:	d8e8      	bhi.n	405cf2 <__multiply+0xba>
  405d20:	6003      	str	r3, [r0, #0]
  405d22:	f10c 0c04 	add.w	ip, ip, #4
  405d26:	45e2      	cmp	sl, ip
  405d28:	f109 0904 	add.w	r9, r9, #4
  405d2c:	d8b7      	bhi.n	405c9e <__multiply+0x66>
  405d2e:	f8dd a004 	ldr.w	sl, [sp, #4]
  405d32:	f1b8 0f00 	cmp.w	r8, #0
  405d36:	dd0b      	ble.n	405d50 <__multiply+0x118>
  405d38:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405d3c:	f1aa 0a04 	sub.w	sl, sl, #4
  405d40:	b11b      	cbz	r3, 405d4a <__multiply+0x112>
  405d42:	e005      	b.n	405d50 <__multiply+0x118>
  405d44:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405d48:	b913      	cbnz	r3, 405d50 <__multiply+0x118>
  405d4a:	f1b8 0801 	subs.w	r8, r8, #1
  405d4e:	d1f9      	bne.n	405d44 <__multiply+0x10c>
  405d50:	9800      	ldr	r0, [sp, #0]
  405d52:	f8c0 8010 	str.w	r8, [r0, #16]
  405d56:	b003      	add	sp, #12
  405d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405d5c <__pow5mult>:
  405d5c:	f012 0303 	ands.w	r3, r2, #3
  405d60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405d64:	4614      	mov	r4, r2
  405d66:	4607      	mov	r7, r0
  405d68:	d12e      	bne.n	405dc8 <__pow5mult+0x6c>
  405d6a:	460d      	mov	r5, r1
  405d6c:	10a4      	asrs	r4, r4, #2
  405d6e:	d01c      	beq.n	405daa <__pow5mult+0x4e>
  405d70:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  405d72:	b396      	cbz	r6, 405dda <__pow5mult+0x7e>
  405d74:	07e3      	lsls	r3, r4, #31
  405d76:	f04f 0800 	mov.w	r8, #0
  405d7a:	d406      	bmi.n	405d8a <__pow5mult+0x2e>
  405d7c:	1064      	asrs	r4, r4, #1
  405d7e:	d014      	beq.n	405daa <__pow5mult+0x4e>
  405d80:	6830      	ldr	r0, [r6, #0]
  405d82:	b1a8      	cbz	r0, 405db0 <__pow5mult+0x54>
  405d84:	4606      	mov	r6, r0
  405d86:	07e3      	lsls	r3, r4, #31
  405d88:	d5f8      	bpl.n	405d7c <__pow5mult+0x20>
  405d8a:	4632      	mov	r2, r6
  405d8c:	4629      	mov	r1, r5
  405d8e:	4638      	mov	r0, r7
  405d90:	f7ff ff52 	bl	405c38 <__multiply>
  405d94:	b1b5      	cbz	r5, 405dc4 <__pow5mult+0x68>
  405d96:	686a      	ldr	r2, [r5, #4]
  405d98:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405d9a:	1064      	asrs	r4, r4, #1
  405d9c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405da0:	6029      	str	r1, [r5, #0]
  405da2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405da6:	4605      	mov	r5, r0
  405da8:	d1ea      	bne.n	405d80 <__pow5mult+0x24>
  405daa:	4628      	mov	r0, r5
  405dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405db0:	4632      	mov	r2, r6
  405db2:	4631      	mov	r1, r6
  405db4:	4638      	mov	r0, r7
  405db6:	f7ff ff3f 	bl	405c38 <__multiply>
  405dba:	6030      	str	r0, [r6, #0]
  405dbc:	f8c0 8000 	str.w	r8, [r0]
  405dc0:	4606      	mov	r6, r0
  405dc2:	e7e0      	b.n	405d86 <__pow5mult+0x2a>
  405dc4:	4605      	mov	r5, r0
  405dc6:	e7d9      	b.n	405d7c <__pow5mult+0x20>
  405dc8:	1e5a      	subs	r2, r3, #1
  405dca:	4d0b      	ldr	r5, [pc, #44]	; (405df8 <__pow5mult+0x9c>)
  405dcc:	2300      	movs	r3, #0
  405dce:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  405dd2:	f7ff fe97 	bl	405b04 <__multadd>
  405dd6:	4605      	mov	r5, r0
  405dd8:	e7c8      	b.n	405d6c <__pow5mult+0x10>
  405dda:	2101      	movs	r1, #1
  405ddc:	4638      	mov	r0, r7
  405dde:	f7ff fe61 	bl	405aa4 <_Balloc>
  405de2:	f240 2171 	movw	r1, #625	; 0x271
  405de6:	2201      	movs	r2, #1
  405de8:	2300      	movs	r3, #0
  405dea:	6141      	str	r1, [r0, #20]
  405dec:	6102      	str	r2, [r0, #16]
  405dee:	4606      	mov	r6, r0
  405df0:	64b8      	str	r0, [r7, #72]	; 0x48
  405df2:	6003      	str	r3, [r0, #0]
  405df4:	e7be      	b.n	405d74 <__pow5mult+0x18>
  405df6:	bf00      	nop
  405df8:	00407270 	.word	0x00407270

00405dfc <__lshift>:
  405dfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405e00:	4691      	mov	r9, r2
  405e02:	690a      	ldr	r2, [r1, #16]
  405e04:	688b      	ldr	r3, [r1, #8]
  405e06:	ea4f 1469 	mov.w	r4, r9, asr #5
  405e0a:	eb04 0802 	add.w	r8, r4, r2
  405e0e:	f108 0501 	add.w	r5, r8, #1
  405e12:	429d      	cmp	r5, r3
  405e14:	460e      	mov	r6, r1
  405e16:	4607      	mov	r7, r0
  405e18:	6849      	ldr	r1, [r1, #4]
  405e1a:	dd04      	ble.n	405e26 <__lshift+0x2a>
  405e1c:	005b      	lsls	r3, r3, #1
  405e1e:	429d      	cmp	r5, r3
  405e20:	f101 0101 	add.w	r1, r1, #1
  405e24:	dcfa      	bgt.n	405e1c <__lshift+0x20>
  405e26:	4638      	mov	r0, r7
  405e28:	f7ff fe3c 	bl	405aa4 <_Balloc>
  405e2c:	2c00      	cmp	r4, #0
  405e2e:	f100 0314 	add.w	r3, r0, #20
  405e32:	dd06      	ble.n	405e42 <__lshift+0x46>
  405e34:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405e38:	2100      	movs	r1, #0
  405e3a:	f843 1b04 	str.w	r1, [r3], #4
  405e3e:	429a      	cmp	r2, r3
  405e40:	d1fb      	bne.n	405e3a <__lshift+0x3e>
  405e42:	6934      	ldr	r4, [r6, #16]
  405e44:	f106 0114 	add.w	r1, r6, #20
  405e48:	f019 091f 	ands.w	r9, r9, #31
  405e4c:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405e50:	d01d      	beq.n	405e8e <__lshift+0x92>
  405e52:	f1c9 0c20 	rsb	ip, r9, #32
  405e56:	2200      	movs	r2, #0
  405e58:	680c      	ldr	r4, [r1, #0]
  405e5a:	fa04 f409 	lsl.w	r4, r4, r9
  405e5e:	4314      	orrs	r4, r2
  405e60:	f843 4b04 	str.w	r4, [r3], #4
  405e64:	f851 2b04 	ldr.w	r2, [r1], #4
  405e68:	458e      	cmp	lr, r1
  405e6a:	fa22 f20c 	lsr.w	r2, r2, ip
  405e6e:	d8f3      	bhi.n	405e58 <__lshift+0x5c>
  405e70:	601a      	str	r2, [r3, #0]
  405e72:	b10a      	cbz	r2, 405e78 <__lshift+0x7c>
  405e74:	f108 0502 	add.w	r5, r8, #2
  405e78:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405e7a:	6872      	ldr	r2, [r6, #4]
  405e7c:	3d01      	subs	r5, #1
  405e7e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405e82:	6105      	str	r5, [r0, #16]
  405e84:	6031      	str	r1, [r6, #0]
  405e86:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405e8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405e8e:	3b04      	subs	r3, #4
  405e90:	f851 2b04 	ldr.w	r2, [r1], #4
  405e94:	f843 2f04 	str.w	r2, [r3, #4]!
  405e98:	458e      	cmp	lr, r1
  405e9a:	d8f9      	bhi.n	405e90 <__lshift+0x94>
  405e9c:	e7ec      	b.n	405e78 <__lshift+0x7c>
  405e9e:	bf00      	nop

00405ea0 <__mcmp>:
  405ea0:	b430      	push	{r4, r5}
  405ea2:	690b      	ldr	r3, [r1, #16]
  405ea4:	4605      	mov	r5, r0
  405ea6:	6900      	ldr	r0, [r0, #16]
  405ea8:	1ac0      	subs	r0, r0, r3
  405eaa:	d10f      	bne.n	405ecc <__mcmp+0x2c>
  405eac:	009b      	lsls	r3, r3, #2
  405eae:	3514      	adds	r5, #20
  405eb0:	3114      	adds	r1, #20
  405eb2:	4419      	add	r1, r3
  405eb4:	442b      	add	r3, r5
  405eb6:	e001      	b.n	405ebc <__mcmp+0x1c>
  405eb8:	429d      	cmp	r5, r3
  405eba:	d207      	bcs.n	405ecc <__mcmp+0x2c>
  405ebc:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405ec0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405ec4:	4294      	cmp	r4, r2
  405ec6:	d0f7      	beq.n	405eb8 <__mcmp+0x18>
  405ec8:	d302      	bcc.n	405ed0 <__mcmp+0x30>
  405eca:	2001      	movs	r0, #1
  405ecc:	bc30      	pop	{r4, r5}
  405ece:	4770      	bx	lr
  405ed0:	f04f 30ff 	mov.w	r0, #4294967295
  405ed4:	e7fa      	b.n	405ecc <__mcmp+0x2c>
  405ed6:	bf00      	nop

00405ed8 <__mdiff>:
  405ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405edc:	690f      	ldr	r7, [r1, #16]
  405ede:	460e      	mov	r6, r1
  405ee0:	6911      	ldr	r1, [r2, #16]
  405ee2:	1a7f      	subs	r7, r7, r1
  405ee4:	2f00      	cmp	r7, #0
  405ee6:	4690      	mov	r8, r2
  405ee8:	d117      	bne.n	405f1a <__mdiff+0x42>
  405eea:	0089      	lsls	r1, r1, #2
  405eec:	f106 0514 	add.w	r5, r6, #20
  405ef0:	f102 0e14 	add.w	lr, r2, #20
  405ef4:	186b      	adds	r3, r5, r1
  405ef6:	4471      	add	r1, lr
  405ef8:	e001      	b.n	405efe <__mdiff+0x26>
  405efa:	429d      	cmp	r5, r3
  405efc:	d25c      	bcs.n	405fb8 <__mdiff+0xe0>
  405efe:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405f02:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405f06:	42a2      	cmp	r2, r4
  405f08:	d0f7      	beq.n	405efa <__mdiff+0x22>
  405f0a:	d25e      	bcs.n	405fca <__mdiff+0xf2>
  405f0c:	4633      	mov	r3, r6
  405f0e:	462c      	mov	r4, r5
  405f10:	4646      	mov	r6, r8
  405f12:	4675      	mov	r5, lr
  405f14:	4698      	mov	r8, r3
  405f16:	2701      	movs	r7, #1
  405f18:	e005      	b.n	405f26 <__mdiff+0x4e>
  405f1a:	db58      	blt.n	405fce <__mdiff+0xf6>
  405f1c:	f106 0514 	add.w	r5, r6, #20
  405f20:	f108 0414 	add.w	r4, r8, #20
  405f24:	2700      	movs	r7, #0
  405f26:	6871      	ldr	r1, [r6, #4]
  405f28:	f7ff fdbc 	bl	405aa4 <_Balloc>
  405f2c:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405f30:	6936      	ldr	r6, [r6, #16]
  405f32:	60c7      	str	r7, [r0, #12]
  405f34:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405f38:	46a6      	mov	lr, r4
  405f3a:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405f3e:	f100 0414 	add.w	r4, r0, #20
  405f42:	2300      	movs	r3, #0
  405f44:	f85e 1b04 	ldr.w	r1, [lr], #4
  405f48:	f855 8b04 	ldr.w	r8, [r5], #4
  405f4c:	b28a      	uxth	r2, r1
  405f4e:	fa13 f388 	uxtah	r3, r3, r8
  405f52:	0c09      	lsrs	r1, r1, #16
  405f54:	1a9a      	subs	r2, r3, r2
  405f56:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405f5a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405f5e:	b292      	uxth	r2, r2
  405f60:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405f64:	45f4      	cmp	ip, lr
  405f66:	f844 2b04 	str.w	r2, [r4], #4
  405f6a:	ea4f 4323 	mov.w	r3, r3, asr #16
  405f6e:	d8e9      	bhi.n	405f44 <__mdiff+0x6c>
  405f70:	42af      	cmp	r7, r5
  405f72:	d917      	bls.n	405fa4 <__mdiff+0xcc>
  405f74:	46a4      	mov	ip, r4
  405f76:	46ae      	mov	lr, r5
  405f78:	f85e 2b04 	ldr.w	r2, [lr], #4
  405f7c:	fa13 f382 	uxtah	r3, r3, r2
  405f80:	1419      	asrs	r1, r3, #16
  405f82:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  405f86:	b29b      	uxth	r3, r3
  405f88:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405f8c:	4577      	cmp	r7, lr
  405f8e:	f84c 2b04 	str.w	r2, [ip], #4
  405f92:	ea4f 4321 	mov.w	r3, r1, asr #16
  405f96:	d8ef      	bhi.n	405f78 <__mdiff+0xa0>
  405f98:	43ed      	mvns	r5, r5
  405f9a:	442f      	add	r7, r5
  405f9c:	f027 0703 	bic.w	r7, r7, #3
  405fa0:	3704      	adds	r7, #4
  405fa2:	443c      	add	r4, r7
  405fa4:	3c04      	subs	r4, #4
  405fa6:	b922      	cbnz	r2, 405fb2 <__mdiff+0xda>
  405fa8:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405fac:	3e01      	subs	r6, #1
  405fae:	2b00      	cmp	r3, #0
  405fb0:	d0fa      	beq.n	405fa8 <__mdiff+0xd0>
  405fb2:	6106      	str	r6, [r0, #16]
  405fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405fb8:	2100      	movs	r1, #0
  405fba:	f7ff fd73 	bl	405aa4 <_Balloc>
  405fbe:	2201      	movs	r2, #1
  405fc0:	2300      	movs	r3, #0
  405fc2:	6102      	str	r2, [r0, #16]
  405fc4:	6143      	str	r3, [r0, #20]
  405fc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405fca:	4674      	mov	r4, lr
  405fcc:	e7ab      	b.n	405f26 <__mdiff+0x4e>
  405fce:	4633      	mov	r3, r6
  405fd0:	f106 0414 	add.w	r4, r6, #20
  405fd4:	f102 0514 	add.w	r5, r2, #20
  405fd8:	4616      	mov	r6, r2
  405fda:	2701      	movs	r7, #1
  405fdc:	4698      	mov	r8, r3
  405fde:	e7a2      	b.n	405f26 <__mdiff+0x4e>

00405fe0 <__d2b>:
  405fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405fe4:	b082      	sub	sp, #8
  405fe6:	2101      	movs	r1, #1
  405fe8:	461c      	mov	r4, r3
  405fea:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405fee:	4615      	mov	r5, r2
  405ff0:	9e08      	ldr	r6, [sp, #32]
  405ff2:	f7ff fd57 	bl	405aa4 <_Balloc>
  405ff6:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405ffa:	4680      	mov	r8, r0
  405ffc:	b10f      	cbz	r7, 406002 <__d2b+0x22>
  405ffe:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  406002:	9401      	str	r4, [sp, #4]
  406004:	b31d      	cbz	r5, 40604e <__d2b+0x6e>
  406006:	a802      	add	r0, sp, #8
  406008:	f840 5d08 	str.w	r5, [r0, #-8]!
  40600c:	f7ff fdda 	bl	405bc4 <__lo0bits>
  406010:	2800      	cmp	r0, #0
  406012:	d134      	bne.n	40607e <__d2b+0x9e>
  406014:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406018:	f8c8 2014 	str.w	r2, [r8, #20]
  40601c:	2b00      	cmp	r3, #0
  40601e:	bf0c      	ite	eq
  406020:	2101      	moveq	r1, #1
  406022:	2102      	movne	r1, #2
  406024:	f8c8 3018 	str.w	r3, [r8, #24]
  406028:	f8c8 1010 	str.w	r1, [r8, #16]
  40602c:	b9df      	cbnz	r7, 406066 <__d2b+0x86>
  40602e:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  406032:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406036:	6030      	str	r0, [r6, #0]
  406038:	6918      	ldr	r0, [r3, #16]
  40603a:	f7ff fda3 	bl	405b84 <__hi0bits>
  40603e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406040:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406044:	6018      	str	r0, [r3, #0]
  406046:	4640      	mov	r0, r8
  406048:	b002      	add	sp, #8
  40604a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40604e:	a801      	add	r0, sp, #4
  406050:	f7ff fdb8 	bl	405bc4 <__lo0bits>
  406054:	9b01      	ldr	r3, [sp, #4]
  406056:	f8c8 3014 	str.w	r3, [r8, #20]
  40605a:	2101      	movs	r1, #1
  40605c:	3020      	adds	r0, #32
  40605e:	f8c8 1010 	str.w	r1, [r8, #16]
  406062:	2f00      	cmp	r7, #0
  406064:	d0e3      	beq.n	40602e <__d2b+0x4e>
  406066:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406068:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  40606c:	4407      	add	r7, r0
  40606e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  406072:	6037      	str	r7, [r6, #0]
  406074:	6018      	str	r0, [r3, #0]
  406076:	4640      	mov	r0, r8
  406078:	b002      	add	sp, #8
  40607a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40607e:	e89d 000a 	ldmia.w	sp, {r1, r3}
  406082:	f1c0 0220 	rsb	r2, r0, #32
  406086:	fa03 f202 	lsl.w	r2, r3, r2
  40608a:	430a      	orrs	r2, r1
  40608c:	40c3      	lsrs	r3, r0
  40608e:	9301      	str	r3, [sp, #4]
  406090:	f8c8 2014 	str.w	r2, [r8, #20]
  406094:	e7c2      	b.n	40601c <__d2b+0x3c>
  406096:	bf00      	nop

00406098 <_putc_r>:
  406098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40609a:	460e      	mov	r6, r1
  40609c:	4614      	mov	r4, r2
  40609e:	4607      	mov	r7, r0
  4060a0:	b108      	cbz	r0, 4060a6 <_putc_r+0xe>
  4060a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4060a4:	b34b      	cbz	r3, 4060fa <_putc_r+0x62>
  4060a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4060a8:	07d8      	lsls	r0, r3, #31
  4060aa:	d402      	bmi.n	4060b2 <_putc_r+0x1a>
  4060ac:	89a3      	ldrh	r3, [r4, #12]
  4060ae:	0599      	lsls	r1, r3, #22
  4060b0:	d526      	bpl.n	406100 <_putc_r+0x68>
  4060b2:	68a3      	ldr	r3, [r4, #8]
  4060b4:	3b01      	subs	r3, #1
  4060b6:	2b00      	cmp	r3, #0
  4060b8:	60a3      	str	r3, [r4, #8]
  4060ba:	db11      	blt.n	4060e0 <_putc_r+0x48>
  4060bc:	b2f5      	uxtb	r5, r6
  4060be:	6823      	ldr	r3, [r4, #0]
  4060c0:	1c5a      	adds	r2, r3, #1
  4060c2:	6022      	str	r2, [r4, #0]
  4060c4:	701e      	strb	r6, [r3, #0]
  4060c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4060c8:	07da      	lsls	r2, r3, #31
  4060ca:	d402      	bmi.n	4060d2 <_putc_r+0x3a>
  4060cc:	89a3      	ldrh	r3, [r4, #12]
  4060ce:	059b      	lsls	r3, r3, #22
  4060d0:	d501      	bpl.n	4060d6 <_putc_r+0x3e>
  4060d2:	4628      	mov	r0, r5
  4060d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4060d6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4060d8:	f7ff f856 	bl	405188 <__retarget_lock_release_recursive>
  4060dc:	4628      	mov	r0, r5
  4060de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4060e0:	69a2      	ldr	r2, [r4, #24]
  4060e2:	4293      	cmp	r3, r2
  4060e4:	db02      	blt.n	4060ec <_putc_r+0x54>
  4060e6:	b2f5      	uxtb	r5, r6
  4060e8:	2d0a      	cmp	r5, #10
  4060ea:	d1e8      	bne.n	4060be <_putc_r+0x26>
  4060ec:	4631      	mov	r1, r6
  4060ee:	4638      	mov	r0, r7
  4060f0:	4622      	mov	r2, r4
  4060f2:	f000 fa4f 	bl	406594 <__swbuf_r>
  4060f6:	4605      	mov	r5, r0
  4060f8:	e7e5      	b.n	4060c6 <_putc_r+0x2e>
  4060fa:	f7fe fd07 	bl	404b0c <__sinit>
  4060fe:	e7d2      	b.n	4060a6 <_putc_r+0xe>
  406100:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406102:	f7ff f83f 	bl	405184 <__retarget_lock_acquire_recursive>
  406106:	e7d4      	b.n	4060b2 <_putc_r+0x1a>

00406108 <_realloc_r>:
  406108:	2900      	cmp	r1, #0
  40610a:	f000 8095 	beq.w	406238 <_realloc_r+0x130>
  40610e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406112:	460d      	mov	r5, r1
  406114:	4616      	mov	r6, r2
  406116:	b083      	sub	sp, #12
  406118:	4680      	mov	r8, r0
  40611a:	f106 070b 	add.w	r7, r6, #11
  40611e:	f7ff fcb5 	bl	405a8c <__malloc_lock>
  406122:	f855 ec04 	ldr.w	lr, [r5, #-4]
  406126:	2f16      	cmp	r7, #22
  406128:	f02e 0403 	bic.w	r4, lr, #3
  40612c:	f1a5 0908 	sub.w	r9, r5, #8
  406130:	d83c      	bhi.n	4061ac <_realloc_r+0xa4>
  406132:	2210      	movs	r2, #16
  406134:	4617      	mov	r7, r2
  406136:	42be      	cmp	r6, r7
  406138:	d83d      	bhi.n	4061b6 <_realloc_r+0xae>
  40613a:	4294      	cmp	r4, r2
  40613c:	da43      	bge.n	4061c6 <_realloc_r+0xbe>
  40613e:	4bc4      	ldr	r3, [pc, #784]	; (406450 <_realloc_r+0x348>)
  406140:	6899      	ldr	r1, [r3, #8]
  406142:	eb09 0004 	add.w	r0, r9, r4
  406146:	4288      	cmp	r0, r1
  406148:	f000 80b4 	beq.w	4062b4 <_realloc_r+0x1ac>
  40614c:	6843      	ldr	r3, [r0, #4]
  40614e:	f023 0101 	bic.w	r1, r3, #1
  406152:	4401      	add	r1, r0
  406154:	6849      	ldr	r1, [r1, #4]
  406156:	07c9      	lsls	r1, r1, #31
  406158:	d54c      	bpl.n	4061f4 <_realloc_r+0xec>
  40615a:	f01e 0f01 	tst.w	lr, #1
  40615e:	f000 809b 	beq.w	406298 <_realloc_r+0x190>
  406162:	4631      	mov	r1, r6
  406164:	4640      	mov	r0, r8
  406166:	f7ff f891 	bl	40528c <_malloc_r>
  40616a:	4606      	mov	r6, r0
  40616c:	2800      	cmp	r0, #0
  40616e:	d03a      	beq.n	4061e6 <_realloc_r+0xde>
  406170:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406174:	f023 0301 	bic.w	r3, r3, #1
  406178:	444b      	add	r3, r9
  40617a:	f1a0 0208 	sub.w	r2, r0, #8
  40617e:	429a      	cmp	r2, r3
  406180:	f000 8121 	beq.w	4063c6 <_realloc_r+0x2be>
  406184:	1f22      	subs	r2, r4, #4
  406186:	2a24      	cmp	r2, #36	; 0x24
  406188:	f200 8107 	bhi.w	40639a <_realloc_r+0x292>
  40618c:	2a13      	cmp	r2, #19
  40618e:	f200 80db 	bhi.w	406348 <_realloc_r+0x240>
  406192:	4603      	mov	r3, r0
  406194:	462a      	mov	r2, r5
  406196:	6811      	ldr	r1, [r2, #0]
  406198:	6019      	str	r1, [r3, #0]
  40619a:	6851      	ldr	r1, [r2, #4]
  40619c:	6059      	str	r1, [r3, #4]
  40619e:	6892      	ldr	r2, [r2, #8]
  4061a0:	609a      	str	r2, [r3, #8]
  4061a2:	4629      	mov	r1, r5
  4061a4:	4640      	mov	r0, r8
  4061a6:	f7fe fd53 	bl	404c50 <_free_r>
  4061aa:	e01c      	b.n	4061e6 <_realloc_r+0xde>
  4061ac:	f027 0707 	bic.w	r7, r7, #7
  4061b0:	2f00      	cmp	r7, #0
  4061b2:	463a      	mov	r2, r7
  4061b4:	dabf      	bge.n	406136 <_realloc_r+0x2e>
  4061b6:	2600      	movs	r6, #0
  4061b8:	230c      	movs	r3, #12
  4061ba:	4630      	mov	r0, r6
  4061bc:	f8c8 3000 	str.w	r3, [r8]
  4061c0:	b003      	add	sp, #12
  4061c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061c6:	462e      	mov	r6, r5
  4061c8:	1be3      	subs	r3, r4, r7
  4061ca:	2b0f      	cmp	r3, #15
  4061cc:	d81e      	bhi.n	40620c <_realloc_r+0x104>
  4061ce:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4061d2:	f003 0301 	and.w	r3, r3, #1
  4061d6:	4323      	orrs	r3, r4
  4061d8:	444c      	add	r4, r9
  4061da:	f8c9 3004 	str.w	r3, [r9, #4]
  4061de:	6863      	ldr	r3, [r4, #4]
  4061e0:	f043 0301 	orr.w	r3, r3, #1
  4061e4:	6063      	str	r3, [r4, #4]
  4061e6:	4640      	mov	r0, r8
  4061e8:	f7ff fc56 	bl	405a98 <__malloc_unlock>
  4061ec:	4630      	mov	r0, r6
  4061ee:	b003      	add	sp, #12
  4061f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061f4:	f023 0303 	bic.w	r3, r3, #3
  4061f8:	18e1      	adds	r1, r4, r3
  4061fa:	4291      	cmp	r1, r2
  4061fc:	db1f      	blt.n	40623e <_realloc_r+0x136>
  4061fe:	68c3      	ldr	r3, [r0, #12]
  406200:	6882      	ldr	r2, [r0, #8]
  406202:	462e      	mov	r6, r5
  406204:	60d3      	str	r3, [r2, #12]
  406206:	460c      	mov	r4, r1
  406208:	609a      	str	r2, [r3, #8]
  40620a:	e7dd      	b.n	4061c8 <_realloc_r+0xc0>
  40620c:	f8d9 2004 	ldr.w	r2, [r9, #4]
  406210:	eb09 0107 	add.w	r1, r9, r7
  406214:	f002 0201 	and.w	r2, r2, #1
  406218:	444c      	add	r4, r9
  40621a:	f043 0301 	orr.w	r3, r3, #1
  40621e:	4317      	orrs	r7, r2
  406220:	f8c9 7004 	str.w	r7, [r9, #4]
  406224:	604b      	str	r3, [r1, #4]
  406226:	6863      	ldr	r3, [r4, #4]
  406228:	f043 0301 	orr.w	r3, r3, #1
  40622c:	3108      	adds	r1, #8
  40622e:	6063      	str	r3, [r4, #4]
  406230:	4640      	mov	r0, r8
  406232:	f7fe fd0d 	bl	404c50 <_free_r>
  406236:	e7d6      	b.n	4061e6 <_realloc_r+0xde>
  406238:	4611      	mov	r1, r2
  40623a:	f7ff b827 	b.w	40528c <_malloc_r>
  40623e:	f01e 0f01 	tst.w	lr, #1
  406242:	d18e      	bne.n	406162 <_realloc_r+0x5a>
  406244:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406248:	eba9 0a01 	sub.w	sl, r9, r1
  40624c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406250:	f021 0103 	bic.w	r1, r1, #3
  406254:	440b      	add	r3, r1
  406256:	4423      	add	r3, r4
  406258:	4293      	cmp	r3, r2
  40625a:	db25      	blt.n	4062a8 <_realloc_r+0x1a0>
  40625c:	68c2      	ldr	r2, [r0, #12]
  40625e:	6881      	ldr	r1, [r0, #8]
  406260:	4656      	mov	r6, sl
  406262:	60ca      	str	r2, [r1, #12]
  406264:	6091      	str	r1, [r2, #8]
  406266:	f8da 100c 	ldr.w	r1, [sl, #12]
  40626a:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40626e:	1f22      	subs	r2, r4, #4
  406270:	2a24      	cmp	r2, #36	; 0x24
  406272:	60c1      	str	r1, [r0, #12]
  406274:	6088      	str	r0, [r1, #8]
  406276:	f200 8094 	bhi.w	4063a2 <_realloc_r+0x29a>
  40627a:	2a13      	cmp	r2, #19
  40627c:	d96f      	bls.n	40635e <_realloc_r+0x256>
  40627e:	6829      	ldr	r1, [r5, #0]
  406280:	f8ca 1008 	str.w	r1, [sl, #8]
  406284:	6869      	ldr	r1, [r5, #4]
  406286:	f8ca 100c 	str.w	r1, [sl, #12]
  40628a:	2a1b      	cmp	r2, #27
  40628c:	f200 80a2 	bhi.w	4063d4 <_realloc_r+0x2cc>
  406290:	3508      	adds	r5, #8
  406292:	f10a 0210 	add.w	r2, sl, #16
  406296:	e063      	b.n	406360 <_realloc_r+0x258>
  406298:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40629c:	eba9 0a03 	sub.w	sl, r9, r3
  4062a0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4062a4:	f021 0103 	bic.w	r1, r1, #3
  4062a8:	1863      	adds	r3, r4, r1
  4062aa:	4293      	cmp	r3, r2
  4062ac:	f6ff af59 	blt.w	406162 <_realloc_r+0x5a>
  4062b0:	4656      	mov	r6, sl
  4062b2:	e7d8      	b.n	406266 <_realloc_r+0x15e>
  4062b4:	6841      	ldr	r1, [r0, #4]
  4062b6:	f021 0b03 	bic.w	fp, r1, #3
  4062ba:	44a3      	add	fp, r4
  4062bc:	f107 0010 	add.w	r0, r7, #16
  4062c0:	4583      	cmp	fp, r0
  4062c2:	da56      	bge.n	406372 <_realloc_r+0x26a>
  4062c4:	f01e 0f01 	tst.w	lr, #1
  4062c8:	f47f af4b 	bne.w	406162 <_realloc_r+0x5a>
  4062cc:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4062d0:	eba9 0a01 	sub.w	sl, r9, r1
  4062d4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4062d8:	f021 0103 	bic.w	r1, r1, #3
  4062dc:	448b      	add	fp, r1
  4062de:	4558      	cmp	r0, fp
  4062e0:	dce2      	bgt.n	4062a8 <_realloc_r+0x1a0>
  4062e2:	4656      	mov	r6, sl
  4062e4:	f8da 100c 	ldr.w	r1, [sl, #12]
  4062e8:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4062ec:	1f22      	subs	r2, r4, #4
  4062ee:	2a24      	cmp	r2, #36	; 0x24
  4062f0:	60c1      	str	r1, [r0, #12]
  4062f2:	6088      	str	r0, [r1, #8]
  4062f4:	f200 808f 	bhi.w	406416 <_realloc_r+0x30e>
  4062f8:	2a13      	cmp	r2, #19
  4062fa:	f240 808a 	bls.w	406412 <_realloc_r+0x30a>
  4062fe:	6829      	ldr	r1, [r5, #0]
  406300:	f8ca 1008 	str.w	r1, [sl, #8]
  406304:	6869      	ldr	r1, [r5, #4]
  406306:	f8ca 100c 	str.w	r1, [sl, #12]
  40630a:	2a1b      	cmp	r2, #27
  40630c:	f200 808a 	bhi.w	406424 <_realloc_r+0x31c>
  406310:	3508      	adds	r5, #8
  406312:	f10a 0210 	add.w	r2, sl, #16
  406316:	6829      	ldr	r1, [r5, #0]
  406318:	6011      	str	r1, [r2, #0]
  40631a:	6869      	ldr	r1, [r5, #4]
  40631c:	6051      	str	r1, [r2, #4]
  40631e:	68a9      	ldr	r1, [r5, #8]
  406320:	6091      	str	r1, [r2, #8]
  406322:	eb0a 0107 	add.w	r1, sl, r7
  406326:	ebab 0207 	sub.w	r2, fp, r7
  40632a:	f042 0201 	orr.w	r2, r2, #1
  40632e:	6099      	str	r1, [r3, #8]
  406330:	604a      	str	r2, [r1, #4]
  406332:	f8da 3004 	ldr.w	r3, [sl, #4]
  406336:	f003 0301 	and.w	r3, r3, #1
  40633a:	431f      	orrs	r7, r3
  40633c:	4640      	mov	r0, r8
  40633e:	f8ca 7004 	str.w	r7, [sl, #4]
  406342:	f7ff fba9 	bl	405a98 <__malloc_unlock>
  406346:	e751      	b.n	4061ec <_realloc_r+0xe4>
  406348:	682b      	ldr	r3, [r5, #0]
  40634a:	6003      	str	r3, [r0, #0]
  40634c:	686b      	ldr	r3, [r5, #4]
  40634e:	6043      	str	r3, [r0, #4]
  406350:	2a1b      	cmp	r2, #27
  406352:	d82d      	bhi.n	4063b0 <_realloc_r+0x2a8>
  406354:	f100 0308 	add.w	r3, r0, #8
  406358:	f105 0208 	add.w	r2, r5, #8
  40635c:	e71b      	b.n	406196 <_realloc_r+0x8e>
  40635e:	4632      	mov	r2, r6
  406360:	6829      	ldr	r1, [r5, #0]
  406362:	6011      	str	r1, [r2, #0]
  406364:	6869      	ldr	r1, [r5, #4]
  406366:	6051      	str	r1, [r2, #4]
  406368:	68a9      	ldr	r1, [r5, #8]
  40636a:	6091      	str	r1, [r2, #8]
  40636c:	461c      	mov	r4, r3
  40636e:	46d1      	mov	r9, sl
  406370:	e72a      	b.n	4061c8 <_realloc_r+0xc0>
  406372:	eb09 0107 	add.w	r1, r9, r7
  406376:	ebab 0b07 	sub.w	fp, fp, r7
  40637a:	f04b 0201 	orr.w	r2, fp, #1
  40637e:	6099      	str	r1, [r3, #8]
  406380:	604a      	str	r2, [r1, #4]
  406382:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406386:	f003 0301 	and.w	r3, r3, #1
  40638a:	431f      	orrs	r7, r3
  40638c:	4640      	mov	r0, r8
  40638e:	f845 7c04 	str.w	r7, [r5, #-4]
  406392:	f7ff fb81 	bl	405a98 <__malloc_unlock>
  406396:	462e      	mov	r6, r5
  406398:	e728      	b.n	4061ec <_realloc_r+0xe4>
  40639a:	4629      	mov	r1, r5
  40639c:	f7ff fb12 	bl	4059c4 <memmove>
  4063a0:	e6ff      	b.n	4061a2 <_realloc_r+0x9a>
  4063a2:	4629      	mov	r1, r5
  4063a4:	4630      	mov	r0, r6
  4063a6:	461c      	mov	r4, r3
  4063a8:	46d1      	mov	r9, sl
  4063aa:	f7ff fb0b 	bl	4059c4 <memmove>
  4063ae:	e70b      	b.n	4061c8 <_realloc_r+0xc0>
  4063b0:	68ab      	ldr	r3, [r5, #8]
  4063b2:	6083      	str	r3, [r0, #8]
  4063b4:	68eb      	ldr	r3, [r5, #12]
  4063b6:	60c3      	str	r3, [r0, #12]
  4063b8:	2a24      	cmp	r2, #36	; 0x24
  4063ba:	d017      	beq.n	4063ec <_realloc_r+0x2e4>
  4063bc:	f100 0310 	add.w	r3, r0, #16
  4063c0:	f105 0210 	add.w	r2, r5, #16
  4063c4:	e6e7      	b.n	406196 <_realloc_r+0x8e>
  4063c6:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4063ca:	f023 0303 	bic.w	r3, r3, #3
  4063ce:	441c      	add	r4, r3
  4063d0:	462e      	mov	r6, r5
  4063d2:	e6f9      	b.n	4061c8 <_realloc_r+0xc0>
  4063d4:	68a9      	ldr	r1, [r5, #8]
  4063d6:	f8ca 1010 	str.w	r1, [sl, #16]
  4063da:	68e9      	ldr	r1, [r5, #12]
  4063dc:	f8ca 1014 	str.w	r1, [sl, #20]
  4063e0:	2a24      	cmp	r2, #36	; 0x24
  4063e2:	d00c      	beq.n	4063fe <_realloc_r+0x2f6>
  4063e4:	3510      	adds	r5, #16
  4063e6:	f10a 0218 	add.w	r2, sl, #24
  4063ea:	e7b9      	b.n	406360 <_realloc_r+0x258>
  4063ec:	692b      	ldr	r3, [r5, #16]
  4063ee:	6103      	str	r3, [r0, #16]
  4063f0:	696b      	ldr	r3, [r5, #20]
  4063f2:	6143      	str	r3, [r0, #20]
  4063f4:	f105 0218 	add.w	r2, r5, #24
  4063f8:	f100 0318 	add.w	r3, r0, #24
  4063fc:	e6cb      	b.n	406196 <_realloc_r+0x8e>
  4063fe:	692a      	ldr	r2, [r5, #16]
  406400:	f8ca 2018 	str.w	r2, [sl, #24]
  406404:	696a      	ldr	r2, [r5, #20]
  406406:	f8ca 201c 	str.w	r2, [sl, #28]
  40640a:	3518      	adds	r5, #24
  40640c:	f10a 0220 	add.w	r2, sl, #32
  406410:	e7a6      	b.n	406360 <_realloc_r+0x258>
  406412:	4632      	mov	r2, r6
  406414:	e77f      	b.n	406316 <_realloc_r+0x20e>
  406416:	4629      	mov	r1, r5
  406418:	4630      	mov	r0, r6
  40641a:	9301      	str	r3, [sp, #4]
  40641c:	f7ff fad2 	bl	4059c4 <memmove>
  406420:	9b01      	ldr	r3, [sp, #4]
  406422:	e77e      	b.n	406322 <_realloc_r+0x21a>
  406424:	68a9      	ldr	r1, [r5, #8]
  406426:	f8ca 1010 	str.w	r1, [sl, #16]
  40642a:	68e9      	ldr	r1, [r5, #12]
  40642c:	f8ca 1014 	str.w	r1, [sl, #20]
  406430:	2a24      	cmp	r2, #36	; 0x24
  406432:	d003      	beq.n	40643c <_realloc_r+0x334>
  406434:	3510      	adds	r5, #16
  406436:	f10a 0218 	add.w	r2, sl, #24
  40643a:	e76c      	b.n	406316 <_realloc_r+0x20e>
  40643c:	692a      	ldr	r2, [r5, #16]
  40643e:	f8ca 2018 	str.w	r2, [sl, #24]
  406442:	696a      	ldr	r2, [r5, #20]
  406444:	f8ca 201c 	str.w	r2, [sl, #28]
  406448:	3518      	adds	r5, #24
  40644a:	f10a 0220 	add.w	r2, sl, #32
  40644e:	e762      	b.n	406316 <_realloc_r+0x20e>
  406450:	2040043c 	.word	0x2040043c

00406454 <_sbrk_r>:
  406454:	b538      	push	{r3, r4, r5, lr}
  406456:	4c07      	ldr	r4, [pc, #28]	; (406474 <_sbrk_r+0x20>)
  406458:	2300      	movs	r3, #0
  40645a:	4605      	mov	r5, r0
  40645c:	4608      	mov	r0, r1
  40645e:	6023      	str	r3, [r4, #0]
  406460:	f7fa fcbe 	bl	400de0 <_sbrk>
  406464:	1c43      	adds	r3, r0, #1
  406466:	d000      	beq.n	40646a <_sbrk_r+0x16>
  406468:	bd38      	pop	{r3, r4, r5, pc}
  40646a:	6823      	ldr	r3, [r4, #0]
  40646c:	2b00      	cmp	r3, #0
  40646e:	d0fb      	beq.n	406468 <_sbrk_r+0x14>
  406470:	602b      	str	r3, [r5, #0]
  406472:	bd38      	pop	{r3, r4, r5, pc}
  406474:	20400ab4 	.word	0x20400ab4

00406478 <__sread>:
  406478:	b510      	push	{r4, lr}
  40647a:	460c      	mov	r4, r1
  40647c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406480:	f000 fae0 	bl	406a44 <_read_r>
  406484:	2800      	cmp	r0, #0
  406486:	db03      	blt.n	406490 <__sread+0x18>
  406488:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40648a:	4403      	add	r3, r0
  40648c:	6523      	str	r3, [r4, #80]	; 0x50
  40648e:	bd10      	pop	{r4, pc}
  406490:	89a3      	ldrh	r3, [r4, #12]
  406492:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  406496:	81a3      	strh	r3, [r4, #12]
  406498:	bd10      	pop	{r4, pc}
  40649a:	bf00      	nop

0040649c <__swrite>:
  40649c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4064a0:	4616      	mov	r6, r2
  4064a2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4064a6:	461f      	mov	r7, r3
  4064a8:	05d3      	lsls	r3, r2, #23
  4064aa:	460c      	mov	r4, r1
  4064ac:	4605      	mov	r5, r0
  4064ae:	d507      	bpl.n	4064c0 <__swrite+0x24>
  4064b0:	2200      	movs	r2, #0
  4064b2:	2302      	movs	r3, #2
  4064b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4064b8:	f000 fa98 	bl	4069ec <_lseek_r>
  4064bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4064c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4064c4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4064c8:	81a2      	strh	r2, [r4, #12]
  4064ca:	463b      	mov	r3, r7
  4064cc:	4632      	mov	r2, r6
  4064ce:	4628      	mov	r0, r5
  4064d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4064d4:	f000 b8b6 	b.w	406644 <_write_r>

004064d8 <__sseek>:
  4064d8:	b510      	push	{r4, lr}
  4064da:	460c      	mov	r4, r1
  4064dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4064e0:	f000 fa84 	bl	4069ec <_lseek_r>
  4064e4:	89a3      	ldrh	r3, [r4, #12]
  4064e6:	1c42      	adds	r2, r0, #1
  4064e8:	bf0e      	itee	eq
  4064ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4064ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4064f2:	6520      	strne	r0, [r4, #80]	; 0x50
  4064f4:	81a3      	strh	r3, [r4, #12]
  4064f6:	bd10      	pop	{r4, pc}

004064f8 <__sclose>:
  4064f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4064fc:	f000 b94a 	b.w	406794 <_close_r>

00406500 <__sprint_r.part.0>:
  406500:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406504:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  406506:	049c      	lsls	r4, r3, #18
  406508:	4693      	mov	fp, r2
  40650a:	d52f      	bpl.n	40656c <__sprint_r.part.0+0x6c>
  40650c:	6893      	ldr	r3, [r2, #8]
  40650e:	6812      	ldr	r2, [r2, #0]
  406510:	b353      	cbz	r3, 406568 <__sprint_r.part.0+0x68>
  406512:	460e      	mov	r6, r1
  406514:	4607      	mov	r7, r0
  406516:	f102 0908 	add.w	r9, r2, #8
  40651a:	e919 0420 	ldmdb	r9, {r5, sl}
  40651e:	ea5f 089a 	movs.w	r8, sl, lsr #2
  406522:	d017      	beq.n	406554 <__sprint_r.part.0+0x54>
  406524:	3d04      	subs	r5, #4
  406526:	2400      	movs	r4, #0
  406528:	e001      	b.n	40652e <__sprint_r.part.0+0x2e>
  40652a:	45a0      	cmp	r8, r4
  40652c:	d010      	beq.n	406550 <__sprint_r.part.0+0x50>
  40652e:	4632      	mov	r2, r6
  406530:	f855 1f04 	ldr.w	r1, [r5, #4]!
  406534:	4638      	mov	r0, r7
  406536:	f000 f9f1 	bl	40691c <_fputwc_r>
  40653a:	1c43      	adds	r3, r0, #1
  40653c:	f104 0401 	add.w	r4, r4, #1
  406540:	d1f3      	bne.n	40652a <__sprint_r.part.0+0x2a>
  406542:	2300      	movs	r3, #0
  406544:	f8cb 3008 	str.w	r3, [fp, #8]
  406548:	f8cb 3004 	str.w	r3, [fp, #4]
  40654c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406550:	f8db 3008 	ldr.w	r3, [fp, #8]
  406554:	f02a 0a03 	bic.w	sl, sl, #3
  406558:	eba3 030a 	sub.w	r3, r3, sl
  40655c:	f8cb 3008 	str.w	r3, [fp, #8]
  406560:	f109 0908 	add.w	r9, r9, #8
  406564:	2b00      	cmp	r3, #0
  406566:	d1d8      	bne.n	40651a <__sprint_r.part.0+0x1a>
  406568:	2000      	movs	r0, #0
  40656a:	e7ea      	b.n	406542 <__sprint_r.part.0+0x42>
  40656c:	f7fe fc56 	bl	404e1c <__sfvwrite_r>
  406570:	2300      	movs	r3, #0
  406572:	f8cb 3008 	str.w	r3, [fp, #8]
  406576:	f8cb 3004 	str.w	r3, [fp, #4]
  40657a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40657e:	bf00      	nop

00406580 <__sprint_r>:
  406580:	6893      	ldr	r3, [r2, #8]
  406582:	b10b      	cbz	r3, 406588 <__sprint_r+0x8>
  406584:	f7ff bfbc 	b.w	406500 <__sprint_r.part.0>
  406588:	b410      	push	{r4}
  40658a:	4618      	mov	r0, r3
  40658c:	6053      	str	r3, [r2, #4]
  40658e:	bc10      	pop	{r4}
  406590:	4770      	bx	lr
  406592:	bf00      	nop

00406594 <__swbuf_r>:
  406594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406596:	460d      	mov	r5, r1
  406598:	4614      	mov	r4, r2
  40659a:	4606      	mov	r6, r0
  40659c:	b110      	cbz	r0, 4065a4 <__swbuf_r+0x10>
  40659e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4065a0:	2b00      	cmp	r3, #0
  4065a2:	d04b      	beq.n	40663c <__swbuf_r+0xa8>
  4065a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4065a8:	69a3      	ldr	r3, [r4, #24]
  4065aa:	60a3      	str	r3, [r4, #8]
  4065ac:	b291      	uxth	r1, r2
  4065ae:	0708      	lsls	r0, r1, #28
  4065b0:	d539      	bpl.n	406626 <__swbuf_r+0x92>
  4065b2:	6923      	ldr	r3, [r4, #16]
  4065b4:	2b00      	cmp	r3, #0
  4065b6:	d036      	beq.n	406626 <__swbuf_r+0x92>
  4065b8:	b2ed      	uxtb	r5, r5
  4065ba:	0489      	lsls	r1, r1, #18
  4065bc:	462f      	mov	r7, r5
  4065be:	d515      	bpl.n	4065ec <__swbuf_r+0x58>
  4065c0:	6822      	ldr	r2, [r4, #0]
  4065c2:	6961      	ldr	r1, [r4, #20]
  4065c4:	1ad3      	subs	r3, r2, r3
  4065c6:	428b      	cmp	r3, r1
  4065c8:	da1c      	bge.n	406604 <__swbuf_r+0x70>
  4065ca:	3301      	adds	r3, #1
  4065cc:	68a1      	ldr	r1, [r4, #8]
  4065ce:	1c50      	adds	r0, r2, #1
  4065d0:	3901      	subs	r1, #1
  4065d2:	60a1      	str	r1, [r4, #8]
  4065d4:	6020      	str	r0, [r4, #0]
  4065d6:	7015      	strb	r5, [r2, #0]
  4065d8:	6962      	ldr	r2, [r4, #20]
  4065da:	429a      	cmp	r2, r3
  4065dc:	d01a      	beq.n	406614 <__swbuf_r+0x80>
  4065de:	89a3      	ldrh	r3, [r4, #12]
  4065e0:	07db      	lsls	r3, r3, #31
  4065e2:	d501      	bpl.n	4065e8 <__swbuf_r+0x54>
  4065e4:	2d0a      	cmp	r5, #10
  4065e6:	d015      	beq.n	406614 <__swbuf_r+0x80>
  4065e8:	4638      	mov	r0, r7
  4065ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4065ec:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4065ee:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4065f2:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4065f6:	81a2      	strh	r2, [r4, #12]
  4065f8:	6822      	ldr	r2, [r4, #0]
  4065fa:	6661      	str	r1, [r4, #100]	; 0x64
  4065fc:	6961      	ldr	r1, [r4, #20]
  4065fe:	1ad3      	subs	r3, r2, r3
  406600:	428b      	cmp	r3, r1
  406602:	dbe2      	blt.n	4065ca <__swbuf_r+0x36>
  406604:	4621      	mov	r1, r4
  406606:	4630      	mov	r0, r6
  406608:	f7fe fa28 	bl	404a5c <_fflush_r>
  40660c:	b940      	cbnz	r0, 406620 <__swbuf_r+0x8c>
  40660e:	6822      	ldr	r2, [r4, #0]
  406610:	2301      	movs	r3, #1
  406612:	e7db      	b.n	4065cc <__swbuf_r+0x38>
  406614:	4621      	mov	r1, r4
  406616:	4630      	mov	r0, r6
  406618:	f7fe fa20 	bl	404a5c <_fflush_r>
  40661c:	2800      	cmp	r0, #0
  40661e:	d0e3      	beq.n	4065e8 <__swbuf_r+0x54>
  406620:	f04f 37ff 	mov.w	r7, #4294967295
  406624:	e7e0      	b.n	4065e8 <__swbuf_r+0x54>
  406626:	4621      	mov	r1, r4
  406628:	4630      	mov	r0, r6
  40662a:	f7fd f945 	bl	4038b8 <__swsetup_r>
  40662e:	2800      	cmp	r0, #0
  406630:	d1f6      	bne.n	406620 <__swbuf_r+0x8c>
  406632:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406636:	6923      	ldr	r3, [r4, #16]
  406638:	b291      	uxth	r1, r2
  40663a:	e7bd      	b.n	4065b8 <__swbuf_r+0x24>
  40663c:	f7fe fa66 	bl	404b0c <__sinit>
  406640:	e7b0      	b.n	4065a4 <__swbuf_r+0x10>
  406642:	bf00      	nop

00406644 <_write_r>:
  406644:	b570      	push	{r4, r5, r6, lr}
  406646:	460d      	mov	r5, r1
  406648:	4c08      	ldr	r4, [pc, #32]	; (40666c <_write_r+0x28>)
  40664a:	4611      	mov	r1, r2
  40664c:	4606      	mov	r6, r0
  40664e:	461a      	mov	r2, r3
  406650:	4628      	mov	r0, r5
  406652:	2300      	movs	r3, #0
  406654:	6023      	str	r3, [r4, #0]
  406656:	f7f9 fe13 	bl	400280 <_write>
  40665a:	1c43      	adds	r3, r0, #1
  40665c:	d000      	beq.n	406660 <_write_r+0x1c>
  40665e:	bd70      	pop	{r4, r5, r6, pc}
  406660:	6823      	ldr	r3, [r4, #0]
  406662:	2b00      	cmp	r3, #0
  406664:	d0fb      	beq.n	40665e <_write_r+0x1a>
  406666:	6033      	str	r3, [r6, #0]
  406668:	bd70      	pop	{r4, r5, r6, pc}
  40666a:	bf00      	nop
  40666c:	20400ab4 	.word	0x20400ab4

00406670 <__register_exitproc>:
  406670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406674:	4d2c      	ldr	r5, [pc, #176]	; (406728 <__register_exitproc+0xb8>)
  406676:	4606      	mov	r6, r0
  406678:	6828      	ldr	r0, [r5, #0]
  40667a:	4698      	mov	r8, r3
  40667c:	460f      	mov	r7, r1
  40667e:	4691      	mov	r9, r2
  406680:	f7fe fd80 	bl	405184 <__retarget_lock_acquire_recursive>
  406684:	4b29      	ldr	r3, [pc, #164]	; (40672c <__register_exitproc+0xbc>)
  406686:	681c      	ldr	r4, [r3, #0]
  406688:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40668c:	2b00      	cmp	r3, #0
  40668e:	d03e      	beq.n	40670e <__register_exitproc+0x9e>
  406690:	685a      	ldr	r2, [r3, #4]
  406692:	2a1f      	cmp	r2, #31
  406694:	dc1c      	bgt.n	4066d0 <__register_exitproc+0x60>
  406696:	f102 0e01 	add.w	lr, r2, #1
  40669a:	b176      	cbz	r6, 4066ba <__register_exitproc+0x4a>
  40669c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4066a0:	2401      	movs	r4, #1
  4066a2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4066a6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4066aa:	4094      	lsls	r4, r2
  4066ac:	4320      	orrs	r0, r4
  4066ae:	2e02      	cmp	r6, #2
  4066b0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4066b4:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4066b8:	d023      	beq.n	406702 <__register_exitproc+0x92>
  4066ba:	3202      	adds	r2, #2
  4066bc:	f8c3 e004 	str.w	lr, [r3, #4]
  4066c0:	6828      	ldr	r0, [r5, #0]
  4066c2:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4066c6:	f7fe fd5f 	bl	405188 <__retarget_lock_release_recursive>
  4066ca:	2000      	movs	r0, #0
  4066cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4066d0:	4b17      	ldr	r3, [pc, #92]	; (406730 <__register_exitproc+0xc0>)
  4066d2:	b30b      	cbz	r3, 406718 <__register_exitproc+0xa8>
  4066d4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4066d8:	f7fe fdd0 	bl	40527c <malloc>
  4066dc:	4603      	mov	r3, r0
  4066de:	b1d8      	cbz	r0, 406718 <__register_exitproc+0xa8>
  4066e0:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4066e4:	6002      	str	r2, [r0, #0]
  4066e6:	2100      	movs	r1, #0
  4066e8:	6041      	str	r1, [r0, #4]
  4066ea:	460a      	mov	r2, r1
  4066ec:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4066f0:	f04f 0e01 	mov.w	lr, #1
  4066f4:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4066f8:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4066fc:	2e00      	cmp	r6, #0
  4066fe:	d0dc      	beq.n	4066ba <__register_exitproc+0x4a>
  406700:	e7cc      	b.n	40669c <__register_exitproc+0x2c>
  406702:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  406706:	430c      	orrs	r4, r1
  406708:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40670c:	e7d5      	b.n	4066ba <__register_exitproc+0x4a>
  40670e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  406712:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  406716:	e7bb      	b.n	406690 <__register_exitproc+0x20>
  406718:	6828      	ldr	r0, [r5, #0]
  40671a:	f7fe fd35 	bl	405188 <__retarget_lock_release_recursive>
  40671e:	f04f 30ff 	mov.w	r0, #4294967295
  406722:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406726:	bf00      	nop
  406728:	20400438 	.word	0x20400438
  40672c:	00407108 	.word	0x00407108
  406730:	0040527d 	.word	0x0040527d

00406734 <_calloc_r>:
  406734:	b510      	push	{r4, lr}
  406736:	fb02 f101 	mul.w	r1, r2, r1
  40673a:	f7fe fda7 	bl	40528c <_malloc_r>
  40673e:	4604      	mov	r4, r0
  406740:	b1d8      	cbz	r0, 40677a <_calloc_r+0x46>
  406742:	f850 2c04 	ldr.w	r2, [r0, #-4]
  406746:	f022 0203 	bic.w	r2, r2, #3
  40674a:	3a04      	subs	r2, #4
  40674c:	2a24      	cmp	r2, #36	; 0x24
  40674e:	d818      	bhi.n	406782 <_calloc_r+0x4e>
  406750:	2a13      	cmp	r2, #19
  406752:	d914      	bls.n	40677e <_calloc_r+0x4a>
  406754:	2300      	movs	r3, #0
  406756:	2a1b      	cmp	r2, #27
  406758:	6003      	str	r3, [r0, #0]
  40675a:	6043      	str	r3, [r0, #4]
  40675c:	d916      	bls.n	40678c <_calloc_r+0x58>
  40675e:	2a24      	cmp	r2, #36	; 0x24
  406760:	6083      	str	r3, [r0, #8]
  406762:	60c3      	str	r3, [r0, #12]
  406764:	bf11      	iteee	ne
  406766:	f100 0210 	addne.w	r2, r0, #16
  40676a:	6103      	streq	r3, [r0, #16]
  40676c:	6143      	streq	r3, [r0, #20]
  40676e:	f100 0218 	addeq.w	r2, r0, #24
  406772:	2300      	movs	r3, #0
  406774:	6013      	str	r3, [r2, #0]
  406776:	6053      	str	r3, [r2, #4]
  406778:	6093      	str	r3, [r2, #8]
  40677a:	4620      	mov	r0, r4
  40677c:	bd10      	pop	{r4, pc}
  40677e:	4602      	mov	r2, r0
  406780:	e7f7      	b.n	406772 <_calloc_r+0x3e>
  406782:	2100      	movs	r1, #0
  406784:	f7fb fb9e 	bl	401ec4 <memset>
  406788:	4620      	mov	r0, r4
  40678a:	bd10      	pop	{r4, pc}
  40678c:	f100 0208 	add.w	r2, r0, #8
  406790:	e7ef      	b.n	406772 <_calloc_r+0x3e>
  406792:	bf00      	nop

00406794 <_close_r>:
  406794:	b538      	push	{r3, r4, r5, lr}
  406796:	4c07      	ldr	r4, [pc, #28]	; (4067b4 <_close_r+0x20>)
  406798:	2300      	movs	r3, #0
  40679a:	4605      	mov	r5, r0
  40679c:	4608      	mov	r0, r1
  40679e:	6023      	str	r3, [r4, #0]
  4067a0:	f7fa fb3a 	bl	400e18 <_close>
  4067a4:	1c43      	adds	r3, r0, #1
  4067a6:	d000      	beq.n	4067aa <_close_r+0x16>
  4067a8:	bd38      	pop	{r3, r4, r5, pc}
  4067aa:	6823      	ldr	r3, [r4, #0]
  4067ac:	2b00      	cmp	r3, #0
  4067ae:	d0fb      	beq.n	4067a8 <_close_r+0x14>
  4067b0:	602b      	str	r3, [r5, #0]
  4067b2:	bd38      	pop	{r3, r4, r5, pc}
  4067b4:	20400ab4 	.word	0x20400ab4

004067b8 <_fclose_r>:
  4067b8:	b570      	push	{r4, r5, r6, lr}
  4067ba:	b159      	cbz	r1, 4067d4 <_fclose_r+0x1c>
  4067bc:	4605      	mov	r5, r0
  4067be:	460c      	mov	r4, r1
  4067c0:	b110      	cbz	r0, 4067c8 <_fclose_r+0x10>
  4067c2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4067c4:	2b00      	cmp	r3, #0
  4067c6:	d03c      	beq.n	406842 <_fclose_r+0x8a>
  4067c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4067ca:	07d8      	lsls	r0, r3, #31
  4067cc:	d505      	bpl.n	4067da <_fclose_r+0x22>
  4067ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4067d2:	b92b      	cbnz	r3, 4067e0 <_fclose_r+0x28>
  4067d4:	2600      	movs	r6, #0
  4067d6:	4630      	mov	r0, r6
  4067d8:	bd70      	pop	{r4, r5, r6, pc}
  4067da:	89a3      	ldrh	r3, [r4, #12]
  4067dc:	0599      	lsls	r1, r3, #22
  4067de:	d53c      	bpl.n	40685a <_fclose_r+0xa2>
  4067e0:	4621      	mov	r1, r4
  4067e2:	4628      	mov	r0, r5
  4067e4:	f7fe f89a 	bl	40491c <__sflush_r>
  4067e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4067ea:	4606      	mov	r6, r0
  4067ec:	b133      	cbz	r3, 4067fc <_fclose_r+0x44>
  4067ee:	69e1      	ldr	r1, [r4, #28]
  4067f0:	4628      	mov	r0, r5
  4067f2:	4798      	blx	r3
  4067f4:	2800      	cmp	r0, #0
  4067f6:	bfb8      	it	lt
  4067f8:	f04f 36ff 	movlt.w	r6, #4294967295
  4067fc:	89a3      	ldrh	r3, [r4, #12]
  4067fe:	061a      	lsls	r2, r3, #24
  406800:	d422      	bmi.n	406848 <_fclose_r+0x90>
  406802:	6b21      	ldr	r1, [r4, #48]	; 0x30
  406804:	b141      	cbz	r1, 406818 <_fclose_r+0x60>
  406806:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40680a:	4299      	cmp	r1, r3
  40680c:	d002      	beq.n	406814 <_fclose_r+0x5c>
  40680e:	4628      	mov	r0, r5
  406810:	f7fe fa1e 	bl	404c50 <_free_r>
  406814:	2300      	movs	r3, #0
  406816:	6323      	str	r3, [r4, #48]	; 0x30
  406818:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40681a:	b121      	cbz	r1, 406826 <_fclose_r+0x6e>
  40681c:	4628      	mov	r0, r5
  40681e:	f7fe fa17 	bl	404c50 <_free_r>
  406822:	2300      	movs	r3, #0
  406824:	6463      	str	r3, [r4, #68]	; 0x44
  406826:	f7fe f99d 	bl	404b64 <__sfp_lock_acquire>
  40682a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40682c:	2200      	movs	r2, #0
  40682e:	07db      	lsls	r3, r3, #31
  406830:	81a2      	strh	r2, [r4, #12]
  406832:	d50e      	bpl.n	406852 <_fclose_r+0x9a>
  406834:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406836:	f7fe fca3 	bl	405180 <__retarget_lock_close_recursive>
  40683a:	f7fe f999 	bl	404b70 <__sfp_lock_release>
  40683e:	4630      	mov	r0, r6
  406840:	bd70      	pop	{r4, r5, r6, pc}
  406842:	f7fe f963 	bl	404b0c <__sinit>
  406846:	e7bf      	b.n	4067c8 <_fclose_r+0x10>
  406848:	6921      	ldr	r1, [r4, #16]
  40684a:	4628      	mov	r0, r5
  40684c:	f7fe fa00 	bl	404c50 <_free_r>
  406850:	e7d7      	b.n	406802 <_fclose_r+0x4a>
  406852:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406854:	f7fe fc98 	bl	405188 <__retarget_lock_release_recursive>
  406858:	e7ec      	b.n	406834 <_fclose_r+0x7c>
  40685a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40685c:	f7fe fc92 	bl	405184 <__retarget_lock_acquire_recursive>
  406860:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406864:	2b00      	cmp	r3, #0
  406866:	d1bb      	bne.n	4067e0 <_fclose_r+0x28>
  406868:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40686a:	f016 0601 	ands.w	r6, r6, #1
  40686e:	d1b1      	bne.n	4067d4 <_fclose_r+0x1c>
  406870:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406872:	f7fe fc89 	bl	405188 <__retarget_lock_release_recursive>
  406876:	4630      	mov	r0, r6
  406878:	bd70      	pop	{r4, r5, r6, pc}
  40687a:	bf00      	nop

0040687c <__fputwc>:
  40687c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406880:	b082      	sub	sp, #8
  406882:	4680      	mov	r8, r0
  406884:	4689      	mov	r9, r1
  406886:	4614      	mov	r4, r2
  406888:	f000 f8a2 	bl	4069d0 <__locale_mb_cur_max>
  40688c:	2801      	cmp	r0, #1
  40688e:	d036      	beq.n	4068fe <__fputwc+0x82>
  406890:	464a      	mov	r2, r9
  406892:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  406896:	a901      	add	r1, sp, #4
  406898:	4640      	mov	r0, r8
  40689a:	f000 f8e9 	bl	406a70 <_wcrtomb_r>
  40689e:	1c42      	adds	r2, r0, #1
  4068a0:	4606      	mov	r6, r0
  4068a2:	d025      	beq.n	4068f0 <__fputwc+0x74>
  4068a4:	b3a8      	cbz	r0, 406912 <__fputwc+0x96>
  4068a6:	f89d e004 	ldrb.w	lr, [sp, #4]
  4068aa:	2500      	movs	r5, #0
  4068ac:	f10d 0a04 	add.w	sl, sp, #4
  4068b0:	e009      	b.n	4068c6 <__fputwc+0x4a>
  4068b2:	6823      	ldr	r3, [r4, #0]
  4068b4:	1c5a      	adds	r2, r3, #1
  4068b6:	6022      	str	r2, [r4, #0]
  4068b8:	f883 e000 	strb.w	lr, [r3]
  4068bc:	3501      	adds	r5, #1
  4068be:	42b5      	cmp	r5, r6
  4068c0:	d227      	bcs.n	406912 <__fputwc+0x96>
  4068c2:	f815 e00a 	ldrb.w	lr, [r5, sl]
  4068c6:	68a3      	ldr	r3, [r4, #8]
  4068c8:	3b01      	subs	r3, #1
  4068ca:	2b00      	cmp	r3, #0
  4068cc:	60a3      	str	r3, [r4, #8]
  4068ce:	daf0      	bge.n	4068b2 <__fputwc+0x36>
  4068d0:	69a7      	ldr	r7, [r4, #24]
  4068d2:	42bb      	cmp	r3, r7
  4068d4:	4671      	mov	r1, lr
  4068d6:	4622      	mov	r2, r4
  4068d8:	4640      	mov	r0, r8
  4068da:	db02      	blt.n	4068e2 <__fputwc+0x66>
  4068dc:	f1be 0f0a 	cmp.w	lr, #10
  4068e0:	d1e7      	bne.n	4068b2 <__fputwc+0x36>
  4068e2:	f7ff fe57 	bl	406594 <__swbuf_r>
  4068e6:	1c43      	adds	r3, r0, #1
  4068e8:	d1e8      	bne.n	4068bc <__fputwc+0x40>
  4068ea:	b002      	add	sp, #8
  4068ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4068f0:	89a3      	ldrh	r3, [r4, #12]
  4068f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4068f6:	81a3      	strh	r3, [r4, #12]
  4068f8:	b002      	add	sp, #8
  4068fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4068fe:	f109 33ff 	add.w	r3, r9, #4294967295
  406902:	2bfe      	cmp	r3, #254	; 0xfe
  406904:	d8c4      	bhi.n	406890 <__fputwc+0x14>
  406906:	fa5f fe89 	uxtb.w	lr, r9
  40690a:	4606      	mov	r6, r0
  40690c:	f88d e004 	strb.w	lr, [sp, #4]
  406910:	e7cb      	b.n	4068aa <__fputwc+0x2e>
  406912:	4648      	mov	r0, r9
  406914:	b002      	add	sp, #8
  406916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40691a:	bf00      	nop

0040691c <_fputwc_r>:
  40691c:	b530      	push	{r4, r5, lr}
  40691e:	6e53      	ldr	r3, [r2, #100]	; 0x64
  406920:	f013 0f01 	tst.w	r3, #1
  406924:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  406928:	4614      	mov	r4, r2
  40692a:	b083      	sub	sp, #12
  40692c:	4605      	mov	r5, r0
  40692e:	b29a      	uxth	r2, r3
  406930:	d101      	bne.n	406936 <_fputwc_r+0x1a>
  406932:	0590      	lsls	r0, r2, #22
  406934:	d51c      	bpl.n	406970 <_fputwc_r+0x54>
  406936:	0490      	lsls	r0, r2, #18
  406938:	d406      	bmi.n	406948 <_fputwc_r+0x2c>
  40693a:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40693c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  406940:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406944:	81a3      	strh	r3, [r4, #12]
  406946:	6662      	str	r2, [r4, #100]	; 0x64
  406948:	4628      	mov	r0, r5
  40694a:	4622      	mov	r2, r4
  40694c:	f7ff ff96 	bl	40687c <__fputwc>
  406950:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406952:	07da      	lsls	r2, r3, #31
  406954:	4605      	mov	r5, r0
  406956:	d402      	bmi.n	40695e <_fputwc_r+0x42>
  406958:	89a3      	ldrh	r3, [r4, #12]
  40695a:	059b      	lsls	r3, r3, #22
  40695c:	d502      	bpl.n	406964 <_fputwc_r+0x48>
  40695e:	4628      	mov	r0, r5
  406960:	b003      	add	sp, #12
  406962:	bd30      	pop	{r4, r5, pc}
  406964:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406966:	f7fe fc0f 	bl	405188 <__retarget_lock_release_recursive>
  40696a:	4628      	mov	r0, r5
  40696c:	b003      	add	sp, #12
  40696e:	bd30      	pop	{r4, r5, pc}
  406970:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406972:	9101      	str	r1, [sp, #4]
  406974:	f7fe fc06 	bl	405184 <__retarget_lock_acquire_recursive>
  406978:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40697c:	9901      	ldr	r1, [sp, #4]
  40697e:	b29a      	uxth	r2, r3
  406980:	e7d9      	b.n	406936 <_fputwc_r+0x1a>
  406982:	bf00      	nop

00406984 <_fstat_r>:
  406984:	b538      	push	{r3, r4, r5, lr}
  406986:	460b      	mov	r3, r1
  406988:	4c07      	ldr	r4, [pc, #28]	; (4069a8 <_fstat_r+0x24>)
  40698a:	4605      	mov	r5, r0
  40698c:	4611      	mov	r1, r2
  40698e:	4618      	mov	r0, r3
  406990:	2300      	movs	r3, #0
  406992:	6023      	str	r3, [r4, #0]
  406994:	f7fa fa43 	bl	400e1e <_fstat>
  406998:	1c43      	adds	r3, r0, #1
  40699a:	d000      	beq.n	40699e <_fstat_r+0x1a>
  40699c:	bd38      	pop	{r3, r4, r5, pc}
  40699e:	6823      	ldr	r3, [r4, #0]
  4069a0:	2b00      	cmp	r3, #0
  4069a2:	d0fb      	beq.n	40699c <_fstat_r+0x18>
  4069a4:	602b      	str	r3, [r5, #0]
  4069a6:	bd38      	pop	{r3, r4, r5, pc}
  4069a8:	20400ab4 	.word	0x20400ab4

004069ac <_isatty_r>:
  4069ac:	b538      	push	{r3, r4, r5, lr}
  4069ae:	4c07      	ldr	r4, [pc, #28]	; (4069cc <_isatty_r+0x20>)
  4069b0:	2300      	movs	r3, #0
  4069b2:	4605      	mov	r5, r0
  4069b4:	4608      	mov	r0, r1
  4069b6:	6023      	str	r3, [r4, #0]
  4069b8:	f7fa fa36 	bl	400e28 <_isatty>
  4069bc:	1c43      	adds	r3, r0, #1
  4069be:	d000      	beq.n	4069c2 <_isatty_r+0x16>
  4069c0:	bd38      	pop	{r3, r4, r5, pc}
  4069c2:	6823      	ldr	r3, [r4, #0]
  4069c4:	2b00      	cmp	r3, #0
  4069c6:	d0fb      	beq.n	4069c0 <_isatty_r+0x14>
  4069c8:	602b      	str	r3, [r5, #0]
  4069ca:	bd38      	pop	{r3, r4, r5, pc}
  4069cc:	20400ab4 	.word	0x20400ab4

004069d0 <__locale_mb_cur_max>:
  4069d0:	4b04      	ldr	r3, [pc, #16]	; (4069e4 <__locale_mb_cur_max+0x14>)
  4069d2:	4a05      	ldr	r2, [pc, #20]	; (4069e8 <__locale_mb_cur_max+0x18>)
  4069d4:	681b      	ldr	r3, [r3, #0]
  4069d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4069d8:	2b00      	cmp	r3, #0
  4069da:	bf08      	it	eq
  4069dc:	4613      	moveq	r3, r2
  4069de:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4069e2:	4770      	bx	lr
  4069e4:	20400008 	.word	0x20400008
  4069e8:	2040084c 	.word	0x2040084c

004069ec <_lseek_r>:
  4069ec:	b570      	push	{r4, r5, r6, lr}
  4069ee:	460d      	mov	r5, r1
  4069f0:	4c08      	ldr	r4, [pc, #32]	; (406a14 <_lseek_r+0x28>)
  4069f2:	4611      	mov	r1, r2
  4069f4:	4606      	mov	r6, r0
  4069f6:	461a      	mov	r2, r3
  4069f8:	4628      	mov	r0, r5
  4069fa:	2300      	movs	r3, #0
  4069fc:	6023      	str	r3, [r4, #0]
  4069fe:	f7fa fa15 	bl	400e2c <_lseek>
  406a02:	1c43      	adds	r3, r0, #1
  406a04:	d000      	beq.n	406a08 <_lseek_r+0x1c>
  406a06:	bd70      	pop	{r4, r5, r6, pc}
  406a08:	6823      	ldr	r3, [r4, #0]
  406a0a:	2b00      	cmp	r3, #0
  406a0c:	d0fb      	beq.n	406a06 <_lseek_r+0x1a>
  406a0e:	6033      	str	r3, [r6, #0]
  406a10:	bd70      	pop	{r4, r5, r6, pc}
  406a12:	bf00      	nop
  406a14:	20400ab4 	.word	0x20400ab4

00406a18 <__ascii_mbtowc>:
  406a18:	b082      	sub	sp, #8
  406a1a:	b149      	cbz	r1, 406a30 <__ascii_mbtowc+0x18>
  406a1c:	b15a      	cbz	r2, 406a36 <__ascii_mbtowc+0x1e>
  406a1e:	b16b      	cbz	r3, 406a3c <__ascii_mbtowc+0x24>
  406a20:	7813      	ldrb	r3, [r2, #0]
  406a22:	600b      	str	r3, [r1, #0]
  406a24:	7812      	ldrb	r2, [r2, #0]
  406a26:	1c10      	adds	r0, r2, #0
  406a28:	bf18      	it	ne
  406a2a:	2001      	movne	r0, #1
  406a2c:	b002      	add	sp, #8
  406a2e:	4770      	bx	lr
  406a30:	a901      	add	r1, sp, #4
  406a32:	2a00      	cmp	r2, #0
  406a34:	d1f3      	bne.n	406a1e <__ascii_mbtowc+0x6>
  406a36:	4610      	mov	r0, r2
  406a38:	b002      	add	sp, #8
  406a3a:	4770      	bx	lr
  406a3c:	f06f 0001 	mvn.w	r0, #1
  406a40:	e7f4      	b.n	406a2c <__ascii_mbtowc+0x14>
  406a42:	bf00      	nop

00406a44 <_read_r>:
  406a44:	b570      	push	{r4, r5, r6, lr}
  406a46:	460d      	mov	r5, r1
  406a48:	4c08      	ldr	r4, [pc, #32]	; (406a6c <_read_r+0x28>)
  406a4a:	4611      	mov	r1, r2
  406a4c:	4606      	mov	r6, r0
  406a4e:	461a      	mov	r2, r3
  406a50:	4628      	mov	r0, r5
  406a52:	2300      	movs	r3, #0
  406a54:	6023      	str	r3, [r4, #0]
  406a56:	f7f9 fbf5 	bl	400244 <_read>
  406a5a:	1c43      	adds	r3, r0, #1
  406a5c:	d000      	beq.n	406a60 <_read_r+0x1c>
  406a5e:	bd70      	pop	{r4, r5, r6, pc}
  406a60:	6823      	ldr	r3, [r4, #0]
  406a62:	2b00      	cmp	r3, #0
  406a64:	d0fb      	beq.n	406a5e <_read_r+0x1a>
  406a66:	6033      	str	r3, [r6, #0]
  406a68:	bd70      	pop	{r4, r5, r6, pc}
  406a6a:	bf00      	nop
  406a6c:	20400ab4 	.word	0x20400ab4

00406a70 <_wcrtomb_r>:
  406a70:	b5f0      	push	{r4, r5, r6, r7, lr}
  406a72:	4606      	mov	r6, r0
  406a74:	b085      	sub	sp, #20
  406a76:	461f      	mov	r7, r3
  406a78:	b189      	cbz	r1, 406a9e <_wcrtomb_r+0x2e>
  406a7a:	4c10      	ldr	r4, [pc, #64]	; (406abc <_wcrtomb_r+0x4c>)
  406a7c:	4d10      	ldr	r5, [pc, #64]	; (406ac0 <_wcrtomb_r+0x50>)
  406a7e:	6824      	ldr	r4, [r4, #0]
  406a80:	6b64      	ldr	r4, [r4, #52]	; 0x34
  406a82:	2c00      	cmp	r4, #0
  406a84:	bf08      	it	eq
  406a86:	462c      	moveq	r4, r5
  406a88:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  406a8c:	47a0      	blx	r4
  406a8e:	1c43      	adds	r3, r0, #1
  406a90:	d103      	bne.n	406a9a <_wcrtomb_r+0x2a>
  406a92:	2200      	movs	r2, #0
  406a94:	238a      	movs	r3, #138	; 0x8a
  406a96:	603a      	str	r2, [r7, #0]
  406a98:	6033      	str	r3, [r6, #0]
  406a9a:	b005      	add	sp, #20
  406a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406a9e:	460c      	mov	r4, r1
  406aa0:	4906      	ldr	r1, [pc, #24]	; (406abc <_wcrtomb_r+0x4c>)
  406aa2:	4a07      	ldr	r2, [pc, #28]	; (406ac0 <_wcrtomb_r+0x50>)
  406aa4:	6809      	ldr	r1, [r1, #0]
  406aa6:	6b49      	ldr	r1, [r1, #52]	; 0x34
  406aa8:	2900      	cmp	r1, #0
  406aaa:	bf08      	it	eq
  406aac:	4611      	moveq	r1, r2
  406aae:	4622      	mov	r2, r4
  406ab0:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  406ab4:	a901      	add	r1, sp, #4
  406ab6:	47a0      	blx	r4
  406ab8:	e7e9      	b.n	406a8e <_wcrtomb_r+0x1e>
  406aba:	bf00      	nop
  406abc:	20400008 	.word	0x20400008
  406ac0:	2040084c 	.word	0x2040084c

00406ac4 <__ascii_wctomb>:
  406ac4:	b121      	cbz	r1, 406ad0 <__ascii_wctomb+0xc>
  406ac6:	2aff      	cmp	r2, #255	; 0xff
  406ac8:	d804      	bhi.n	406ad4 <__ascii_wctomb+0x10>
  406aca:	700a      	strb	r2, [r1, #0]
  406acc:	2001      	movs	r0, #1
  406ace:	4770      	bx	lr
  406ad0:	4608      	mov	r0, r1
  406ad2:	4770      	bx	lr
  406ad4:	238a      	movs	r3, #138	; 0x8a
  406ad6:	6003      	str	r3, [r0, #0]
  406ad8:	f04f 30ff 	mov.w	r0, #4294967295
  406adc:	4770      	bx	lr
  406ade:	bf00      	nop

00406ae0 <__gedf2>:
  406ae0:	f04f 3cff 	mov.w	ip, #4294967295
  406ae4:	e006      	b.n	406af4 <__cmpdf2+0x4>
  406ae6:	bf00      	nop

00406ae8 <__ledf2>:
  406ae8:	f04f 0c01 	mov.w	ip, #1
  406aec:	e002      	b.n	406af4 <__cmpdf2+0x4>
  406aee:	bf00      	nop

00406af0 <__cmpdf2>:
  406af0:	f04f 0c01 	mov.w	ip, #1
  406af4:	f84d cd04 	str.w	ip, [sp, #-4]!
  406af8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406afc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b00:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406b04:	bf18      	it	ne
  406b06:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406b0a:	d01b      	beq.n	406b44 <__cmpdf2+0x54>
  406b0c:	b001      	add	sp, #4
  406b0e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  406b12:	bf0c      	ite	eq
  406b14:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406b18:	ea91 0f03 	teqne	r1, r3
  406b1c:	bf02      	ittt	eq
  406b1e:	ea90 0f02 	teqeq	r0, r2
  406b22:	2000      	moveq	r0, #0
  406b24:	4770      	bxeq	lr
  406b26:	f110 0f00 	cmn.w	r0, #0
  406b2a:	ea91 0f03 	teq	r1, r3
  406b2e:	bf58      	it	pl
  406b30:	4299      	cmppl	r1, r3
  406b32:	bf08      	it	eq
  406b34:	4290      	cmpeq	r0, r2
  406b36:	bf2c      	ite	cs
  406b38:	17d8      	asrcs	r0, r3, #31
  406b3a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406b3e:	f040 0001 	orr.w	r0, r0, #1
  406b42:	4770      	bx	lr
  406b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b4c:	d102      	bne.n	406b54 <__cmpdf2+0x64>
  406b4e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406b52:	d107      	bne.n	406b64 <__cmpdf2+0x74>
  406b54:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406b58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406b5c:	d1d6      	bne.n	406b0c <__cmpdf2+0x1c>
  406b5e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406b62:	d0d3      	beq.n	406b0c <__cmpdf2+0x1c>
  406b64:	f85d 0b04 	ldr.w	r0, [sp], #4
  406b68:	4770      	bx	lr
  406b6a:	bf00      	nop

00406b6c <__aeabi_cdrcmple>:
  406b6c:	4684      	mov	ip, r0
  406b6e:	4610      	mov	r0, r2
  406b70:	4662      	mov	r2, ip
  406b72:	468c      	mov	ip, r1
  406b74:	4619      	mov	r1, r3
  406b76:	4663      	mov	r3, ip
  406b78:	e000      	b.n	406b7c <__aeabi_cdcmpeq>
  406b7a:	bf00      	nop

00406b7c <__aeabi_cdcmpeq>:
  406b7c:	b501      	push	{r0, lr}
  406b7e:	f7ff ffb7 	bl	406af0 <__cmpdf2>
  406b82:	2800      	cmp	r0, #0
  406b84:	bf48      	it	mi
  406b86:	f110 0f00 	cmnmi.w	r0, #0
  406b8a:	bd01      	pop	{r0, pc}

00406b8c <__aeabi_dcmpeq>:
  406b8c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406b90:	f7ff fff4 	bl	406b7c <__aeabi_cdcmpeq>
  406b94:	bf0c      	ite	eq
  406b96:	2001      	moveq	r0, #1
  406b98:	2000      	movne	r0, #0
  406b9a:	f85d fb08 	ldr.w	pc, [sp], #8
  406b9e:	bf00      	nop

00406ba0 <__aeabi_dcmplt>:
  406ba0:	f84d ed08 	str.w	lr, [sp, #-8]!
  406ba4:	f7ff ffea 	bl	406b7c <__aeabi_cdcmpeq>
  406ba8:	bf34      	ite	cc
  406baa:	2001      	movcc	r0, #1
  406bac:	2000      	movcs	r0, #0
  406bae:	f85d fb08 	ldr.w	pc, [sp], #8
  406bb2:	bf00      	nop

00406bb4 <__aeabi_dcmple>:
  406bb4:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bb8:	f7ff ffe0 	bl	406b7c <__aeabi_cdcmpeq>
  406bbc:	bf94      	ite	ls
  406bbe:	2001      	movls	r0, #1
  406bc0:	2000      	movhi	r0, #0
  406bc2:	f85d fb08 	ldr.w	pc, [sp], #8
  406bc6:	bf00      	nop

00406bc8 <__aeabi_dcmpge>:
  406bc8:	f84d ed08 	str.w	lr, [sp, #-8]!
  406bcc:	f7ff ffce 	bl	406b6c <__aeabi_cdrcmple>
  406bd0:	bf94      	ite	ls
  406bd2:	2001      	movls	r0, #1
  406bd4:	2000      	movhi	r0, #0
  406bd6:	f85d fb08 	ldr.w	pc, [sp], #8
  406bda:	bf00      	nop

00406bdc <__aeabi_dcmpgt>:
  406bdc:	f84d ed08 	str.w	lr, [sp, #-8]!
  406be0:	f7ff ffc4 	bl	406b6c <__aeabi_cdrcmple>
  406be4:	bf34      	ite	cc
  406be6:	2001      	movcc	r0, #1
  406be8:	2000      	movcs	r0, #0
  406bea:	f85d fb08 	ldr.w	pc, [sp], #8
  406bee:	bf00      	nop

00406bf0 <__aeabi_dcmpun>:
  406bf0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406bf4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406bf8:	d102      	bne.n	406c00 <__aeabi_dcmpun+0x10>
  406bfa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406bfe:	d10a      	bne.n	406c16 <__aeabi_dcmpun+0x26>
  406c00:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406c04:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406c08:	d102      	bne.n	406c10 <__aeabi_dcmpun+0x20>
  406c0a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406c0e:	d102      	bne.n	406c16 <__aeabi_dcmpun+0x26>
  406c10:	f04f 0000 	mov.w	r0, #0
  406c14:	4770      	bx	lr
  406c16:	f04f 0001 	mov.w	r0, #1
  406c1a:	4770      	bx	lr

00406c1c <__aeabi_d2iz>:
  406c1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406c20:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406c24:	d215      	bcs.n	406c52 <__aeabi_d2iz+0x36>
  406c26:	d511      	bpl.n	406c4c <__aeabi_d2iz+0x30>
  406c28:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406c2c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406c30:	d912      	bls.n	406c58 <__aeabi_d2iz+0x3c>
  406c32:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  406c36:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406c3a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406c3e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406c42:	fa23 f002 	lsr.w	r0, r3, r2
  406c46:	bf18      	it	ne
  406c48:	4240      	negne	r0, r0
  406c4a:	4770      	bx	lr
  406c4c:	f04f 0000 	mov.w	r0, #0
  406c50:	4770      	bx	lr
  406c52:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  406c56:	d105      	bne.n	406c64 <__aeabi_d2iz+0x48>
  406c58:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406c5c:	bf08      	it	eq
  406c5e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  406c62:	4770      	bx	lr
  406c64:	f04f 0000 	mov.w	r0, #0
  406c68:	4770      	bx	lr
  406c6a:	bf00      	nop

00406c6c <__aeabi_uldivmod>:
  406c6c:	b953      	cbnz	r3, 406c84 <__aeabi_uldivmod+0x18>
  406c6e:	b94a      	cbnz	r2, 406c84 <__aeabi_uldivmod+0x18>
  406c70:	2900      	cmp	r1, #0
  406c72:	bf08      	it	eq
  406c74:	2800      	cmpeq	r0, #0
  406c76:	bf1c      	itt	ne
  406c78:	f04f 31ff 	movne.w	r1, #4294967295
  406c7c:	f04f 30ff 	movne.w	r0, #4294967295
  406c80:	f000 b97a 	b.w	406f78 <__aeabi_idiv0>
  406c84:	f1ad 0c08 	sub.w	ip, sp, #8
  406c88:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406c8c:	f000 f806 	bl	406c9c <__udivmoddi4>
  406c90:	f8dd e004 	ldr.w	lr, [sp, #4]
  406c94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406c98:	b004      	add	sp, #16
  406c9a:	4770      	bx	lr

00406c9c <__udivmoddi4>:
  406c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406ca0:	468c      	mov	ip, r1
  406ca2:	460d      	mov	r5, r1
  406ca4:	4604      	mov	r4, r0
  406ca6:	9e08      	ldr	r6, [sp, #32]
  406ca8:	2b00      	cmp	r3, #0
  406caa:	d151      	bne.n	406d50 <__udivmoddi4+0xb4>
  406cac:	428a      	cmp	r2, r1
  406cae:	4617      	mov	r7, r2
  406cb0:	d96d      	bls.n	406d8e <__udivmoddi4+0xf2>
  406cb2:	fab2 fe82 	clz	lr, r2
  406cb6:	f1be 0f00 	cmp.w	lr, #0
  406cba:	d00b      	beq.n	406cd4 <__udivmoddi4+0x38>
  406cbc:	f1ce 0c20 	rsb	ip, lr, #32
  406cc0:	fa01 f50e 	lsl.w	r5, r1, lr
  406cc4:	fa20 fc0c 	lsr.w	ip, r0, ip
  406cc8:	fa02 f70e 	lsl.w	r7, r2, lr
  406ccc:	ea4c 0c05 	orr.w	ip, ip, r5
  406cd0:	fa00 f40e 	lsl.w	r4, r0, lr
  406cd4:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406cd8:	0c25      	lsrs	r5, r4, #16
  406cda:	fbbc f8fa 	udiv	r8, ip, sl
  406cde:	fa1f f987 	uxth.w	r9, r7
  406ce2:	fb0a cc18 	mls	ip, sl, r8, ip
  406ce6:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406cea:	fb08 f309 	mul.w	r3, r8, r9
  406cee:	42ab      	cmp	r3, r5
  406cf0:	d90a      	bls.n	406d08 <__udivmoddi4+0x6c>
  406cf2:	19ed      	adds	r5, r5, r7
  406cf4:	f108 32ff 	add.w	r2, r8, #4294967295
  406cf8:	f080 8123 	bcs.w	406f42 <__udivmoddi4+0x2a6>
  406cfc:	42ab      	cmp	r3, r5
  406cfe:	f240 8120 	bls.w	406f42 <__udivmoddi4+0x2a6>
  406d02:	f1a8 0802 	sub.w	r8, r8, #2
  406d06:	443d      	add	r5, r7
  406d08:	1aed      	subs	r5, r5, r3
  406d0a:	b2a4      	uxth	r4, r4
  406d0c:	fbb5 f0fa 	udiv	r0, r5, sl
  406d10:	fb0a 5510 	mls	r5, sl, r0, r5
  406d14:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406d18:	fb00 f909 	mul.w	r9, r0, r9
  406d1c:	45a1      	cmp	r9, r4
  406d1e:	d909      	bls.n	406d34 <__udivmoddi4+0x98>
  406d20:	19e4      	adds	r4, r4, r7
  406d22:	f100 33ff 	add.w	r3, r0, #4294967295
  406d26:	f080 810a 	bcs.w	406f3e <__udivmoddi4+0x2a2>
  406d2a:	45a1      	cmp	r9, r4
  406d2c:	f240 8107 	bls.w	406f3e <__udivmoddi4+0x2a2>
  406d30:	3802      	subs	r0, #2
  406d32:	443c      	add	r4, r7
  406d34:	eba4 0409 	sub.w	r4, r4, r9
  406d38:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406d3c:	2100      	movs	r1, #0
  406d3e:	2e00      	cmp	r6, #0
  406d40:	d061      	beq.n	406e06 <__udivmoddi4+0x16a>
  406d42:	fa24 f40e 	lsr.w	r4, r4, lr
  406d46:	2300      	movs	r3, #0
  406d48:	6034      	str	r4, [r6, #0]
  406d4a:	6073      	str	r3, [r6, #4]
  406d4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406d50:	428b      	cmp	r3, r1
  406d52:	d907      	bls.n	406d64 <__udivmoddi4+0xc8>
  406d54:	2e00      	cmp	r6, #0
  406d56:	d054      	beq.n	406e02 <__udivmoddi4+0x166>
  406d58:	2100      	movs	r1, #0
  406d5a:	e886 0021 	stmia.w	r6, {r0, r5}
  406d5e:	4608      	mov	r0, r1
  406d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406d64:	fab3 f183 	clz	r1, r3
  406d68:	2900      	cmp	r1, #0
  406d6a:	f040 808e 	bne.w	406e8a <__udivmoddi4+0x1ee>
  406d6e:	42ab      	cmp	r3, r5
  406d70:	d302      	bcc.n	406d78 <__udivmoddi4+0xdc>
  406d72:	4282      	cmp	r2, r0
  406d74:	f200 80fa 	bhi.w	406f6c <__udivmoddi4+0x2d0>
  406d78:	1a84      	subs	r4, r0, r2
  406d7a:	eb65 0503 	sbc.w	r5, r5, r3
  406d7e:	2001      	movs	r0, #1
  406d80:	46ac      	mov	ip, r5
  406d82:	2e00      	cmp	r6, #0
  406d84:	d03f      	beq.n	406e06 <__udivmoddi4+0x16a>
  406d86:	e886 1010 	stmia.w	r6, {r4, ip}
  406d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406d8e:	b912      	cbnz	r2, 406d96 <__udivmoddi4+0xfa>
  406d90:	2701      	movs	r7, #1
  406d92:	fbb7 f7f2 	udiv	r7, r7, r2
  406d96:	fab7 fe87 	clz	lr, r7
  406d9a:	f1be 0f00 	cmp.w	lr, #0
  406d9e:	d134      	bne.n	406e0a <__udivmoddi4+0x16e>
  406da0:	1beb      	subs	r3, r5, r7
  406da2:	0c3a      	lsrs	r2, r7, #16
  406da4:	fa1f fc87 	uxth.w	ip, r7
  406da8:	2101      	movs	r1, #1
  406daa:	fbb3 f8f2 	udiv	r8, r3, r2
  406dae:	0c25      	lsrs	r5, r4, #16
  406db0:	fb02 3318 	mls	r3, r2, r8, r3
  406db4:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406db8:	fb0c f308 	mul.w	r3, ip, r8
  406dbc:	42ab      	cmp	r3, r5
  406dbe:	d907      	bls.n	406dd0 <__udivmoddi4+0x134>
  406dc0:	19ed      	adds	r5, r5, r7
  406dc2:	f108 30ff 	add.w	r0, r8, #4294967295
  406dc6:	d202      	bcs.n	406dce <__udivmoddi4+0x132>
  406dc8:	42ab      	cmp	r3, r5
  406dca:	f200 80d1 	bhi.w	406f70 <__udivmoddi4+0x2d4>
  406dce:	4680      	mov	r8, r0
  406dd0:	1aed      	subs	r5, r5, r3
  406dd2:	b2a3      	uxth	r3, r4
  406dd4:	fbb5 f0f2 	udiv	r0, r5, r2
  406dd8:	fb02 5510 	mls	r5, r2, r0, r5
  406ddc:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406de0:	fb0c fc00 	mul.w	ip, ip, r0
  406de4:	45a4      	cmp	ip, r4
  406de6:	d907      	bls.n	406df8 <__udivmoddi4+0x15c>
  406de8:	19e4      	adds	r4, r4, r7
  406dea:	f100 33ff 	add.w	r3, r0, #4294967295
  406dee:	d202      	bcs.n	406df6 <__udivmoddi4+0x15a>
  406df0:	45a4      	cmp	ip, r4
  406df2:	f200 80b8 	bhi.w	406f66 <__udivmoddi4+0x2ca>
  406df6:	4618      	mov	r0, r3
  406df8:	eba4 040c 	sub.w	r4, r4, ip
  406dfc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406e00:	e79d      	b.n	406d3e <__udivmoddi4+0xa2>
  406e02:	4631      	mov	r1, r6
  406e04:	4630      	mov	r0, r6
  406e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406e0a:	f1ce 0420 	rsb	r4, lr, #32
  406e0e:	fa05 f30e 	lsl.w	r3, r5, lr
  406e12:	fa07 f70e 	lsl.w	r7, r7, lr
  406e16:	fa20 f804 	lsr.w	r8, r0, r4
  406e1a:	0c3a      	lsrs	r2, r7, #16
  406e1c:	fa25 f404 	lsr.w	r4, r5, r4
  406e20:	ea48 0803 	orr.w	r8, r8, r3
  406e24:	fbb4 f1f2 	udiv	r1, r4, r2
  406e28:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406e2c:	fb02 4411 	mls	r4, r2, r1, r4
  406e30:	fa1f fc87 	uxth.w	ip, r7
  406e34:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406e38:	fb01 f30c 	mul.w	r3, r1, ip
  406e3c:	42ab      	cmp	r3, r5
  406e3e:	fa00 f40e 	lsl.w	r4, r0, lr
  406e42:	d909      	bls.n	406e58 <__udivmoddi4+0x1bc>
  406e44:	19ed      	adds	r5, r5, r7
  406e46:	f101 30ff 	add.w	r0, r1, #4294967295
  406e4a:	f080 808a 	bcs.w	406f62 <__udivmoddi4+0x2c6>
  406e4e:	42ab      	cmp	r3, r5
  406e50:	f240 8087 	bls.w	406f62 <__udivmoddi4+0x2c6>
  406e54:	3902      	subs	r1, #2
  406e56:	443d      	add	r5, r7
  406e58:	1aeb      	subs	r3, r5, r3
  406e5a:	fa1f f588 	uxth.w	r5, r8
  406e5e:	fbb3 f0f2 	udiv	r0, r3, r2
  406e62:	fb02 3310 	mls	r3, r2, r0, r3
  406e66:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406e6a:	fb00 f30c 	mul.w	r3, r0, ip
  406e6e:	42ab      	cmp	r3, r5
  406e70:	d907      	bls.n	406e82 <__udivmoddi4+0x1e6>
  406e72:	19ed      	adds	r5, r5, r7
  406e74:	f100 38ff 	add.w	r8, r0, #4294967295
  406e78:	d26f      	bcs.n	406f5a <__udivmoddi4+0x2be>
  406e7a:	42ab      	cmp	r3, r5
  406e7c:	d96d      	bls.n	406f5a <__udivmoddi4+0x2be>
  406e7e:	3802      	subs	r0, #2
  406e80:	443d      	add	r5, r7
  406e82:	1aeb      	subs	r3, r5, r3
  406e84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406e88:	e78f      	b.n	406daa <__udivmoddi4+0x10e>
  406e8a:	f1c1 0720 	rsb	r7, r1, #32
  406e8e:	fa22 f807 	lsr.w	r8, r2, r7
  406e92:	408b      	lsls	r3, r1
  406e94:	fa05 f401 	lsl.w	r4, r5, r1
  406e98:	ea48 0303 	orr.w	r3, r8, r3
  406e9c:	fa20 fe07 	lsr.w	lr, r0, r7
  406ea0:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406ea4:	40fd      	lsrs	r5, r7
  406ea6:	ea4e 0e04 	orr.w	lr, lr, r4
  406eaa:	fbb5 f9fc 	udiv	r9, r5, ip
  406eae:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406eb2:	fb0c 5519 	mls	r5, ip, r9, r5
  406eb6:	fa1f f883 	uxth.w	r8, r3
  406eba:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406ebe:	fb09 f408 	mul.w	r4, r9, r8
  406ec2:	42ac      	cmp	r4, r5
  406ec4:	fa02 f201 	lsl.w	r2, r2, r1
  406ec8:	fa00 fa01 	lsl.w	sl, r0, r1
  406ecc:	d908      	bls.n	406ee0 <__udivmoddi4+0x244>
  406ece:	18ed      	adds	r5, r5, r3
  406ed0:	f109 30ff 	add.w	r0, r9, #4294967295
  406ed4:	d243      	bcs.n	406f5e <__udivmoddi4+0x2c2>
  406ed6:	42ac      	cmp	r4, r5
  406ed8:	d941      	bls.n	406f5e <__udivmoddi4+0x2c2>
  406eda:	f1a9 0902 	sub.w	r9, r9, #2
  406ede:	441d      	add	r5, r3
  406ee0:	1b2d      	subs	r5, r5, r4
  406ee2:	fa1f fe8e 	uxth.w	lr, lr
  406ee6:	fbb5 f0fc 	udiv	r0, r5, ip
  406eea:	fb0c 5510 	mls	r5, ip, r0, r5
  406eee:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406ef2:	fb00 f808 	mul.w	r8, r0, r8
  406ef6:	45a0      	cmp	r8, r4
  406ef8:	d907      	bls.n	406f0a <__udivmoddi4+0x26e>
  406efa:	18e4      	adds	r4, r4, r3
  406efc:	f100 35ff 	add.w	r5, r0, #4294967295
  406f00:	d229      	bcs.n	406f56 <__udivmoddi4+0x2ba>
  406f02:	45a0      	cmp	r8, r4
  406f04:	d927      	bls.n	406f56 <__udivmoddi4+0x2ba>
  406f06:	3802      	subs	r0, #2
  406f08:	441c      	add	r4, r3
  406f0a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406f0e:	eba4 0408 	sub.w	r4, r4, r8
  406f12:	fba0 8902 	umull	r8, r9, r0, r2
  406f16:	454c      	cmp	r4, r9
  406f18:	46c6      	mov	lr, r8
  406f1a:	464d      	mov	r5, r9
  406f1c:	d315      	bcc.n	406f4a <__udivmoddi4+0x2ae>
  406f1e:	d012      	beq.n	406f46 <__udivmoddi4+0x2aa>
  406f20:	b156      	cbz	r6, 406f38 <__udivmoddi4+0x29c>
  406f22:	ebba 030e 	subs.w	r3, sl, lr
  406f26:	eb64 0405 	sbc.w	r4, r4, r5
  406f2a:	fa04 f707 	lsl.w	r7, r4, r7
  406f2e:	40cb      	lsrs	r3, r1
  406f30:	431f      	orrs	r7, r3
  406f32:	40cc      	lsrs	r4, r1
  406f34:	6037      	str	r7, [r6, #0]
  406f36:	6074      	str	r4, [r6, #4]
  406f38:	2100      	movs	r1, #0
  406f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406f3e:	4618      	mov	r0, r3
  406f40:	e6f8      	b.n	406d34 <__udivmoddi4+0x98>
  406f42:	4690      	mov	r8, r2
  406f44:	e6e0      	b.n	406d08 <__udivmoddi4+0x6c>
  406f46:	45c2      	cmp	sl, r8
  406f48:	d2ea      	bcs.n	406f20 <__udivmoddi4+0x284>
  406f4a:	ebb8 0e02 	subs.w	lr, r8, r2
  406f4e:	eb69 0503 	sbc.w	r5, r9, r3
  406f52:	3801      	subs	r0, #1
  406f54:	e7e4      	b.n	406f20 <__udivmoddi4+0x284>
  406f56:	4628      	mov	r0, r5
  406f58:	e7d7      	b.n	406f0a <__udivmoddi4+0x26e>
  406f5a:	4640      	mov	r0, r8
  406f5c:	e791      	b.n	406e82 <__udivmoddi4+0x1e6>
  406f5e:	4681      	mov	r9, r0
  406f60:	e7be      	b.n	406ee0 <__udivmoddi4+0x244>
  406f62:	4601      	mov	r1, r0
  406f64:	e778      	b.n	406e58 <__udivmoddi4+0x1bc>
  406f66:	3802      	subs	r0, #2
  406f68:	443c      	add	r4, r7
  406f6a:	e745      	b.n	406df8 <__udivmoddi4+0x15c>
  406f6c:	4608      	mov	r0, r1
  406f6e:	e708      	b.n	406d82 <__udivmoddi4+0xe6>
  406f70:	f1a8 0802 	sub.w	r8, r8, #2
  406f74:	443d      	add	r5, r7
  406f76:	e72b      	b.n	406dd0 <__udivmoddi4+0x134>

00406f78 <__aeabi_idiv0>:
  406f78:	4770      	bx	lr
  406f7a:	bf00      	nop
  406f7c:	666e6f43 	.word	0x666e6f43
  406f80:	72756769 	.word	0x72756769
  406f84:	79732065 	.word	0x79732065
  406f88:	6d657473 	.word	0x6d657473
  406f8c:	63697420 	.word	0x63697420
  406f90:	6f74206b 	.word	0x6f74206b
  406f94:	74656720 	.word	0x74656720
  406f98:	736d3120 	.word	0x736d3120
  406f9c:	63697420 	.word	0x63697420
  406fa0:	6570206b 	.word	0x6570206b
  406fa4:	646f6972 	.word	0x646f6972
  406fa8:	00000d2e 	.word	0x00000d2e
  406fac:	3358414d 	.word	0x3358414d
  406fb0:	30303130 	.word	0x30303130
  406fb4:	74656420 	.word	0x74656420
  406fb8:	65746365 	.word	0x65746365
  406fbc:	00002164 	.word	0x00002164
  406fc0:	3358414d 	.word	0x3358414d
  406fc4:	30303130 	.word	0x30303130
  406fc8:	73657220 	.word	0x73657220
  406fcc:	63207465 	.word	0x63207465
  406fd0:	6c706d6f 	.word	0x6c706d6f
  406fd4:	00657465 	.word	0x00657465
  406fd8:	324f7053 	.word	0x324f7053
  406fdc:	6d617320 	.word	0x6d617320
  406fe0:	20656c70 	.word	0x20656c70
  406fe4:	65746172 	.word	0x65746172
  406fe8:	25203d20 	.word	0x25203d20
  406fec:	7a482064 	.word	0x7a482064
  406ff0:	0000000a 	.word	0x0000000a
  406ff4:	2044454c 	.word	0x2044454c
  406ff8:	736c7570 	.word	0x736c7570
  406ffc:	69772065 	.word	0x69772065
  407000:	20687464 	.word	0x20687464
  407004:	6425203d 	.word	0x6425203d
  407008:	0a537520 	.word	0x0a537520
  40700c:	00000000 	.word	0x00000000
  407010:	20646552 	.word	0x20646552
  407014:	2044454c 	.word	0x2044454c
  407018:	72727563 	.word	0x72727563
  40701c:	20746e65 	.word	0x20746e65
  407020:	6625203d 	.word	0x6625203d
  407024:	0a416d20 	.word	0x0a416d20
  407028:	00000000 	.word	0x00000000
  40702c:	4c205249 	.word	0x4c205249
  407030:	63204445 	.word	0x63204445
  407034:	65727275 	.word	0x65727275
  407038:	3d20746e 	.word	0x3d20746e
  40703c:	20662520 	.word	0x20662520
  407040:	000a416d 	.word	0x000a416d
  407044:	20746f67 	.word	0x20746f67
  407048:	72206425 	.word	0x72206425
  40704c:	73646165 	.word	0x73646165
  407050:	0000000a 	.word	0x0000000a
  407054:	00206425 	.word	0x00206425
  407058:	092d452d 	.word	0x092d452d
  40705c:	20495754 	.word	0x20495754
  407060:	7473616d 	.word	0x7473616d
  407064:	69207265 	.word	0x69207265
  407068:	6974696e 	.word	0x6974696e
  40706c:	7a696c61 	.word	0x7a696c61
  407070:	6f697461 	.word	0x6f697461
  407074:	6166206e 	.word	0x6166206e
  407078:	64656c69 	.word	0x64656c69
  40707c:	00000d2e 	.word	0x00000d2e
  407080:	092d452d 	.word	0x092d452d
  407084:	64616552 	.word	0x64616552
  407088:	6f727720 	.word	0x6f727720
  40708c:	7020676e 	.word	0x7020676e
  407090:	20747261 	.word	0x20747261
  407094:	66204449 	.word	0x66204449
  407098:	206d6f72 	.word	0x206d6f72
  40709c:	3358414d 	.word	0x3358414d
  4070a0:	30303130 	.word	0x30303130
  4070a4:	00000d2e 	.word	0x00000d2e
  4070a8:	092d452d 	.word	0x092d452d
  4070ac:	20495754 	.word	0x20495754
  4070b0:	7473616d 	.word	0x7473616d
  4070b4:	72207265 	.word	0x72207265
  4070b8:	20646165 	.word	0x20646165
  4070bc:	6b636170 	.word	0x6b636170
  4070c0:	66207465 	.word	0x66207465
  4070c4:	656c6961 	.word	0x656c6961
  4070c8:	000d2e64 	.word	0x000d2e64
  4070cc:	092d452d 	.word	0x092d452d
  4070d0:	20495754 	.word	0x20495754
  4070d4:	7473616d 	.word	0x7473616d
  4070d8:	77207265 	.word	0x77207265
  4070dc:	65746972 	.word	0x65746972
  4070e0:	63617020 	.word	0x63617020
  4070e4:	2074656b 	.word	0x2074656b
  4070e8:	6c696166 	.word	0x6c696166
  4070ec:	0d2e6465 	.word	0x0d2e6465
  4070f0:	00000000 	.word	0x00000000
  4070f4:	73206425 	.word	0x73206425
  4070f8:	6c706d61 	.word	0x6c706d61
  4070fc:	61207365 	.word	0x61207365
  407100:	6c696176 	.word	0x6c696176
  407104:	00000000 	.word	0x00000000

00407108 <_global_impure_ptr>:
  407108:	20400010 00464e49 00666e69 004e414e     ..@ INF.inf.NAN.
  407118:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  407128:	46454443 00000000 33323130 37363534     CDEF....01234567
  407138:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  407148:	0000296c 00000030                       l)..0...

00407150 <blanks.7238>:
  407150:	20202020 20202020 20202020 20202020                     

00407160 <zeroes.7239>:
  407160:	30303030 30303030 30303030 30303030     0000000000000000
  407170:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

00407180 <__mprec_bigtens>:
  407180:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  407190:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4071a0:	7f73bf3c 75154fdd                       <.s..O.u

004071a8 <__mprec_tens>:
  4071a8:	00000000 3ff00000 00000000 40240000     .......?......$@
  4071b8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  4071c8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  4071d8:	00000000 412e8480 00000000 416312d0     .......A......cA
  4071e8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  4071f8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  407208:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  407218:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  407228:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  407238:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  407248:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  407258:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  407268:	79d99db4 44ea7843                       ...yCx.D

00407270 <p05.6055>:
  407270:	00000005 00000019 0000007d 00000043     ........}...C...
  407280:	49534f50 00000058 0000002e              POSIX.......

0040728c <_ctype_>:
  40728c:	20202000 20202020 28282020 20282828     .         ((((( 
  40729c:	20202020 20202020 20202020 20202020                     
  4072ac:	10108820 10101010 10101010 10101010      ...............
  4072bc:	04040410 04040404 10040404 10101010     ................
  4072cc:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4072dc:	01010101 01010101 01010101 10101010     ................
  4072ec:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4072fc:	02020202 02020202 02020202 10101010     ................
  40730c:	00000020 00000000 00000000 00000000      ...............
	...

00407390 <_init>:
  407390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407392:	bf00      	nop
  407394:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407396:	bc08      	pop	{r3}
  407398:	469e      	mov	lr, r3
  40739a:	4770      	bx	lr

0040739c <__init_array_start>:
  40739c:	00403981 	.word	0x00403981

004073a0 <__frame_dummy_init_array_entry>:
  4073a0:	0040018d                                ..@.

004073a4 <_fini>:
  4073a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4073a6:	bf00      	nop
  4073a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4073aa:	bc08      	pop	{r3}
  4073ac:	469e      	mov	lr, r3
  4073ae:	4770      	bx	lr

004073b0 <__fini_array_start>:
  4073b0:	00400169 	.word	0x00400169
